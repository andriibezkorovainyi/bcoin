!function(t){var e={};function i(r){if(e[r])return e[r].exports;var s=e[r]={i:r,l:!1,exports:{}};return t[r].call(s.exports,s,s.exports,i),s.l=!0,s.exports}i.m=t,i.c=e,i.d=function(t,e,r){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)i.d(r,s,function(e){return t[e]}.bind(null,s));return r},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=171)}([function(t,e,i){"use strict";
/*!
 * assert.js - assertions for javascript
 * Copyright (c) 2018, Christopher Jeffrey (MIT License).
 * https://github.com/chjj/bsert
 */class r extends Error{constructor(t){"string"==typeof t&&(t={message:t}),null!==t&&"object"==typeof t||(t={});let e="",i="!=",r=!1;null!=t.message&&(e=function(t){return"string"==typeof t?t:n(t)}(t.message)),"string"==typeof t.operator&&(i=t.operator),e||(e=`${n(t.actual)} ${i} ${n(t.expected)}`,r=!0),super(e);let s=this.constructor;"function"==typeof t.start?s=t.start:"function"==typeof t.stackStartFn?s=t.stackStartFn:"function"==typeof t.stackStartFunction&&(s=t.stackStartFunction),this.type="AssertionError",this.name="AssertionError [ERR_ASSERTION]",this.code="ERR_ASSERTION",this.generatedMessage=r,this.actual=t.actual,this.expected=t.expected,this.operator=i,Error.captureStackTrace&&Error.captureStackTrace(this,s)}}function s(t,e){if(!t)throw new r({message:e,actual:!1,expected:!0,operator:"==",start:s})}function n(t){switch(typeof t){case"undefined":return"undefined";case"object":return null===t?"null":t.constructor&&"string"==typeof t.constructor.name&&"Object"!==t.constructor.name?`[Object: ${t.constructor.name}]`:"[Object]";case"boolean":return t.toString();case"number":return t.toString(10);case"string":return t.length>64&&(t=`${t.substring(0,61)}...`),JSON.stringify(t);case"symbol":return t.toString();case"function":return"string"!=typeof t.name?"[Function]":`[Function: ${t.name}]`;case"bigint":return`${t.toString()}n`;default:return"[Unknown]"}}s.ok=s,s.equal=function t(e,i,s){if(e!==i)throw new r({message:s,actual:e,expected:i,operator:"===",start:t})},s.notEqual=function t(e,i,s){if(e===i)throw new r({message:s,actual:e,expected:i,operator:"!==",start:t})},s.strictEqual=s.equal,s.notStrictEqual=s.notEqual,s.fail=function t(e){throw null!=e&&""!==e||(e="Failed"),new r({message:e,actual:!1,expected:!0,operator:"==",start:t})},s.enforce=function t(e,i,r){if(!e){const e=new TypeError(`'${i}' must be a(n) ${r}.`);throw Error.captureStackTrace&&Error.captureStackTrace(e,t),e}},s.range=function t(e,i){if(!e){const e=new RangeError(`'${i}' is out of range.`);throw Error.captureStackTrace&&Error.captureStackTrace(e,t),e}},s.AssertionError=r,s.assert=s,s.strict=s,t.exports=s},function(t,e,i){"use strict";(function(t){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
var r=i(84),s=i(85),n=i(86);function o(){return h.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function a(t,e){if(o()<e)throw new RangeError("Invalid typed array length");return h.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e)).__proto__=h.prototype:(null===t&&(t=new h(e)),t.length=e),t}function h(t,e,i){if(!(h.TYPED_ARRAY_SUPPORT||this instanceof h))return new h(t,e,i);if("number"==typeof t){if("string"==typeof e)throw new Error("If encoding is specified then the first argument must be a string");return u(this,t)}return c(this,t,e,i)}function c(t,e,i,r){if("number"==typeof e)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer?function(t,e,i,r){if(e.byteLength,i<0||e.byteLength<i)throw new RangeError("'offset' is out of bounds");if(e.byteLength<i+(r||0))throw new RangeError("'length' is out of bounds");return e=void 0===i&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,i):new Uint8Array(e,i,r),h.TYPED_ARRAY_SUPPORT?(t=e).__proto__=h.prototype:t=f(t,e),t}(t,e,i,r):"string"==typeof e?function(t,e,i){if("string"==typeof i&&""!==i||(i="utf8"),!h.isEncoding(i))throw new TypeError('"encoding" must be a valid string encoding');var r=0|p(e,i),s=(t=a(t,r)).write(e,i);return s!==r&&(t=t.slice(0,s)),t}(t,e,i):function(t,e){if(h.isBuffer(e)){var i=0|d(e.length);return 0===(t=a(t,i)).length?t:(e.copy(t,0,0,i),t)}if(e){if("undefined"!=typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||"length"in e)return"number"!=typeof e.length||function(t){return t!=t}(e.length)?a(t,0):f(t,e);if("Buffer"===e.type&&n(e.data))return f(t,e.data)}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(t,e)}function l(t){if("number"!=typeof t)throw new TypeError('"size" argument must be a number');if(t<0)throw new RangeError('"size" argument must not be negative')}function u(t,e){if(l(e),t=a(t,e<0?0:0|d(e)),!h.TYPED_ARRAY_SUPPORT)for(var i=0;i<e;++i)t[i]=0;return t}function f(t,e){var i=e.length<0?0:0|d(e.length);t=a(t,i);for(var r=0;r<i;r+=1)t[r]=255&e[r];return t}function d(t){if(t>=o())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o().toString(16)+" bytes");return 0|t}function p(t,e){if(h.isBuffer(t))return t.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;"string"!=typeof t&&(t=""+t);var i=t.length;if(0===i)return 0;for(var r=!1;;)switch(e){case"ascii":case"latin1":case"binary":return i;case"utf8":case"utf-8":case void 0:return H(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*i;case"hex":return i>>>1;case"base64":return F(t).length;default:if(r)return H(t).length;e=(""+e).toLowerCase(),r=!0}}function g(t,e,i){var r=t[e];t[e]=t[i],t[i]=r}function m(t,e,i,r,s){if(0===t.length)return-1;if("string"==typeof i?(r=i,i=0):i>2147483647?i=2147483647:i<-2147483648&&(i=-2147483648),i=+i,isNaN(i)&&(i=s?0:t.length-1),i<0&&(i=t.length+i),i>=t.length){if(s)return-1;i=t.length-1}else if(i<0){if(!s)return-1;i=0}if("string"==typeof e&&(e=h.from(e,r)),h.isBuffer(e))return 0===e.length?-1:b(t,e,i,r,s);if("number"==typeof e)return e&=255,h.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?s?Uint8Array.prototype.indexOf.call(t,e,i):Uint8Array.prototype.lastIndexOf.call(t,e,i):b(t,[e],i,r,s);throw new TypeError("val must be string, number or Buffer")}function b(t,e,i,r,s){var n,o=1,a=t.length,h=e.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(t.length<2||e.length<2)return-1;o=2,a/=2,h/=2,i/=2}function c(t,e){return 1===o?t[e]:t.readUInt16BE(e*o)}if(s){var l=-1;for(n=i;n<a;n++)if(c(t,n)===c(e,-1===l?0:n-l)){if(-1===l&&(l=n),n-l+1===h)return l*o}else-1!==l&&(n-=n-l),l=-1}else for(i+h>a&&(i=a-h),n=i;n>=0;n--){for(var u=!0,f=0;f<h;f++)if(c(t,n+f)!==c(e,f)){u=!1;break}if(u)return n}return-1}function w(t,e,i,r){i=Number(i)||0;var s=t.length-i;r?(r=Number(r))>s&&(r=s):r=s;var n=e.length;if(n%2!=0)throw new TypeError("Invalid hex string");r>n/2&&(r=n/2);for(var o=0;o<r;++o){var a=parseInt(e.substr(2*o,2),16);if(isNaN(a))return o;t[i+o]=a}return o}function y(t,e,i,r){return V(H(e,t.length-i),t,i,r)}function v(t,e,i,r){return V(function(t){for(var e=[],i=0;i<t.length;++i)e.push(255&t.charCodeAt(i));return e}(e),t,i,r)}function k(t,e,i,r){return v(t,e,i,r)}function E(t,e,i,r){return V(F(e),t,i,r)}function S(t,e,i,r){return V(function(t,e){for(var i,r,s,n=[],o=0;o<t.length&&!((e-=2)<0);++o)r=(i=t.charCodeAt(o))>>8,s=i%256,n.push(s),n.push(r);return n}(e,t.length-i),t,i,r)}function R(t,e,i){return 0===e&&i===t.length?r.fromByteArray(t):r.fromByteArray(t.slice(e,i))}function I(t,e,i){i=Math.min(t.length,i);for(var r=[],s=e;s<i;){var n,o,a,h,c=t[s],l=null,u=c>239?4:c>223?3:c>191?2:1;if(s+u<=i)switch(u){case 1:c<128&&(l=c);break;case 2:128==(192&(n=t[s+1]))&&(h=(31&c)<<6|63&n)>127&&(l=h);break;case 3:n=t[s+1],o=t[s+2],128==(192&n)&&128==(192&o)&&(h=(15&c)<<12|(63&n)<<6|63&o)>2047&&(h<55296||h>57343)&&(l=h);break;case 4:n=t[s+1],o=t[s+2],a=t[s+3],128==(192&n)&&128==(192&o)&&128==(192&a)&&(h=(15&c)<<18|(63&n)<<12|(63&o)<<6|63&a)>65535&&h<1114112&&(l=h)}null===l?(l=65533,u=1):l>65535&&(l-=65536,r.push(l>>>10&1023|55296),l=56320|1023&l),r.push(l),s+=u}return function(t){var e=t.length;if(e<=A)return String.fromCharCode.apply(String,t);for(var i="",r=0;r<e;)i+=String.fromCharCode.apply(String,t.slice(r,r+=A));return i}(r)}e.Buffer=h,e.SlowBuffer=function(t){return+t!=t&&(t=0),h.alloc(+t)},e.INSPECT_MAX_BYTES=50,h.TYPED_ARRAY_SUPPORT=void 0!==t.TYPED_ARRAY_SUPPORT?t.TYPED_ARRAY_SUPPORT:function(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&"function"==typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(t){return!1}}(),e.kMaxLength=o(),h.poolSize=8192,h._augment=function(t){return t.__proto__=h.prototype,t},h.from=function(t,e,i){return c(null,t,e,i)},h.TYPED_ARRAY_SUPPORT&&(h.prototype.__proto__=Uint8Array.prototype,h.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&h[Symbol.species]===h&&Object.defineProperty(h,Symbol.species,{value:null,configurable:!0})),h.alloc=function(t,e,i){return function(t,e,i,r){return l(e),e<=0?a(t,e):void 0!==i?"string"==typeof r?a(t,e).fill(i,r):a(t,e).fill(i):a(t,e)}(null,t,e,i)},h.allocUnsafe=function(t){return u(null,t)},h.allocUnsafeSlow=function(t){return u(null,t)},h.isBuffer=function(t){return!(null==t||!t._isBuffer)},h.compare=function(t,e){if(!h.isBuffer(t)||!h.isBuffer(e))throw new TypeError("Arguments must be Buffers");if(t===e)return 0;for(var i=t.length,r=e.length,s=0,n=Math.min(i,r);s<n;++s)if(t[s]!==e[s]){i=t[s],r=e[s];break}return i<r?-1:r<i?1:0},h.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},h.concat=function(t,e){if(!n(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return h.alloc(0);var i;if(void 0===e)for(e=0,i=0;i<t.length;++i)e+=t[i].length;var r=h.allocUnsafe(e),s=0;for(i=0;i<t.length;++i){var o=t[i];if(!h.isBuffer(o))throw new TypeError('"list" argument must be an Array of Buffers');o.copy(r,s),s+=o.length}return r},h.byteLength=p,h.prototype._isBuffer=!0,h.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)g(this,e,e+1);return this},h.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)g(this,e,e+3),g(this,e+1,e+2);return this},h.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)g(this,e,e+7),g(this,e+1,e+6),g(this,e+2,e+5),g(this,e+3,e+4);return this},h.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?I(this,0,t):function(t,e,i){var r=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===i||i>this.length)&&(i=this.length),i<=0)return"";if((i>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return _(this,e,i);case"utf8":case"utf-8":return I(this,e,i);case"ascii":return x(this,e,i);case"latin1":case"binary":return O(this,e,i);case"base64":return R(this,e,i);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return B(this,e,i);default:if(r)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),r=!0}}.apply(this,arguments)},h.prototype.equals=function(t){if(!h.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===h.compare(this,t)},h.prototype.inspect=function(){var t="",i=e.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString("hex",0,i).match(/.{2}/g).join(" "),this.length>i&&(t+=" ... ")),"<Buffer "+t+">"},h.prototype.compare=function(t,e,i,r,s){if(!h.isBuffer(t))throw new TypeError("Argument must be a Buffer");if(void 0===e&&(e=0),void 0===i&&(i=t?t.length:0),void 0===r&&(r=0),void 0===s&&(s=this.length),e<0||i>t.length||r<0||s>this.length)throw new RangeError("out of range index");if(r>=s&&e>=i)return 0;if(r>=s)return-1;if(e>=i)return 1;if(e>>>=0,i>>>=0,r>>>=0,s>>>=0,this===t)return 0;for(var n=s-r,o=i-e,a=Math.min(n,o),c=this.slice(r,s),l=t.slice(e,i),u=0;u<a;++u)if(c[u]!==l[u]){n=c[u],o=l[u];break}return n<o?-1:o<n?1:0},h.prototype.includes=function(t,e,i){return-1!==this.indexOf(t,e,i)},h.prototype.indexOf=function(t,e,i){return m(this,t,e,i,!0)},h.prototype.lastIndexOf=function(t,e,i){return m(this,t,e,i,!1)},h.prototype.write=function(t,e,i,r){if(void 0===e)r="utf8",i=this.length,e=0;else if(void 0===i&&"string"==typeof e)r=e,i=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e|=0,isFinite(i)?(i|=0,void 0===r&&(r="utf8")):(r=i,i=void 0)}var s=this.length-e;if((void 0===i||i>s)&&(i=s),t.length>0&&(i<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var n=!1;;)switch(r){case"hex":return w(this,t,e,i);case"utf8":case"utf-8":return y(this,t,e,i);case"ascii":return v(this,t,e,i);case"latin1":case"binary":return k(this,t,e,i);case"base64":return E(this,t,e,i);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return S(this,t,e,i);default:if(n)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),n=!0}},h.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var A=4096;function x(t,e,i){var r="";i=Math.min(t.length,i);for(var s=e;s<i;++s)r+=String.fromCharCode(127&t[s]);return r}function O(t,e,i){var r="";i=Math.min(t.length,i);for(var s=e;s<i;++s)r+=String.fromCharCode(t[s]);return r}function _(t,e,i){var r=t.length;(!e||e<0)&&(e=0),(!i||i<0||i>r)&&(i=r);for(var s="",n=e;n<i;++n)s+=D(t[n]);return s}function B(t,e,i){for(var r=t.slice(e,i),s="",n=0;n<r.length;n+=2)s+=String.fromCharCode(r[n]+256*r[n+1]);return s}function P(t,e,i){if(t%1!=0||t<0)throw new RangeError("offset is not uint");if(t+e>i)throw new RangeError("Trying to access beyond buffer length")}function N(t,e,i,r,s,n){if(!h.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>s||e<n)throw new RangeError('"value" argument is out of bounds');if(i+r>t.length)throw new RangeError("Index out of range")}function T(t,e,i,r){e<0&&(e=65535+e+1);for(var s=0,n=Math.min(t.length-i,2);s<n;++s)t[i+s]=(e&255<<8*(r?s:1-s))>>>8*(r?s:1-s)}function C(t,e,i,r){e<0&&(e=4294967295+e+1);for(var s=0,n=Math.min(t.length-i,4);s<n;++s)t[i+s]=e>>>8*(r?s:3-s)&255}function M(t,e,i,r,s,n){if(i+r>t.length)throw new RangeError("Index out of range");if(i<0)throw new RangeError("Index out of range")}function U(t,e,i,r,n){return n||M(t,0,i,4),s.write(t,e,i,r,23,4),i+4}function L(t,e,i,r,n){return n||M(t,0,i,8),s.write(t,e,i,r,52,8),i+8}h.prototype.slice=function(t,e){var i,r=this.length;if(t=~~t,e=void 0===e?r:~~e,t<0?(t+=r)<0&&(t=0):t>r&&(t=r),e<0?(e+=r)<0&&(e=0):e>r&&(e=r),e<t&&(e=t),h.TYPED_ARRAY_SUPPORT)(i=this.subarray(t,e)).__proto__=h.prototype;else{var s=e-t;i=new h(s,void 0);for(var n=0;n<s;++n)i[n]=this[n+t]}return i},h.prototype.readUIntLE=function(t,e,i){t|=0,e|=0,i||P(t,e,this.length);for(var r=this[t],s=1,n=0;++n<e&&(s*=256);)r+=this[t+n]*s;return r},h.prototype.readUIntBE=function(t,e,i){t|=0,e|=0,i||P(t,e,this.length);for(var r=this[t+--e],s=1;e>0&&(s*=256);)r+=this[t+--e]*s;return r},h.prototype.readUInt8=function(t,e){return e||P(t,1,this.length),this[t]},h.prototype.readUInt16LE=function(t,e){return e||P(t,2,this.length),this[t]|this[t+1]<<8},h.prototype.readUInt16BE=function(t,e){return e||P(t,2,this.length),this[t]<<8|this[t+1]},h.prototype.readUInt32LE=function(t,e){return e||P(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},h.prototype.readUInt32BE=function(t,e){return e||P(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},h.prototype.readIntLE=function(t,e,i){t|=0,e|=0,i||P(t,e,this.length);for(var r=this[t],s=1,n=0;++n<e&&(s*=256);)r+=this[t+n]*s;return r>=(s*=128)&&(r-=Math.pow(2,8*e)),r},h.prototype.readIntBE=function(t,e,i){t|=0,e|=0,i||P(t,e,this.length);for(var r=e,s=1,n=this[t+--r];r>0&&(s*=256);)n+=this[t+--r]*s;return n>=(s*=128)&&(n-=Math.pow(2,8*e)),n},h.prototype.readInt8=function(t,e){return e||P(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},h.prototype.readInt16LE=function(t,e){e||P(t,2,this.length);var i=this[t]|this[t+1]<<8;return 32768&i?4294901760|i:i},h.prototype.readInt16BE=function(t,e){e||P(t,2,this.length);var i=this[t+1]|this[t]<<8;return 32768&i?4294901760|i:i},h.prototype.readInt32LE=function(t,e){return e||P(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},h.prototype.readInt32BE=function(t,e){return e||P(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},h.prototype.readFloatLE=function(t,e){return e||P(t,4,this.length),s.read(this,t,!0,23,4)},h.prototype.readFloatBE=function(t,e){return e||P(t,4,this.length),s.read(this,t,!1,23,4)},h.prototype.readDoubleLE=function(t,e){return e||P(t,8,this.length),s.read(this,t,!0,52,8)},h.prototype.readDoubleBE=function(t,e){return e||P(t,8,this.length),s.read(this,t,!1,52,8)},h.prototype.writeUIntLE=function(t,e,i,r){t=+t,e|=0,i|=0,r||N(this,t,e,i,Math.pow(2,8*i)-1,0);var s=1,n=0;for(this[e]=255&t;++n<i&&(s*=256);)this[e+n]=t/s&255;return e+i},h.prototype.writeUIntBE=function(t,e,i,r){t=+t,e|=0,i|=0,r||N(this,t,e,i,Math.pow(2,8*i)-1,0);var s=i-1,n=1;for(this[e+s]=255&t;--s>=0&&(n*=256);)this[e+s]=t/n&255;return e+i},h.prototype.writeUInt8=function(t,e,i){return t=+t,e|=0,i||N(this,t,e,1,255,0),h.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},h.prototype.writeUInt16LE=function(t,e,i){return t=+t,e|=0,i||N(this,t,e,2,65535,0),h.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):T(this,t,e,!0),e+2},h.prototype.writeUInt16BE=function(t,e,i){return t=+t,e|=0,i||N(this,t,e,2,65535,0),h.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):T(this,t,e,!1),e+2},h.prototype.writeUInt32LE=function(t,e,i){return t=+t,e|=0,i||N(this,t,e,4,4294967295,0),h.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):C(this,t,e,!0),e+4},h.prototype.writeUInt32BE=function(t,e,i){return t=+t,e|=0,i||N(this,t,e,4,4294967295,0),h.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):C(this,t,e,!1),e+4},h.prototype.writeIntLE=function(t,e,i,r){if(t=+t,e|=0,!r){var s=Math.pow(2,8*i-1);N(this,t,e,i,s-1,-s)}var n=0,o=1,a=0;for(this[e]=255&t;++n<i&&(o*=256);)t<0&&0===a&&0!==this[e+n-1]&&(a=1),this[e+n]=(t/o>>0)-a&255;return e+i},h.prototype.writeIntBE=function(t,e,i,r){if(t=+t,e|=0,!r){var s=Math.pow(2,8*i-1);N(this,t,e,i,s-1,-s)}var n=i-1,o=1,a=0;for(this[e+n]=255&t;--n>=0&&(o*=256);)t<0&&0===a&&0!==this[e+n+1]&&(a=1),this[e+n]=(t/o>>0)-a&255;return e+i},h.prototype.writeInt8=function(t,e,i){return t=+t,e|=0,i||N(this,t,e,1,127,-128),h.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[e]=255&t,e+1},h.prototype.writeInt16LE=function(t,e,i){return t=+t,e|=0,i||N(this,t,e,2,32767,-32768),h.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):T(this,t,e,!0),e+2},h.prototype.writeInt16BE=function(t,e,i){return t=+t,e|=0,i||N(this,t,e,2,32767,-32768),h.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):T(this,t,e,!1),e+2},h.prototype.writeInt32LE=function(t,e,i){return t=+t,e|=0,i||N(this,t,e,4,2147483647,-2147483648),h.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):C(this,t,e,!0),e+4},h.prototype.writeInt32BE=function(t,e,i){return t=+t,e|=0,i||N(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),h.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):C(this,t,e,!1),e+4},h.prototype.writeFloatLE=function(t,e,i){return U(this,t,e,!0,i)},h.prototype.writeFloatBE=function(t,e,i){return U(this,t,e,!1,i)},h.prototype.writeDoubleLE=function(t,e,i){return L(this,t,e,!0,i)},h.prototype.writeDoubleBE=function(t,e,i){return L(this,t,e,!1,i)},h.prototype.copy=function(t,e,i,r){if(i||(i=0),r||0===r||(r=this.length),e>=t.length&&(e=t.length),e||(e=0),r>0&&r<i&&(r=i),r===i)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(i<0||i>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),t.length-e<r-i&&(r=t.length-e+i);var s,n=r-i;if(this===t&&i<e&&e<r)for(s=n-1;s>=0;--s)t[s+e]=this[s+i];else if(n<1e3||!h.TYPED_ARRAY_SUPPORT)for(s=0;s<n;++s)t[s+e]=this[s+i];else Uint8Array.prototype.set.call(t,this.subarray(i,i+n),e);return n},h.prototype.fill=function(t,e,i,r){if("string"==typeof t){if("string"==typeof e?(r=e,e=0,i=this.length):"string"==typeof i&&(r=i,i=this.length),1===t.length){var s=t.charCodeAt(0);s<256&&(t=s)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!h.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof t&&(t&=255);if(e<0||this.length<e||this.length<i)throw new RangeError("Out of range index");if(i<=e)return this;var n;if(e>>>=0,i=void 0===i?this.length:i>>>0,t||(t=0),"number"==typeof t)for(n=e;n<i;++n)this[n]=t;else{var o=h.isBuffer(t)?t:H(new h(t,r).toString()),a=o.length;for(n=0;n<i-e;++n)this[n+e]=o[n%a]}return this};var z=/[^+\/0-9A-Za-z-_]/g;function D(t){return t<16?"0"+t.toString(16):t.toString(16)}function H(t,e){var i;e=e||1/0;for(var r=t.length,s=null,n=[],o=0;o<r;++o){if((i=t.charCodeAt(o))>55295&&i<57344){if(!s){if(i>56319){(e-=3)>-1&&n.push(239,191,189);continue}if(o+1===r){(e-=3)>-1&&n.push(239,191,189);continue}s=i;continue}if(i<56320){(e-=3)>-1&&n.push(239,191,189),s=i;continue}i=65536+(s-55296<<10|i-56320)}else s&&(e-=3)>-1&&n.push(239,191,189);if(s=null,i<128){if((e-=1)<0)break;n.push(i)}else if(i<2048){if((e-=2)<0)break;n.push(i>>6|192,63&i|128)}else if(i<65536){if((e-=3)<0)break;n.push(i>>12|224,i>>6&63|128,63&i|128)}else{if(!(i<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;n.push(i>>18|240,i>>12&63|128,i>>6&63|128,63&i|128)}}return n}function F(t){return r.toByteArray(function(t){if((t=function(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")}(t).replace(z,"")).length<2)return"";for(;t.length%4!=0;)t+="=";return t}(t))}function V(t,e,i,r){for(var s=0;s<r&&!(s+i>=e.length||s>=t.length);++s)e[s+i]=t[s];return s}}).call(this,i(11))},function(t,e,i){"use strict";(function(t){
/*!
 * bufio.js - buffer utilities for javascript
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(54),s=i(29),n=i(22),o=i(23),a=i(55),h=i(56),c=i(57),l=i(92);function u(e,i){return function(r,s){if(n(t.isBuffer(r),"data","buffer"),n(s>>>0===s,"off","integer"),s+i>r.length)throw new o(s,"Out of bounds read");return e(r,s)}}function f(e){return function(i,r,s){if(n(t.isBuffer(i),"data","buffer"),n(r>>>0===r,"off","integer"),n(s>>>0===s,"len","integer"),r+s>i.length)throw new o(r,"Out of bounds read");return e(i,r,s)}}function d(e){return function(i,r){return n(t.isBuffer(i),"data","buffer"),n(r>>>0===r,"off","integer"),e(i,r)}}function p(e,i){return function(r,s,a){if(n(t.isBuffer(r),"data","buffer"),n(a>>>0===a,"off","integer"),a+i>r.length)throw new o(a,"Out of bounds write");return e(r,s,a)}}function g(e){return function(i,r,s,a){if(n(t.isBuffer(i),"data","buffer"),n(s>>>0===s,"off","integer"),n(a>>>0===a,"len","integer"),s+a>i.length)throw new o(s,"Out of bounds write");return e(i,r,s,a)}}function m(e,i){return function(r,s,a){if(n(t.isBuffer(r),"data","buffer"),n(a>>>0===a,"off","integer"),a+i(s)>r.length)throw new o(a,"Out of bounds write");return e(r,s,a)}}e.custom=r,e.encoding=s,e.EncodingError=o,e.BufferReader=a,e.BufferWriter=h,e.StaticWriter=c,e.Struct=l,e.read=function(t,e){return new a(t,e)},e.write=function(t){return null!=t?new c(t):new h},e.pool=function(t){return c.pool(t)},e.readU=f(s.readU),e.readU64=u(s.readU64,8),e.readU56=u(s.readU56,7),e.readU48=u(s.readU48,6),e.readU40=u(s.readU40,5),e.readU32=u(s.readU32,4),e.readU24=u(s.readU24,3),e.readU16=u(s.readU16,2),e.readU8=u(s.readU8,1),e.readUBE=f(s.readUBE),e.readU64BE=u(s.readU64BE,8),e.readU56BE=u(s.readU56BE,7),e.readU48BE=u(s.readU48BE,6),e.readU40BE=u(s.readU40BE,5),e.readU32BE=u(s.readU32BE,4),e.readU24BE=u(s.readU24BE,3),e.readU16BE=u(s.readU16BE,2),e.readI=f(s.readI),e.readI64=u(s.readI64,8),e.readI56=u(s.readI56,7),e.readI48=u(s.readI48,6),e.readI40=u(s.readI40,5),e.readI32=u(s.readI32,4),e.readI24=u(s.readI24,3),e.readI16=u(s.readI16,2),e.readI8=u(s.readI8,1),e.readIBE=f(s.readIBE),e.readI64BE=u(s.readI64BE,8),e.readI56BE=u(s.readI56BE,7),e.readI48BE=u(s.readI48BE,6),e.readI40BE=u(s.readI40BE,5),e.readI32BE=u(s.readI32BE,4),e.readI24BE=u(s.readI24BE,3),e.readI16BE=u(s.readI16BE,2),e.readFloat=u(s.readFloat,4),e.readFloatBE=u(s.readFloatBE,4),e.readDouble=u(s.readDouble,8),e.readDoubleBE=u(s.readDoubleBE,8),e.writeU=g(s.writeU),e.writeU64=p(s.writeU64,8),e.writeU56=p(s.writeU56,7),e.writeU48=p(s.writeU48,6),e.writeU40=p(s.writeU40,5),e.writeU32=p(s.writeU32,4),e.writeU24=p(s.writeU24,3),e.writeU16=p(s.writeU16,2),e.writeU8=p(s.writeU8,1),e.writeUBE=g(s.writeUBE),e.writeU64BE=p(s.writeU64BE,8),e.writeU56BE=p(s.writeU56BE,7),e.writeU48BE=p(s.writeU48BE,6),e.writeU40BE=p(s.writeU40BE,5),e.writeU32BE=p(s.writeU32BE,4),e.writeU24BE=p(s.writeU24BE,3),e.writeU16BE=p(s.writeU16BE,2),e.writeI=g(s.writeI),e.writeI64=p(s.writeI64,8),e.writeI56=p(s.writeI56,7),e.writeI48=p(s.writeI48,6),e.writeI40=p(s.writeI40,5),e.writeI32=p(s.writeI32,4),e.writeI24=p(s.writeI24,3),e.writeI16=p(s.writeI16,2),e.writeI8=p(s.writeI8,1),e.writeIBE=g(s.writeIBE),e.writeI64BE=p(s.writeI64BE,8),e.writeI56BE=p(s.writeI56BE,7),e.writeI48BE=p(s.writeI48BE,6),e.writeI40BE=p(s.writeI40BE,5),e.writeI32BE=p(s.writeI32BE,4),e.writeI24BE=p(s.writeI24BE,3),e.writeI16BE=p(s.writeI16BE,2),e.writeFloat=p(s.writeFloat,4),e.writeFloatBE=p(s.writeFloatBE,4),e.writeDouble=p(s.writeDouble,8),e.writeDoubleBE=p(s.writeDoubleBE,8),e.readVarint=d(s.readVarint),e.writeVarint=m(s.writeVarint,s.sizeVarint),e.sizeVarint=s.sizeVarint,e.readVarint2=d(s.readVarint2),e.writeVarint2=m(s.writeVarint2,s.sizeVarint2),e.sizeVarint2=s.sizeVarint2,e.sliceBytes=s.sliceBytes,e.readBytes=s.readBytes,e.writeBytes=s.writeBytes,e.readString=s.readString,e.writeString=s.writeString,e.realloc=s.realloc,e.copy=s.copy,e.concat=s.concat,e.sizeVarBytes=s.sizeVarBytes,e.sizeVarlen=s.sizeVarlen,e.sizeVarString=s.sizeVarString}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){
/*!
 * consensus.js - consensus constants and helpers for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(49);e.COIN=1e8,e.MAX_MONEY=21e6*e.COIN,e.BASE_REWARD=50*e.COIN,e.HALF_REWARD=Math.floor(e.BASE_REWARD/2),e.MAX_BLOCK_SIZE=1e6,e.MAX_RAW_BLOCK_SIZE=4e6,e.MAX_BLOCK_WEIGHT=4e6,e.MAX_BLOCK_SIGOPS=2e4,e.MAX_BLOCK_SIGOPS_COST=8e4,e.MEDIAN_TIMESPAN=11,e.VERSION_TOP_BITS=536870912,e.VERSION_TOP_MASK=3758096384,e.COINBASE_MATURITY=100,e.WITNESS_SCALE_FACTOR=4,e.LOCKTIME_THRESHOLD=5e8,e.SEQUENCE_DISABLE_FLAG=1<<31>>>0,e.SEQUENCE_TYPE_FLAG=1<<22,e.SEQUENCE_GRANULARITY=9,e.SEQUENCE_MASK=65535,e.MAX_SCRIPT_SIZE=1e4,e.MAX_SCRIPT_STACK=1e3,e.MAX_SCRIPT_PUSH=520,e.MAX_SCRIPT_OPS=201,e.MAX_MULTISIG_PUBKEYS=20,e.BIP16_TIME=1333238400,e.ZERO_HASH=t.alloc(32,0),e.fromCompact=function(t){if(0===t)return new s(0);const e=t>>>24,i=t>>>23&1;let r,n=8388607&t;return e<=3?r=new s(n>>>=8*(3-e)):(r=new s(n)).iushln(8*(e-3)),i&&r.ineg(),r},e.toCompact=function(t){if(t.isZero())return 0;let e,i=t.byteLength();i<=3?(e=t.toNumber(),e<<=8*(3-i)):e=t.ushrn(8*(i-3)).toNumber(),8388608&e&&(e>>=8,i++);let r=i<<24|e;return t.isNeg()&&(r|=8388608),r>>>0},e.verifyPOW=function(t,i){const r=e.fromCompact(i);return!(r.isNeg()||r.isZero()||r.bitLength()>256||new s(t,"le").gt(r))},e.getReward=function(t,i){r(t>=0,"Bad height for reward.");const s=Math.floor(t/i);return s>=33?0:0===s?e.BASE_REWARD:e.HALF_REWARD>>>s-1},e.hasBit=function(t,i){return(t&e.VERSION_TOP_MASK)>>>0===e.VERSION_TOP_BITS&&0!=(t&1<<i)}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * network.js - network object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(0),s=i(48),n=i(89),o=i(3),a=i(90);class h{constructor(t){r(!h[t.type],"Cannot create two networks."),this.type=t.type,this.seeds=t.seeds,this.magic=t.magic,this.port=t.port,this.checkpointMap=t.checkpointMap,this.lastCheckpoint=t.lastCheckpoint,this.checkpoints=[],this.halvingInterval=t.halvingInterval,this.genesis=t.genesis,this.genesisBlock=t.genesisBlock,this.pow=t.pow,this.block=t.block,this.bip30=t.bip30,this.activationThreshold=t.activationThreshold,this.minerWindow=t.minerWindow,this.deployments=t.deployments,this.deploys=t.deploys,this.unknownBits=~o.VERSION_TOP_MASK,this.keyPrefix=t.keyPrefix,this.addressPrefix=t.addressPrefix,this.requireStandard=t.requireStandard,this.rpcPort=t.rpcPort,this.walletPort=t.walletPort,this.minRelay=t.minRelay,this.feeRate=t.feeRate,this.maxFeeRate=t.maxFeeRate,this.selfConnect=t.selfConnect,this.requestMempool=t.requestMempool,this.time=new a,this.init()}init(){let t=0;for(const e of this.deploys)t|=1<<e.bit;t|=o.VERSION_TOP_MASK,this.unknownBits=~t>>>0;for(const t of Object.keys(this.checkpointMap)){const e=this.checkpointMap[t],i=Number(t);this.checkpoints.push({hash:e,height:i})}this.checkpoints.sort(l)}byBit(t){const e=s.search(this.deploys,t,c);return-1===e?null:this.deploys[e]}now(){return this.time.now()}ms(){return this.time.ms()}static create(t){if("string"==typeof t&&(t=n[t]),r(t,"Unknown network."),h[t.type])return h[t.type];const e=new h(t);return h[e.type]=e,h.primary||(h.primary=e),e}static set(t){return r("string"==typeof t,"Bad network."),h.primary=h.get(t),h.type=t,h.primary}static get(t){if(!t)return r(h.primary,"No default network."),h.primary;if(t instanceof h)return t;if("string"==typeof t)return h.create(t);throw new Error("Unknown network.")}static ensure(t){return t?t instanceof h?t:"string"==typeof t&&n[t]?h.create(t):(r(h.primary,"No default network."),h.primary):(r(h.primary,"No default network."),h.primary)}static by(t,e,i,r){if(i){if(e(i=h.get(i),t))return i;throw new Error(`Network mismatch for ${r}.`)}for(const r of n.types)if(e(i=n[r],t))return h.get(r);throw new Error(`Network not found for ${r}.`)}static fromMagic(t,e){return h.by(t,u,e,"magic number")}static fromWIF(t,e){return h.by(t,f,e,"WIF")}static fromPublic(t,e){return h.by(t,d,e,"xpubkey")}static fromPrivate(t,e){return h.by(t,p,e,"xprivkey")}static fromPublic58(t,e){return h.by(t,g,e,"xpubkey")}static fromPrivate58(t,e){return h.by(t,m,e,"xprivkey")}static fromAddress(t,e){return h.by(t,b,e,"base58 address")}static fromBech32(t,e){return h.by(t,w,e,"bech32 address")}toString(){return this.type}inspect(){return`<Network: ${this.type}>`}static isNetwork(t){return t instanceof h}}function c(t,e){return t.bit-e}function l(t,e){return t.height-e.height}function u(t,e){return t.magic===e}function f(t,e){return t.keyPrefix.privkey===e}function d(t,e){return t.keyPrefix.xpubkey===e}function p(t,e){return t.keyPrefix.xprivkey===e}function g(t,e){return t.keyPrefix.xpubkey58===e}function m(t,e){return t.keyPrefix.xprivkey58===e}function b(t,e){const i=t.addressPrefix;switch(e){case i.pubkeyhash:case i.scripthash:case i.witnesspubkeyhash:case i.witnessscripthash:return!0}return!1}function w(t,e){return t.addressPrefix.bech32===e}h.primary=null,h.type=null,h.main=null,h.testnet=null,h.regtest=null,h.segnet4=null,h.simnet=null,h.set("main"),t.exports=h},function(t,e,i){"use strict";(function(t,r){
/*!
 * util.js - utils for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),n=e;n.bench=function(e){if(!t.hrtime){const t=Date.now();if(e){const[i,r]=e;return t-(1e3*i+r/1e6)}const i=t%1e3;return[(t-i)/1e3,1e6*i]}if(e){const[i,r]=t.hrtime(e);return 1e3*i+r/1e6}return t.hrtime()},n.now=function(){return Math.floor(Date.now()/1e3)},n.ms=function(){return Date.now()},n.date=function(t){return null==t&&(t=n.now()),new Date(1e3*t).toISOString().slice(0,-5)+"Z"},n.time=function(t){return null==t?n.now():new Date(t)/1e3|0},n.revHex=function(t){s(r.isBuffer(t));const e=t.toString("hex");let i="";for(let t=e.length-2;t>=0;t-=2)i+=e[t]+e[t+1];return i},n.fromRev=function(t){s("string"==typeof t),s(0==(1&t.length));let e="";for(let i=t.length-2;i>=0;i-=2)e+=t[i]+t[i+1];return r.from(e,"hex")}}).call(this,i(21),i(1).Buffer)},function(t,e,i){"use strict";var r=e;r.version="6.4.1",r.utils=i(106),r.rand=i(109),r.curve=i(31),r.curves=i(115),r.ec=i(121),r.eddsa=i(126)},function(t,e){function i(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function r(t){return"function"==typeof t}function s(t){return"object"==typeof t&&null!==t}function n(t){return void 0===t}t.exports=i,i.EventEmitter=i,i.prototype._events=void 0,i.prototype._maxListeners=void 0,i.defaultMaxListeners=10,i.prototype.setMaxListeners=function(t){if(!function(t){return"number"==typeof t}(t)||t<0||isNaN(t))throw TypeError("n must be a positive number");return this._maxListeners=t,this},i.prototype.emit=function(t){var e,i,o,a,h,c;if(this._events||(this._events={}),"error"===t&&(!this._events.error||s(this._events.error)&&!this._events.error.length)){if((e=arguments[1])instanceof Error)throw e;var l=new Error('Uncaught, unspecified "error" event. ('+e+")");throw l.context=e,l}if(n(i=this._events[t]))return!1;if(r(i))switch(arguments.length){case 1:i.call(this);break;case 2:i.call(this,arguments[1]);break;case 3:i.call(this,arguments[1],arguments[2]);break;default:a=Array.prototype.slice.call(arguments,1),i.apply(this,a)}else if(s(i))for(a=Array.prototype.slice.call(arguments,1),o=(c=i.slice()).length,h=0;h<o;h++)c[h].apply(this,a);return!0},i.prototype.addListener=function(t,e){var o;if(!r(e))throw TypeError("listener must be a function");return this._events||(this._events={}),this._events.newListener&&this.emit("newListener",t,r(e.listener)?e.listener:e),this._events[t]?s(this._events[t])?this._events[t].push(e):this._events[t]=[this._events[t],e]:this._events[t]=e,s(this._events[t])&&!this._events[t].warned&&(o=n(this._maxListeners)?i.defaultMaxListeners:this._maxListeners)&&o>0&&this._events[t].length>o&&(this._events[t].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[t].length),"function"==typeof console.trace&&console.trace()),this},i.prototype.on=i.prototype.addListener,i.prototype.once=function(t,e){if(!r(e))throw TypeError("listener must be a function");var i=!1;function s(){this.removeListener(t,s),i||(i=!0,e.apply(this,arguments))}return s.listener=e,this.on(t,s),this},i.prototype.removeListener=function(t,e){var i,n,o,a;if(!r(e))throw TypeError("listener must be a function");if(!this._events||!this._events[t])return this;if(o=(i=this._events[t]).length,n=-1,i===e||r(i.listener)&&i.listener===e)delete this._events[t],this._events.removeListener&&this.emit("removeListener",t,e);else if(s(i)){for(a=o;a-- >0;)if(i[a]===e||i[a].listener&&i[a].listener===e){n=a;break}if(n<0)return this;1===i.length?(i.length=0,delete this._events[t]):i.splice(n,1),this._events.removeListener&&this.emit("removeListener",t,e)}return this},i.prototype.removeAllListeners=function(t){var e,i;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[t]&&delete this._events[t],this;if(0===arguments.length){for(e in this._events)"removeListener"!==e&&this.removeAllListeners(e);return this.removeAllListeners("removeListener"),this._events={},this}if(r(i=this._events[t]))this.removeListener(t,i);else if(i)for(;i.length;)this.removeListener(t,i[i.length-1]);return delete this._events[t],this},i.prototype.listeners=function(t){return this._events&&this._events[t]?r(this._events[t])?[this._events[t]]:this._events[t].slice():[]},i.prototype.listenerCount=function(t){if(this._events){var e=this._events[t];if(r(e))return 1;if(e)return e.length}return 0},i.listenerCount=function(t,e){return t.listenerCount(e)}},function(t,e,i){(function(t){!function(t,e){"use strict";function r(t,e){if(!t)throw new Error(e||"Assertion failed")}function s(t,e){t.super_=e;var i=function(){};i.prototype=e.prototype,t.prototype=new i,t.prototype.constructor=t}function n(t,e,i){if(n.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==e&&"be"!==e||(i=e,e=10),this._init(t||0,e||10,i||"be"))}var o;"object"==typeof t?t.exports=n:e.BN=n,n.BN=n,n.wordSize=26;try{o=i(1).Buffer}catch(t){}function a(t,e,i){for(var r=0,s=Math.min(t.length,i),n=e;n<s;n++){var o=t.charCodeAt(n)-48;r<<=4,r|=o>=49&&o<=54?o-49+10:o>=17&&o<=22?o-17+10:15&o}return r}function h(t,e,i,r){for(var s=0,n=Math.min(t.length,i),o=e;o<n;o++){var a=t.charCodeAt(o)-48;s*=r,s+=a>=49?a-49+10:a>=17?a-17+10:a}return s}n.isBN=function(t){return t instanceof n||null!==t&&"object"==typeof t&&t.constructor.wordSize===n.wordSize&&Array.isArray(t.words)},n.max=function(t,e){return t.cmp(e)>0?t:e},n.min=function(t,e){return t.cmp(e)<0?t:e},n.prototype._init=function(t,e,i){if("number"==typeof t)return this._initNumber(t,e,i);if("object"==typeof t)return this._initArray(t,e,i);"hex"===e&&(e=16),r(e===(0|e)&&e>=2&&e<=36);var s=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&s++,16===e?this._parseHex(t,s):this._parseBase(t,e,s),"-"===t[0]&&(this.negative=1),this.strip(),"le"===i&&this._initArray(this.toArray(),e,i)},n.prototype._initNumber=function(t,e,i){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(r(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===i&&this._initArray(this.toArray(),e,i)},n.prototype._initArray=function(t,e,i){if(r("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var s=0;s<this.length;s++)this.words[s]=0;var n,o,a=0;if("be"===i)for(s=t.length-1,n=0;s>=0;s-=3)o=t[s]|t[s-1]<<8|t[s-2]<<16,this.words[n]|=o<<a&67108863,this.words[n+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,n++);else if("le"===i)for(s=0,n=0;s<t.length;s+=3)o=t[s]|t[s+1]<<8|t[s+2]<<16,this.words[n]|=o<<a&67108863,this.words[n+1]=o>>>26-a&67108863,(a+=24)>=26&&(a-=26,n++);return this.strip()},n.prototype._parseHex=function(t,e){this.length=Math.ceil((t.length-e)/6),this.words=new Array(this.length);for(var i=0;i<this.length;i++)this.words[i]=0;var r,s,n=0;for(i=t.length-6,r=0;i>=e;i-=6)s=a(t,i,i+6),this.words[r]|=s<<n&67108863,this.words[r+1]|=s>>>26-n&4194303,(n+=24)>=26&&(n-=26,r++);i+6!==e&&(s=a(t,e,i+6),this.words[r]|=s<<n&67108863,this.words[r+1]|=s>>>26-n&4194303),this.strip()},n.prototype._parseBase=function(t,e,i){this.words=[0],this.length=1;for(var r=0,s=1;s<=67108863;s*=e)r++;r--,s=s/e|0;for(var n=t.length-i,o=n%r,a=Math.min(n,n-o)+i,c=0,l=i;l<a;l+=r)c=h(t,l,l+r,e),this.imuln(s),this.words[0]+c<67108864?this.words[0]+=c:this._iaddn(c);if(0!==o){var u=1;for(c=h(t,l,t.length,e),l=0;l<o;l++)u*=e;this.imuln(u),this.words[0]+c<67108864?this.words[0]+=c:this._iaddn(c)}},n.prototype.copy=function(t){t.words=new Array(this.length);for(var e=0;e<this.length;e++)t.words[e]=this.words[e];t.length=this.length,t.negative=this.negative,t.red=this.red},n.prototype.clone=function(){var t=new n(null);return this.copy(t),t},n.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},n.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},n.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},n.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var c=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],l=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],u=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function f(t,e,i){i.negative=e.negative^t.negative;var r=t.length+e.length|0;i.length=r,r=r-1|0;var s=0|t.words[0],n=0|e.words[0],o=s*n,a=67108863&o,h=o/67108864|0;i.words[0]=a;for(var c=1;c<r;c++){for(var l=h>>>26,u=67108863&h,f=Math.min(c,e.length-1),d=Math.max(0,c-t.length+1);d<=f;d++){var p=c-d|0;l+=(o=(s=0|t.words[p])*(n=0|e.words[d])+u)/67108864|0,u=67108863&o}i.words[c]=0|u,h=0|l}return 0!==h?i.words[c]=0|h:i.length--,i.strip()}n.prototype.toString=function(t,e){var i;if(t=t||10,e=0|e||1,16===t||"hex"===t){i="";for(var s=0,n=0,o=0;o<this.length;o++){var a=this.words[o],h=(16777215&(a<<s|n)).toString(16);i=0!=(n=a>>>24-s&16777215)||o!==this.length-1?c[6-h.length]+h+i:h+i,(s+=2)>=26&&(s-=26,o--)}for(0!==n&&(i=n.toString(16)+i);i.length%e!=0;)i="0"+i;return 0!==this.negative&&(i="-"+i),i}if(t===(0|t)&&t>=2&&t<=36){var f=l[t],d=u[t];i="";var p=this.clone();for(p.negative=0;!p.isZero();){var g=p.modn(d).toString(t);i=(p=p.idivn(d)).isZero()?g+i:c[f-g.length]+g+i}for(this.isZero()&&(i="0"+i);i.length%e!=0;)i="0"+i;return 0!==this.negative&&(i="-"+i),i}r(!1,"Base should be between 2 and 36")},n.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&r(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},n.prototype.toJSON=function(){return this.toString(16)},n.prototype.toBuffer=function(t,e){return r(void 0!==o),this.toArrayLike(o,t,e)},n.prototype.toArray=function(t,e){return this.toArrayLike(Array,t,e)},n.prototype.toArrayLike=function(t,e,i){var s=this.byteLength(),n=i||Math.max(1,s);r(s<=n,"byte array longer than desired length"),r(n>0,"Requested array length <= 0"),this.strip();var o,a,h="le"===e,c=new t(n),l=this.clone();if(h){for(a=0;!l.isZero();a++)o=l.andln(255),l.iushrn(8),c[a]=o;for(;a<n;a++)c[a]=0}else{for(a=0;a<n-s;a++)c[a]=0;for(a=0;!l.isZero();a++)o=l.andln(255),l.iushrn(8),c[n-a-1]=o}return c},Math.clz32?n.prototype._countBits=function(t){return 32-Math.clz32(t)}:n.prototype._countBits=function(t){var e=t,i=0;return e>=4096&&(i+=13,e>>>=13),e>=64&&(i+=7,e>>>=7),e>=8&&(i+=4,e>>>=4),e>=2&&(i+=2,e>>>=2),i+e},n.prototype._zeroBits=function(t){if(0===t)return 26;var e=t,i=0;return 0==(8191&e)&&(i+=13,e>>>=13),0==(127&e)&&(i+=7,e>>>=7),0==(15&e)&&(i+=4,e>>>=4),0==(3&e)&&(i+=2,e>>>=2),0==(1&e)&&i++,i},n.prototype.bitLength=function(){var t=this.words[this.length-1],e=this._countBits(t);return 26*(this.length-1)+e},n.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,e=0;e<this.length;e++){var i=this._zeroBits(this.words[e]);if(t+=i,26!==i)break}return t},n.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},n.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},n.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},n.prototype.isNeg=function(){return 0!==this.negative},n.prototype.neg=function(){return this.clone().ineg()},n.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},n.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]|t.words[e];return this.strip()},n.prototype.ior=function(t){return r(0==(this.negative|t.negative)),this.iuor(t)},n.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},n.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},n.prototype.iuand=function(t){var e;e=this.length>t.length?t:this;for(var i=0;i<e.length;i++)this.words[i]=this.words[i]&t.words[i];return this.length=e.length,this.strip()},n.prototype.iand=function(t){return r(0==(this.negative|t.negative)),this.iuand(t)},n.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},n.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},n.prototype.iuxor=function(t){var e,i;this.length>t.length?(e=this,i=t):(e=t,i=this);for(var r=0;r<i.length;r++)this.words[r]=e.words[r]^i.words[r];if(this!==e)for(;r<e.length;r++)this.words[r]=e.words[r];return this.length=e.length,this.strip()},n.prototype.ixor=function(t){return r(0==(this.negative|t.negative)),this.iuxor(t)},n.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},n.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},n.prototype.inotn=function(t){r("number"==typeof t&&t>=0);var e=0|Math.ceil(t/26),i=t%26;this._expand(e),i>0&&e--;for(var s=0;s<e;s++)this.words[s]=67108863&~this.words[s];return i>0&&(this.words[s]=~this.words[s]&67108863>>26-i),this.strip()},n.prototype.notn=function(t){return this.clone().inotn(t)},n.prototype.setn=function(t,e){r("number"==typeof t&&t>=0);var i=t/26|0,s=t%26;return this._expand(i+1),this.words[i]=e?this.words[i]|1<<s:this.words[i]&~(1<<s),this.strip()},n.prototype.iadd=function(t){var e,i,r;if(0!==this.negative&&0===t.negative)return this.negative=0,e=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,e=this.isub(t),t.negative=1,e._normSign();this.length>t.length?(i=this,r=t):(i=t,r=this);for(var s=0,n=0;n<r.length;n++)e=(0|i.words[n])+(0|r.words[n])+s,this.words[n]=67108863&e,s=e>>>26;for(;0!==s&&n<i.length;n++)e=(0|i.words[n])+s,this.words[n]=67108863&e,s=e>>>26;if(this.length=i.length,0!==s)this.words[this.length]=s,this.length++;else if(i!==this)for(;n<i.length;n++)this.words[n]=i.words[n];return this},n.prototype.add=function(t){var e;return 0!==t.negative&&0===this.negative?(t.negative=0,e=this.sub(t),t.negative^=1,e):0===t.negative&&0!==this.negative?(this.negative=0,e=t.sub(this),this.negative=1,e):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},n.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var e=this.iadd(t);return t.negative=1,e._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var i,r,s=this.cmp(t);if(0===s)return this.negative=0,this.length=1,this.words[0]=0,this;s>0?(i=this,r=t):(i=t,r=this);for(var n=0,o=0;o<r.length;o++)n=(e=(0|i.words[o])-(0|r.words[o])+n)>>26,this.words[o]=67108863&e;for(;0!==n&&o<i.length;o++)n=(e=(0|i.words[o])+n)>>26,this.words[o]=67108863&e;if(0===n&&o<i.length&&i!==this)for(;o<i.length;o++)this.words[o]=i.words[o];return this.length=Math.max(this.length,o),i!==this&&(this.negative=1),this.strip()},n.prototype.sub=function(t){return this.clone().isub(t)};var d=function(t,e,i){var r,s,n,o=t.words,a=e.words,h=i.words,c=0,l=0|o[0],u=8191&l,f=l>>>13,d=0|o[1],p=8191&d,g=d>>>13,m=0|o[2],b=8191&m,w=m>>>13,y=0|o[3],v=8191&y,k=y>>>13,E=0|o[4],S=8191&E,R=E>>>13,I=0|o[5],A=8191&I,x=I>>>13,O=0|o[6],_=8191&O,B=O>>>13,P=0|o[7],N=8191&P,T=P>>>13,C=0|o[8],M=8191&C,U=C>>>13,L=0|o[9],z=8191&L,D=L>>>13,H=0|a[0],F=8191&H,V=H>>>13,K=0|a[1],j=8191&K,q=K>>>13,W=0|a[2],X=8191&W,Y=W>>>13,G=0|a[3],J=8191&G,$=G>>>13,Z=0|a[4],Q=8191&Z,tt=Z>>>13,et=0|a[5],it=8191&et,rt=et>>>13,st=0|a[6],nt=8191&st,ot=st>>>13,at=0|a[7],ht=8191&at,ct=at>>>13,lt=0|a[8],ut=8191&lt,ft=lt>>>13,dt=0|a[9],pt=8191&dt,gt=dt>>>13;i.negative=t.negative^e.negative,i.length=19;var mt=(c+(r=Math.imul(u,F))|0)+((8191&(s=(s=Math.imul(u,V))+Math.imul(f,F)|0))<<13)|0;c=((n=Math.imul(f,V))+(s>>>13)|0)+(mt>>>26)|0,mt&=67108863,r=Math.imul(p,F),s=(s=Math.imul(p,V))+Math.imul(g,F)|0,n=Math.imul(g,V);var bt=(c+(r=r+Math.imul(u,j)|0)|0)+((8191&(s=(s=s+Math.imul(u,q)|0)+Math.imul(f,j)|0))<<13)|0;c=((n=n+Math.imul(f,q)|0)+(s>>>13)|0)+(bt>>>26)|0,bt&=67108863,r=Math.imul(b,F),s=(s=Math.imul(b,V))+Math.imul(w,F)|0,n=Math.imul(w,V),r=r+Math.imul(p,j)|0,s=(s=s+Math.imul(p,q)|0)+Math.imul(g,j)|0,n=n+Math.imul(g,q)|0;var wt=(c+(r=r+Math.imul(u,X)|0)|0)+((8191&(s=(s=s+Math.imul(u,Y)|0)+Math.imul(f,X)|0))<<13)|0;c=((n=n+Math.imul(f,Y)|0)+(s>>>13)|0)+(wt>>>26)|0,wt&=67108863,r=Math.imul(v,F),s=(s=Math.imul(v,V))+Math.imul(k,F)|0,n=Math.imul(k,V),r=r+Math.imul(b,j)|0,s=(s=s+Math.imul(b,q)|0)+Math.imul(w,j)|0,n=n+Math.imul(w,q)|0,r=r+Math.imul(p,X)|0,s=(s=s+Math.imul(p,Y)|0)+Math.imul(g,X)|0,n=n+Math.imul(g,Y)|0;var yt=(c+(r=r+Math.imul(u,J)|0)|0)+((8191&(s=(s=s+Math.imul(u,$)|0)+Math.imul(f,J)|0))<<13)|0;c=((n=n+Math.imul(f,$)|0)+(s>>>13)|0)+(yt>>>26)|0,yt&=67108863,r=Math.imul(S,F),s=(s=Math.imul(S,V))+Math.imul(R,F)|0,n=Math.imul(R,V),r=r+Math.imul(v,j)|0,s=(s=s+Math.imul(v,q)|0)+Math.imul(k,j)|0,n=n+Math.imul(k,q)|0,r=r+Math.imul(b,X)|0,s=(s=s+Math.imul(b,Y)|0)+Math.imul(w,X)|0,n=n+Math.imul(w,Y)|0,r=r+Math.imul(p,J)|0,s=(s=s+Math.imul(p,$)|0)+Math.imul(g,J)|0,n=n+Math.imul(g,$)|0;var vt=(c+(r=r+Math.imul(u,Q)|0)|0)+((8191&(s=(s=s+Math.imul(u,tt)|0)+Math.imul(f,Q)|0))<<13)|0;c=((n=n+Math.imul(f,tt)|0)+(s>>>13)|0)+(vt>>>26)|0,vt&=67108863,r=Math.imul(A,F),s=(s=Math.imul(A,V))+Math.imul(x,F)|0,n=Math.imul(x,V),r=r+Math.imul(S,j)|0,s=(s=s+Math.imul(S,q)|0)+Math.imul(R,j)|0,n=n+Math.imul(R,q)|0,r=r+Math.imul(v,X)|0,s=(s=s+Math.imul(v,Y)|0)+Math.imul(k,X)|0,n=n+Math.imul(k,Y)|0,r=r+Math.imul(b,J)|0,s=(s=s+Math.imul(b,$)|0)+Math.imul(w,J)|0,n=n+Math.imul(w,$)|0,r=r+Math.imul(p,Q)|0,s=(s=s+Math.imul(p,tt)|0)+Math.imul(g,Q)|0,n=n+Math.imul(g,tt)|0;var kt=(c+(r=r+Math.imul(u,it)|0)|0)+((8191&(s=(s=s+Math.imul(u,rt)|0)+Math.imul(f,it)|0))<<13)|0;c=((n=n+Math.imul(f,rt)|0)+(s>>>13)|0)+(kt>>>26)|0,kt&=67108863,r=Math.imul(_,F),s=(s=Math.imul(_,V))+Math.imul(B,F)|0,n=Math.imul(B,V),r=r+Math.imul(A,j)|0,s=(s=s+Math.imul(A,q)|0)+Math.imul(x,j)|0,n=n+Math.imul(x,q)|0,r=r+Math.imul(S,X)|0,s=(s=s+Math.imul(S,Y)|0)+Math.imul(R,X)|0,n=n+Math.imul(R,Y)|0,r=r+Math.imul(v,J)|0,s=(s=s+Math.imul(v,$)|0)+Math.imul(k,J)|0,n=n+Math.imul(k,$)|0,r=r+Math.imul(b,Q)|0,s=(s=s+Math.imul(b,tt)|0)+Math.imul(w,Q)|0,n=n+Math.imul(w,tt)|0,r=r+Math.imul(p,it)|0,s=(s=s+Math.imul(p,rt)|0)+Math.imul(g,it)|0,n=n+Math.imul(g,rt)|0;var Et=(c+(r=r+Math.imul(u,nt)|0)|0)+((8191&(s=(s=s+Math.imul(u,ot)|0)+Math.imul(f,nt)|0))<<13)|0;c=((n=n+Math.imul(f,ot)|0)+(s>>>13)|0)+(Et>>>26)|0,Et&=67108863,r=Math.imul(N,F),s=(s=Math.imul(N,V))+Math.imul(T,F)|0,n=Math.imul(T,V),r=r+Math.imul(_,j)|0,s=(s=s+Math.imul(_,q)|0)+Math.imul(B,j)|0,n=n+Math.imul(B,q)|0,r=r+Math.imul(A,X)|0,s=(s=s+Math.imul(A,Y)|0)+Math.imul(x,X)|0,n=n+Math.imul(x,Y)|0,r=r+Math.imul(S,J)|0,s=(s=s+Math.imul(S,$)|0)+Math.imul(R,J)|0,n=n+Math.imul(R,$)|0,r=r+Math.imul(v,Q)|0,s=(s=s+Math.imul(v,tt)|0)+Math.imul(k,Q)|0,n=n+Math.imul(k,tt)|0,r=r+Math.imul(b,it)|0,s=(s=s+Math.imul(b,rt)|0)+Math.imul(w,it)|0,n=n+Math.imul(w,rt)|0,r=r+Math.imul(p,nt)|0,s=(s=s+Math.imul(p,ot)|0)+Math.imul(g,nt)|0,n=n+Math.imul(g,ot)|0;var St=(c+(r=r+Math.imul(u,ht)|0)|0)+((8191&(s=(s=s+Math.imul(u,ct)|0)+Math.imul(f,ht)|0))<<13)|0;c=((n=n+Math.imul(f,ct)|0)+(s>>>13)|0)+(St>>>26)|0,St&=67108863,r=Math.imul(M,F),s=(s=Math.imul(M,V))+Math.imul(U,F)|0,n=Math.imul(U,V),r=r+Math.imul(N,j)|0,s=(s=s+Math.imul(N,q)|0)+Math.imul(T,j)|0,n=n+Math.imul(T,q)|0,r=r+Math.imul(_,X)|0,s=(s=s+Math.imul(_,Y)|0)+Math.imul(B,X)|0,n=n+Math.imul(B,Y)|0,r=r+Math.imul(A,J)|0,s=(s=s+Math.imul(A,$)|0)+Math.imul(x,J)|0,n=n+Math.imul(x,$)|0,r=r+Math.imul(S,Q)|0,s=(s=s+Math.imul(S,tt)|0)+Math.imul(R,Q)|0,n=n+Math.imul(R,tt)|0,r=r+Math.imul(v,it)|0,s=(s=s+Math.imul(v,rt)|0)+Math.imul(k,it)|0,n=n+Math.imul(k,rt)|0,r=r+Math.imul(b,nt)|0,s=(s=s+Math.imul(b,ot)|0)+Math.imul(w,nt)|0,n=n+Math.imul(w,ot)|0,r=r+Math.imul(p,ht)|0,s=(s=s+Math.imul(p,ct)|0)+Math.imul(g,ht)|0,n=n+Math.imul(g,ct)|0;var Rt=(c+(r=r+Math.imul(u,ut)|0)|0)+((8191&(s=(s=s+Math.imul(u,ft)|0)+Math.imul(f,ut)|0))<<13)|0;c=((n=n+Math.imul(f,ft)|0)+(s>>>13)|0)+(Rt>>>26)|0,Rt&=67108863,r=Math.imul(z,F),s=(s=Math.imul(z,V))+Math.imul(D,F)|0,n=Math.imul(D,V),r=r+Math.imul(M,j)|0,s=(s=s+Math.imul(M,q)|0)+Math.imul(U,j)|0,n=n+Math.imul(U,q)|0,r=r+Math.imul(N,X)|0,s=(s=s+Math.imul(N,Y)|0)+Math.imul(T,X)|0,n=n+Math.imul(T,Y)|0,r=r+Math.imul(_,J)|0,s=(s=s+Math.imul(_,$)|0)+Math.imul(B,J)|0,n=n+Math.imul(B,$)|0,r=r+Math.imul(A,Q)|0,s=(s=s+Math.imul(A,tt)|0)+Math.imul(x,Q)|0,n=n+Math.imul(x,tt)|0,r=r+Math.imul(S,it)|0,s=(s=s+Math.imul(S,rt)|0)+Math.imul(R,it)|0,n=n+Math.imul(R,rt)|0,r=r+Math.imul(v,nt)|0,s=(s=s+Math.imul(v,ot)|0)+Math.imul(k,nt)|0,n=n+Math.imul(k,ot)|0,r=r+Math.imul(b,ht)|0,s=(s=s+Math.imul(b,ct)|0)+Math.imul(w,ht)|0,n=n+Math.imul(w,ct)|0,r=r+Math.imul(p,ut)|0,s=(s=s+Math.imul(p,ft)|0)+Math.imul(g,ut)|0,n=n+Math.imul(g,ft)|0;var It=(c+(r=r+Math.imul(u,pt)|0)|0)+((8191&(s=(s=s+Math.imul(u,gt)|0)+Math.imul(f,pt)|0))<<13)|0;c=((n=n+Math.imul(f,gt)|0)+(s>>>13)|0)+(It>>>26)|0,It&=67108863,r=Math.imul(z,j),s=(s=Math.imul(z,q))+Math.imul(D,j)|0,n=Math.imul(D,q),r=r+Math.imul(M,X)|0,s=(s=s+Math.imul(M,Y)|0)+Math.imul(U,X)|0,n=n+Math.imul(U,Y)|0,r=r+Math.imul(N,J)|0,s=(s=s+Math.imul(N,$)|0)+Math.imul(T,J)|0,n=n+Math.imul(T,$)|0,r=r+Math.imul(_,Q)|0,s=(s=s+Math.imul(_,tt)|0)+Math.imul(B,Q)|0,n=n+Math.imul(B,tt)|0,r=r+Math.imul(A,it)|0,s=(s=s+Math.imul(A,rt)|0)+Math.imul(x,it)|0,n=n+Math.imul(x,rt)|0,r=r+Math.imul(S,nt)|0,s=(s=s+Math.imul(S,ot)|0)+Math.imul(R,nt)|0,n=n+Math.imul(R,ot)|0,r=r+Math.imul(v,ht)|0,s=(s=s+Math.imul(v,ct)|0)+Math.imul(k,ht)|0,n=n+Math.imul(k,ct)|0,r=r+Math.imul(b,ut)|0,s=(s=s+Math.imul(b,ft)|0)+Math.imul(w,ut)|0,n=n+Math.imul(w,ft)|0;var At=(c+(r=r+Math.imul(p,pt)|0)|0)+((8191&(s=(s=s+Math.imul(p,gt)|0)+Math.imul(g,pt)|0))<<13)|0;c=((n=n+Math.imul(g,gt)|0)+(s>>>13)|0)+(At>>>26)|0,At&=67108863,r=Math.imul(z,X),s=(s=Math.imul(z,Y))+Math.imul(D,X)|0,n=Math.imul(D,Y),r=r+Math.imul(M,J)|0,s=(s=s+Math.imul(M,$)|0)+Math.imul(U,J)|0,n=n+Math.imul(U,$)|0,r=r+Math.imul(N,Q)|0,s=(s=s+Math.imul(N,tt)|0)+Math.imul(T,Q)|0,n=n+Math.imul(T,tt)|0,r=r+Math.imul(_,it)|0,s=(s=s+Math.imul(_,rt)|0)+Math.imul(B,it)|0,n=n+Math.imul(B,rt)|0,r=r+Math.imul(A,nt)|0,s=(s=s+Math.imul(A,ot)|0)+Math.imul(x,nt)|0,n=n+Math.imul(x,ot)|0,r=r+Math.imul(S,ht)|0,s=(s=s+Math.imul(S,ct)|0)+Math.imul(R,ht)|0,n=n+Math.imul(R,ct)|0,r=r+Math.imul(v,ut)|0,s=(s=s+Math.imul(v,ft)|0)+Math.imul(k,ut)|0,n=n+Math.imul(k,ft)|0;var xt=(c+(r=r+Math.imul(b,pt)|0)|0)+((8191&(s=(s=s+Math.imul(b,gt)|0)+Math.imul(w,pt)|0))<<13)|0;c=((n=n+Math.imul(w,gt)|0)+(s>>>13)|0)+(xt>>>26)|0,xt&=67108863,r=Math.imul(z,J),s=(s=Math.imul(z,$))+Math.imul(D,J)|0,n=Math.imul(D,$),r=r+Math.imul(M,Q)|0,s=(s=s+Math.imul(M,tt)|0)+Math.imul(U,Q)|0,n=n+Math.imul(U,tt)|0,r=r+Math.imul(N,it)|0,s=(s=s+Math.imul(N,rt)|0)+Math.imul(T,it)|0,n=n+Math.imul(T,rt)|0,r=r+Math.imul(_,nt)|0,s=(s=s+Math.imul(_,ot)|0)+Math.imul(B,nt)|0,n=n+Math.imul(B,ot)|0,r=r+Math.imul(A,ht)|0,s=(s=s+Math.imul(A,ct)|0)+Math.imul(x,ht)|0,n=n+Math.imul(x,ct)|0,r=r+Math.imul(S,ut)|0,s=(s=s+Math.imul(S,ft)|0)+Math.imul(R,ut)|0,n=n+Math.imul(R,ft)|0;var Ot=(c+(r=r+Math.imul(v,pt)|0)|0)+((8191&(s=(s=s+Math.imul(v,gt)|0)+Math.imul(k,pt)|0))<<13)|0;c=((n=n+Math.imul(k,gt)|0)+(s>>>13)|0)+(Ot>>>26)|0,Ot&=67108863,r=Math.imul(z,Q),s=(s=Math.imul(z,tt))+Math.imul(D,Q)|0,n=Math.imul(D,tt),r=r+Math.imul(M,it)|0,s=(s=s+Math.imul(M,rt)|0)+Math.imul(U,it)|0,n=n+Math.imul(U,rt)|0,r=r+Math.imul(N,nt)|0,s=(s=s+Math.imul(N,ot)|0)+Math.imul(T,nt)|0,n=n+Math.imul(T,ot)|0,r=r+Math.imul(_,ht)|0,s=(s=s+Math.imul(_,ct)|0)+Math.imul(B,ht)|0,n=n+Math.imul(B,ct)|0,r=r+Math.imul(A,ut)|0,s=(s=s+Math.imul(A,ft)|0)+Math.imul(x,ut)|0,n=n+Math.imul(x,ft)|0;var _t=(c+(r=r+Math.imul(S,pt)|0)|0)+((8191&(s=(s=s+Math.imul(S,gt)|0)+Math.imul(R,pt)|0))<<13)|0;c=((n=n+Math.imul(R,gt)|0)+(s>>>13)|0)+(_t>>>26)|0,_t&=67108863,r=Math.imul(z,it),s=(s=Math.imul(z,rt))+Math.imul(D,it)|0,n=Math.imul(D,rt),r=r+Math.imul(M,nt)|0,s=(s=s+Math.imul(M,ot)|0)+Math.imul(U,nt)|0,n=n+Math.imul(U,ot)|0,r=r+Math.imul(N,ht)|0,s=(s=s+Math.imul(N,ct)|0)+Math.imul(T,ht)|0,n=n+Math.imul(T,ct)|0,r=r+Math.imul(_,ut)|0,s=(s=s+Math.imul(_,ft)|0)+Math.imul(B,ut)|0,n=n+Math.imul(B,ft)|0;var Bt=(c+(r=r+Math.imul(A,pt)|0)|0)+((8191&(s=(s=s+Math.imul(A,gt)|0)+Math.imul(x,pt)|0))<<13)|0;c=((n=n+Math.imul(x,gt)|0)+(s>>>13)|0)+(Bt>>>26)|0,Bt&=67108863,r=Math.imul(z,nt),s=(s=Math.imul(z,ot))+Math.imul(D,nt)|0,n=Math.imul(D,ot),r=r+Math.imul(M,ht)|0,s=(s=s+Math.imul(M,ct)|0)+Math.imul(U,ht)|0,n=n+Math.imul(U,ct)|0,r=r+Math.imul(N,ut)|0,s=(s=s+Math.imul(N,ft)|0)+Math.imul(T,ut)|0,n=n+Math.imul(T,ft)|0;var Pt=(c+(r=r+Math.imul(_,pt)|0)|0)+((8191&(s=(s=s+Math.imul(_,gt)|0)+Math.imul(B,pt)|0))<<13)|0;c=((n=n+Math.imul(B,gt)|0)+(s>>>13)|0)+(Pt>>>26)|0,Pt&=67108863,r=Math.imul(z,ht),s=(s=Math.imul(z,ct))+Math.imul(D,ht)|0,n=Math.imul(D,ct),r=r+Math.imul(M,ut)|0,s=(s=s+Math.imul(M,ft)|0)+Math.imul(U,ut)|0,n=n+Math.imul(U,ft)|0;var Nt=(c+(r=r+Math.imul(N,pt)|0)|0)+((8191&(s=(s=s+Math.imul(N,gt)|0)+Math.imul(T,pt)|0))<<13)|0;c=((n=n+Math.imul(T,gt)|0)+(s>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,r=Math.imul(z,ut),s=(s=Math.imul(z,ft))+Math.imul(D,ut)|0,n=Math.imul(D,ft);var Tt=(c+(r=r+Math.imul(M,pt)|0)|0)+((8191&(s=(s=s+Math.imul(M,gt)|0)+Math.imul(U,pt)|0))<<13)|0;c=((n=n+Math.imul(U,gt)|0)+(s>>>13)|0)+(Tt>>>26)|0,Tt&=67108863;var Ct=(c+(r=Math.imul(z,pt))|0)+((8191&(s=(s=Math.imul(z,gt))+Math.imul(D,pt)|0))<<13)|0;return c=((n=Math.imul(D,gt))+(s>>>13)|0)+(Ct>>>26)|0,Ct&=67108863,h[0]=mt,h[1]=bt,h[2]=wt,h[3]=yt,h[4]=vt,h[5]=kt,h[6]=Et,h[7]=St,h[8]=Rt,h[9]=It,h[10]=At,h[11]=xt,h[12]=Ot,h[13]=_t,h[14]=Bt,h[15]=Pt,h[16]=Nt,h[17]=Tt,h[18]=Ct,0!==c&&(h[19]=c,i.length++),i};function p(t,e,i){return(new g).mulp(t,e,i)}function g(t,e){this.x=t,this.y=e}Math.imul||(d=f),n.prototype.mulTo=function(t,e){var i=this.length+t.length;return 10===this.length&&10===t.length?d(this,t,e):i<63?f(this,t,e):i<1024?function(t,e,i){i.negative=e.negative^t.negative,i.length=t.length+e.length;for(var r=0,s=0,n=0;n<i.length-1;n++){var o=s;s=0;for(var a=67108863&r,h=Math.min(n,e.length-1),c=Math.max(0,n-t.length+1);c<=h;c++){var l=n-c,u=(0|t.words[l])*(0|e.words[c]),f=67108863&u;a=67108863&(f=f+a|0),s+=(o=(o=o+(u/67108864|0)|0)+(f>>>26)|0)>>>26,o&=67108863}i.words[n]=a,r=o,o=s}return 0!==r?i.words[n]=r:i.length--,i.strip()}(this,t,e):p(this,t,e)},g.prototype.makeRBT=function(t){for(var e=new Array(t),i=n.prototype._countBits(t)-1,r=0;r<t;r++)e[r]=this.revBin(r,i,t);return e},g.prototype.revBin=function(t,e,i){if(0===t||t===i-1)return t;for(var r=0,s=0;s<e;s++)r|=(1&t)<<e-s-1,t>>=1;return r},g.prototype.permute=function(t,e,i,r,s,n){for(var o=0;o<n;o++)r[o]=e[t[o]],s[o]=i[t[o]]},g.prototype.transform=function(t,e,i,r,s,n){this.permute(n,t,e,i,r,s);for(var o=1;o<s;o<<=1)for(var a=o<<1,h=Math.cos(2*Math.PI/a),c=Math.sin(2*Math.PI/a),l=0;l<s;l+=a)for(var u=h,f=c,d=0;d<o;d++){var p=i[l+d],g=r[l+d],m=i[l+d+o],b=r[l+d+o],w=u*m-f*b;b=u*b+f*m,m=w,i[l+d]=p+m,r[l+d]=g+b,i[l+d+o]=p-m,r[l+d+o]=g-b,d!==a&&(w=h*u-c*f,f=h*f+c*u,u=w)}},g.prototype.guessLen13b=function(t,e){var i=1|Math.max(e,t),r=1&i,s=0;for(i=i/2|0;i;i>>>=1)s++;return 1<<s+1+r},g.prototype.conjugate=function(t,e,i){if(!(i<=1))for(var r=0;r<i/2;r++){var s=t[r];t[r]=t[i-r-1],t[i-r-1]=s,s=e[r],e[r]=-e[i-r-1],e[i-r-1]=-s}},g.prototype.normalize13b=function(t,e){for(var i=0,r=0;r<e/2;r++){var s=8192*Math.round(t[2*r+1]/e)+Math.round(t[2*r]/e)+i;t[r]=67108863&s,i=s<67108864?0:s/67108864|0}return t},g.prototype.convert13b=function(t,e,i,s){for(var n=0,o=0;o<e;o++)n+=0|t[o],i[2*o]=8191&n,n>>>=13,i[2*o+1]=8191&n,n>>>=13;for(o=2*e;o<s;++o)i[o]=0;r(0===n),r(0==(-8192&n))},g.prototype.stub=function(t){for(var e=new Array(t),i=0;i<t;i++)e[i]=0;return e},g.prototype.mulp=function(t,e,i){var r=2*this.guessLen13b(t.length,e.length),s=this.makeRBT(r),n=this.stub(r),o=new Array(r),a=new Array(r),h=new Array(r),c=new Array(r),l=new Array(r),u=new Array(r),f=i.words;f.length=r,this.convert13b(t.words,t.length,o,r),this.convert13b(e.words,e.length,c,r),this.transform(o,n,a,h,r,s),this.transform(c,n,l,u,r,s);for(var d=0;d<r;d++){var p=a[d]*l[d]-h[d]*u[d];h[d]=a[d]*u[d]+h[d]*l[d],a[d]=p}return this.conjugate(a,h,r),this.transform(a,h,f,n,r,s),this.conjugate(f,n,r),this.normalize13b(f,r),i.negative=t.negative^e.negative,i.length=t.length+e.length,i.strip()},n.prototype.mul=function(t){var e=new n(null);return e.words=new Array(this.length+t.length),this.mulTo(t,e)},n.prototype.mulf=function(t){var e=new n(null);return e.words=new Array(this.length+t.length),p(this,t,e)},n.prototype.imul=function(t){return this.clone().mulTo(t,this)},n.prototype.imuln=function(t){r("number"==typeof t),r(t<67108864);for(var e=0,i=0;i<this.length;i++){var s=(0|this.words[i])*t,n=(67108863&s)+(67108863&e);e>>=26,e+=s/67108864|0,e+=n>>>26,this.words[i]=67108863&n}return 0!==e&&(this.words[i]=e,this.length++),this},n.prototype.muln=function(t){return this.clone().imuln(t)},n.prototype.sqr=function(){return this.mul(this)},n.prototype.isqr=function(){return this.imul(this.clone())},n.prototype.pow=function(t){var e=function(t){for(var e=new Array(t.bitLength()),i=0;i<e.length;i++){var r=i/26|0,s=i%26;e[i]=(t.words[r]&1<<s)>>>s}return e}(t);if(0===e.length)return new n(1);for(var i=this,r=0;r<e.length&&0===e[r];r++,i=i.sqr());if(++r<e.length)for(var s=i.sqr();r<e.length;r++,s=s.sqr())0!==e[r]&&(i=i.mul(s));return i},n.prototype.iushln=function(t){r("number"==typeof t&&t>=0);var e,i=t%26,s=(t-i)/26,n=67108863>>>26-i<<26-i;if(0!==i){var o=0;for(e=0;e<this.length;e++){var a=this.words[e]&n,h=(0|this.words[e])-a<<i;this.words[e]=h|o,o=a>>>26-i}o&&(this.words[e]=o,this.length++)}if(0!==s){for(e=this.length-1;e>=0;e--)this.words[e+s]=this.words[e];for(e=0;e<s;e++)this.words[e]=0;this.length+=s}return this.strip()},n.prototype.ishln=function(t){return r(0===this.negative),this.iushln(t)},n.prototype.iushrn=function(t,e,i){var s;r("number"==typeof t&&t>=0),s=e?(e-e%26)/26:0;var n=t%26,o=Math.min((t-n)/26,this.length),a=67108863^67108863>>>n<<n,h=i;if(s-=o,s=Math.max(0,s),h){for(var c=0;c<o;c++)h.words[c]=this.words[c];h.length=o}if(0===o);else if(this.length>o)for(this.length-=o,c=0;c<this.length;c++)this.words[c]=this.words[c+o];else this.words[0]=0,this.length=1;var l=0;for(c=this.length-1;c>=0&&(0!==l||c>=s);c--){var u=0|this.words[c];this.words[c]=l<<26-n|u>>>n,l=u&a}return h&&0!==l&&(h.words[h.length++]=l),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},n.prototype.ishrn=function(t,e,i){return r(0===this.negative),this.iushrn(t,e,i)},n.prototype.shln=function(t){return this.clone().ishln(t)},n.prototype.ushln=function(t){return this.clone().iushln(t)},n.prototype.shrn=function(t){return this.clone().ishrn(t)},n.prototype.ushrn=function(t){return this.clone().iushrn(t)},n.prototype.testn=function(t){r("number"==typeof t&&t>=0);var e=t%26,i=(t-e)/26,s=1<<e;return!(this.length<=i||!(this.words[i]&s))},n.prototype.imaskn=function(t){r("number"==typeof t&&t>=0);var e=t%26,i=(t-e)/26;if(r(0===this.negative,"imaskn works only with positive numbers"),this.length<=i)return this;if(0!==e&&i++,this.length=Math.min(i,this.length),0!==e){var s=67108863^67108863>>>e<<e;this.words[this.length-1]&=s}return this.strip()},n.prototype.maskn=function(t){return this.clone().imaskn(t)},n.prototype.iaddn=function(t){return r("number"==typeof t),r(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},n.prototype._iaddn=function(t){this.words[0]+=t;for(var e=0;e<this.length&&this.words[e]>=67108864;e++)this.words[e]-=67108864,e===this.length-1?this.words[e+1]=1:this.words[e+1]++;return this.length=Math.max(this.length,e+1),this},n.prototype.isubn=function(t){if(r("number"==typeof t),r(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var e=0;e<this.length&&this.words[e]<0;e++)this.words[e]+=67108864,this.words[e+1]-=1;return this.strip()},n.prototype.addn=function(t){return this.clone().iaddn(t)},n.prototype.subn=function(t){return this.clone().isubn(t)},n.prototype.iabs=function(){return this.negative=0,this},n.prototype.abs=function(){return this.clone().iabs()},n.prototype._ishlnsubmul=function(t,e,i){var s,n,o=t.length+i;this._expand(o);var a=0;for(s=0;s<t.length;s++){n=(0|this.words[s+i])+a;var h=(0|t.words[s])*e;a=((n-=67108863&h)>>26)-(h/67108864|0),this.words[s+i]=67108863&n}for(;s<this.length-i;s++)a=(n=(0|this.words[s+i])+a)>>26,this.words[s+i]=67108863&n;if(0===a)return this.strip();for(r(-1===a),a=0,s=0;s<this.length;s++)a=(n=-(0|this.words[s])+a)>>26,this.words[s]=67108863&n;return this.negative=1,this.strip()},n.prototype._wordDiv=function(t,e){var i=(this.length,t.length),r=this.clone(),s=t,o=0|s.words[s.length-1];0!=(i=26-this._countBits(o))&&(s=s.ushln(i),r.iushln(i),o=0|s.words[s.length-1]);var a,h=r.length-s.length;if("mod"!==e){(a=new n(null)).length=h+1,a.words=new Array(a.length);for(var c=0;c<a.length;c++)a.words[c]=0}var l=r.clone()._ishlnsubmul(s,1,h);0===l.negative&&(r=l,a&&(a.words[h]=1));for(var u=h-1;u>=0;u--){var f=67108864*(0|r.words[s.length+u])+(0|r.words[s.length+u-1]);for(f=Math.min(f/o|0,67108863),r._ishlnsubmul(s,f,u);0!==r.negative;)f--,r.negative=0,r._ishlnsubmul(s,1,u),r.isZero()||(r.negative^=1);a&&(a.words[u]=f)}return a&&a.strip(),r.strip(),"div"!==e&&0!==i&&r.iushrn(i),{div:a||null,mod:r}},n.prototype.divmod=function(t,e,i){return r(!t.isZero()),this.isZero()?{div:new n(0),mod:new n(0)}:0!==this.negative&&0===t.negative?(a=this.neg().divmod(t,e),"mod"!==e&&(s=a.div.neg()),"div"!==e&&(o=a.mod.neg(),i&&0!==o.negative&&o.iadd(t)),{div:s,mod:o}):0===this.negative&&0!==t.negative?(a=this.divmod(t.neg(),e),"mod"!==e&&(s=a.div.neg()),{div:s,mod:a.mod}):0!=(this.negative&t.negative)?(a=this.neg().divmod(t.neg(),e),"div"!==e&&(o=a.mod.neg(),i&&0!==o.negative&&o.isub(t)),{div:a.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new n(0),mod:this}:1===t.length?"div"===e?{div:this.divn(t.words[0]),mod:null}:"mod"===e?{div:null,mod:new n(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new n(this.modn(t.words[0]))}:this._wordDiv(t,e);var s,o,a},n.prototype.div=function(t){return this.divmod(t,"div",!1).div},n.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},n.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},n.prototype.divRound=function(t){var e=this.divmod(t);if(e.mod.isZero())return e.div;var i=0!==e.div.negative?e.mod.isub(t):e.mod,r=t.ushrn(1),s=t.andln(1),n=i.cmp(r);return n<0||1===s&&0===n?e.div:0!==e.div.negative?e.div.isubn(1):e.div.iaddn(1)},n.prototype.modn=function(t){r(t<=67108863);for(var e=(1<<26)%t,i=0,s=this.length-1;s>=0;s--)i=(e*i+(0|this.words[s]))%t;return i},n.prototype.idivn=function(t){r(t<=67108863);for(var e=0,i=this.length-1;i>=0;i--){var s=(0|this.words[i])+67108864*e;this.words[i]=s/t|0,e=s%t}return this.strip()},n.prototype.divn=function(t){return this.clone().idivn(t)},n.prototype.egcd=function(t){r(0===t.negative),r(!t.isZero());var e=this,i=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var s=new n(1),o=new n(0),a=new n(0),h=new n(1),c=0;e.isEven()&&i.isEven();)e.iushrn(1),i.iushrn(1),++c;for(var l=i.clone(),u=e.clone();!e.isZero();){for(var f=0,d=1;0==(e.words[0]&d)&&f<26;++f,d<<=1);if(f>0)for(e.iushrn(f);f-- >0;)(s.isOdd()||o.isOdd())&&(s.iadd(l),o.isub(u)),s.iushrn(1),o.iushrn(1);for(var p=0,g=1;0==(i.words[0]&g)&&p<26;++p,g<<=1);if(p>0)for(i.iushrn(p);p-- >0;)(a.isOdd()||h.isOdd())&&(a.iadd(l),h.isub(u)),a.iushrn(1),h.iushrn(1);e.cmp(i)>=0?(e.isub(i),s.isub(a),o.isub(h)):(i.isub(e),a.isub(s),h.isub(o))}return{a:a,b:h,gcd:i.iushln(c)}},n.prototype._invmp=function(t){r(0===t.negative),r(!t.isZero());var e=this,i=t.clone();e=0!==e.negative?e.umod(t):e.clone();for(var s,o=new n(1),a=new n(0),h=i.clone();e.cmpn(1)>0&&i.cmpn(1)>0;){for(var c=0,l=1;0==(e.words[0]&l)&&c<26;++c,l<<=1);if(c>0)for(e.iushrn(c);c-- >0;)o.isOdd()&&o.iadd(h),o.iushrn(1);for(var u=0,f=1;0==(i.words[0]&f)&&u<26;++u,f<<=1);if(u>0)for(i.iushrn(u);u-- >0;)a.isOdd()&&a.iadd(h),a.iushrn(1);e.cmp(i)>=0?(e.isub(i),o.isub(a)):(i.isub(e),a.isub(o))}return(s=0===e.cmpn(1)?o:a).cmpn(0)<0&&s.iadd(t),s},n.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var e=this.clone(),i=t.clone();e.negative=0,i.negative=0;for(var r=0;e.isEven()&&i.isEven();r++)e.iushrn(1),i.iushrn(1);for(;;){for(;e.isEven();)e.iushrn(1);for(;i.isEven();)i.iushrn(1);var s=e.cmp(i);if(s<0){var n=e;e=i,i=n}else if(0===s||0===i.cmpn(1))break;e.isub(i)}return i.iushln(r)},n.prototype.invm=function(t){return this.egcd(t).a.umod(t)},n.prototype.isEven=function(){return 0==(1&this.words[0])},n.prototype.isOdd=function(){return 1==(1&this.words[0])},n.prototype.andln=function(t){return this.words[0]&t},n.prototype.bincn=function(t){r("number"==typeof t);var e=t%26,i=(t-e)/26,s=1<<e;if(this.length<=i)return this._expand(i+1),this.words[i]|=s,this;for(var n=s,o=i;0!==n&&o<this.length;o++){var a=0|this.words[o];n=(a+=n)>>>26,a&=67108863,this.words[o]=a}return 0!==n&&(this.words[o]=n,this.length++),this},n.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},n.prototype.cmpn=function(t){var e,i=t<0;if(0!==this.negative&&!i)return-1;if(0===this.negative&&i)return 1;if(this.strip(),this.length>1)e=1;else{i&&(t=-t),r(t<=67108863,"Number is too big");var s=0|this.words[0];e=s===t?0:s<t?-1:1}return 0!==this.negative?0|-e:e},n.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var e=this.ucmp(t);return 0!==this.negative?0|-e:e},n.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var e=0,i=this.length-1;i>=0;i--){var r=0|this.words[i],s=0|t.words[i];if(r!==s){r<s?e=-1:r>s&&(e=1);break}}return e},n.prototype.gtn=function(t){return 1===this.cmpn(t)},n.prototype.gt=function(t){return 1===this.cmp(t)},n.prototype.gten=function(t){return this.cmpn(t)>=0},n.prototype.gte=function(t){return this.cmp(t)>=0},n.prototype.ltn=function(t){return-1===this.cmpn(t)},n.prototype.lt=function(t){return-1===this.cmp(t)},n.prototype.lten=function(t){return this.cmpn(t)<=0},n.prototype.lte=function(t){return this.cmp(t)<=0},n.prototype.eqn=function(t){return 0===this.cmpn(t)},n.prototype.eq=function(t){return 0===this.cmp(t)},n.red=function(t){return new E(t)},n.prototype.toRed=function(t){return r(!this.red,"Already a number in reduction context"),r(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},n.prototype.fromRed=function(){return r(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},n.prototype._forceRed=function(t){return this.red=t,this},n.prototype.forceRed=function(t){return r(!this.red,"Already a number in reduction context"),this._forceRed(t)},n.prototype.redAdd=function(t){return r(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},n.prototype.redIAdd=function(t){return r(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},n.prototype.redSub=function(t){return r(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},n.prototype.redISub=function(t){return r(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},n.prototype.redShl=function(t){return r(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},n.prototype.redMul=function(t){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},n.prototype.redIMul=function(t){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},n.prototype.redSqr=function(){return r(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},n.prototype.redISqr=function(){return r(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},n.prototype.redSqrt=function(){return r(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},n.prototype.redInvm=function(){return r(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},n.prototype.redNeg=function(){return r(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},n.prototype.redPow=function(t){return r(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var m={k256:null,p224:null,p192:null,p25519:null};function b(t,e){this.name=t,this.p=new n(e,16),this.n=this.p.bitLength(),this.k=new n(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function w(){b.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function y(){b.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function v(){b.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function k(){b.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function E(t){if("string"==typeof t){var e=n._prime(t);this.m=e.p,this.prime=e}else r(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function S(t){E.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new n(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}b.prototype._tmp=function(){var t=new n(null);return t.words=new Array(Math.ceil(this.n/13)),t},b.prototype.ireduce=function(t){var e,i=t;do{this.split(i,this.tmp),e=(i=(i=this.imulK(i)).iadd(this.tmp)).bitLength()}while(e>this.n);var r=e<this.n?-1:i.ucmp(this.p);return 0===r?(i.words[0]=0,i.length=1):r>0?i.isub(this.p):i.strip(),i},b.prototype.split=function(t,e){t.iushrn(this.n,0,e)},b.prototype.imulK=function(t){return t.imul(this.k)},s(w,b),w.prototype.split=function(t,e){for(var i=Math.min(t.length,9),r=0;r<i;r++)e.words[r]=t.words[r];if(e.length=i,t.length<=9)return t.words[0]=0,void(t.length=1);var s=t.words[9];for(e.words[e.length++]=4194303&s,r=10;r<t.length;r++){var n=0|t.words[r];t.words[r-10]=(4194303&n)<<4|s>>>22,s=n}s>>>=22,t.words[r-10]=s,0===s&&t.length>10?t.length-=10:t.length-=9},w.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var e=0,i=0;i<t.length;i++){var r=0|t.words[i];e+=977*r,t.words[i]=67108863&e,e=64*r+(e/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},s(y,b),s(v,b),s(k,b),k.prototype.imulK=function(t){for(var e=0,i=0;i<t.length;i++){var r=19*(0|t.words[i])+e,s=67108863&r;r>>>=26,t.words[i]=s,e=r}return 0!==e&&(t.words[t.length++]=e),t},n._prime=function(t){if(m[t])return m[t];var e;if("k256"===t)e=new w;else if("p224"===t)e=new y;else if("p192"===t)e=new v;else{if("p25519"!==t)throw new Error("Unknown prime "+t);e=new k}return m[t]=e,e},E.prototype._verify1=function(t){r(0===t.negative,"red works only with positives"),r(t.red,"red works only with red numbers")},E.prototype._verify2=function(t,e){r(0==(t.negative|e.negative),"red works only with positives"),r(t.red&&t.red===e.red,"red works only with red numbers")},E.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},E.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},E.prototype.add=function(t,e){this._verify2(t,e);var i=t.add(e);return i.cmp(this.m)>=0&&i.isub(this.m),i._forceRed(this)},E.prototype.iadd=function(t,e){this._verify2(t,e);var i=t.iadd(e);return i.cmp(this.m)>=0&&i.isub(this.m),i},E.prototype.sub=function(t,e){this._verify2(t,e);var i=t.sub(e);return i.cmpn(0)<0&&i.iadd(this.m),i._forceRed(this)},E.prototype.isub=function(t,e){this._verify2(t,e);var i=t.isub(e);return i.cmpn(0)<0&&i.iadd(this.m),i},E.prototype.shl=function(t,e){return this._verify1(t),this.imod(t.ushln(e))},E.prototype.imul=function(t,e){return this._verify2(t,e),this.imod(t.imul(e))},E.prototype.mul=function(t,e){return this._verify2(t,e),this.imod(t.mul(e))},E.prototype.isqr=function(t){return this.imul(t,t.clone())},E.prototype.sqr=function(t){return this.mul(t,t)},E.prototype.sqrt=function(t){if(t.isZero())return t.clone();var e=this.m.andln(3);if(r(e%2==1),3===e){var i=this.m.add(new n(1)).iushrn(2);return this.pow(t,i)}for(var s=this.m.subn(1),o=0;!s.isZero()&&0===s.andln(1);)o++,s.iushrn(1);r(!s.isZero());var a=new n(1).toRed(this),h=a.redNeg(),c=this.m.subn(1).iushrn(1),l=this.m.bitLength();for(l=new n(2*l*l).toRed(this);0!==this.pow(l,c).cmp(h);)l.redIAdd(h);for(var u=this.pow(l,s),f=this.pow(t,s.addn(1).iushrn(1)),d=this.pow(t,s),p=o;0!==d.cmp(a);){for(var g=d,m=0;0!==g.cmp(a);m++)g=g.redSqr();r(m<p);var b=this.pow(u,new n(1).iushln(p-m-1));f=f.redMul(b),u=b.redSqr(),d=d.redMul(u),p=m}return f},E.prototype.invm=function(t){var e=t._invmp(this.m);return 0!==e.negative?(e.negative=0,this.imod(e).redNeg()):this.imod(e)},E.prototype.pow=function(t,e){if(e.isZero())return new n(1).toRed(this);if(0===e.cmpn(1))return t.clone();var i=new Array(16);i[0]=new n(1).toRed(this),i[1]=t;for(var r=2;r<i.length;r++)i[r]=this.mul(i[r-1],t);var s=i[0],o=0,a=0,h=e.bitLength()%26;for(0===h&&(h=26),r=e.length-1;r>=0;r--){for(var c=e.words[r],l=h-1;l>=0;l--){var u=c>>l&1;s!==i[0]&&(s=this.sqr(s)),0!==u||0!==o?(o<<=1,o|=u,(4==++a||0===r&&0===l)&&(s=this.mul(s,i[o]),a=0,o=0)):a=0}h=26}return s},E.prototype.convertTo=function(t){var e=t.umod(this.m);return e===t?e.clone():e},E.prototype.convertFrom=function(t){var e=t.clone();return e.red=null,e},n.mont=function(t){return new S(t)},s(S,E),S.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},S.prototype.convertFrom=function(t){var e=this.imod(t.mul(this.rinv));return e.red=null,e},S.prototype.imul=function(t,e){if(t.isZero()||e.isZero())return t.words[0]=0,t.length=1,t;var i=t.imul(e),r=i.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),s=i.isub(r).iushrn(this.shift),n=s;return s.cmp(this.m)>=0?n=s.isub(this.m):s.cmpn(0)<0&&(n=s.iadd(this.m)),n._forceRed(this)},S.prototype.mul=function(t,e){if(t.isZero()||e.isZero())return new n(0)._forceRed(this);var i=t.mul(e),r=i.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),s=i.isub(r).iushrn(this.shift),o=s;return s.cmp(this.m)>=0?o=s.isub(this.m):s.cmpn(0)<0&&(o=s.iadd(this.m)),o._forceRed(this)},S.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t,this)}).call(this,i(70)(t))},function(t,e,i){"use strict";
/*!
 * hash256.js - hash256 for bcrypto
 * Copyright (c) 2017-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */t.exports=i(99)},function(t,e,i){"use strict";(function(e){
/*!
 * script.js - script interpreter for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(2),n=i(100),o=i(101),a=i(19),h=i(24),c=i(9),l=i(15),u=i(3),f=i(25),d=i(135),p=i(136),g=i(40),m=i(33),b=i(32),w=i(26),y=i(12),v=w.opcodes,k=w.types,{encoding:E}=s,S=e.alloc(0);class R{constructor(t){this.raw=S,this.code=[],t&&this.fromOptions(t)}get length(){return this.code.length}set length(t){this.code.length=t}fromOptions(t){if(r(t,"Script data is required."),e.isBuffer(t))return this.fromRaw(t);if(Array.isArray(t))return this.fromArray(t);if(t.raw){if(!t.code)return this.fromRaw(t.raw);r(e.isBuffer(t.raw),"Raw must be a Buffer."),this.raw=t.raw}if(t.code){if(!t.raw)return this.fromArray(t.code);r(Array.isArray(t.code),"Code must be an array."),this.code=t.code}return this}static fromOptions(t){return(new this).fromOptions(t)}values(){return this.code.values()}entries(){return this.code.entries()}[Symbol.iterator](){return this.code[Symbol.iterator]()}toArray(){return this.code.slice()}fromArray(t){r(Array.isArray(t)),this.clear();for(const e of t)this.push(e);return this.compile()}static fromArray(t){return(new this).fromArray(t)}toItems(){const t=[];for(const e of this.code){const i=e.toPush();if(!i)throw new Error("Non-push opcode in script.");t.push(i)}return t}fromItems(t){r(Array.isArray(t)),this.clear();for(const e of t)this.pushData(e);return this.compile()}static fromItems(t){return(new this).fromItems(t)}toStack(){return new g(this.toItems())}fromStack(t){return this.fromItems(t.items)}static fromStack(t){return(new this).fromStack(t)}clone(){return(new this.constructor).inject(this)}inject(t){return this.raw=t.raw,this.code=t.code.slice(),this}equals(t){return r(R.isScript(t)),this.raw.equals(t.raw)}compare(t){return r(R.isScript(t)),this.raw.compare(t.raw)}clear(){return this.raw=S,this.code.length=0,this}inspect(){return`<Script: ${this.toString()}>`}toString(){const t=[];for(const e of this.code)t.push(e.toFormat());return t.join(" ")}toASM(t){this.isNulldata()&&(t=!1);const e=[];for(const i of this.code)e.push(i.toASM(t));return e.join(" ")}compile(){if(0===this.code.length)return this.clear();let t=0;for(const e of this.code)t+=e.getSize();const e=s.write(t);for(const t of this.code)t.toWriter(e);return this.raw=e.render(),this}toWriter(t){return t.writeVarBytes(this.raw),t}toRaw(){return this.raw}toJSON(){return this.toRaw().toString("hex")}fromJSON(t){return r("string"==typeof t,"Code must be a string."),this.fromRaw(e.from(t,"hex"))}static fromJSON(t){return(new this).fromJSON(t)}getSubscript(t){if(0===t)return this.clone();const e=new R;for(let i=t;i<this.code.length;i++){const t=this.code[i];if(-1===t.value)break;e.code.push(t)}return e.compile()}removeSeparators(){let t=!1;for(const e of this.code){if(-1===e.value)break;if(e.value===v.OP_CODESEPARATOR){t=!0;break}}if(!t)return this;const e=new R;for(const t of this.code){if(-1===t.value)break;t.value!==v.OP_CODESEPARATOR&&e.code.push(t)}return e.compile()}execute(t,e,i,s,l,f){if(null==e&&(e=R.flags.STANDARD_VERIFY_FLAGS),null==f&&(f=0),this.raw.length>u.MAX_SCRIPT_SIZE)throw new m("SCRIPT_SIZE");const d=[],p=[];let g=0,w=0,y=0,k=!1;e&R.flags.VERIFY_MINIMALDATA&&(k=!0);for(let E=0;E<this.code.length;E++){const S=this.code[E];if(-1===S.value)throw new m("BAD_OPCODE",S,E);if(S.data&&S.data.length>u.MAX_SCRIPT_PUSH)throw new m("PUSH_SIZE",S,E);if(S.value>v.OP_16&&++w>u.MAX_SCRIPT_OPS)throw new m("OP_COUNT",S,E);if(S.isDisabled())throw new m("DISABLED_OPCODE",S,E);if(!y||S.isBranch())if(S.data){if(k&&!S.isMinimal())throw new m("MINIMALDATA",S,E);if(t.push(S.data),t.length+p.length>u.MAX_SCRIPT_STACK)throw new m("STACK_SIZE",S,E)}else{switch(S.value){case v.OP_0:t.pushInt(0);break;case v.OP_1NEGATE:t.pushInt(-1);break;case v.OP_1:case v.OP_2:case v.OP_3:case v.OP_4:case v.OP_5:case v.OP_6:case v.OP_7:case v.OP_8:case v.OP_9:case v.OP_10:case v.OP_11:case v.OP_12:case v.OP_13:case v.OP_14:case v.OP_15:case v.OP_16:t.pushInt(S.value-80);break;case v.OP_NOP:break;case v.OP_CHECKLOCKTIMEVERIFY:{if(!(e&R.flags.VERIFY_CHECKLOCKTIMEVERIFY)){if(e&R.flags.VERIFY_DISCOURAGE_UPGRADABLE_NOPS)throw new m("DISCOURAGE_UPGRADABLE_NOPS",S,E);break}if(!i)throw new m("UNKNOWN_ERROR","No TX passed in.");if(0===t.length)throw new m("INVALID_STACK_OPERATION",S,E);const r=t.getNum(-1,k,5);if(r.isNeg())throw new m("NEGATIVE_LOCKTIME",S,E);const n=r.toDouble();if(!i.verifyLocktime(s,n))throw new m("UNSATISFIED_LOCKTIME",S,E);break}case v.OP_CHECKSEQUENCEVERIFY:{if(!(e&R.flags.VERIFY_CHECKSEQUENCEVERIFY)){if(e&R.flags.VERIFY_DISCOURAGE_UPGRADABLE_NOPS)throw new m("DISCOURAGE_UPGRADABLE_NOPS",S,E);break}if(!i)throw new m("UNKNOWN_ERROR","No TX passed in.");if(0===t.length)throw new m("INVALID_STACK_OPERATION",S,E);const r=t.getNum(-1,k,5);if(r.isNeg())throw new m("NEGATIVE_LOCKTIME",S,E);const n=r.toDouble();if(!i.verifySequence(s,n))throw new m("UNSATISFIED_LOCKTIME",S,E);break}case v.OP_NOP1:case v.OP_NOP4:case v.OP_NOP5:case v.OP_NOP6:case v.OP_NOP7:case v.OP_NOP8:case v.OP_NOP9:case v.OP_NOP10:if(e&R.flags.VERIFY_DISCOURAGE_UPGRADABLE_NOPS)throw new m("DISCOURAGE_UPGRADABLE_NOPS",S,E);break;case v.OP_IF:case v.OP_NOTIF:{let i=!1;if(!y){if(t.length<1)throw new m("UNBALANCED_CONDITIONAL",S,E);if(1===f&&e&R.flags.VERIFY_MINIMALIF){const e=t.get(-1);if(e.length>1)throw new m("MINIMALIF");if(1===e.length&&1!==e[0])throw new m("MINIMALIF")}i=t.getBool(-1),S.value===v.OP_NOTIF&&(i=!i),t.pop()}d.push(i),i||(y+=1);break}case v.OP_ELSE:if(0===d.length)throw new m("UNBALANCED_CONDITIONAL",S,E);d[d.length-1]=!d[d.length-1],d[d.length-1]?y-=1:y+=1;break;case v.OP_ENDIF:if(0===d.length)throw new m("UNBALANCED_CONDITIONAL",S,E);d.pop()||(y-=1);break;case v.OP_VERIFY:if(0===t.length)throw new m("INVALID_STACK_OPERATION",S,E);if(!t.getBool(-1))throw new m("VERIFY",S,E);t.pop();break;case v.OP_RETURN:throw new m("OP_RETURN",S,E);case v.OP_TOALTSTACK:if(0===t.length)throw new m("INVALID_STACK_OPERATION",S,E);p.push(t.pop());break;case v.OP_FROMALTSTACK:if(0===p.length)throw new m("INVALID_ALTSTACK_OPERATION",S,E);t.push(p.pop());break;case v.OP_2DROP:if(t.length<2)throw new m("INVALID_STACK_OPERATION",S,E);t.pop(),t.pop();break;case v.OP_2DUP:{if(t.length<2)throw new m("INVALID_STACK_OPERATION",S,E);const e=t.get(-2),i=t.get(-1);t.push(e),t.push(i);break}case v.OP_3DUP:{if(t.length<3)throw new m("INVALID_STACK_OPERATION",S,E);const e=t.get(-3),i=t.get(-2),r=t.get(-1);t.push(e),t.push(i),t.push(r);break}case v.OP_2OVER:{if(t.length<4)throw new m("INVALID_STACK_OPERATION",S,E);const e=t.get(-4),i=t.get(-3);t.push(e),t.push(i);break}case v.OP_2ROT:{if(t.length<6)throw new m("INVALID_STACK_OPERATION",S,E);const e=t.get(-6),i=t.get(-5);t.erase(-6,-4),t.push(e),t.push(i);break}case v.OP_2SWAP:if(t.length<4)throw new m("INVALID_STACK_OPERATION",S,E);t.swap(-4,-2),t.swap(-3,-1);break;case v.OP_IFDUP:if(0===t.length)throw new m("INVALID_STACK_OPERATION",S,E);if(t.getBool(-1)){const e=t.get(-1);t.push(e)}break;case v.OP_DEPTH:t.pushInt(t.length);break;case v.OP_DROP:if(0===t.length)throw new m("INVALID_STACK_OPERATION",S,E);t.pop();break;case v.OP_DUP:if(0===t.length)throw new m("INVALID_STACK_OPERATION",S,E);t.push(t.get(-1));break;case v.OP_NIP:if(t.length<2)throw new m("INVALID_STACK_OPERATION",S,E);t.remove(-2);break;case v.OP_OVER:if(t.length<2)throw new m("INVALID_STACK_OPERATION",S,E);t.push(t.get(-2));break;case v.OP_PICK:case v.OP_ROLL:{if(t.length<2)throw new m("INVALID_STACK_OPERATION",S,E);const e=t.getInt(-1,k,4);if(t.pop(),e<0||e>=t.length)throw new m("INVALID_STACK_OPERATION",S,E);const i=t.get(-e-1);S.value===v.OP_ROLL&&t.remove(-e-1),t.push(i);break}case v.OP_ROT:if(t.length<3)throw new m("INVALID_STACK_OPERATION",S,E);t.swap(-3,-2),t.swap(-2,-1);break;case v.OP_SWAP:if(t.length<2)throw new m("INVALID_STACK_OPERATION",S,E);t.swap(-2,-1);break;case v.OP_TUCK:if(t.length<2)throw new m("INVALID_STACK_OPERATION",S,E);t.insert(-2,t.get(-1));break;case v.OP_SIZE:if(t.length<1)throw new m("INVALID_STACK_OPERATION",S,E);t.pushInt(t.get(-1).length);break;case v.OP_EQUAL:case v.OP_EQUALVERIFY:{if(t.length<2)throw new m("INVALID_STACK_OPERATION",S,E);const e=t.get(-2),i=t.get(-1),r=e.equals(i);if(t.pop(),t.pop(),t.pushBool(r),S.value===v.OP_EQUALVERIFY){if(!r)throw new m("EQUALVERIFY",S,E);t.pop()}break}case v.OP_1ADD:case v.OP_1SUB:case v.OP_NEGATE:case v.OP_ABS:case v.OP_NOT:case v.OP_0NOTEQUAL:{if(t.length<1)throw new m("INVALID_STACK_OPERATION",S,E);let e,i=t.getNum(-1,k,4);switch(S.value){case v.OP_1ADD:i.iaddn(1);break;case v.OP_1SUB:i.isubn(1);break;case v.OP_NEGATE:i.ineg();break;case v.OP_ABS:i.iabs();break;case v.OP_NOT:e=i.isZero(),i=b.fromBool(e);break;case v.OP_0NOTEQUAL:e=!i.isZero(),i=b.fromBool(e);break;default:r(!1,"Fatal script error.")}t.pop(),t.pushNum(i);break}case v.OP_ADD:case v.OP_SUB:case v.OP_BOOLAND:case v.OP_BOOLOR:case v.OP_NUMEQUAL:case v.OP_NUMEQUALVERIFY:case v.OP_NUMNOTEQUAL:case v.OP_LESSTHAN:case v.OP_GREATERTHAN:case v.OP_LESSTHANOREQUAL:case v.OP_GREATERTHANOREQUAL:case v.OP_MIN:case v.OP_MAX:{if(t.length<2)throw new m("INVALID_STACK_OPERATION",S,E);const e=t.getNum(-2,k,4),i=t.getNum(-1,k,4);let s,n;switch(S.value){case v.OP_ADD:s=e.iadd(i);break;case v.OP_SUB:s=e.isub(i);break;case v.OP_BOOLAND:n=e.toBool()&&i.toBool(),s=b.fromBool(n);break;case v.OP_BOOLOR:n=e.toBool()||i.toBool(),s=b.fromBool(n);break;case v.OP_NUMEQUAL:case v.OP_NUMEQUALVERIFY:n=e.eq(i),s=b.fromBool(n);break;case v.OP_NUMNOTEQUAL:n=!e.eq(i),s=b.fromBool(n);break;case v.OP_LESSTHAN:n=e.lt(i),s=b.fromBool(n);break;case v.OP_GREATERTHAN:n=e.gt(i),s=b.fromBool(n);break;case v.OP_LESSTHANOREQUAL:n=e.lte(i),s=b.fromBool(n);break;case v.OP_GREATERTHANOREQUAL:n=e.gte(i),s=b.fromBool(n);break;case v.OP_MIN:s=b.min(e,i);break;case v.OP_MAX:s=b.max(e,i);break;default:r(!1,"Fatal script error.")}if(t.pop(),t.pop(),t.pushNum(s),S.value===v.OP_NUMEQUALVERIFY){if(!t.getBool(-1))throw new m("NUMEQUALVERIFY",S,E);t.pop()}break}case v.OP_WITHIN:{if(t.length<3)throw new m("INVALID_STACK_OPERATION",S,E);const e=t.getNum(-3,k,4),i=t.getNum(-2,k,4),r=t.getNum(-1,k,4),s=i.lte(e)&&e.lt(r);t.pop(),t.pop(),t.pop(),t.pushBool(s);break}case v.OP_RIPEMD160:if(0===t.length)throw new m("INVALID_STACK_OPERATION",S,E);t.push(n.digest(t.pop()));break;case v.OP_SHA1:if(0===t.length)throw new m("INVALID_STACK_OPERATION",S,E);t.push(o.digest(t.pop()));break;case v.OP_SHA256:if(0===t.length)throw new m("INVALID_STACK_OPERATION",S,E);t.push(a.digest(t.pop()));break;case v.OP_HASH160:if(0===t.length)throw new m("INVALID_STACK_OPERATION",S,E);t.push(h.digest(t.pop()));break;case v.OP_HASH256:if(0===t.length)throw new m("INVALID_STACK_OPERATION",S,E);t.push(c.digest(t.pop()));break;case v.OP_CODESEPARATOR:g=E+1;break;case v.OP_CHECKSIG:case v.OP_CHECKSIGVERIFY:{if(!i)throw new m("UNKNOWN_ERROR","No TX passed in.");if(t.length<2)throw new m("INVALID_STACK_OPERATION",S,E);const r=t.get(-2),n=t.get(-1),o=this.getSubscript(g);0===f&&o.findAndDelete(r),A(r,e),I(n,e,f);let a=!1;if(r.length>0){const t=r[r.length-1];a=x(i.signatureHash(s,o,l,t,f),r,n)}if(!a&&e&R.flags.VERIFY_NULLFAIL&&0!==r.length)throw new m("NULLFAIL",S,E);if(t.pop(),t.pop(),t.pushBool(a),S.value===v.OP_CHECKSIGVERIFY){if(!a)throw new m("CHECKSIGVERIFY",S,E);t.pop()}break}case v.OP_CHECKMULTISIG:case v.OP_CHECKMULTISIGVERIFY:{if(!i)throw new m("UNKNOWN_ERROR","No TX passed in.");let r=1;if(t.length<r)throw new m("INVALID_STACK_OPERATION",S,E);let n,o,a=t.getInt(-r,k,4),h=a+2;if(a<0||a>u.MAX_MULTISIG_PUBKEYS)throw new m("PUBKEY_COUNT",S,E);if((w+=a)>u.MAX_SCRIPT_OPS)throw new m("OP_COUNT",S,E);if(n=r+=1,r+=a,t.length<r)throw new m("INVALID_STACK_OPERATION",S,E);let c=t.getInt(-r,k,4);if(c<0||c>a)throw new m("SIG_COUNT",S,E);if(o=r+=1,r+=c,t.length<r)throw new m("INVALID_STACK_OPERATION",S,E);const d=this.getSubscript(g);for(let e=0;e<c;e++){const i=t.get(-o-e);0===f&&d.findAndDelete(i)}let p=!0;for(;p&&c>0;){const r=t.get(-o),h=t.get(-n);if(A(r,e),I(h,e,f),r.length>0){const t=r[r.length-1];x(i.signatureHash(s,d,l,t,f),r,h)&&(o+=1,c-=1)}n+=1,c>(a-=1)&&(p=!1)}for(;r>1;){if(!p&&e&R.flags.VERIFY_NULLFAIL&&0===h&&0!==t.get(-1).length)throw new m("NULLFAIL",S,E);h>0&&(h-=1),t.pop(),r-=1}if(t.length<1)throw new m("INVALID_STACK_OPERATION",S,E);if(e&R.flags.VERIFY_NULLDUMMY&&0!==t.get(-1).length)throw new m("SIG_NULLDUMMY",S,E);if(t.pop(),t.pushBool(p),S.value===v.OP_CHECKMULTISIGVERIFY){if(!p)throw new m("CHECKMULTISIGVERIFY",S,E);t.pop()}break}default:throw new m("BAD_OPCODE",S,E)}if(t.length+p.length>u.MAX_SCRIPT_STACK)throw new m("STACK_SIZE",S,E)}else if(t.length+p.length>u.MAX_SCRIPT_STACK)throw new m("STACK_SIZE",S,E)}if(0!==d.length)throw new m("UNBALANCED_CONDITIONAL")}findAndDelete(t){const e=p.fromPush(t);if(this.raw.length<e.getSize())return 0;let i=!1;for(const t of this.code){if(-1===t.value)break;if(t.equals(e)){i=!0;break}}if(!i)return 0;const r=[];let s=0;for(const t of this.code){if(-1===t.value)break;t.equals(e)?s+=1:r.push(t)}return this.code=r,this.compile(),s}indexOf(t){for(let e=0;e<this.code.length;e++){const i=this.code[e];if(-1===i.value)break;if(i.data&&i.data.equals(t))return e}return-1}isCode(){for(const t of this.code){if(-1===t.value)return!1;if(t.isDisabled())return!1;switch(t.value){case v.OP_RESERVED:case v.OP_NOP:case v.OP_VER:case v.OP_VERIF:case v.OP_VERNOTIF:case v.OP_RESERVED1:case v.OP_RESERVED2:case v.OP_NOP1:return!1}if(t.value>v.OP_CHECKSEQUENCEVERIFY)return!1}return!0}fromPubkey(t){return r(e.isBuffer(t)&&(33===t.length||65===t.length)),this.raw=e.allocUnsafe(1+t.length+1),this.raw[0]=t.length,t.copy(this.raw,1),this.raw[1+t.length]=v.OP_CHECKSIG,t=this.raw.slice(1,1+t.length),this.code.length=0,this.code.push(p.fromPush(t)),this.code.push(p.fromOp(v.OP_CHECKSIG)),this}static fromPubkey(t){return(new this).fromPubkey(t)}fromPubkeyhash(t){return r(e.isBuffer(t)&&20===t.length),this.raw=e.allocUnsafe(25),this.raw[0]=v.OP_DUP,this.raw[1]=v.OP_HASH160,this.raw[2]=20,t.copy(this.raw,3),this.raw[23]=v.OP_EQUALVERIFY,this.raw[24]=v.OP_CHECKSIG,t=this.raw.slice(3,23),this.code.length=0,this.code.push(p.fromOp(v.OP_DUP)),this.code.push(p.fromOp(v.OP_HASH160)),this.code.push(p.fromPush(t)),this.code.push(p.fromOp(v.OP_EQUALVERIFY)),this.code.push(p.fromOp(v.OP_CHECKSIG)),this}static fromPubkeyhash(t){return(new this).fromPubkeyhash(t)}fromMultisig(t,e,i){r((255&t)===t&&(255&e)===e),r(Array.isArray(i)),r(i.length===e,"`n` keys are required for multisig."),r(t>=1&&t<=e),r(e>=1&&e<=15),this.clear(),this.pushSmall(t);for(const t of i.slice().sort((t,e)=>t.compare(e)))this.pushData(t);return this.pushSmall(e),this.pushOp(v.OP_CHECKMULTISIG),this.compile()}static fromMultisig(t,e,i){return(new this).fromMultisig(t,e,i)}fromScripthash(t){return r(e.isBuffer(t)&&20===t.length),this.raw=e.allocUnsafe(23),this.raw[0]=v.OP_HASH160,this.raw[1]=20,t.copy(this.raw,2),this.raw[22]=v.OP_EQUAL,t=this.raw.slice(2,22),this.code.length=0,this.code.push(p.fromOp(v.OP_HASH160)),this.code.push(p.fromPush(t)),this.code.push(p.fromOp(v.OP_EQUAL)),this}static fromScripthash(t){return(new this).fromScripthash(t)}fromNulldata(t){return r(e.isBuffer(t)),r(t.length<=f.MAX_OP_RETURN,"Nulldata too large."),this.clear(),this.pushOp(v.OP_RETURN),this.pushData(t),this.compile()}static fromNulldata(t){return(new this).fromNulldata(t)}fromProgram(t,i){return r((255&t)===t&&t>=0&&t<=16),r(e.isBuffer(i)&&i.length>=2&&i.length<=40),this.raw=e.allocUnsafe(2+i.length),this.raw[0]=0===t?0:t+80,this.raw[1]=i.length,i.copy(this.raw,2),i=this.raw.slice(2,2+i.length),this.code.length=0,this.code.push(p.fromSmall(t)),this.code.push(p.fromPush(i)),this}static fromProgram(t,e){return(new this).fromProgram(t,e)}fromAddress(t){if("string"==typeof t&&(t=y.fromString(t)),r(t instanceof y,"Not an address."),t.isPubkeyhash())return this.fromPubkeyhash(t.hash);if(t.isScripthash())return this.fromScripthash(t.hash);if(t.isProgram())return this.fromProgram(t.version,t.hash);throw new Error("Unknown address type.")}static fromAddress(t){return(new this).fromAddress(t)}fromCommitment(t,e){const i=s.write(36);return i.writeU32BE(2854332909),i.writeHash(t),this.clear(),this.pushOp(v.OP_RETURN),this.pushData(i.render()),e&&this.pushData(e),this.compile()}static fromCommitment(t,e){return(new this).fromCommitment(t,e)}getRedeem(){let t=null;for(const e of this.code){if(-1===e.value)return null;if(e.value>v.OP_16)return null;t=e.data}return t?R.fromRaw(t):null}getType(){return this.isPubkey()?k.PUBKEY:this.isPubkeyhash()?k.PUBKEYHASH:this.isScripthash()?k.SCRIPTHASH:this.isWitnessPubkeyhash()?k.WITNESSPUBKEYHASH:this.isWitnessScripthash()?k.WITNESSSCRIPTHASH:this.isMultisig()?k.MULTISIG:this.isNulldata()?k.NULLDATA:k.NONSTANDARD}isUnknown(){return this.getType()===k.NONSTANDARD}isStandard(){const[t,e]=this.getMultisig();return-1!==t?!(e<1||e>3||t<1||t>e):this.isNulldata()?this.raw.length<=f.MAX_OP_RETURN_BYTES:this.getType()!==k.NONSTANDARD}getSize(){return this.raw.length}getVarSize(){return E.sizeVarBytes(this.raw)}getInputAddress(){return y.fromInputScript(this)}getAddress(){return y.fromScript(this)}hash160(t){let e=h.digest(this.toRaw());return"hex"===t&&(e=e.toString("hex")),e}sha256(t){let e=a.digest(this.toRaw());return"hex"===t&&(e=e.toString("hex")),e}isPubkey(t){if(t)return this.raw.length>=35&&(33===this.raw[0]||65===this.raw[0])&&this.raw[0]+2===this.raw.length&&this.raw[this.raw.length-1]===v.OP_CHECKSIG;if(2!==this.code.length)return!1;const e=this.getLength(0);return(33===e||65===e)&&this.getOp(1)===v.OP_CHECKSIG}getPubkey(t){return this.isPubkey(t)?t?this.raw.slice(1,1+this.raw[0]):this.getData(0):null}isPubkeyhash(t){return t||25===this.raw.length?25===this.raw.length&&this.raw[0]===v.OP_DUP&&this.raw[1]===v.OP_HASH160&&20===this.raw[2]&&this.raw[23]===v.OP_EQUALVERIFY&&this.raw[24]===v.OP_CHECKSIG:5===this.code.length&&this.getOp(0)===v.OP_DUP&&this.getOp(1)===v.OP_HASH160&&20===this.getLength(2)&&this.getOp(3)===v.OP_EQUALVERIFY&&this.getOp(4)===v.OP_CHECKSIG}getPubkeyhash(t){return this.isPubkeyhash(t)?t?this.raw.slice(3,23):this.getData(2):null}isMultisig(t){if(this.code.length<4||this.code.length>19)return!1;if(this.getOp(-1)!==v.OP_CHECKMULTISIG)return!1;const e=this.getSmall(0);if(e<1)return!1;const i=this.getSmall(-2);if(i<1||e>i)return!1;if(this.code.length!==i+3)return!1;for(let e=1;e<i+1;e++){const i=this.code[e],r=i.toLength();if(33!==r&&65!==r)return!1;if(t&&!i.isMinimal())return!1}return!0}getMultisig(t){return this.isMultisig(t)?[this.getSmall(0),this.getSmall(-2)]:[-1,-1]}isScripthash(){return 23===this.raw.length&&this.raw[0]===v.OP_HASH160&&20===this.raw[1]&&this.raw[22]===v.OP_EQUAL}getScripthash(){return this.isScripthash()?this.getData(1):null}isNulldata(t){if(0===this.code.length)return!1;if(this.getOp(0)!==v.OP_RETURN)return!1;if(1===this.code.length)return!0;if(t&&this.raw.length>f.MAX_OP_RETURN_BYTES)return!1;for(let e=1;e<this.code.length;e++){const i=this.code[e];if(-1===i.value)return!1;if(i.value>v.OP_16)return!1;if(t&&!i.isMinimal())return!1}return!0}getNulldata(t){if(!this.isNulldata(t))return null;for(let t=1;t<this.code.length;t++){const e=this.code[t].toPush();if(e)return e}return S}isCommitment(){return this.raw.length>=38&&this.raw[0]===v.OP_RETURN&&36===this.raw[1]&&2854332909===this.raw.readUInt32BE(2,!0)}getCommitment(){return this.isCommitment()?this.raw.slice(6,38):null}isProgram(){return!(this.raw.length<4||this.raw.length>42||this.raw[0]!==v.OP_0&&(this.raw[0]<v.OP_1||this.raw[0]>v.OP_16)||this.raw[1]+2!==this.raw.length)}getProgram(){if(!this.isProgram())return null;const t=this.getSmall(0),e=this.getData(1);return new d(t,e)}forWitness(){if(this.isProgram())return this.clone();const t=this.getPubkey();if(t){const e=h.digest(t);return R.fromProgram(0,e)}const e=this.getPubkeyhash();return e?R.fromProgram(0,e):R.fromProgram(0,this.sha256())}isWitnessPubkeyhash(){return 22===this.raw.length&&this.raw[0]===v.OP_0&&20===this.raw[1]}getWitnessPubkeyhash(){return this.isWitnessPubkeyhash()?this.getData(1):null}isWitnessScripthash(){return 34===this.raw.length&&this.raw[0]===v.OP_0&&32===this.raw[1]}getWitnessScripthash(){return this.isWitnessScripthash()?this.getData(1):null}isUnspendable(){return this.raw.length>u.MAX_SCRIPT_SIZE||this.raw.length>0&&this.raw[0]===v.OP_RETURN}getInputType(){return this.isPubkeyInput()?k.PUBKEY:this.isPubkeyhashInput()?k.PUBKEYHASH:this.isScripthashInput()?k.SCRIPTHASH:this.isMultisigInput()?k.MULTISIG:k.NONSTANDARD}isUnknownInput(){return this.getInputType()===k.NONSTANDARD}isPubkeyInput(){if(1!==this.code.length)return!1;const t=this.getLength(0);return t>=9&&t<=73}getPubkeyInput(){return this.isPubkeyInput()?this.getData(0):null}isPubkeyhashInput(){if(2!==this.code.length)return!1;const t=this.getLength(0),e=this.getLength(1);return t>=9&&t<=73&&(33===e||65===e)}getPubkeyhashInput(){return this.isPubkeyhashInput()?[this.getData(0),this.getData(1)]:[null,null]}isMultisigInput(){if(this.code.length<2)return!1;if(this.getOp(0)!==v.OP_0)return!1;if(this.getOp(1)>v.OP_PUSHDATA4)return!1;if(this.isScripthashInput())return!1;for(let t=1;t<this.code.length;t++){const e=this.getLength(t);if(e<9||e>73)return!1}return!0}getMultisigInput(){if(!this.isMultisigInput())return null;const t=[];for(let e=1;e<this.code.length;e++)t.push(this.getData(e));return t}isScripthashInput(){if(this.code.length<1)return!1;const t=this.getData(-1);if(!t)return!1;if(0===t.length)return!1;if(w.isSignatureEncoding(t))return!1;if(w.isKeyEncoding(t))return!1;const e=R.fromRaw(t);return!!e.isCode()&&!e.isUnspendable()&&!!this.isPushOnly()}getScripthashInput(){return this.isScripthashInput()?this.getData(-1):null}getCoinbaseHeight(){return R.getCoinbaseHeight(this.raw)}static getCoinbaseHeight(t){if(0===t.length)return-1;if(t[0]>=v.OP_1&&t[0]<=v.OP_16)return t[0]-80;if(t[0]>6)return-1;const e=p.fromRaw(t),i=e.toNum();return i?i.isNeg()?-1:e.equals(p.fromNum(i))?i.toDouble():-1:1}test(t){for(const e of this.code){if(-1===e.value)break;if(e.data&&0!==e.data.length&&t.test(e.data))return!0}return!1}isPushOnly(){for(const t of this.code){if(-1===t.value)return!1;if(t.value>v.OP_16)return!1}return!0}getSigops(t){let e=0,i=-1;for(const r of this.code){if(-1===r.value)break;switch(r.value){case v.OP_CHECKSIG:case v.OP_CHECKSIGVERIFY:e+=1;break;case v.OP_CHECKMULTISIG:case v.OP_CHECKMULTISIGVERIFY:t&&i>=v.OP_1&&i<=v.OP_16?e+=i-80:e+=u.MAX_MULTISIG_PUBKEYS}i=r.value}return e}getScripthashSigops(t){if(!this.isScripthash())return this.getSigops(!0);const e=t.getRedeem();return e?e.getSigops(!0):0}getWitnessSigops(t,e){let i=this.getProgram();if(!i&&this.isScripthash()){const e=t.getRedeem();e&&(i=e.getProgram())}if(!i)return 0;if(0===i.version){if(20===i.data.length)return 1;if(32===i.data.length&&e.items.length>0)return e.getRedeem().getSigops(!0)}return 0}get(t){return t<0&&(t+=this.code.length),t<0||t>=this.code.length?null:this.code[t]}pop(){return this.code.pop()||null}shift(){return this.code.shift()||null}remove(t){if(t<0&&(t+=this.code.length),t<0||t>=this.code.length)return null;const e=this.code.splice(t,1);return 0===e.length?null:e[0]}set(t,e){return t<0&&(t+=this.code.length),r(p.isOpcode(e)),r(t>=0&&t<=this.code.length),this.code[t]=e,this}push(t){return r(p.isOpcode(t)),this.code.push(t),this}unshift(t){return r(p.isOpcode(t)),this.code.unshift(t),this}insert(t,e){return t<0&&(t+=this.code.length),r(p.isOpcode(e)),r(t>=0&&t<=this.code.length),this.code.splice(t,0,e),this}getOp(t){const e=this.get(t);return e?e.value:-1}popOp(){const t=this.pop();return t?t.value:-1}shiftOp(){const t=this.shift();return t?t.value:-1}removeOp(t){const e=this.remove(t);return e?e.value:-1}setOp(t,e){return this.set(t,p.fromOp(e))}pushOp(t){return this.push(p.fromOp(t))}unshiftOp(t){return this.unshift(p.fromOp(t))}insertOp(t,e){return this.insert(t,p.fromOp(e))}getData(t){const e=this.get(t);return e?e.data:null}popData(){const t=this.pop();return t?t.data:null}shiftData(){const t=this.shift();return t?t.data:null}removeData(t){const e=this.remove(t);return e?e.data:null}setData(t,e){return this.set(t,p.fromData(e))}pushData(t){return this.push(p.fromData(t))}unshiftData(t){return this.unshift(p.fromData(t))}insertData(t,e){return this.insert(t,p.fromData(e))}getLength(t){const e=this.get(t);return e?e.toLength():-1}getPush(t){const e=this.get(t);return e?e.toPush():null}popPush(){const t=this.pop();return t?t.toPush():null}shiftPush(){const t=this.shift();return t?t.toPush():null}removePush(t){const e=this.remove(t);return e?e.toPush():null}setPush(t,e){return this.set(t,p.fromPush(e))}pushPush(t){return this.push(p.fromPush(t))}unshiftPush(t){return this.unshift(p.fromPush(t))}insertPush(t,e){return this.insert(t,p.fromPush(e))}getString(t,e){const i=this.get(t);return i?i.toString(e):null}popString(t){const e=this.pop();return e?e.toString(t):null}shiftString(t){const e=this.shift();return e?e.toString(t):null}removeString(t,e){const i=this.remove(t);return i?i.toString(e):null}setString(t,e,i){return this.set(t,p.fromString(e,i))}pushString(t,e){return this.push(p.fromString(t,e))}unshiftString(t,e){return this.unshift(p.fromString(t,e))}insertString(t,e,i){return this.insert(t,p.fromString(e,i))}getSmall(t){const e=this.get(t);return e?e.toSmall():-1}popSmall(){const t=this.pop();return t?t.toSmall():-1}shiftSmall(){const t=this.shift();return t?t.toSmall():-1}removeSmall(t){const e=this.remove(t);return e?e.toSmall():-1}setSmall(t,e){return this.set(t,p.fromSmall(e))}pushSmall(t){return this.push(p.fromSmall(t))}unshiftSmall(t){return this.unshift(p.fromSmall(t))}insertSmall(t,e){return this.insert(t,p.fromSmall(e))}getNum(t,e,i){const r=this.get(t);return r?r.toNum(e,i):null}popNum(t,e){const i=this.pop();return i?i.toNum(t,e):null}shiftNum(t,e){const i=this.shift();return i?i.toNum(t,e):null}removeNum(t,e,i){const r=this.remove(t);return r?r.toNum(e,i):null}setNum(t,e){return this.set(t,p.fromNum(e))}pushNum(t){return this.push(p.fromNum(t))}unshiftNum(t){return this.unshift(p.fromNum(t))}insertNum(t,e){return this.insert(t,p.fromNum(e))}getInt(t,e,i){const r=this.get(t);return r?r.toInt(e,i):-1}popInt(t,e){const i=this.pop();return i?i.toInt(t,e):-1}shiftInt(t,e){const i=this.shift();return i?i.toInt(t,e):-1}removeInt(t,e,i){const r=this.remove(t);return r?r.toInt(e,i):-1}setInt(t,e){return this.set(t,p.fromInt(e))}pushInt(t){return this.push(p.fromInt(t))}unshiftInt(t){return this.unshift(p.fromInt(t))}insertInt(t,e){return this.insert(t,p.fromInt(e))}getBool(t){const e=this.get(t);return!!e&&e.toBool()}popBool(){const t=this.pop();return!!t&&t.toBool()}shiftBool(){const t=this.shift();return!!t&&t.toBool()}removeBool(t){const e=this.remove(t);return!!e&&e.toBool()}setBool(t,e){return this.set(t,p.fromBool(e))}pushBool(t){return this.push(p.fromBool(t))}unshiftBool(t){return this.unshift(p.fromBool(t))}insertBool(t,e){return this.insert(t,p.fromBool(e))}getSym(t){const e=this.get(t);return e?e.toSymbol():null}popSym(){const t=this.pop();return t?t.toSymbol():null}shiftSym(){const t=this.shift();return t?t.toSymbol():null}removeSym(t){const e=this.remove(t);return e?e.toSymbol():null}setSym(t,e){return this.set(t,p.fromSymbol(e))}pushSym(t){return this.push(p.fromSymbol(t))}unshiftSym(t){return this.unshift(p.fromSymbol(t))}insertSym(t,e){return this.insert(t,p.fromSymbol(e))}fromString(t){if(r("string"==typeof t),0===(t=t.trim()).length)return this;const i=t.split(/\s+/),n=s.write();for(const t of i){let i=t;32&i.charCodeAt(0)&&(i=i.toUpperCase()),/^OP_/.test(i)||(i=`OP_${i}`);const s=v[i];if(null!=s)n.writeU8(s);else{if("'"===t[0]){r("'"===t[t.length-1],"Invalid string.");const e=t.slice(1,-1),i=p.fromString(e);n.writeBytes(i.toRaw());continue}if(/^-?\d+$/.test(t)){const e=b.fromString(t,10),i=p.fromNum(e);n.writeBytes(i.toRaw());continue}r(0===t.indexOf("0x"),"Unknown opcode.");const i=t.substring(2),s=e.from(i,"hex");r(s.length===i.length/2,"Invalid hex string."),n.writeBytes(s)}}return this.fromRaw(n.render())}static fromString(t){return(new this).fromString(t)}static verify(t,e,i,s,n,o,a){if(null==a&&(a=R.flags.STANDARD_VERIFY_FLAGS),a&R.flags.VERIFY_SIGPUSHONLY&&!t.isPushOnly())throw new m("SIG_PUSHONLY");let h,c=new g;if(t.execute(c,a,s,n,o,0),a&R.flags.VERIFY_P2SH&&(h=c.clone()),i.execute(c,a,s,n,o,0),0===c.length||!c.getBool(-1))throw new m("EVAL_FALSE");let l=!1;if(a&R.flags.VERIFY_WITNESS&&i.isProgram()){if(l=!0,0!==t.raw.length)throw new m("WITNESS_MALLEATED");R.verifyProgram(e,i,a,s,n,o),c.length=1}if(a&R.flags.VERIFY_P2SH&&i.isScripthash()){if(!t.isPushOnly())throw new m("SIG_PUSHONLY");if(0===(c=h).length)throw new m("EVAL_FALSE");const i=c.pop(),r=R.fromRaw(i);if(r.execute(c,a,s,n,o,0),0===c.length||!c.getBool(-1))throw new m("EVAL_FALSE");if(a&R.flags.VERIFY_WITNESS&&r.isProgram()){if(l=!0,!t.raw.equals(p.fromPush(i).toRaw()))throw new m("WITNESS_MALLEATED_P2SH");R.verifyProgram(e,r,a,s,n,o),c.length=1}}if(a&R.flags.VERIFY_CLEANSTACK&&(r(0!=(a&R.flags.VERIFY_P2SH)),1!==c.length))throw new m("CLEANSTACK");if(a&R.flags.VERIFY_WITNESS&&(r(0!=(a&R.flags.VERIFY_P2SH)),!l&&e.items.length>0))throw new m("WITNESS_UNEXPECTED")}static verifyProgram(t,e,i,s,n,o){const h=e.getProgram();r(h,"verifyProgram called on non-witness-program."),r(0!=(i&R.flags.VERIFY_WITNESS));const c=t.toStack();let l;if(0===h.version){if(32===h.data.length){if(0===c.length)throw new m("WITNESS_PROGRAM_WITNESS_EMPTY");const t=c.pop();if(!a.digest(t).equals(h.data))throw new m("WITNESS_PROGRAM_MISMATCH");l=R.fromRaw(t)}else{if(20!==h.data.length)throw new m("WITNESS_PROGRAM_WRONG_LENGTH");if(2!==c.length)throw new m("WITNESS_PROGRAM_MISMATCH");l=R.fromPubkeyhash(h.data)}for(let t=0;t<c.length;t++)if(c.get(t).length>u.MAX_SCRIPT_PUSH)throw new m("PUSH_SIZE");if(l.execute(c,i,s,n,o,1),1!==c.length||!c.getBool(-1))throw new m("EVAL_FALSE")}else if(i&R.flags.VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM)throw new m("DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM")}fromReader(t){return this.fromRaw(t.readVarBytes())}fromRaw(t){const e=s.read(t);for(this.raw=t;e.left();)this.code.push(p.fromReader(e));return this}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t,i){return"string"==typeof t&&(t=e.from(t,i)),(new this).fromRaw(t)}static isScript(t){return t instanceof R}}function I(t,i,s){if(r(e.isBuffer(t)),r("number"==typeof i),r("number"==typeof s),i&R.flags.VERIFY_STRICTENC&&!w.isKeyEncoding(t))throw new m("PUBKEYTYPE");if(1===s&&i&R.flags.VERIFY_WITNESS_PUBKEYTYPE&&!w.isCompressedEncoding(t))throw new m("WITNESS_PUBKEYTYPE");return!0}function A(t,i){if(r(e.isBuffer(t)),r("number"==typeof i),0===t.length)return!0;if((i&R.flags.VERIFY_DERSIG||i&R.flags.VERIFY_LOW_S||i&R.flags.VERIFY_STRICTENC)&&!w.isSignatureEncoding(t))throw new m("SIG_DER");if(i&R.flags.VERIFY_LOW_S&&!w.isLowDER(t))throw new m("SIG_HIGH_S");if(i&R.flags.VERIFY_STRICTENC&&!w.isHashType(t))throw new m("SIG_HASHTYPE");return!0}function x(t,e,i){return l.verifyDER(t,e.slice(0,-1),i)}R.opcodes=w.opcodes,R.opcodesByVal=w.opcodesByVal,R.flags=w.flags,R.hashType=w.hashType,R.hashTypeByVal=w.hashTypeByVal,R.types=w.types,R.typesByVal=w.typesByVal,t.exports=R}).call(this,i(1).Buffer)},function(t,e){var i;i=function(){return this}();try{i=i||Function("return this")()||(0,eval)("this")}catch(t){"object"==typeof window&&(i=window)}t.exports=i},function(t,e,i){"use strict";(function(e){
/*!
 * address.js - address object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(2),{base58:n,bech32:o}=i(27),a=i(19),h=i(24),c=i(9),l=i(4),u=i(3),f=e.alloc(20,0);class d{constructor(t,e){this.type=d.types.PUBKEYHASH,this.version=-1,this.hash=f,t&&this.fromOptions(t,e)}fromOptions(t,e){if("string"==typeof t)return this.fromString(t,e);r(t);const{hash:i,type:s,version:n}=t;return this.fromHash(i,s,n)}static fromOptions(t,e){return(new this).fromOptions(t,e)}getHash(t){return"hex"===t?this.hash.toString("hex"):this.hash}isNull(){if(20===this.hash.length)return this.hash.equals(f);if(32===this.hash.length)return this.hash.equals(u.ZERO_HASH);for(let t=0;t<this.hash.length;t++)if(0!==this.hash[t])return!1;return!0}equals(t){return r(t instanceof d),this.type===t.type&&this.version===t.version&&this.hash.equals(t.hash)}getType(){return d.typesByVal[this.type].toLowerCase()}getPrefix(t){const e=(t=l.get(t)).addressPrefix;switch(this.type){case d.types.PUBKEYHASH:return e.pubkeyhash;case d.types.SCRIPTHASH:return e.scripthash;case d.types.WITNESS:if(20===this.hash.length)return e.witnesspubkeyhash;if(32===this.hash.length)return e.witnessscripthash}return-1}getSize(){let t=5+this.hash.length;return-1!==this.version&&(t+=2),t}toRaw(t){const e=this.getSize(),i=s.write(e),n=this.getPrefix(t);return r(-1!==n,"Not a valid address prefix."),i.writeU8(n),-1!==this.version&&(i.writeU8(this.version),i.writeU8(0)),i.writeBytes(this.hash),i.writeChecksum(c.digest),i.render()}toBase58(t){return n.encode(this.toRaw(t))}toBech32(t){const e=this.version,i=this.hash;r(-1!==e,"Cannot convert non-program address to bech32.");const s=(t=l.get(t)).addressPrefix.bech32;return o.encode(s,e,i)}fromString(t,e){if(r("string"==typeof t),r(t.length>0),r(t.length<=100),function(t){let e=!1,i=!1;for(let s=0;s<t.length;s++){const n=t.charCodeAt(s);if(!(n>=48&&n<=57)&&(32&n?(r(n>=97&&n<=122),e=!0):(r(n>=65&&n<=90),i=!0),e&&i))return!0}return!1}(t))return this.fromBase58(t,e);try{return this.fromBech32(t,e)}catch(i){return this.fromBase58(t,e)}}static fromString(t,e){return(new this).fromString(t,e)}toString(t){return-1!==this.version?this.toBech32(t):this.toBase58(t)}inspect(){return"<Address:"+` type=${this.getType()}`+` version=${this.version}`+` str=${this.toString()}`+">"}fromRaw(t,e){const i=s.read(t,!0),r=i.readU8();e=l.fromAddress(r,e);const n=d.getType(r,e);let o=-1;if(n===d.types.WITNESS){if(t.length>38)throw new Error("Address is too long.");if(o=i.readU8(),0!==i.readU8())throw new Error("Address version padding is non-zero.")}else if(25!==t.length)throw new Error("Address is too long.");const a=i.readBytes(i.left()-4);return i.verifyChecksum(c.digest),this.fromHash(a,n,o)}static fromRaw(t,e){return(new this).fromRaw(t,e)}fromBase58(t,e){if(r("string"==typeof t),t.length>55)throw new Error("Address is too long.");return this.fromRaw(n.decode(t),e)}static fromBase58(t,e){return(new this).fromBase58(t,e)}fromBech32(t,e){const i=d.types.WITNESS;r("string"==typeof t);const s=o.decode(t);return l.fromBech32(s.hrp,e),this.fromHash(s.hash,i,s.version)}static fromBech32(t,e){return(new this).fromBech32(t,e)}fromScript(t){const e=t.getPubkey();if(e)return this.hash=h.digest(e),this.type=d.types.PUBKEYHASH,this.version=-1,this;const i=t.getPubkeyhash();if(i)return this.hash=i,this.type=d.types.PUBKEYHASH,this.version=-1,this;const r=t.getScripthash();if(r)return this.hash=r,this.type=d.types.SCRIPTHASH,this.version=-1,this;const s=t.getProgram();return s&&!s.isMalformed()?(this.hash=s.data,this.type=d.types.WITNESS,this.version=s.version,this):t.isMultisig()?(this.hash=t.hash160(),this.type=d.types.SCRIPTHASH,this.version=-1,this):null}fromWitness(t){const[,e]=t.getPubkeyhashInput();if(e)return this.hash=h.digest(e),this.type=d.types.WITNESS,this.version=0,this;const i=t.getScripthashInput();return i?(this.hash=a.digest(i),this.type=d.types.WITNESS,this.version=0,this):null}fromInputScript(t){const[,e]=t.getPubkeyhashInput();if(e)return this.hash=h.digest(e),this.type=d.types.PUBKEYHASH,this.version=-1,this;const i=t.getScripthashInput();return i?(this.hash=h.digest(i),this.type=d.types.SCRIPTHASH,this.version=-1,this):null}static fromWitness(t){return(new this).fromWitness(t)}static fromInputScript(t){return(new this).fromInputScript(t)}static fromScript(t){return(new this).fromScript(t)}fromHash(t,i,s){return"string"==typeof i&&(i=d.types[i.toUpperCase()],r(null!=i,"Not a valid address type.")),null==i&&(i=d.types.PUBKEYHASH),null==s&&(s=-1),r(e.isBuffer(t)),r(i>>>0===i),r((0|s)===s),r(i>=d.types.PUBKEYHASH&&i<=d.types.WITNESS,"Not a valid address type."),-1===s?(r(i!==d.types.WITNESS,"Wrong version (witness)"),r(20===t.length,"Hash is the wrong size.")):(r(i===d.types.WITNESS,"Wrong version (non-witness)."),r(s>=0&&s<=16,"Bad program version."),0===s&&i===d.types.WITNESS&&r(20===t.length||32===t.length,"Witness program hash is the wrong size."),r(t.length>=2&&t.length<=40,"Hash is the wrong size.")),this.hash=t,this.type=i,this.version=s,this}static fromHash(t,e,i){return(new this).fromHash(t,e,i)}fromPubkeyhash(t){const e=d.types.PUBKEYHASH;return r(20===t.length,"P2PKH must be 20 bytes."),this.fromHash(t,e,-1)}static fromPubkeyhash(t){return(new this).fromPubkeyhash(t)}fromScripthash(t){const e=d.types.SCRIPTHASH;return r(t&&20===t.length,"P2SH must be 20 bytes."),this.fromHash(t,e,-1)}static fromScripthash(t){return(new this).fromScripthash(t)}fromWitnessPubkeyhash(t){const e=d.types.WITNESS;return r(t&&20===t.length,"P2WPKH must be 20 bytes."),this.fromHash(t,e,0)}static fromWitnessPubkeyhash(t){return(new this).fromWitnessPubkeyhash(t)}fromWitnessScripthash(t){const e=d.types.WITNESS;return r(t&&32===t.length,"P2WPKH must be 32 bytes."),this.fromHash(t,e,0)}static fromWitnessScripthash(t){return(new this).fromWitnessScripthash(t)}fromProgram(t,e){const i=d.types.WITNESS;return r(t>=0,"Bad version for witness program."),this.fromHash(e,i,t)}static fromProgram(t,e){return(new this).fromProgram(t,e)}isPubkeyhash(){return this.type===d.types.PUBKEYHASH}isScripthash(){return this.type===d.types.SCRIPTHASH}isWitnessPubkeyhash(){return 0===this.version&&20===this.hash.length}isWitnessScripthash(){return 0===this.version&&32===this.hash.length}isProgram(){return-1!==this.version}isUnknown(){return-1!==this.version&&(this.version>0||20!==this.hash.length&&32!==this.hash.length)}static getHash(t,i){if(!t)throw new Error("Object is not an address.");let r;if(e.isBuffer(t)){if(20!==t.length&&32!==t.length)throw new Error("Object is not an address.");r=t}else{if(!(t instanceof d))throw new Error("Object is not an address.");r=t.hash}return r}static getType(t,e){const i=e.addressPrefix;switch(t){case i.pubkeyhash:return d.types.PUBKEYHASH;case i.scripthash:return d.types.SCRIPTHASH;case i.witnesspubkeyhash:case i.witnessscripthash:return d.types.WITNESS;default:throw new Error("Unknown address prefix.")}}}d.types={PUBKEYHASH:0,SCRIPTHASH:1,WITNESS:2},d.typesByVal=["PUBKEYHASH","SCRIPTHASH","WITNESS"],t.exports=d}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){
/*!
 * buffer-map.js - buffer map for javascript
 * Copyright (c) 2018, Christopher Jeffrey (MIT License).
 * https://github.com/chjj/buffer-map
 */
const{custom:r}=i(88);function s(e){if(!t.isBuffer(e))throw new TypeError("Non-buffer passed to buffer map/set.");return e.toString("binary")}e.BufferMap=class{constructor(t){if(this.map=new Map,null!=t)for(const[e,i]of t)this.set(e,i)}get size(){return this.map.size}get(t){const e=this.map.get(s(t));if(e)return e.value}has(t){return this.map.has(s(t))}set(t,e){return this.map.set(s(t),new class{constructor(t,e){this.key=t,this.value=e}}(t,e)),this}delete(t){return this.map.delete(s(t))}clear(){this.map.clear()}[Symbol.iterator](){return this.entries()}*entries(){for(const{key:t,value:e}of this.map.values())yield[t,e]}*keys(){for(const{key:t}of this.map.values())yield t}*values(){for(const{value:t}of this.map.values())yield t}toKeys(){const t=[];for(const{key:e}of this.map.values())t.push(e);return t}toValues(){const t=[];for(const{value:e}of this.map.values())t.push(e);return t}toArray(){return this.toValues()}[r](){const t=new Map;for(const{key:e,value:i}of this.map.values())t.set(e.toString("hex"),i);return t}},e.BufferSet=class{constructor(t){if(this.map=new Map,null!=t)for(const e of t)this.add(e)}get size(){return this.map.size}has(t){return this.map.has(s(t))}add(t){return this.map.set(s(t),t),this}delete(t){return this.map.delete(s(t))}clear(){this.map.clear()}[Symbol.iterator](){return this.keys()}*entries(){for(const t of this.map.values())yield[t,t]}keys(){return this.map.values()}values(){return this.map.values()}toKeys(){const t=[];for(const e of this.map.values())t.push(e);return t}toValues(){return this.toKeys()}toArray(){return this.toKeys()}[r](){const t=new Set;for(const e of this.map.values())t.add(e.toString("hex"));return t}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * hmac.js - hmac for bcrypto
 * Copyright (c) 2016-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 * Parts of this software based on hash.js.
 */
const r=i(0);t.exports=class{constructor(t,e,i,s){r("function"==typeof t),r(e>>>0===e),this.hash=t,this.size=e,this.initArg=i,this.finalArg=s,this.inner=new t,this.outer=new t}init(t){r(e.isBuffer(t)),t.length>this.size&&(t=this.hash.digest(t,this.initArg,this.finalArg),r(t.length<=this.size));const i=e.allocUnsafe(this.size);for(let e=0;e<t.length;e++)i[e]=54^t[e];for(let e=t.length;e<i.length;e++)i[e]=54;this.inner.init(this.initArg),this.inner.update(i);for(let e=0;e<t.length;e++)i[e]=92^t[e];for(let e=t.length;e<i.length;e++)i[e]=92;return this.outer.init(this.initArg),this.outer.update(i),this}update(t){return this.inner.update(t),this}final(){return this.outer.update(this.inner.final(this.finalArg)),this.outer.final(this.finalArg)}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * secp256k1.js - secp256k1 for bcrypto
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */t.exports=i(103)},function(t,e,i){"use strict";(function(e){
/*!
 * output.js - output object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(2),n=i(18),o=i(4),a=i(12),h=i(10),c=i(3),l=i(25);class u{constructor(t){this.value=0,this.script=new h,t&&this.fromOptions(t)}fromOptions(t){return r(t,"Output data is required."),t.value&&(r(Number.isSafeInteger(t.value)&&t.value>=0,"Value must be a uint64."),this.value=t.value),t.script&&this.script.fromOptions(t.script),t.address&&this.script.fromAddress(t.address),this}static fromOptions(t){return(new this).fromOptions(t)}fromScript(t,e){return"string"==typeof t&&(t=a.fromString(t)),t instanceof a&&(t=h.fromAddress(t)),r(t instanceof h,"Script must be a Script."),r(Number.isSafeInteger(e)&&e>=0,"Value must be a uint64."),this.script=t,this.value=e,this}static fromScript(t,e){return(new this).fromScript(t,e)}clone(){const t=new this.constructor;return t.value=this.value,t.script.inject(this.script),t}equals(t){return r(u.isOutput(t)),this.value===t.value&&this.script.equals(t.script)}compare(t){r(u.isOutput(t));const e=this.value-t.value;return 0!==e?e:this.script.compare(t.script)}getType(){return h.typesByVal[this.script.getType()].toLowerCase()}getAddress(){return this.script.getAddress()}getHash(t){const e=this.getAddress();return e?e.getHash(t):null}inspect(){return{type:this.getType(),value:n.btc(this.value),script:this.script,address:this.getAddress()}}toJSON(){return this.getJSON()}getJSON(t){let e=this.getAddress();return t=o.get(t),e&&(e=e.toString(t)),{value:this.value,script:this.script.toJSON(),address:e}}getDustThreshold(t){const e=c.WITNESS_SCALE_FACTOR;if(this.script.isUnspendable())return 0;let i=this.getSize();return this.script.isProgram()?i+=37+(107/e|0)+4:i+=148,3*l.getMinFee(i,t)}getSize(){return 8+this.script.getVarSize()}isDust(t){return this.value<this.getDustThreshold(t)}fromJSON(t){return r(t,"Output data is required."),r(Number.isSafeInteger(t.value)&&t.value>=0,"Value must be a uint64."),this.value=t.value,this.script.fromJSON(t.script),this}static fromJSON(t){return(new this).fromJSON(t)}toWriter(t){return t.writeI64(this.value),t.writeVarBytes(this.script.toRaw()),t}toRaw(){const t=this.getSize();return this.toWriter(s.write(t)).render()}fromReader(t){return this.value=t.readI64(),this.script.fromRaw(t.readVarBytes()),this}fromRaw(t){return this.fromReader(s.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t,i){return"string"==typeof t&&(t=e.from(t,i)),(new this).fromRaw(t)}static isOutput(t){return t instanceof u}}t.exports=u}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * outpoint.js - outpoint object for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(2),n=i(5),o=i(3);class a{constructor(t,i){this.hash=o.ZERO_HASH,this.index=4294967295,null!=t&&(r(e.isBuffer(t)),r(i>>>0===i,"Index must be a uint32."),this.hash=t,this.index=i)}fromOptions(t){return r(t,"Outpoint data is required."),r(e.isBuffer(t.hash)),r(t.index>>>0===t.index,"Index must be a uint32."),this.hash=t.hash,this.index=t.index,this}static fromOptions(t){return(new this).fromOptions(t)}clone(){const t=new this.constructor;return t.hash=this.hash,t.index=this.index,t}equals(t){return r(a.isOutpoint(t)),this.hash.equals(t.hash)&&this.index===t.index}compare(t){r(a.isOutpoint(t));const e=function(t,e){const i=Math.min(t.length,e.length);for(let r=0;r<i;r++){if(t[r]<e[r])return-1;if(t[r]>e[r])return 1}return t.length<e.length?-1:t.length>e.length?1:0}(this.txid(),t.txid());return 0!==e?e:this.index-t.index}isNull(){return 4294967295===this.index&&this.hash.equals(o.ZERO_HASH)}rhash(){return n.revHex(this.hash)}txid(){return this.rhash()}toKey(){return this.toRaw()}fromKey(t){return this.hash=t.slice(0,32),this.index=s.readU32(t,32),this}static fromKey(t){return(new this).fromKey(t)}toWriter(t){return t.writeHash(this.hash),t.writeU32(this.index),t}getSize(){return 36}toRaw(){return this.toWriter(s.write(36)).render()}fromReader(t){return this.hash=t.readHash(),this.index=t.readU32(),this}fromRaw(t){return this.fromReader(s.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t){return(new this).fromRaw(t)}fromJSON(t){return r(t,"Outpoint data is required."),r("string"==typeof t.hash,"Hash must be a string."),r(t.index>>>0===t.index,"Index must be a uint32."),this.hash=n.fromRev(t.hash),this.index=t.index,this}toJSON(){return{hash:n.revHex(this.hash),index:this.index}}static fromJSON(t){return(new this).fromJSON(t)}fromTX(t,e){return r(t),r("number"==typeof e),r(e>=0),this.hash=t.hash(),this.index=e,this}static fromTX(t,e){return(new this).fromTX(t,e)}static toKey(t,e){return new a(t,e).toKey()}inspect(){return`<Outpoint: ${this.rhash()}/${this.index}>`}static isOutpoint(t){return t instanceof a}}t.exports=a}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * amount.js - amount object for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(0),s=i(93);class n{constructor(t,e){this.value=0,null!=t&&this.fromOptions(t,e)}fromOptions(t,e){return"string"==typeof e?this.from(e,t):"number"==typeof t?this.fromValue(t):this.fromBTC(t)}toValue(){return this.value}toSatoshis(t){return t?this.value:this.value.toString(10)}toBits(t){return n.encode(this.value,2,t)}toMBTC(t){return n.encode(this.value,5,t)}toBTC(t){return n.encode(this.value,8,t)}to(t,e){switch(t){case"sat":return this.toSatoshis(e);case"ubtc":case"bits":return this.toBits(e);case"mbtc":return this.toMBTC(e);case"btc":return this.toBTC(e)}throw new Error(`Unknown unit "${t}".`)}toString(){return this.toBTC()}fromValue(t){return r(Number.isSafeInteger(t)&&t>=0,"Value must be an int64."),this.value=t,this}fromSatoshis(t){return this.value=n.decode(t,0),this}fromBits(t){return this.value=n.decode(t,2),this}fromMBTC(t){return this.value=n.decode(t,5),this}fromBTC(t){return this.value=n.decode(t,8),this}from(t,e){switch(t){case"sat":return this.fromSatoshis(e);case"ubtc":case"bits":return this.fromBits(e);case"mbtc":return this.fromMBTC(e);case"btc":return this.fromBTC(e)}throw new Error(`Unknown unit "${t}".`)}static fromOptions(t,e){return(new this).fromOptions(t,e)}static fromValue(t){return(new this).fromValue(t)}static fromSatoshis(t){return(new this).fromSatoshis(t)}static fromBits(t){return(new this).fromBits(t)}static fromMBTC(t){return(new this).fromMBTC(t)}static fromBTC(t){return(new this).fromBTC(t)}static from(t,e){return(new this).from(t,e)}inspect(){return`<Amount: ${this.toString()}>`}static btc(t,e){return"string"==typeof t?t:n.encode(t,8,e)}static value(t){return"number"==typeof t?t:n.decode(t,8)}static encode(t,e,i){return i?s.toFloat(t,e):s.encode(t,e)}static decode(t,e){return"number"==typeof t?s.fromFloat(t,e):s.decode(t,e)}}t.exports=n},function(t,e,i){"use strict";
/*!
 * sha256.js - sha256 for bcrypto
 * Copyright (c) 2017-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */t.exports=i(30)},function(t,e,i){"use strict";(function(e){
/*!
 * tx.js - transaction object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(2),n=i(9),o=i(15),{BufferSet:a}=i(13),h=i(5),c=i(18),l=i(4),u=i(10),f=i(52),d=i(16),p=i(17),g=i(38),m=i(3),b=i(25),w=i(33),{encoding:y}=s,{hashType:v}=u;class k{constructor(t){this.version=1,this.inputs=[],this.outputs=[],this.locktime=0,this.mutable=!1,this._hash=null,this._hhash=null,this._whash=null,this._raw=null,this._size=-1,this._witness=-1,this._sigops=-1,this._hashPrevouts=null,this._hashSequence=null,this._hashOutputs=null,t&&this.fromOptions(t)}fromOptions(t){if(r(t,"TX data is required."),null!=t.version&&(r(t.version>>>0===t.version,"Version must be a uint32."),this.version=t.version),t.inputs){r(Array.isArray(t.inputs),"Inputs must be an array.");for(const e of t.inputs)this.inputs.push(new f(e))}if(t.outputs){r(Array.isArray(t.outputs),"Outputs must be an array.");for(const e of t.outputs)this.outputs.push(new d(e))}return null!=t.locktime&&(r(t.locktime>>>0===t.locktime,"Locktime must be a uint32."),this.locktime=t.locktime),this}static fromOptions(t){return(new this).fromOptions(t)}clone(){return(new this.constructor).inject(this)}inject(t){this.version=t.version;for(const e of t.inputs)this.inputs.push(e.clone());for(const e of t.outputs)this.outputs.push(e.clone());return this.locktime=t.locktime,this}refresh(){this._hash=null,this._hhash=null,this._whash=null,this._raw=null,this._size=-1,this._witness=-1,this._sigops=-1,this._hashPrevouts=null,this._hashSequence=null,this._hashOutputs=null}hash(t){let e=this._hash;if(e||(e=n.digest(this.toNormal()),this.mutable||(this._hash=e)),"hex"===t){let t=this._hhash;t||(t=e.toString("hex"),this.mutable||(this._hhash=t)),e=t}return e}witnessHash(t){if(!this.hasWitness())return this.hash(t);let e=this._whash;return e||(e=n.digest(this.toRaw()),this.mutable||(this._whash=e)),"hex"===t?e.toString("hex"):e}toRaw(){return this.frame().data}toNormal(){return this.hasWitness()?this.frameNormal().data:this.toRaw()}toWriter(t){return this.mutable?this.hasWitness()?this.writeWitness(t):this.writeNormal(t):(t.writeBytes(this.toRaw()),t)}toNormalWriter(t){return this.hasWitness()?(this.writeNormal(t),t):this.toWriter(t)}frame(){if(this.mutable)return r(!this._raw),this.hasWitness()?this.frameWitness():this.frameNormal();if(this._raw){r(this._size>=0),r(this._witness>=0);const t=new E(this._size,this._witness);return t.data=this._raw,t}let t;return t=this.hasWitness()?this.frameWitness():this.frameNormal(),this._raw=t.data,this._size=t.size,this._witness=t.witness,t}getSizes(){return this.mutable?this.hasWitness()?this.getWitnessSizes():this.getNormalSizes():this.frame()}getVirtualSize(){const t=m.WITNESS_SCALE_FACTOR;return(this.getWeight()+t-1)/t|0}getSigopsSize(t){const e=m.WITNESS_SCALE_FACTOR,i=b.BYTES_PER_SIGOP;return(Math.max(this.getWeight(),t*i)+e-1)/e|0}getWeight(){const t=this.getSizes();return(t.size-t.witness)*(m.WITNESS_SCALE_FACTOR-1)+t.size}getSize(){return this.getSizes().size}getBaseSize(){const t=this.getSizes();return t.size-t.witness}hasWitness(){if(-1!==this._witness)return 0!==this._witness;for(const t of this.inputs)if(t.witness.items.length>0)return!0;return!1}signatureHash(t,e,i,s,n){if(r(t>=0&&t<this.inputs.length),r(e instanceof u),r("number"==typeof i),r("number"==typeof s),0===n)return this.signatureHashV0(t,e,s);if(1===n)return this.signatureHashV1(t,e,i,s);throw new Error("Unknown sighash version.")}signatureHashV0(t,i,r){if((31&r)===v.SINGLE&&t>=this.outputs.length){const t=e.alloc(32,0);return t[0]=1,t}i=i.removeSeparators();const o=this.hashSize(t,i,r),a=s.pool(o);if(a.writeU32(this.version),r&v.ANYONECANPAY){const e=this.inputs[t];a.writeVarint(1),e.prevout.toWriter(a),a.writeVarBytes(i.toRaw()),a.writeU32(e.sequence)}else{a.writeVarint(this.inputs.length);for(let e=0;e<this.inputs.length;e++){const s=this.inputs[e];if(s.prevout.toWriter(a),e!==t)switch(a.writeVarint(0),31&r){case v.NONE:case v.SINGLE:a.writeU32(0);break;default:a.writeU32(s.sequence)}else a.writeVarBytes(i.toRaw()),a.writeU32(s.sequence)}}switch(31&r){case v.NONE:a.writeVarint(0);break;case v.SINGLE:{const e=this.outputs[t];a.writeVarint(t+1);for(let e=0;e<t;e++)a.writeI64(-1),a.writeVarint(0);e.toWriter(a);break}default:a.writeVarint(this.outputs.length);for(const t of this.outputs)t.toWriter(a)}return a.writeU32(this.locktime),a.writeU32(r),n.digest(a.render())}hashSize(t,e,i){let r=0;switch(r+=4,i&v.ANYONECANPAY?(r+=1,r+=36,r+=e.getVarSize(),r+=4):(r+=y.sizeVarint(this.inputs.length),r+=41*(this.inputs.length-1),r+=36,r+=e.getVarSize(),r+=4),31&i){case v.NONE:r+=1;break;case v.SINGLE:r+=y.sizeVarint(t+1),r+=9*t,r+=this.outputs[t].getSize();break;default:r+=y.sizeVarint(this.outputs.length);for(const t of this.outputs)r+=t.getSize()}return r+8}signatureHashV1(t,e,i,r){const o=this.inputs[t];let a=m.ZERO_HASH,h=m.ZERO_HASH,c=m.ZERO_HASH;if(!(r&v.ANYONECANPAY))if(this._hashPrevouts)a=this._hashPrevouts;else{const t=s.pool(36*this.inputs.length);for(const e of this.inputs)e.prevout.toWriter(t);a=n.digest(t.render()),this.mutable||(this._hashPrevouts=a)}if(!(r&v.ANYONECANPAY)&&(31&r)!==v.SINGLE&&(31&r)!==v.NONE)if(this._hashSequence)h=this._hashSequence;else{const t=s.pool(4*this.inputs.length);for(const e of this.inputs)t.writeU32(e.sequence);h=n.digest(t.render()),this.mutable||(this._hashSequence=h)}if((31&r)!==v.SINGLE&&(31&r)!==v.NONE)if(this._hashOutputs)c=this._hashOutputs;else{let t=0;for(const e of this.outputs)t+=e.getSize();const e=s.pool(t);for(const t of this.outputs)t.toWriter(e);c=n.digest(e.render()),this.mutable||(this._hashOutputs=c)}else if((31&r)===v.SINGLE&&t<this.outputs.length){const e=this.outputs[t];c=n.digest(e.toRaw())}const l=156+e.getVarSize(),u=s.pool(l);return u.writeU32(this.version),u.writeBytes(a),u.writeBytes(h),u.writeHash(o.prevout.hash),u.writeU32(o.prevout.index),u.writeVarBytes(e.toRaw()),u.writeI64(i),u.writeU32(o.sequence),u.writeBytes(c),u.writeU32(this.locktime),u.writeU32(r),n.digest(u.render())}checksig(t,e,i,r,s,n){if(0===r.length)return!1;const a=r[r.length-1],h=this.signatureHash(t,e,i,a,n);return o.verifyDER(h,r.slice(0,-1),s)}signature(t,e,i,r,n,a){null==n&&(n=v.ALL),null==a&&(a=0);const h=this.signatureHash(t,e,i,n,a),c=o.signDER(h,r),l=s.write(c.length+1);return l.writeBytes(c),l.writeU8(n),l.render()}check(t,e){if(0===this.inputs.length)throw new w("UNKNOWN_ERROR","No inputs.");if(!this.isCoinbase())for(let i=0;i<this.inputs.length;i++){const{prevout:r}=this.inputs[i],s=t.getOutput(r);if(!s)throw new w("UNKNOWN_ERROR","No coin available.");this.checkInput(i,s,e)}}checkInput(t,e,i){const s=this.inputs[t];r(s,"Input does not exist."),r(e,"No coin passed."),u.verify(s.script,s.witness,e.script,this,t,e.value,i)}async checkAsync(t,e,i){if(0===this.inputs.length)throw new w("UNKNOWN_ERROR","No inputs.");this.isCoinbase()||(i?await i.check(this,t,e):this.check(t,e))}async checkInputAsync(t,e,i,s){const n=this.inputs[t];r(n,"Input does not exist."),r(e,"No coin passed."),s?await s.checkInput(this,t,e,i):this.checkInput(t,e,i)}verify(t,e){try{this.check(t,e)}catch(t){if("ScriptError"===t.type)return!1;throw t}return!0}verifyInput(t,e,i){try{this.checkInput(t,e,i)}catch(t){if("ScriptError"===t.type)return!1;throw t}return!0}async verifyAsync(t,e,i){try{await this.checkAsync(t,e,i)}catch(t){if("ScriptError"===t.type)return!1;throw t}return!0}async verifyInputAsync(t,e,i,r){try{await this.checkInput(t,e,i,r)}catch(t){if("ScriptError"===t.type)return!1;throw t}return!0}isCoinbase(){return 1===this.inputs.length&&this.inputs[0].prevout.isNull()}isRBF(){if(2===this.version)return!1;for(const t of this.inputs)if(t.isRBF())return!0;return!1}getFee(t){return this.hasCoins(t)?this.getInputValue(t)-this.getOutputValue():0}getInputValue(t){let e=0;for(const{prevout:i}of this.inputs){const r=t.getOutput(i);if(!r)return 0;e+=r.value}return e}getOutputValue(){let t=0;for(const e of this.outputs)t+=e.value;return t}_getInputAddresses(t){const e=new a,i=[];if(this.isCoinbase())return[i,e];for(const r of this.inputs){const s=t?t.getOutputFor(r):null,n=r.getAddress(s);if(!n)continue;const o=n.getHash();e.has(o)||(e.add(o),i.push(n))}return[i,e]}_getOutputAddresses(){const t=new a,e=[];for(const i of this.outputs){const r=i.getAddress();if(!r)continue;const s=r.getHash();t.has(s)||(t.add(s),e.push(r))}return[e,t]}_getAddresses(t){const[e,i]=this._getInputAddresses(t),r=this.getOutputAddresses();for(const t of r){const r=t.getHash();i.has(r)||(i.add(r),e.push(t))}return[e,i]}getInputAddresses(t){const[e]=this._getInputAddresses(t);return e}getOutputAddresses(){const[t]=this._getOutputAddresses();return t}getAddresses(t){const[e]=this._getAddresses(t);return e}getInputHashes(t,e){const[,i]=this._getInputAddresses(t);return"hex"!==e?i.toArray():i.toArray().map(t=>t.toString("hex"))}getOutputHashes(t){const[,e]=this._getOutputAddresses();return"hex"!==t?e.toArray():e.toArray().map(t=>t.toString("hex"))}getHashes(t,e){const[,i]=this._getAddresses(t);return"hex"!==e?i.toArray():i.toArray().map(t=>t.toString("hex"))}hasCoins(t){if(0===this.inputs.length)return!1;for(const{prevout:e}of this.inputs)if(!t.hasEntry(e))return!1;return!0}isFinal(t,e){const i=m.LOCKTIME_THRESHOLD;if(0===this.locktime)return!0;if(this.locktime<(this.locktime<i?t:e))return!0;for(const t of this.inputs)if(4294967295!==t.sequence)return!1;return!0}verifyLocktime(t,e){const i=m.LOCKTIME_THRESHOLD,s=this.inputs[t];return r(s,"Input does not exist."),r(e>=0,"Locktime must be non-negative."),this.locktime<i==e<i&&!(e>this.locktime)&&4294967295!==s.sequence}verifySequence(t,e){const i=m.SEQUENCE_DISABLE_FLAG,s=m.SEQUENCE_TYPE_FLAG,n=m.SEQUENCE_MASK,o=this.inputs[t];return r(o,"Input does not exist."),r(e>=0,"Locktime must be non-negative."),!(!(e&i)&&(this.version<2||o.sequence&i||(o.sequence&s)!=(e&s)||(e&n)>(o.sequence&n)))}getLegacySigops(){if(-1!==this._sigops)return this._sigops;let t=0;for(const e of this.inputs)t+=e.script.getSigops(!1);for(const e of this.outputs)t+=e.script.getSigops(!1);return this.mutable||(this._sigops=t),t}getScripthashSigops(t){if(this.isCoinbase())return 0;let e=0;for(const i of this.inputs){const r=t.getOutputFor(i);r&&r.script.isScripthash()&&(e+=r.script.getScripthashSigops(i.script))}return e}getWitnessSigops(t){if(this.isCoinbase())return 0;let e=0;for(const i of this.inputs){const r=t.getOutputFor(i);r&&(e+=r.script.getWitnessSigops(i.script,i.witness))}return e}getSigopsCost(t,e){null==e&&(e=u.flags.STANDARD_VERIFY_FLAGS);const i=m.WITNESS_SCALE_FACTOR;let r=this.getLegacySigops()*i;return e&u.flags.VERIFY_P2SH&&(r+=this.getScripthashSigops(t)*i),e&u.flags.VERIFY_WITNESS&&(r+=this.getWitnessSigops(t)),r}getSigops(t,e){const i=m.WITNESS_SCALE_FACTOR;return(this.getSigopsCost(t,e)+i-1)/i|0}isSane(){const[t]=this.checkSanity();return t}checkSanity(){if(0===this.inputs.length)return[!1,"bad-txns-vin-empty",100];if(0===this.outputs.length)return[!1,"bad-txns-vout-empty",100];if(this.getBaseSize()>m.MAX_BLOCK_SIZE)return[!1,"bad-txns-oversize",100];let t=0;for(const e of this.outputs){if(e.value<0)return[!1,"bad-txns-vout-negative",100];if(e.value>m.MAX_MONEY)return[!1,"bad-txns-vout-toolarge",100];if((t+=e.value)<0||t>m.MAX_MONEY)return[!1,"bad-txns-txouttotal-toolarge",100]}const e=new a;for(const t of this.inputs){const i=t.prevout.toKey();if(e.has(i))return[!1,"bad-txns-inputs-duplicate",100];e.add(i)}if(this.isCoinbase()){const t=this.inputs[0].script.getSize();if(t<2||t>100)return[!1,"bad-cb-length",100]}else for(const t of this.inputs)if(t.prevout.isNull())return[!1,"bad-txns-prevout-null",10];return[!0,"valid",0]}isStandard(){const[t]=this.checkStandard();return t}checkStandard(){if(this.version<1||this.version>b.MAX_TX_VERSION)return[!1,"version",0];if(this.getWeight()>=b.MAX_TX_WEIGHT)return[!1,"tx-size",0];for(const t of this.inputs){if(t.script.getSize()>1650)return[!1,"scriptsig-size",0];if(!t.script.isPushOnly())return[!1,"scriptsig-not-pushonly",0]}let t=0;for(const e of this.outputs){if(!e.script.isStandard())return[!1,"scriptpubkey",0];if(e.script.isNulldata())t++;else{if(e.script.isMultisig()&&!b.BARE_MULTISIG)return[!1,"bare-multisig",0];if(e.isDust(b.MIN_RELAY))return[!1,"dust",0]}}return t>1?[!1,"multi-op-return",0]:[!0,"valid",0]}hasStandardInputs(t){if(this.isCoinbase())return!0;for(const e of this.inputs){const i=t.getOutputFor(e);if(!i)return!1;if(!i.script.isPubkeyhash())if(i.script.isScripthash()){const t=e.script.getRedeem();if(!t)return!1;if(t.getSigops(!0)>b.MAX_P2SH_SIGOPS)return!1}else if(i.script.isUnknown())return!1}return!0}hasStandardWitness(t){if(this.isCoinbase())return!0;for(const e of this.inputs){const i=e.witness,r=t.getOutputFor(e);if(!r)continue;if(0===i.items.length)continue;let s=r.script;if(s.isScripthash()&&!(s=e.script.getRedeem()))return!1;if(!s.isProgram())return!1;if(s.isWitnessPubkeyhash()){if(2!==i.items.length)return!1;if(i.items[0].length>73)return!1;if(i.items[1].length>65)return!1}else if(s.isWitnessScripthash()){if(i.items.length-1>b.MAX_P2WSH_STACK)return!1;for(let t=0;t<i.items.length-1;t++)if(i.items[t].length>b.MAX_P2WSH_PUSH)return!1;const t=i.items[i.items.length-1];if(t.length>b.MAX_P2WSH_SIZE)return!1;const r=u.fromRaw(t);if(r.isPubkey()){if(i.items.length-1!=1)return!1;if(i.items[0].length>73)return!1;continue}if(r.isPubkeyhash()){if(e.witness.items.length-1!=2)return!1;if(i.items[0].length>73)return!1;if(i.items[1].length>65)return!1;continue}const[s]=r.getMultisig();if(-1!==s){if(i.items.length-1!==s+1)return!1;if(0!==i.items[0].length)return!1;for(let t=1;t<i.items.length-1;t++)if(i.items[t].length>73)return!1}}else{if(i.items.length>b.MAX_P2WSH_STACK)return!1;for(const t of i.items)if(t.length>b.MAX_P2WSH_PUSH)return!1}}return!0}verifyInputs(t,e){const[i]=this.checkInputs(t,e);return-1!==i}checkInputs(t,e){r("number"==typeof e);let i=0;for(const{prevout:s}of this.inputs){const n=t.getEntry(s);if(!n)return[-1,"bad-txns-inputs-missingorspent",0];if(n.coinbase&&e-n.height<m.COINBASE_MATURITY)return[-1,"bad-txns-premature-spend-of-coinbase",0];const o=t.getOutput(s);if(r(o),o.value<0||o.value>m.MAX_MONEY)return[-1,"bad-txns-inputvalues-outofrange",100];if((i+=o.value)<0||i>m.MAX_MONEY)return[-1,"bad-txns-inputvalues-outofrange",100]}const s=this.getOutputValue();if(i<s)return[-1,"bad-txns-in-belowout",100];const n=i-s;return n<0?[-1,"bad-txns-fee-negative",100]:n>m.MAX_MONEY?[-1,"bad-txns-fee-outofrange",100]:[n,"valid",0]}getModifiedSize(t){null==t&&(t=this.getVirtualSize());for(const e of this.inputs){const i=41+Math.min(110,e.script.getSize());t>i&&(t-=i)}return t}getPriority(t,e,i){if(r("number"==typeof e,"Must pass in height."),this.isCoinbase())return 0;null==i&&(i=this.getVirtualSize());let s=0;for(const{prevout:i}of this.inputs){const r=t.getOutput(i);if(!r)continue;const n=t.getHeight(i);if(-1!==n&&n<=e){const t=e-n;s+=r.value*t}}return Math.floor(s/i)}getChainValue(t){if(this.isCoinbase())return 0;let e=0;for(const{prevout:i}of this.inputs){const r=t.getOutput(i);r&&-1!==t.getHeight(i)&&(e+=r.value)}return e}isFree(t,e,i){return this.getPriority(t,e,i)>b.FREE_THRESHOLD}getMinFee(t,e){return null==t&&(t=this.getVirtualSize()),b.getMinFee(t,e)}getRoundFee(t,e){return null==t&&(t=this.getVirtualSize()),b.getRoundFee(t,e)}getRate(t,e){const i=this.getFee(t);return i<0?0:(null==e&&(e=this.getVirtualSize()),b.getRate(e,i))}getPrevout(){if(this.isCoinbase())return[];const t=new a;for(const e of this.inputs)t.add(e.prevout.hash);return t.toArray()}isWatched(t){let e=!1;t.test(this.hash())&&(e=!0);for(let i=0;i<this.outputs.length;i++){const r=this.outputs[i];if(r.script.test(t)){if(1===t.update){const e=p.fromTX(this,i);t.add(e.toRaw())}else if(2===t.update&&(r.script.isPubkey()||r.script.isMultisig())){const e=p.fromTX(this,i);t.add(e.toRaw())}e=!0}}if(e)return e;for(const e of this.inputs){const i=e.prevout;if(t.test(i.toRaw()))return!0;if(e.script.test(t))return!0}return!1}rhash(){return h.revHex(this.hash())}rwhash(){return h.revHex(this.witnessHash())}txid(){return this.rhash()}wtxid(){return this.rwhash()}toInv(){return new g(g.types.TX,this.hash())}inspect(){return this.format()}format(t,e,i){let r=0,s=0,n=-1,o=null,a=0,l=null;return t&&(s=this.getFee(t),r=this.getRate(t),Number.isSafeInteger(r)||(r=0)),e&&(n=e.height,o=h.revHex(e.hash),a=e.time,l=h.date(a)),null==i&&(i=-1),{hash:this.txid(),witnessHash:this.wtxid(),size:this.getSize(),virtualSize:this.getVirtualSize(),value:c.btc(this.getOutputValue()),fee:c.btc(s),rate:c.btc(r),minFee:c.btc(this.getMinFee()),height:n,block:o,time:a,date:l,index:i,version:this.version,inputs:this.inputs.map(e=>{const i=t?t.getOutputFor(e):null;return e.format(i)}),outputs:this.outputs,locktime:this.locktime}}toJSON(){return this.getJSON()}getJSON(t,e,i,r){let s,n,o,a,c,u;return e&&(n=this.getFee(e),s=this.getRate(e),Number.isSafeInteger(s)||(s=0)),i&&(o=i.height,a=h.revHex(i.hash),c=i.time,u=h.date(c)),t=l.get(t),{hash:this.txid(),witnessHash:this.wtxid(),fee:n,rate:s,mtime:h.now(),height:o,block:a,time:c,date:u,index:r,version:this.version,inputs:this.inputs.map(i=>{const r=e?e.getCoinFor(i):null;return i.getJSON(t,r)}),outputs:this.outputs.map(e=>e.getJSON(t)),locktime:this.locktime,hex:this.toRaw().toString("hex")}}fromJSON(t){r(t,"TX data is required."),r(t.version>>>0===t.version,"Version must be a uint32."),r(Array.isArray(t.inputs),"Inputs must be an array."),r(Array.isArray(t.outputs),"Outputs must be an array."),r(t.locktime>>>0===t.locktime,"Locktime must be a uint32."),this.version=t.version;for(const e of t.inputs)this.inputs.push(f.fromJSON(e));for(const e of t.outputs)this.outputs.push(d.fromJSON(e));return this.locktime=t.locktime,this}static fromJSON(t){return(new this).fromJSON(t)}static fromRaw(t,i){return"string"==typeof t&&(t=e.from(t,i)),(new this).fromRaw(t)}static fromReader(t){return(new this).fromReader(t)}fromRaw(t){return this.fromReader(s.read(t))}fromReader(t){if(function(t){return!(t.left()<6)&&0===t.data[t.offset+4]&&0!==t.data[t.offset+5]}(t))return this.fromWitnessReader(t);t.start(),this.version=t.readU32();const e=t.readVarint();for(let i=0;i<e;i++)this.inputs.push(f.fromReader(t));const i=t.readVarint();for(let e=0;e<i;e++)this.outputs.push(d.fromReader(t));return this.locktime=t.readU32(),this.mutable?t.end():(this._raw=t.endData(),this._size=this._raw.length,this._witness=0),this}fromWitnessReader(t){t.start(),this.version=t.readU32(),r(0===t.readU8(),"Non-zero marker.");let e=t.readU8();r(0!==e,"Flags byte is zero.");const i=t.readVarint();for(let e=0;e<i;e++)this.inputs.push(f.fromReader(t));const s=t.readVarint();for(let e=0;e<s;e++)this.outputs.push(d.fromReader(t));let n=0,o=!1;if(1&e){e^=1,n=t.offset;for(const e of this.inputs)e.witness.fromReader(t),e.witness.items.length>0&&(o=!0);n=t.offset-n+2}if(0!==e)throw new Error("Unknown witness flag.");if(0===this.inputs.length&&0!==this.outputs.length)throw new Error("Zero input witness tx.");return this.locktime=t.readU32(),!this.mutable&&o?(this._raw=t.endData(),this._size=this._raw.length,this._witness=n):t.end(),this}frameNormal(){const t=this.getNormalSizes(),e=s.write(t.size);return this.writeNormal(e),t.data=e.render(),t}frameWitness(){const t=this.getWitnessSizes(),e=s.write(t.size);return this.writeWitness(e),t.data=e.render(),t}writeNormal(t){if(0===this.inputs.length&&0!==this.outputs.length)throw new Error("Cannot serialize zero-input tx.");t.writeU32(this.version),t.writeVarint(this.inputs.length);for(const e of this.inputs)e.toWriter(t);t.writeVarint(this.outputs.length);for(const e of this.outputs)e.toWriter(t);return t.writeU32(this.locktime),t}writeWitness(t){if(0===this.inputs.length&&0!==this.outputs.length)throw new Error("Cannot serialize zero-input tx.");t.writeU32(this.version),t.writeU8(0),t.writeU8(1),t.writeVarint(this.inputs.length);for(const e of this.inputs)e.toWriter(t);t.writeVarint(this.outputs.length);for(const e of this.outputs)e.toWriter(t);const e=t.offset;for(const e of this.inputs)e.witness.toWriter(t);const i=t.offset-e;if(t.writeU32(this.locktime),i===this.inputs.length)throw new Error("Cannot serialize empty-witness tx.");return t}getNormalSizes(){let t=0;t+=4,t+=y.sizeVarint(this.inputs.length);for(const e of this.inputs)t+=e.getSize();t+=y.sizeVarint(this.outputs.length);for(const e of this.outputs)t+=e.getSize();return new E(t+=4,0)}getWitnessSizes(){let t=0,e=0;t+=4,e+=2,t+=y.sizeVarint(this.inputs.length);for(const i of this.inputs)t+=i.getSize(),e+=i.witness.getVarSize();t+=y.sizeVarint(this.outputs.length);for(const e of this.outputs)t+=e.getSize();return new E((t+=4)+e,e)}static isTX(t){return t instanceof k}}class E{constructor(t,e){this.data=null,this.size=t,this.witness=e}}t.exports=k}).call(this,i(1).Buffer)},function(t,e){var i,r,s=t.exports={};function n(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function a(t){if(i===setTimeout)return setTimeout(t,0);if((i===n||!i)&&setTimeout)return i=setTimeout,setTimeout(t,0);try{return i(t,0)}catch(e){try{return i.call(null,t,0)}catch(e){return i.call(this,t,0)}}}!function(){try{i="function"==typeof setTimeout?setTimeout:n}catch(t){i=n}try{r="function"==typeof clearTimeout?clearTimeout:o}catch(t){r=o}}();var h,c=[],l=!1,u=-1;function f(){l&&h&&(l=!1,h.length?c=h.concat(c):u=-1,c.length&&d())}function d(){if(!l){var t=a(f);l=!0;for(var e=c.length;e;){for(h=c,c=[];++u<e;)h&&h[u].run();u=-1,e=c.length}h=null,l=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===o||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{r(t)}catch(e){try{return r.call(null,t)}catch(e){return r.call(this,t)}}}(t)}}function p(t,e){this.fun=t,this.array=e}function g(){}s.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var i=1;i<arguments.length;i++)e[i-1]=arguments[i];c.push(new p(t,e)),1!==c.length||l||a(d)},p.prototype.run=function(){this.fun.apply(null,this.array)},s.title="browser",s.browser=!0,s.env={},s.argv=[],s.version="",s.versions={},s.on=g,s.addListener=g,s.once=g,s.off=g,s.removeListener=g,s.removeAllListeners=g,s.emit=g,s.prependListener=g,s.prependOnceListener=g,s.listeners=function(t){return[]},s.binding=function(t){throw new Error("process.binding is not supported")},s.cwd=function(){return"/"},s.chdir=function(t){throw new Error("process.chdir is not supported")},s.umask=function(){return 0}},function(t,e,i){"use strict";
/*!
 * enforce.js - type enforcement for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */t.exports=function t(e,i,r){if(!e){const e=new TypeError(`'${i}' must be a(n) ${r}.`);throw Error.captureStackTrace&&Error.captureStackTrace(e,t),e}}},function(t,e,i){"use strict";
/*!
 * error.js - encoding error for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */class r extends Error{constructor(t,e,i){super(),this.type="EncodingError",this.name="EncodingError",this.code="ERR_ENCODING",this.message=`${e} (offset=${t}).`,Error.captureStackTrace&&Error.captureStackTrace(this,i||r)}}t.exports=r},function(t,e,i){"use strict";
/*!
 * hash160.js - hash160 for bcrypto
 * Copyright (c) 2017-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */t.exports=i(98)},function(t,e,i){"use strict";
/*!
 * policy.js - bitcoin constants for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(0),s=i(3);e.MAX_TX_VERSION=2,e.MAX_TX_SIZE=s.MAX_BLOCK_SIZE/10,e.MAX_TX_WEIGHT=s.MAX_BLOCK_WEIGHT/10,e.MAX_TX_SIGOPS=s.MAX_BLOCK_SIGOPS/5,e.MAX_TX_SIGOPS_COST=s.MAX_BLOCK_SIGOPS_COST/5,e.BYTES_PER_SIGOP=20,e.MIN_RELAY=1e3,e.BARE_MULTISIG=!0,e.FREE_THRESHOLD=144*s.COIN/250,e.MAX_P2SH_SIGOPS=15,e.MAX_OP_RETURN_BYTES=83,e.MAX_OP_RETURN=80,e.MAX_P2WSH_STACK=100,e.MAX_P2WSH_PUSH=80,e.MAX_P2WSH_SIZE=3600,e.MEMPOOL_MAX_ANCESTORS=25,e.MEMPOOL_MAX_SIZE=1e8,e.MEMPOOL_EXPIRY_TIME=259200,e.MEMPOOL_MAX_ORPHANS=100,e.MIN_BLOCK_WEIGHT=0,e.MAX_BLOCK_WEIGHT=1e6*s.WITNESS_SCALE_FACTOR,e.BLOCK_PRIORITY_WEIGHT=0,e.BLOCK_PRIORITY_THRESHOLD=e.FREE_THRESHOLD,e.getMinFee=function(t,i){if(null==i&&(i=e.MIN_RELAY),r(t>=0),r(i>=0),0===t)return 0;let s=Math.floor(i*t/1e3);return 0===s&&i>0&&(s=i),s},e.getRoundFee=function(t,i){if(null==i&&(i=e.MIN_RELAY),r(t>=0),r(i>=0),0===t)return 0;let s=i*Math.ceil(t/1e3);return 0===s&&i>0&&(s=i),s},e.getRate=function(t,e){return r(t>=0),r(e>=0),0===t?0:Math.floor(1e3*e/t)}},function(t,e,i){"use strict";(function(t){
/*!
 * common.js - common script functions for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(15),n=i(32);e.opcodes={OP_0:0,OP_PUSHDATA1:76,OP_PUSHDATA2:77,OP_PUSHDATA4:78,OP_1NEGATE:79,OP_RESERVED:80,OP_1:81,OP_2:82,OP_3:83,OP_4:84,OP_5:85,OP_6:86,OP_7:87,OP_8:88,OP_9:89,OP_10:90,OP_11:91,OP_12:92,OP_13:93,OP_14:94,OP_15:95,OP_16:96,OP_NOP:97,OP_VER:98,OP_IF:99,OP_NOTIF:100,OP_VERIF:101,OP_VERNOTIF:102,OP_ELSE:103,OP_ENDIF:104,OP_VERIFY:105,OP_RETURN:106,OP_TOALTSTACK:107,OP_FROMALTSTACK:108,OP_2DROP:109,OP_2DUP:110,OP_3DUP:111,OP_2OVER:112,OP_2ROT:113,OP_2SWAP:114,OP_IFDUP:115,OP_DEPTH:116,OP_DROP:117,OP_DUP:118,OP_NIP:119,OP_OVER:120,OP_PICK:121,OP_ROLL:122,OP_ROT:123,OP_SWAP:124,OP_TUCK:125,OP_CAT:126,OP_SUBSTR:127,OP_LEFT:128,OP_RIGHT:129,OP_SIZE:130,OP_INVERT:131,OP_AND:132,OP_OR:133,OP_XOR:134,OP_EQUAL:135,OP_EQUALVERIFY:136,OP_RESERVED1:137,OP_RESERVED2:138,OP_1ADD:139,OP_1SUB:140,OP_2MUL:141,OP_2DIV:142,OP_NEGATE:143,OP_ABS:144,OP_NOT:145,OP_0NOTEQUAL:146,OP_ADD:147,OP_SUB:148,OP_MUL:149,OP_DIV:150,OP_MOD:151,OP_LSHIFT:152,OP_RSHIFT:153,OP_BOOLAND:154,OP_BOOLOR:155,OP_NUMEQUAL:156,OP_NUMEQUALVERIFY:157,OP_NUMNOTEQUAL:158,OP_LESSTHAN:159,OP_GREATERTHAN:160,OP_LESSTHANOREQUAL:161,OP_GREATERTHANOREQUAL:162,OP_MIN:163,OP_MAX:164,OP_WITHIN:165,OP_RIPEMD160:166,OP_SHA1:167,OP_SHA256:168,OP_HASH160:169,OP_HASH256:170,OP_CODESEPARATOR:171,OP_CHECKSIG:172,OP_CHECKSIGVERIFY:173,OP_CHECKMULTISIG:174,OP_CHECKMULTISIGVERIFY:175,OP_NOP1:176,OP_CHECKLOCKTIMEVERIFY:177,OP_CHECKSEQUENCEVERIFY:178,OP_NOP4:179,OP_NOP5:180,OP_NOP6:181,OP_NOP7:182,OP_NOP8:183,OP_NOP9:184,OP_NOP10:185,OP_INVALIDOPCODE:255},e.opcodesByVal={0:"OP_0",76:"OP_PUSHDATA1",77:"OP_PUSHDATA2",78:"OP_PUSHDATA4",79:"OP_1NEGATE",80:"OP_RESERVED",81:"OP_1",82:"OP_2",83:"OP_3",84:"OP_4",85:"OP_5",86:"OP_6",87:"OP_7",88:"OP_8",89:"OP_9",90:"OP_10",91:"OP_11",92:"OP_12",93:"OP_13",94:"OP_14",95:"OP_15",96:"OP_16",97:"OP_NOP",98:"OP_VER",99:"OP_IF",100:"OP_NOTIF",101:"OP_VERIF",102:"OP_VERNOTIF",103:"OP_ELSE",104:"OP_ENDIF",105:"OP_VERIFY",106:"OP_RETURN",107:"OP_TOALTSTACK",108:"OP_FROMALTSTACK",109:"OP_2DROP",110:"OP_2DUP",111:"OP_3DUP",112:"OP_2OVER",113:"OP_2ROT",114:"OP_2SWAP",115:"OP_IFDUP",116:"OP_DEPTH",117:"OP_DROP",118:"OP_DUP",119:"OP_NIP",120:"OP_OVER",121:"OP_PICK",122:"OP_ROLL",123:"OP_ROT",124:"OP_SWAP",125:"OP_TUCK",126:"OP_CAT",127:"OP_SUBSTR",128:"OP_LEFT",129:"OP_RIGHT",130:"OP_SIZE",131:"OP_INVERT",132:"OP_AND",133:"OP_OR",134:"OP_XOR",135:"OP_EQUAL",136:"OP_EQUALVERIFY",137:"OP_RESERVED1",138:"OP_RESERVED2",139:"OP_1ADD",140:"OP_1SUB",141:"OP_2MUL",142:"OP_2DIV",143:"OP_NEGATE",144:"OP_ABS",145:"OP_NOT",146:"OP_0NOTEQUAL",147:"OP_ADD",148:"OP_SUB",149:"OP_MUL",150:"OP_DIV",151:"OP_MOD",152:"OP_LSHIFT",153:"OP_RSHIFT",154:"OP_BOOLAND",155:"OP_BOOLOR",156:"OP_NUMEQUAL",157:"OP_NUMEQUALVERIFY",158:"OP_NUMNOTEQUAL",159:"OP_LESSTHAN",160:"OP_GREATERTHAN",161:"OP_LESSTHANOREQUAL",162:"OP_GREATERTHANOREQUAL",163:"OP_MIN",164:"OP_MAX",165:"OP_WITHIN",166:"OP_RIPEMD160",167:"OP_SHA1",168:"OP_SHA256",169:"OP_HASH160",170:"OP_HASH256",171:"OP_CODESEPARATOR",172:"OP_CHECKSIG",173:"OP_CHECKSIGVERIFY",174:"OP_CHECKMULTISIG",175:"OP_CHECKMULTISIGVERIFY",176:"OP_NOP1",177:"OP_CHECKLOCKTIMEVERIFY",178:"OP_CHECKSEQUENCEVERIFY",179:"OP_NOP4",180:"OP_NOP5",181:"OP_NOP6",182:"OP_NOP7",183:"OP_NOP8",184:"OP_NOP9",185:"OP_NOP10",255:"OP_INVALIDOPCODE"},e.small=[t.from([129]),t.from([]),t.from([1]),t.from([2]),t.from([3]),t.from([4]),t.from([5]),t.from([6]),t.from([7]),t.from([8]),t.from([9]),t.from([10]),t.from([11]),t.from([12]),t.from([13]),t.from([14]),t.from([15]),t.from([16])],e.flags={VERIFY_NONE:0,VERIFY_P2SH:1,VERIFY_STRICTENC:2,VERIFY_DERSIG:4,VERIFY_LOW_S:8,VERIFY_NULLDUMMY:16,VERIFY_SIGPUSHONLY:32,VERIFY_MINIMALDATA:64,VERIFY_DISCOURAGE_UPGRADABLE_NOPS:128,VERIFY_CLEANSTACK:256,VERIFY_CHECKLOCKTIMEVERIFY:512,VERIFY_CHECKSEQUENCEVERIFY:1024,VERIFY_WITNESS:2048,VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM:4096,VERIFY_MINIMALIF:8192,VERIFY_NULLFAIL:16384,VERIFY_WITNESS_PUBKEYTYPE:32768},e.flags.MANDATORY_VERIFY_FLAGS=e.flags.VERIFY_P2SH,e.flags.STANDARD_VERIFY_FLAGS=0|e.flags.MANDATORY_VERIFY_FLAGS|e.flags.VERIFY_DERSIG|e.flags.VERIFY_STRICTENC|e.flags.VERIFY_MINIMALDATA|e.flags.VERIFY_NULLDUMMY|e.flags.VERIFY_DISCOURAGE_UPGRADABLE_NOPS|e.flags.VERIFY_CLEANSTACK|e.flags.VERIFY_MINIMALIF|e.flags.VERIFY_NULLFAIL|e.flags.VERIFY_CHECKLOCKTIMEVERIFY|e.flags.VERIFY_CHECKSEQUENCEVERIFY|e.flags.VERIFY_LOW_S|e.flags.VERIFY_WITNESS|e.flags.VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM|e.flags.VERIFY_WITNESS_PUBKEYTYPE,e.flags.ONLY_STANDARD_VERIFY_FLAGS=e.flags.STANDARD_VERIFY_FLAGS&~e.flags.MANDATORY_VERIFY_FLAGS,e.hashType={ALL:1,NONE:2,SINGLE:3,ANYONECANPAY:128},e.hashTypeByVal={1:"ALL",2:"NONE",3:"SINGLE",128:"ANYONECANPAY"},e.types={NONSTANDARD:0,PUBKEY:1,PUBKEYHASH:2,SCRIPTHASH:3,MULTISIG:4,NULLDATA:5,WITNESSMALFORMED:128,WITNESSSCRIPTHASH:129,WITNESSPUBKEYHASH:130},e.typesByVal={0:"NONSTANDARD",1:"PUBKEY",2:"PUBKEYHASH",3:"SCRIPTHASH",4:"MULTISIG",5:"NULLDATA",128:"WITNESSMALFORMED",129:"WITNESSSCRIPTHASH",130:"WITNESSPUBKEYHASH"},e.isHashType=function(i){if(r(t.isBuffer(i)),0===i.length)return!1;const s=i[i.length-1]&~e.hashType.ANYONECANPAY;return!(s<e.hashType.ALL||s>e.hashType.SINGLE)},e.isLowDER=function(t){return!!e.isSignatureEncoding(t)&&s.isLowDER(t.slice(0,-1))},e.isKeyEncoding=function(e){if(r(t.isBuffer(e)),e.length<33)return!1;if(4===e[0]){if(65!==e.length)return!1}else{if(2!==e[0]&&3!==e[0])return!1;if(33!==e.length)return!1}return!0},e.isCompressedEncoding=function(e){return r(t.isBuffer(e)),33===e.length&&(2===e[0]||3===e[0])},e.isSignatureEncoding=function(e){if(r(t.isBuffer(e)),e.length<9)return!1;if(e.length>73)return!1;if(48!==e[0])return!1;if(e[1]!==e.length-3)return!1;const i=e[3];if(5+i>=e.length)return!1;const s=e[5+i];return!(i+s+7!==e.length||2!==e[2]||0===i||128&e[4]||i>1&&0===e[4]&&!(128&e[5])||2!==e[i+4]||0===s||128&e[i+6]||s>1&&0===e[i+6]&&!(128&e[i+7]))},e.toASM=function(t,i){if(t.length<=4)return n.decode(t).toString(10);if(i&&e.isSignatureEncoding(t)){const i=t[t.length-1];let r=e.hashTypeByVal[31&i]||"";return r&&(i&e.hashType.ANYONECANPAY&&(r+="|ANYONECANPAY"),r=`[${r}]`),t.slice(0,-1).toString("hex")+r}return t.toString("hex")}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * bstring
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bstring
 */e.base58=i(95),e.bech32=i(96),e.cashaddr=i(97)},function(t,e,i){"use strict";
/*!
 * bmutex.js - lock and queue for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.Lock=i(177),e.MapLock=i(178)},function(t,e,i){"use strict";(function(t){
/*!
 * encoding.js - encoding utils for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(22),s=i(23),n=1/4294967296,{MAX_SAFE_INTEGER:o}=Number,a=new Float32Array(1),h=new Uint8Array(a.buffer),c=new Float64Array(1),l=new Uint8Array(c.buffer);a[0]=-1;const u=0===h[3];function f(t,e){const i=m(t,e+4),r=m(t,e);return Pt(0==(4292870144&i),e,"Number exceeds 2^53-1"),4294967296*i+r}function d(t,e){const i=b(t,e+4),r=m(t,e);return Pt(0==(4292870144&i),e,"Number exceeds 2^53-1"),4294967296*i+r}function p(t,e){return t[e++]+256*t[e++]+65536*t[e++]+16777216*t[e++]+4294967296*t[e++]+1099511627776*t[e]}function g(t,e){return t[e++]+256*t[e++]+65536*t[e++]+16777216*t[e++]+4294967296*t[e]}function m(t,e){return t[e++]+256*t[e++]+65536*t[e++]+16777216*t[e]}function b(t,e){return t[e++]+256*t[e++]+65536*t[e]}function w(t,e){return t[e++]+256*t[e]}function y(t,e){return t[e]}function v(t,e){const i=R(t,e),r=R(t,e+4);return Pt(0==(4292870144&i),e,"Number exceeds 2^53-1"),4294967296*i+r}function k(t,e){const i=I(t,e),r=R(t,e+3);return Pt(0==(4292870144&i),e,"Number exceeds 2^53-1"),4294967296*i+r}function E(t,e){return 1099511627776*t[e++]+4294967296*t[e++]+16777216*t[e++]+65536*t[e++]+256*t[e++]+t[e]}function S(t,e){return 4294967296*t[e++]+16777216*t[e++]+65536*t[e++]+256*t[e++]+t[e]}function R(t,e){return 16777216*t[e++]+65536*t[e++]+256*t[e++]+t[e]}function I(t,e){return 65536*t[e++]+256*t[e++]+t[e]}function A(t,e){return 256*t[e++]+t[e]}function x(t,e){const i=P(t,e+4),r=m(t,e);return Pt(It(i,r),"Number exceeds 2^53-1"),4294967296*i+r}function O(t,e){const i=N(t,e+4),r=m(t,e);return Pt(It(i,r),"Number exceeds 2^53-1"),4294967296*i+r}function _(t,e){const i=t[e+4]+256*t[e+5];return t[e++]+256*t[e++]+65536*t[e++]+16777216*t[e]+4294967296*(i|131070*(32768&i))}function B(t,e){return t[e++]+256*t[e++]+65536*t[e++]+16777216*t[e++]+4294967296*(t[e]|33554430*(128&t[e]))}function P(t,e){return t[e++]+256*t[e++]+65536*t[e++]+(t[e]<<24)}function N(t,e){const i=t[e++]+256*t[e++]+65536*t[e];return i|510*(8388608&i)}function T(t,e){const i=t[e++]+256*t[e];return i|131070*(32768&i)}function C(t,e){const i=t[e];return i|33554430*(128&i)}function M(t,e){const i=D(t,e),r=R(t,e+4);return Pt(It(i,r),"Number exceeds 2^53-1"),4294967296*i+r}function U(t,e){const i=H(t,e),r=R(t,e+3);return Pt(It(i,r),"Number exceeds 2^53-1"),4294967296*i+r}function L(t,e){const i=256*t[e++]+t[e++];return 4294967296*(i|131070*(32768&i))+16777216*t[e++]+65536*t[e++]+256*t[e++]+t[e]}function z(t,e){const i=t[e++];return 4294967296*(i|33554430*(128&i))+16777216*t[e++]+65536*t[e++]+256*t[e++]+t[e]}function D(t,e){return(t[e++]<<24)+65536*t[e++]+256*t[e++]+t[e]}function H(t,e){const i=65536*t[e++]+256*t[e++]+t[e];return i|510*(8388608&i)}function F(t,e){const i=256*t[e++]+t[e];return i|131070*(32768&i)}function V(t,e){return h[3]=t[e++],h[2]=t[e++],h[1]=t[e++],h[0]=t[e],a[0]}function K(t,e){return h[0]=t[e++],h[1]=t[e++],h[2]=t[e++],h[3]=t[e],a[0]}function j(t,e){return l[7]=t[e++],l[6]=t[e++],l[5]=t[e++],l[4]=t[e++],l[3]=t[e++],l[2]=t[e++],l[1]=t[e++],l[0]=t[e],c[0]}function q(t,e){return l[0]=t[e++],l[1]=t[e++],l[2]=t[e++],l[3]=t[e++],l[4]=t[e++],l[5]=t[e++],l[6]=t[e++],l[7]=t[e],c[0]}const W=u?V:K,X=u?K:V,Y=u?j:q,G=u?q:j;function J(t,e,i){return r(Number.isSafeInteger(e),"num","integer"),At(t,e,i,!1)}function $(t,e,i){return r(Number.isSafeInteger(e),"num","integer"),xt(t,e,i,!1)}function Z(t,e,i){r(Number.isSafeInteger(e),"num","integer");const s=e*n|0;return t[i++]=e,e>>>=8,t[i++]=e,e>>>=8,t[i++]=e,e>>>=8,t[i++]=e,t[i++]=s,t[i++]=s>>>8,i}function Q(t,e,i){r(Number.isSafeInteger(e),"num","integer");const s=e*n|0;return t[i++]=e,e>>>=8,t[i++]=e,e>>>=8,t[i++]=e,e>>>=8,t[i++]=e,t[i++]=s,i}function tt(t,e,i){return r(Number.isSafeInteger(e),"num","integer"),t[i++]=e,e>>>=8,t[i++]=e,e>>>=8,t[i++]=e,e>>>=8,t[i++]=e,i}function et(t,e,i){return r(Number.isSafeInteger(e),"num","integer"),t[i++]=e,e>>>=8,t[i++]=e,e>>>=8,t[i++]=e,i}function it(t,e,i){return r(Number.isSafeInteger(e),"num","integer"),t[i++]=e,t[i++]=e>>>8,i}function rt(t,e,i){return r(Number.isSafeInteger(e),"num","integer"),t[i]=e,i+1}function st(t,e,i){return r(Number.isSafeInteger(e),"num","integer"),At(t,e,i,!0)}function nt(t,e,i){return r(Number.isSafeInteger(e),"num","integer"),xt(t,e,i,!0)}function ot(t,e,i){r(Number.isSafeInteger(e),"num","integer");const s=e*n|0;return t[i++]=s>>>8,t[i++]=s,t[i+3]=e,e>>>=8,t[i+2]=e,e>>>=8,t[i+1]=e,e>>>=8,t[i]=e,i+4}function at(t,e,i){r(Number.isSafeInteger(e),"num","integer");const s=e*n|0;return t[i++]=s,t[i+3]=e,e>>>=8,t[i+2]=e,e>>>=8,t[i+1]=e,e>>>=8,t[i]=e,i+4}function ht(t,e,i){return r(Number.isSafeInteger(e),"num","integer"),t[i+3]=e,e>>>=8,t[i+2]=e,e>>>=8,t[i+1]=e,e>>>=8,t[i]=e,i+4}function ct(t,e,i){return r(Number.isSafeInteger(e),"num","integer"),t[i+2]=e,e>>>=8,t[i+1]=e,e>>>=8,t[i]=e,i+3}function lt(t,e,i){return r(Number.isSafeInteger(e),"num","integer"),t[i++]=e>>>8,t[i++]=e,i}function ut(t,e,i){return tt(t,e,i)}function ft(t,e,i){return et(t,e,i)}function dt(t,e,i){return ht(t,e,i)}function pt(t,e,i){return ct(t,e,i)}function gt(t,e,i){return r(_t(e),"num","number"),c[0]=e,t[i++]=l[0],t[i++]=l[1],t[i++]=l[2],t[i++]=l[3],t[i++]=l[4],t[i++]=l[5],t[i++]=l[6],t[i++]=l[7],i}function mt(t,e,i){return r(_t(e),"num","number"),c[0]=e,t[i++]=l[7],t[i++]=l[6],t[i++]=l[5],t[i++]=l[4],t[i++]=l[3],t[i++]=l[2],t[i++]=l[1],t[i++]=l[0],i}function bt(t,e,i){return r(_t(e),"num","number"),a[0]=e,t[i++]=h[0],t[i++]=h[1],t[i++]=h[2],t[i++]=h[3],i}function wt(t,e,i){return r(_t(e),"num","number"),a[0]=e,t[i++]=h[3],t[i++]=h[2],t[i++]=h[1],t[i++]=h[0],i}const yt=u?wt:bt,vt=u?bt:wt,kt=u?mt:gt,Et=u?gt:mt;function St(t){return r(Number.isSafeInteger(t),"num","integer"),t<253?1:t<=65535?3:t<=4294967295?5:9}function Rt(e,i){r(t.isBuffer(e),"data","buffer");const s=t.allocUnsafe(i);return e.copy(s,0),s}function It(t,e){return t<0&&(t=~t,0===e&&(t+=1)),0==(4292870144&t)}function At(t,e,i,r){let s=!1;e<0&&(e=-e,s=!0);let o=e*n|0,a=0|e;return s&&(0===a?o=1+~o|0:(o=~o,a=1+~a)),r?dt(t,a,i=dt(t,o,i)):ut(t,o,i=ut(t,a,i))}function xt(t,e,i,r){let s=!1;e<0&&(e=-e,s=!0);let o=e*n|0,a=0|e;return s&&(0===a?o=1+~o|0:(o=~o,a=1+~a)),r?dt(t,a,i=pt(t,o,i)):ft(t,o,i=ut(t,a,i))}class Ot{constructor(t,e){this.size=t,this.value=e}}function _t(t){return"number"==typeof t&&isFinite(t)}function Bt(t,e){if(!t)throw new s(e,"Out of bounds read",Bt)}function Pt(t,e,i){if(!t)throw new s(e,i,Pt)}e.readU=function(t,e,i){switch(i){case 8:return f(t,e);case 7:return d(t,e);case 6:return p(t,e);case 5:return g(t,e);case 4:return m(t,e);case 3:return b(t,e);case 2:return w(t,e);case 1:return y(t,e);default:throw new s(e,"Invalid read length")}},e.readU64=f,e.readU56=d,e.readU48=p,e.readU40=g,e.readU32=m,e.readU24=b,e.readU16=w,e.readU8=y,e.readUBE=function(t,e,i){switch(i){case 8:return v(t,e);case 7:return k(t,e);case 6:return E(t,e);case 5:return S(t,e);case 4:return R(t,e);case 3:return I(t,e);case 2:return A(t,e);case 1:return y(t,e);default:throw new s(e,"Invalid read length")}},e.readU64BE=v,e.readU56BE=k,e.readU48BE=E,e.readU40BE=S,e.readU32BE=R,e.readU24BE=I,e.readU16BE=A,e.readI=function(t,e,i){switch(i){case 8:return x(t,e);case 7:return O(t,e);case 6:return _(t,e);case 5:return B(t,e);case 4:return P(t,e);case 3:return N(t,e);case 2:return T(t,e);case 1:return C(t,e);default:throw new s(e,"Invalid read length")}},e.readI64=x,e.readI56=O,e.readI48=_,e.readI40=B,e.readI32=P,e.readI24=N,e.readI16=T,e.readI8=C,e.readIBE=function(t,e,i){switch(i){case 8:return M(t,e);case 7:return U(t,e);case 6:return L(t,e);case 5:return z(t,e);case 4:return D(t,e);case 3:return H(t,e);case 2:return F(t,e);case 1:return C(t,e);default:throw new s(e,"Invalid read length")}},e.readI64BE=M,e.readI56BE=U,e.readI48BE=L,e.readI40BE=z,e.readI32BE=D,e.readI24BE=H,e.readI16BE=F,e.readFloat=W,e.readFloatBE=X,e.readDouble=Y,e.readDoubleBE=G,e.writeU=function(t,e,i,r){switch(r){case 8:return J(t,e,i);case 7:return $(t,e,i);case 6:return Z(t,e,i);case 5:return Q(t,e,i);case 4:return tt(t,e,i);case 3:return et(t,e,i);case 2:return it(t,e,i);case 1:return rt(t,e,i);default:throw new s(i,"Invalid write length")}},e.writeU64=J,e.writeU56=$,e.writeU48=Z,e.writeU40=Q,e.writeU32=tt,e.writeU24=et,e.writeU16=it,e.writeU8=rt,e.writeUBE=function(t,e,i,r){switch(r){case 8:return st(t,e,i);case 7:return nt(t,e,i);case 6:return ot(t,e,i);case 5:return at(t,e,i);case 4:return ht(t,e,i);case 3:return ct(t,e,i);case 2:return lt(t,e,i);case 1:return rt(t,e,i);default:throw new s(i,"Invalid write length")}},e.writeU64BE=st,e.writeU56BE=nt,e.writeU48BE=ot,e.writeU40BE=at,e.writeU32BE=ht,e.writeU24BE=ct,e.writeU16BE=lt,e.writeI=function(t,e,i,r){switch(r){case 8:return J(t,e,i);case 7:return $(t,e,i);case 6:return Z(t,e,i);case 5:return Q(t,e,i);case 4:return et(t,e,i);case 3:return tt(t,e,i);case 2:return it(t,e,i);case 1:return rt(t,e,i);default:throw new s(i,"Invalid write length")}},e.writeI64=function(t,e,i){return J(t,e,i)},e.writeI56=function(t,e,i){return $(t,e,i)},e.writeI48=function(t,e,i){return Z(t,e,i)},e.writeI40=function(t,e,i){return Q(t,e,i)},e.writeI32=ut,e.writeI24=ft,e.writeI16=function(t,e,i){return it(t,e,i)},e.writeI8=function(t,e,i){return rt(t,e,i)},e.writeIBE=function(t,e,i,r){switch(r){case 8:return st(t,e,i);case 7:return nt(t,e,i);case 6:return ot(t,e,i);case 5:return at(t,e,i);case 4:return ht(t,e,i);case 3:return ct(t,e,i);case 2:return lt(t,e,i);case 1:return rt(t,e,i);default:throw new s(i,"Invalid write length")}},e.writeI64BE=function(t,e,i){return st(t,e,i)},e.writeI56BE=function(t,e,i){return nt(t,e,i)},e.writeI48BE=function(t,e,i){return ot(t,e,i)},e.writeI40BE=function(t,e,i){return at(t,e,i)},e.writeI32BE=dt,e.writeI24BE=pt,e.writeI16BE=function(t,e,i){return lt(t,e,i)},e.writeFloat=yt,e.writeFloatBE=vt,e.writeDouble=kt,e.writeDoubleBE=Et,e.readVarint=function(t,e){let i,r;switch(Bt(e<t.length,e),t[e]){case 255:Bt(e+(r=9)<=t.length,e),Pt((i=f(t,e+1))>4294967295,e,"Non-canonical varint");break;case 254:Bt(e+(r=5)<=t.length,e),Pt((i=m(t,e+1))>65535,e,"Non-canonical varint");break;case 253:Bt(e+(r=3)<=t.length,e),Pt((i=w(t,e+1))>=253,e,"Non-canonical varint");break;default:r=1,i=t[e]}return new Ot(r,i)},e.writeVarint=function(t,e,i){return r(Number.isSafeInteger(e),"num","integer"),e<253?(t[i++]=e,i):e<=65535?(t[i++]=253,it(t,e,i)):e<=4294967295?(t[i++]=254,tt(t,e,i)):(t[i++]=255,J(t,e,i))},e.sizeVarint=St,e.readVarint2=function(t,e){let i=0,r=0;for(;;){Bt(e<t.length,e);const s=t[e++];if(r+=1,Pt(i<=70368744177663-(127&s),e,"Number exceeds 2^53-1"),i=128*i+(127&s),0==(128&s))break;Pt(i!==o,e,"Number exceeds 2^53-1"),i+=1}return new Ot(r,i)},e.writeVarint2=function(t,e,i){r(Number.isSafeInteger(e),"num","integer");const s=[];let n=0;for(;s[n]=127&e|(n?128:0),!(e<=127);)e=(e-e%128)/128-1,n+=1;Bt(i+n+1<=t.length,i);do{t[i++]=s[n]}while(n--);return i},e.sizeVarint2=function(t){r(Number.isSafeInteger(t),"num","integer");let e=0;for(;e+=1,!(t<=127);)t=(t-t%128)/128-1;return e},e.sliceBytes=function(e,i,n){if(r(t.isBuffer(e),"data","buffer"),r(i>>>0===i,"off","integer"),r(n>>>0===n,"size","integer"),i+n>e.length)throw new s(i,"Out of bounds read");return e.slice(i,i+n)},e.readBytes=function(e,i,n){if(r(t.isBuffer(e),"data","buffer"),r(i>>>0===i,"off","integer"),r(n>>>0===n,"size","integer"),i+n>e.length)throw new s(i,"Out of bounds read");const o=t.allocUnsafe(n);return e.copy(o,0,i,i+n),o},e.writeBytes=function(e,i,n){if(r(t.isBuffer(e),"data","buffer"),r(t.isBuffer(i),"value","buffer"),r(n>>>0===n,"off","integer"),n+i.length>e.length)throw new s(n,"Out of bounds write");return i.copy(e,n,0,i.length)},e.readString=function(e,i,n,o){if(null==o&&(o="binary"),r(t.isBuffer(e),"data","buffer"),r(i>>>0===i,"off","integer"),r(n>>>0===n,"size","integer"),r("string"==typeof o,"enc","string"),i+n>e.length)throw new s(i,"Out of bounds read");return e.toString(o,i,i+n)},e.writeString=function(e,i,n,o){if(null==o&&(o="binary"),r(t.isBuffer(e),"data","buffer"),r("string"==typeof i,"str","string"),r(n>>>0===n,"off","integer"),r("string"==typeof o,"enc","string"),0===i.length)return 0;if(n+t.byteLength(i,o)>e.length)throw new s(n,"Out of bounds write");return e.write(i,n,o)},e.realloc=Rt,e.copy=function(e){return r(t.isBuffer(e),"data","buffer"),Rt(e,e.length)},e.concat=function(e,i){r(t.isBuffer(e),"a","buffer"),r(t.isBuffer(i),"b","buffer");const s=e.length+i.length,n=t.allocUnsafe(s);return e.copy(n,0),i.copy(n,e.length),n},e.sizeVarBytes=function(e){return r(t.isBuffer(e),"data","buffer"),St(e.length)+e.length},e.sizeVarlen=function(t){return St(t)+t},e.sizeVarString=function(e,i){if(null==i&&(i="binary"),r("string"==typeof e,"str","string"),r("string"==typeof i,"enc","string"),0===e.length)return 1;const s=t.byteLength(e,i);return St(s)+s}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * sha256.js - SHA256 implementation for bcrypto
 * Copyright (c) 2016-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 * Parts of this software based on hash.js.
 */
const r=i(0),s=i(14),n=-1,o=e.alloc(8,0),a=e.alloc(64,0);a[0]=128;const h=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);class c{constructor(){this.state=new Uint32Array(8),this.msg=new Uint32Array(64),this.block=e.allocUnsafe(64),this.size=n}init(){return this.state[0]=1779033703,this.state[1]=3144134277,this.state[2]=1013904242,this.state[3]=2773480762,this.state[4]=1359893119,this.state[5]=2600822924,this.state[6]=528734635,this.state[7]=1541459225,this.size=0,this}update(t){return r(e.isBuffer(t)),this._update(t,t.length),this}final(){return this._final(e.allocUnsafe(32))}_update(t,e){r(this.size!==n,"Context already finalized.");let i=63&this.size,s=0;if(this.size+=e,i>0){let r=64-i;if(r>e&&(r=e),t.copy(this.block,i,s,s+r),e-=r,s+=r,(i+=r)<64)return;this.transform(this.block,0)}for(;e>=64;)this.transform(t,s),s+=64,e-=64;e>0&&t.copy(this.block,0,s,s+e)}_final(t){r(this.size!==n,"Context already finalized.");const e=this.size%64,i=8*this.size;m(o,i*(1/4294967296),0),m(o,i,4),this._update(a,1+(119-e)%64),this._update(o,8);for(let e=0;e<8;e++)m(t,this.state[e],4*e),this.state[e]=0;for(let t=0;t<64;t++)this.msg[t]=0;for(let t=0;t<64;t++)this.block[t]=0;return this.size=n,t}transform(t,e){const i=this.msg;let r=this.state[0],s=this.state[1],n=this.state[2],o=this.state[3],a=this.state[4],c=this.state[5],m=this.state[6],w=this.state[7],y=0;for(;y<16;y++)i[y]=b(t,e+4*y);for(;y<64;y++)i[y]=d(i[y-2])+i[y-7]+f(i[y-15])+i[y-16];for(y=0;y<64;y++){let t=w+u(a);t+=p(a,c,m),t+=h[y]+i[y];let e=l(r);e+=g(r,s,n),w=m,m=c,c=a,a=o+t,o=n,n=s,s=r,r=t+e}this.state[0]+=r,this.state[1]+=s,this.state[2]+=n,this.state[3]+=o,this.state[4]+=a,this.state[5]+=c,this.state[6]+=m,this.state[7]+=w}static hash(){return new c}static hmac(){return new s(c,64)}static digest(t){return c.ctx.init().update(t).final()}static root(t,i){return r(e.isBuffer(t)&&32===t.length),r(e.isBuffer(i)&&32===i.length),c.ctx.init().update(t).update(i).final()}static multi(t,e,i){const r=c.ctx;return r.init(),r.update(t),r.update(e),i&&r.update(i),r.final()}static mac(t,e){return c.hmac().init(e).update(t).final()}}function l(t){return(t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10)}function u(t){return(t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7)}function f(t){return(t>>>7|t<<25)^(t>>>18|t<<14)^t>>>3}function d(t){return(t>>>17|t<<15)^(t>>>19|t<<13)^t>>>10}function p(t,e,i){return i^t&(e^i)}function g(t,e,i){return t&e|i&(t|e)}function m(t,e,i){t[i]=e>>>24,t[i+1]=e>>16&255,t[i+2]=e>>8&255,t[i+3]=255&e}function b(t,e){return 16777216*(255&t[e])+((255&t[e+1])<<16|(255&t[e+2])<<8|255&t[e+3])}c.native=0,c.id="SHA256",c.size=32,c.bits=256,c.blockSize=64,c.zero=e.alloc(32,0),c.ctx=new c,t.exports=c}).call(this,i(1).Buffer)},function(t,e,i){"use strict";var r=e;r.base=i(111),r.short=i(112),r.mont=i(113),r.edwards=i(114)},function(t,e,i){"use strict";(function(e){
/*!
 * scriptnum.js - script number object for bcoin.
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),{I64:s}=i(58),n=i(33),o=e.alloc(0);class a extends s{constructor(t,e){super(t,e)}getInt(){return this.lt(s.INT32_MIN)?s.LONG_MIN:this.gt(s.INT32_MAX)?s.LONG_MAX:this.toInt()}toRaw(){let t=this;if(t.isZero())return o;let i=!1;t.isNeg()&&(t=t.neg(),i=!0);const s=t.byteLength();let n=0;t.testn(8*s-1)&&(n=1);const a=e.allocUnsafe(s+n);switch(s){case 8:a[7]=t.hi>>>24&255;case 7:a[6]=t.hi>>16&255;case 6:a[5]=t.hi>>8&255;case 5:a[4]=255&t.hi;case 4:a[3]=t.lo>>>24&255;case 3:a[2]=t.lo>>16&255;case 2:a[1]=t.lo>>8&255;case 1:a[0]=255&t.lo}return 128&a[s-1]?(r(1===n),r(a.length===s+n),a[s]=i?128:0):i?(r(0===n),r(a.length===s),a[s-1]|=128):(r(0===n),r(a.length===s)),a}fromRaw(t){if(r(e.isBuffer(t)),0===t.length)return this;switch(t.length){case 8:this.hi|=t[7]<<24;case 7:this.hi|=t[6]<<16;case 6:this.hi|=t[5]<<8;case 5:this.hi|=t[4];case 4:this.lo|=t[3]<<24;case 3:this.lo|=t[2]<<16;case 2:this.lo|=t[1]<<8;case 1:this.lo|=t[0];break;default:for(let e=0;e<t.length;e++)this.orb(e,t[e])}return 128&t[t.length-1]&&(this.setn(8*t.length-1,0),this.ineg()),this}encode(){return this.toRaw()}decode(t,i,s){if(r(e.isBuffer(t)),null!=s&&t.length>s)throw new n("UNKNOWN_ERROR","Script number overflow.");if(i&&!a.isMinimal(t))throw new n("UNKNOWN_ERROR","Non-minimal script number.");return this.fromRaw(t)}inspect(){return`<ScriptNum: ${this.toString(10)}>`}static isMinimal(t){if(r(e.isBuffer(t)),0===t.length)return!0;if(0==(127&t[t.length-1])){if(1===t.length)return!1;if(0==(128&t[t.length-2]))return!1}return!0}static decode(t,e,i){return(new this).decode(t,e,i)}static isScriptNum(t){return t instanceof a}}t.exports=a}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * scripterror.js - script error for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */class r extends Error{constructor(t,e,i){super(),this.type="ScriptError",this.code=t,this.message=t,this.op=-1,this.ip=-1,"string"==typeof e?this.message=e:e&&(this.message=`${t} (op=${e.toSymbol()}, ip=${i})`,this.op=e.value,this.ip=i),Error.captureStackTrace&&Error.captureStackTrace(this,r)}}t.exports=r},function(t,e,i){(function(t){var r=void 0!==t&&t||"undefined"!=typeof self&&self||window,s=Function.prototype.apply;function n(t,e){this._id=t,this._clearFn=e}e.setTimeout=function(){return new n(s.call(setTimeout,r,arguments),clearTimeout)},e.setInterval=function(){return new n(s.call(setInterval,r,arguments),clearInterval)},e.clearTimeout=e.clearInterval=function(t){t&&t.close()},n.prototype.unref=n.prototype.ref=function(){},n.prototype.close=function(){this._clearFn.call(r,this._id)},e.enroll=function(t,e){clearTimeout(t._idleTimeoutId),t._idleTimeout=e},e.unenroll=function(t){clearTimeout(t._idleTimeoutId),t._idleTimeout=-1},e._unrefActive=e.active=function(t){clearTimeout(t._idleTimeoutId);var e=t._idleTimeout;e>=0&&(t._idleTimeoutId=setTimeout(function(){t._onTimeout&&t._onTimeout()},e))},i(91),e.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==t&&t.setImmediate||this&&this.setImmediate,e.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==t&&t.clearImmediate||this&&this.clearImmediate}).call(this,i(11))},function(t,e,i){"use strict";
/*!
 * coinview.js - coin viewpoint object for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const{BufferMap:r}=i(13),s=i(94),n=i(72),o=i(36);t.exports=class{constructor(){this.map=new r,this.undo=new n}get(t){return this.map.get(t)}has(t){return this.map.has(t)}add(t,e){return this.map.set(t,e),e}ensure(t){return this.map.get(t)||this.add(t,new s)}remove(t){const e=this.map.get(t);return e?(this.map.delete(t),e):null}addTX(t,e){const i=t.hash(),r=s.fromTX(t,e);return this.add(i,r)}removeTX(t,e){const i=t.hash(),r=s.fromTX(t,e);for(const t of r.outputs.values())t.spent=!0;return this.add(i,r)}addEntry(t,e){const{hash:i,index:r}=t;return this.ensure(i).add(r,e)}addCoin(t){return this.ensure(t.hash).addCoin(t)}addOutput(t,e){const{hash:i,index:r}=t;return this.ensure(i).addOutput(r,e)}addIndex(t,e,i){const r=t.hash();return this.ensure(r).addIndex(t,e,i)}spendEntry(t){const{hash:e,index:i}=t,r=this.get(e);if(!r)return null;const s=r.spend(i);return s?(this.undo.push(s),s):null}removeEntry(t){const{hash:e,index:i}=t,r=this.get(e);return r?r.remove(i):null}hasEntry(t){const{hash:e,index:i}=t,r=this.get(e);return!!r&&r.has(i)}getEntry(t){const{hash:e,index:i}=t,r=this.get(e);return r?r.get(i):null}isUnspent(t){const{hash:e,index:i}=t,r=this.get(e);return!!r&&r.isUnspent(i)}getCoin(t){const e=this.get(t.hash);return e?e.getCoin(t):null}getOutput(t){const{hash:e,index:i}=t,r=this.get(e);return r?r.getOutput(i):null}getHeight(t){const e=this.getEntry(t);return e?e.height:-1}isCoinbase(t){const e=this.getEntry(t);return!!e&&e.coinbase}hasEntryFor(t){return this.hasEntry(t.prevout)}getEntryFor(t){return this.getEntry(t.prevout)}isUnspentFor(t){return this.isUnspent(t.prevout)}getCoinFor(t){return this.getCoin(t.prevout)}getOutputFor(t){return this.getOutput(t.prevout)}getHeightFor(t){return this.getHeight(t.prevout)}isCoinbaseFor(t){return this.isCoinbase(t.prevout)}async readCoin(t,e){const i=this.getEntry(e);if(i)return i;const r=await t.readCoin(e);return r?this.addEntry(e,r):null}async readInputs(t,e){let i=!0;for(const{prevout:r}of e.inputs)await this.readCoin(t,r)||(i=!1);return i}async spendInputs(t,e){let i=0;for(;i<e.inputs.length;){const r=Math.min(i+4,e.inputs.length),s=[];for(;i<r;i++){const{prevout:r}=e.inputs[i];s.push(this.readCoin(t,r))}const n=await Promise.all(s);for(const t of n){if(!t||t.spent)return!1;t.spent=!0,this.undo.push(t)}}return!0}getSize(t){let e=0;e+=t.inputs.length;for(const{prevout:i}of t.inputs){const t=this.getEntry(i);t&&(e+=t.getSize())}return e}toWriter(t,e){for(const{prevout:i}of e.inputs){const e=this.getEntry(i);e?(t.writeU8(1),e.toWriter(t)):t.writeU8(0)}return t}fromReader(t,e){for(const{prevout:i}of e.inputs){if(0===t.readU8())continue;const e=o.fromReader(t);this.addEntry(i,e)}return this}static fromReader(t,e){return(new this).fromReader(t,e)}}},function(t,e,i){"use strict";
/*!
 * coinentry.js - coin entry object for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(0),s=i(2),n=i(50),o=i(16),a=i(137),{encoding:h}=s,c=2147483647;t.exports=class{constructor(){this.version=1,this.height=-1,this.coinbase=!1,this.output=new o,this.spent=!1,this.raw=null}toOutput(){return this.output}toCoin(t){const e=new n;return e.version=this.version,e.height=this.height,e.coinbase=this.coinbase,e.script=this.output.script,e.value=this.output.value,e.hash=t.hash,e.index=t.index,e}fromOutput(t){return this.output=t,this}static fromOutput(t){return(new this).fromOutput(t)}fromCoin(t){return this.version=t.version,this.height=t.height,this.coinbase=t.coinbase,this.output.script=t.script,this.output.value=t.value,this}static fromCoin(t){return(new this).fromCoin(t)}fromTX(t,e,i){return r("number"==typeof e),r("number"==typeof i),r(e>=0&&e<t.outputs.length),this.version=t.version,this.height=i,this.coinbase=t.isCoinbase(),this.output=t.outputs[e],this}static fromTX(t,e,i){return(new this).fromTX(t,e,i)}getSize(){if(this.raw)return this.raw.length;let t=0;return t+=h.sizeVarint(this.version),(t+=4)+a.size(this.output)}toWriter(t){if(this.raw)return t.writeBytes(this.raw),t;let e=this.height,i=0;return this.coinbase&&(i|=1),-1===e&&(e=c),i|=e<<1,t.writeVarint(this.version),t.writeU32(i),a.pack(this.output,t),t}toRaw(){if(this.raw)return this.raw;const t=this.getSize(),e=s.write(t);return this.toWriter(e),this.raw=e.render(),this.raw}fromReader(t){const e=t.readVarint(),i=t.readU32();let r=i>>>1;return r===c&&(r=-1),this.version=e,this.coinbase=0!=(1&i),this.height=r,a.unpack(this.output,t),this}static fromReader(t){return(new this).fromReader(t)}fromRaw(t){return this.fromReader(s.read(t)),this.raw=t,this}static fromRaw(t){return(new this).fromRaw(t)}}},function(t,e,i){"use strict";
/*!
 * random.js - random for bcrypto
 * Copyright (c) 2017-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */t.exports=i(110)},function(t,e,i){"use strict";(function(e){
/*!
 * invitem.js - inv item object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(2),s=i(5);class n{constructor(t,e){this.type=t,this.hash=e}getSize(){return 36}toWriter(t){return t.writeU32(this.type),t.writeHash(this.hash),t}toRaw(){return this.toWriter(r.write(36)).render()}fromReader(t){return this.type=t.readU32(),this.hash=t.readHash(),this}fromRaw(t){return this.fromReader(r.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t,i){return"string"==typeof t&&(t=e.from(t,i)),(new this).fromRaw(t)}isBlock(){switch(this.type){case n.types.BLOCK:case n.types.WITNESS_BLOCK:case n.types.FILTERED_BLOCK:case n.types.WITNESS_FILTERED_BLOCK:case n.types.CMPCT_BLOCK:return!0;default:return!1}}isTX(){switch(this.type){case n.types.TX:case n.types.WITNESS_TX:return!0;default:return!1}}hasWitness(){return 0!=(this.type&n.WITNESS_FLAG)}rhash(){return s.revHex(this.hash)}}n.types={TX:1,BLOCK:2,FILTERED_BLOCK:3,CMPCT_BLOCK:4,WITNESS_TX:1|1<<30,WITNESS_BLOCK:2|1<<30,WITNESS_FILTERED_BLOCK:3|1<<30},n.typesByVal={1:"TX",2:"BLOCK",3:"FILTERED_BLOCK",4:"CMPCT_BLOCK",[1|1<<30]:"WITNESS_TX",[2|1<<30]:"WITNESS_BLOCK",[3|1<<30]:"WITNESS_FILTERED_BLOCK"},n.WITNESS_FLAG=1<<30,t.exports=n}).call(this,i(1).Buffer)},function(t,e,i){"use strict";"function"==typeof Object.create?t.exports=function(t,e){t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}})}:t.exports=function(t,e){t.super_=e;var i=function(){};i.prototype=e.prototype,t.prototype=new i,t.prototype.constructor=t}},function(t,e,i){"use strict";(function(e){
/*!
 * stack.js - stack object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(26),n=i(32);class o{constructor(t){this.items=t||[]}get length(){return this.items.length}set length(t){this.items.length=t}[Symbol.iterator](){return this.items[Symbol.iterator]()}values(){return this.items.values()}entries(){return this.items.entries()}inspect(){return`<Stack: ${this.toString()}>`}toString(){const t=[];for(const e of this.items)t.push(e.toString("hex"));return t.join(" ")}toASM(t){const e=[];for(const i of this.items)e.push(s.toASM(i,t));return e.join(" ")}clone(){return new this.constructor(this.items.slice())}clear(){return this.items.length=0,this}get(t){return t<0&&(t+=this.items.length),t<0||t>=this.items.length?null:this.items[t]}pop(){return this.items.pop()||null}shift(){return this.items.shift()||null}remove(t){if(t<0&&(t+=this.items.length),t<0||t>=this.items.length)return null;const e=this.items.splice(t,1);return 0===e.length?null:e[0]}set(t,i){return t<0&&(t+=this.items.length),r(e.isBuffer(i)),r(t>=0&&t<=this.items.length),this.items[t]=i,this}push(t){return r(e.isBuffer(t)),this.items.push(t),this}unshift(t){return r(e.isBuffer(t)),this.items.unshift(t),this}insert(t,i){return t<0&&(t+=this.items.length),r(e.isBuffer(i)),r(t>=0&&t<=this.items.length),this.items.splice(t,0,i),this}erase(t,e){t<0&&(t=this.items.length+t),e<0&&(e=this.items.length+e),this.items.splice(t,e-t)}swap(t,e){t<0&&(t=this.items.length+t),e<0&&(e=this.items.length+e);const i=this.items[t],r=this.items[e];this.items[t]=r,this.items[e]=i}getData(t){return this.get(t)}popData(){return this.pop()}shiftData(){return this.shift()}removeData(t){return this.remove(t)}setData(t,e){return this.set(t,e)}pushData(t){return this.push(t)}unshiftData(t){return this.unshift(t)}insertData(t,e){return this.insert(t,e)}getLength(t){const e=this.get(t);return e?e.length:-1}getString(t,e){const i=this.get(t);return i?o.toString(i,e):null}popString(t){const e=this.pop();return e?o.toString(e,t):null}shiftString(t){const e=this.shift();return e?o.toString(e,t):null}removeString(t,e){const i=this.remove(t);return i?o.toString(i,e):null}setString(t,e,i){return this.set(t,o.fromString(e,i))}pushString(t,e){return this.push(o.fromString(t,e))}unshiftString(t,e){return this.unshift(o.fromString(t,e))}insertString(t,e,i){return this.insert(t,o.fromString(e,i))}getNum(t,e,i){const r=this.get(t);return r?o.toNum(r,e,i):null}popNum(t,e){const i=this.pop();return i?o.toNum(i,t,e):null}shiftNum(t,e){const i=this.shift();return i?o.toNum(i,t,e):null}removeNum(t,e,i){const r=this.remove(t);return r?o.toNum(r,e,i):null}setNum(t,e){return this.set(t,o.fromNum(e))}pushNum(t){return this.push(o.fromNum(t))}unshiftNum(t){return this.unshift(o.fromNum(t))}insertNum(t,e){return this.insert(t,o.fromNum(e))}getInt(t,e,i){const r=this.get(t);return r?o.toInt(r,e,i):-1}popInt(t,e){const i=this.pop();return i?o.toInt(i,t,e):-1}shiftInt(t,e){const i=this.shift();return i?o.toInt(i,t,e):-1}removeInt(t,e,i){const r=this.remove(t);return r?o.toInt(r,e,i):-1}setInt(t,e){return this.set(t,o.fromInt(e))}pushInt(t){return this.push(o.fromInt(t))}unshiftInt(t){return this.unshift(o.fromInt(t))}insertInt(t,e){return this.insert(t,o.fromInt(e))}getBool(t){const e=this.get(t);return!!e&&o.toBool(e)}popBool(){const t=this.pop();return!!t&&o.toBool(t)}shiftBool(){const t=this.shift();return!!t&&o.toBool(t)}removeBool(t){const e=this.remove(t);return!!e&&o.toBool(e)}setBool(t,e){return this.set(t,o.fromBool(e))}pushBool(t){return this.push(o.fromBool(t))}unshiftBool(t){return this.unshift(o.fromBool(t))}insertBool(t,e){return this.insert(t,o.fromBool(e))}static isStack(t){return t instanceof o}static toString(t,i){return r(e.isBuffer(t)),t.toString(i||"utf8")}static fromString(t,i){return r("string"==typeof t),e.from(t,i||"utf8")}static toNum(t,e,i){return n.decode(t,e,i)}static fromNum(t){return r(n.isScriptNum(t)),t.encode()}static toInt(t,e,i){return o.toNum(t,e,i).getInt()}static fromInt(t){if(r("number"==typeof t),t>=-1&&t<=16)return s.small[t+1];const e=n.fromNumber(t);return o.fromNum(e)}static toBool(t){r(e.isBuffer(t));for(let e=0;e<t.length;e++)if(0!==t[e])return e!==t.length-1||128!==t[e];return!1}static fromBool(t){return r("boolean"==typeof t),o.fromInt(t?1:0)}}t.exports=o}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * headers.js - headers object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(2),s=i(5),n=i(64);class o extends n{constructor(t){super(),t&&this.parseOptions(t)}verifyBody(){return!0}getSize(){return 81}toWriter(t){return this.writeHead(t),t.writeVarint(0),t}toRaw(){const t=this.getSize();return this.toWriter(r.write(t)).render()}fromReader(t){return this.readHead(t),t.readVarint(),this}fromRaw(t){return this.fromReader(r.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t,i){return"string"==typeof t&&(t=e.from(t,i)),(new this).fromRaw(t)}static fromHead(t,i){return"string"==typeof t&&(t=e.from(t,i)),(new this).fromHead(t)}static fromEntry(t){const e=new this;return e.version=t.version,e.prevBlock=t.prevBlock,e.merkleRoot=t.merkleRoot,e.time=t.time,e.bits=t.bits,e.nonce=t.nonce,e._hash=t.hash,e._hhash=t.hash,e}toHeaders(){return this}static fromBlock(t){const e=new this(t);return e._hash=t._hash,e._hhash=t._hhash,e}toJSON(){return this.getJSON()}getJSON(t,e,i){return{hash:this.rhash(),height:i,version:this.version,prevBlock:s.revHex(this.prevBlock),merkleRoot:s.revHex(this.merkleRoot),time:this.time,bits:this.bits,nonce:this.nonce}}fromJSON(t){return this.parseJSON(t),this}static fromJSON(t){return(new this).fromJSON(t)}inspect(){return this.format()}format(t,e){return{hash:this.rhash(),height:null!=e?e:-1,date:s.date(this.time),version:this.version.toString(16),prevBlock:s.revHex(this.prevBlock),merkleRoot:s.revHex(this.merkleRoot),time:this.time,bits:this.bits,nonce:this.nonce}}static isHeaders(t){return t instanceof o}}t.exports=o}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){
/*!
 * common.js - p2p constants for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(75);e.PROTOCOL_VERSION=70015,e.MIN_VERSION=70001,e.HEADERS_VERSION=31800,e.PONG_VERSION=6e4,e.BLOOM_VERSION=70011,e.SENDHEADERS_VERSION=7012,e.COMPACT_VERSION=70014,e.COMPACT_WITNESS_VERSION=70015,e.services={NETWORK:1,GETUTXO:2,BLOOM:4,WITNESS:8},e.LOCAL_SERVICES=0|e.services.NETWORK|e.services.WITNESS,e.REQUIRED_SERVICES=0|e.services.NETWORK,e.USER_AGENT=`/bcoin:${r.version}/`,e.MAX_MESSAGE=4e6,e.BAN_TIME=86400,e.BAN_SCORE=100,e.nonce=function(){const e=t.allocUnsafe(8);return e.writeUInt32LE(4294967296*Math.random()>>>0,0,!0),e.writeUInt32LE(4294967296*Math.random()>>>0,4,!0),e},e.ZERO_KEY=t.alloc(33,0),e.ZERO_SIG=t.alloc(64,0),e.ZERO_NONCE=t.alloc(8,0),e.MAX_INV=5e4,e.MAX_REQUEST=5e3,e.MAX_BLOCK_REQUEST=51e3,e.MAX_TX_REQUEST=1e4}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * packets.js - worker packets for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(0),s=i(2),n=i(10),o=i(65),a=i(16),h=i(44),c=i(20),l=i(45),u=i(35),f=i(33),{encoding:d}=s,p={ENV:0,EVENT:1,LOG:2,ERROR:3,ERRORRESULT:4,CHECK:5,CHECKRESULT:6,SIGN:7,SIGNRESULT:8,CHECKINPUT:9,CHECKINPUTRESULT:10,SIGNINPUT:11,SIGNINPUTRESULT:12,ECVERIFY:13,ECVERIFYRESULT:14,ECSIGN:15,ECSIGNRESULT:16,MINE:17,MINERESULT:18,SCRYPT:19,SCRYPTRESULT:20};class g{constructor(){this.id=++g.id>>>0,this.cmd=-1}getSize(){throw new Error("Abstract method.")}toWriter(){throw new Error("Abstract method.")}fromRaw(){throw new Error("Abstract method.")}static fromRaw(){throw new Error("Abstract method.")}}g.id=0;class m extends g{constructor(t){super(),this.cmd=p.ENV,this.env=t||{},this.json=JSON.stringify(this.env)}getSize(){return d.sizeVarString(this.json,"utf8")}toWriter(t){return t.writeVarString(this.json,"utf8"),t}fromRaw(t){const e=s.read(t,!0);return this.json=e.readVarString("utf8"),this.env=JSON.parse(this.json),this}static fromRaw(t){return(new m).fromRaw(t)}}class b extends g{constructor(t){super(),this.cmd=p.EVENT,this.items=t||[],this.json=JSON.stringify(this.items)}getSize(){return d.sizeVarString(this.json,"utf8")}toWriter(t){return t.writeVarString(this.json,"utf8"),t}fromRaw(t){const e=s.read(t,!0);return this.json=e.readVarString("utf8"),this.items=JSON.parse(this.json),this}static fromRaw(t){return(new b).fromRaw(t)}}class w extends g{constructor(t){super(),this.cmd=p.LOG,this.text=t||""}getSize(){return d.sizeVarString(this.text,"utf8")}toWriter(t){return t.writeVarString(this.text,"utf8"),t}fromRaw(t){const e=s.read(t,!0);return this.text=e.readVarString("utf8"),this}static fromRaw(t){return(new w).fromRaw(t)}}class y extends g{constructor(t){super(),this.cmd=p.ERROR,this.error=t||new Error}getSize(){const t=this.error;let e=0;switch(e+=d.sizeVarString(L(t.message),"utf8"),e+=d.sizeVarString(L(t.stack),"utf8"),e+=d.sizeVarString(L(t.type),"utf8"),typeof t.code){case"number":e+=1,e+=4;break;case"string":e+=1,e+=d.sizeVarString(t.code,"utf8");break;default:e+=1}return e}toWriter(t){const e=this.error;switch(t.writeVarString(L(e.message),"utf8"),t.writeVarString(L(e.stack),"utf8"),t.writeVarString(L(e.type),"utf8"),typeof e.code){case"number":t.writeU8(2),t.writeI32(e.code);break;case"string":t.writeU8(1),t.writeVarString(e.code,"utf8");break;default:t.writeU8(0)}return t}fromRaw(t){const e=s.read(t,!0),i=this.error;switch(i.message=e.readVarString("utf8"),i.stack=e.readVarString("utf8"),i.type=e.readVarString("utf8"),e.readU8()){case 2:i.code=e.readI32();break;case 1:i.code=e.readVarString("utf8");break;default:i.code=null}return this}static fromRaw(t){return(new y).fromRaw(t)}}class v extends y{constructor(t){super(t),this.cmd=p.ERRORRESULT}static fromRaw(t){return(new v).fromRaw(t)}}class k extends g{constructor(t,e,i){super(),this.cmd=p.CHECK,this.tx=t||null,this.view=e||null,this.flags=null!=i?i:null}getSize(){return this.tx.getSize()+this.view.getSize(this.tx)+4}toWriter(t){return this.tx.toWriter(t),this.view.toWriter(t,this.tx),t.writeI32(null!=this.flags?this.flags:-1),t}fromRaw(t){const e=s.read(t,!0);return this.tx=c.fromReader(e),this.view=u.fromReader(e,this.tx),this.flags=e.readI32(),-1===this.flags&&(this.flags=null),this}static fromRaw(t){return(new k).fromRaw(t)}}class E extends g{constructor(t){super(),this.cmd=p.CHECKRESULT,this.error=t||null}getSize(){const t=this.error;let e=0;return t?(e+=1,e+=d.sizeVarString(L(t.message),"utf8"),e+=d.sizeVarString(L(t.stack),"utf8"),e+=d.sizeVarString(L(t.code),"utf8"),e+=1,e+=4):e+=1}toWriter(t){const e=this.error;return e?(t.writeU8(1),t.writeVarString(L(e.message),"utf8"),t.writeVarString(L(e.stack),"utf8"),t.writeVarString(L(e.code),"utf8"),t.writeU8(-1===e.op?255:e.op),t.writeU32(-1===e.ip?4294967295:e.ip),t):(t.writeU8(0),t)}fromRaw(t){const e=s.read(t,!0);if(0===e.readU8())return this;const i=new f("");return i.message=e.readVarString("utf8"),i.stack=e.readVarString("utf8"),i.code=e.readVarString("utf8"),i.op=e.readU8(),i.ip=e.readU32(),255===i.op&&(i.op=-1),4294967295===i.ip&&(i.ip=-1),this.error=i,this}static fromRaw(t){return(new E).fromRaw(t)}}class S extends g{constructor(t,e,i){super(),this.cmd=p.SIGN,this.tx=t||null,this.rings=e||[],this.type=null!=i?i:1}getSize(){let t=0;t+=this.tx.getSize(),t+=this.tx.view.getSize(this.tx),t+=d.sizeVarint(this.rings.length);for(const e of this.rings)t+=e.getSize();return t+1}toWriter(t){this.tx.toWriter(t),this.tx.view.toWriter(t,this.tx),t.writeVarint(this.rings.length);for(const e of this.rings)e.toWriter(t);return t.writeU8(this.type),t}fromRaw(t){const e=s.read(t,!0);this.tx=h.fromReader(e),this.tx.view.fromReader(e,this.tx);const i=e.readVarint();for(let t=0;t<i;t++){const t=l.fromReader(e);this.rings.push(t)}return this.type=e.readU8(),this}static fromRaw(t){return(new S).fromRaw(t)}}class R extends g{constructor(t,e,i){super(),this.cmd=p.SIGNRESULT,this.total=t||0,this.script=i||[],this.witness=e||[]}fromTX(t,e){this.total=e;for(const e of t.inputs)this.script.push(e.script),this.witness.push(e.witness);return this}static fromTX(t,e){return(new R).fromTX(t,e)}getSize(){let t=0;t+=d.sizeVarint(this.total),t+=d.sizeVarint(this.script.length);for(let e=0;e<this.script.length;e++){const i=this.script[e],r=this.witness[e];t+=i.getVarSize(),t+=r.getVarSize()}return t}toWriter(t){r(this.script.length===this.witness.length),t.writeVarint(this.total),t.writeVarint(this.script.length);for(let e=0;e<this.script.length;e++)this.script[e].toWriter(t),this.witness[e].toWriter(t);return t}inject(t){r(this.script.length===t.inputs.length),r(this.witness.length===t.inputs.length);for(let e=0;e<t.inputs.length;e++){const i=t.inputs[e];i.script=this.script[e],i.witness=this.witness[e]}}fromRaw(t){const e=s.read(t,!0);this.total=e.readVarint();const i=e.readVarint();for(let t=0;t<i;t++)this.script.push(n.fromReader(e)),this.witness.push(o.fromReader(e));return this}static fromRaw(t){return(new R).fromRaw(t)}}class I extends g{constructor(t,e,i,r){super(),this.cmd=p.CHECKINPUT,this.tx=t||null,this.index=e,this.coin=i||null,this.flags=null!=r?r:null}getSize(){let t=0;return t+=this.tx.getSize(),t+=d.sizeVarint(this.index),t+=d.sizeVarint(this.coin.value),(t+=this.coin.script.getVarSize())+4}toWriter(t){return this.tx.toWriter(t),t.writeVarint(this.index),t.writeVarint(this.coin.value),this.coin.script.toWriter(t),t.writeI32(null!=this.flags?this.flags:-1),t}fromRaw(t){const e=s.read(t,!0);return this.tx=c.fromReader(e),this.index=e.readVarint(),this.coin=new a,this.coin.value=e.readVarint(),this.coin.script.fromReader(e),this.flags=e.readI32(),-1===this.flags&&(this.flags=null),this}static fromRaw(t){return(new I).fromRaw(t)}}class A extends E{constructor(t){super(t),this.cmd=p.CHECKINPUTRESULT}static fromRaw(t){return(new A).fromRaw(t)}}class x extends g{constructor(t,e,i,r,s){super(),this.cmd=p.SIGNINPUT,this.tx=t||null,this.index=e,this.coin=i||null,this.ring=r||null,this.type=null!=s?s:1}getSize(){let t=0;return t+=this.tx.getSize(),t+=d.sizeVarint(this.index),t+=d.sizeVarint(this.coin.value),t+=this.coin.script.getVarSize(),(t+=this.ring.getSize())+1}toWriter(t){return this.tx.toWriter(t),t.writeVarint(this.index),t.writeVarint(this.coin.value),this.coin.script.toWriter(t),this.ring.toWriter(t),t.writeU8(this.type),t}fromRaw(t){const e=s.read(t,!0);return this.tx=h.fromReader(e),this.index=e.readVarint(),this.coin=new a,this.coin.value=e.readVarint(),this.coin.script.fromReader(e),this.ring=l.fromReader(e),this.type=e.readU8(),this}static fromRaw(t){return(new x).fromRaw(t)}}class O extends g{constructor(t,e,i){super(),this.cmd=p.SIGNINPUTRESULT,this.value=t||!1,this.script=i||null,this.witness=e||null}fromTX(t,e,i){const s=t.inputs[e];return r(s),this.value=i,this.script=s.script,this.witness=s.witness,this}static fromTX(t,e,i){return(new O).fromTX(t,e,i)}getSize(){return 1+this.script.getVarSize()+this.witness.getVarSize()}toWriter(t){return t.writeU8(this.value?1:0),this.script.toWriter(t),this.witness.toWriter(t),t}inject(t,e){const i=t.inputs[e];r(i),i.script=this.script,i.witness=this.witness}fromRaw(t){const e=s.read(t,!0);return this.value=1===e.readU8(),this.script=n.fromReader(e),this.witness=o.fromReader(e),this}static fromRaw(t){return(new O).fromRaw(t)}}class _ extends g{constructor(t,e,i){super(),this.cmd=p.ECVERIFY,this.msg=t||null,this.sig=e||null,this.key=i||null}getSize(){let t=0;return t+=d.sizeVarBytes(this.msg),(t+=d.sizeVarBytes(this.sig))+d.sizeVarBytes(this.key)}toWriter(t){return t.writeVarBytes(this.msg),t.writeVarBytes(this.sig),t.writeVarBytes(this.key),t}fromRaw(t){const e=s.read(t,!0);return this.msg=e.readVarBytes(),this.sig=e.readVarBytes(),this.key=e.readVarBytes(),this}static fromRaw(t){return(new _).fromRaw(t)}}class B extends g{constructor(t){super(),this.cmd=p.ECVERIFYRESULT,this.value=t}getSize(){return 1}toWriter(t){return t.writeU8(this.value?1:0),t}fromRaw(t){const e=s.read(t,!0);return this.value=1===e.readU8(),this}static fromRaw(t){return(new B).fromRaw(t)}}class P extends g{constructor(t,e){super(),this.cmd=p.ECSIGN,this.msg=t||null,this.key=e||null}getSize(){let t=0;return(t+=d.sizeVarBytes(this.msg))+d.sizeVarBytes(this.key)}toWriter(t){return t.writeVarBytes(this.msg),t.writeVarBytes(this.key),t}fromRaw(t){const e=s.read(t,!0);return this.msg=e.readVarBytes(),this.key=e.readVarBytes(),this}static fromRaw(t){return(new P).fromRaw(t)}}class N extends g{constructor(t){super(),this.cmd=p.ECSIGNRESULT,this.sig=t}getSize(){return d.sizeVarBytes(this.sig)}toWriter(t){return t.writeVarBytes(this.sig),t}fromRaw(t){const e=s.read(t,!0);return this.sig=e.readVarBytes(),this}static fromRaw(t){return(new N).fromRaw(t)}}class T extends g{constructor(t,e,i,r){super(),this.cmd=p.MINE,this.data=t||null,this.target=e||null,this.min=null!=i?i:-1,this.max=null!=r?r:-1}getSize(){return 120}toWriter(t){return t.writeBytes(this.data),t.writeBytes(this.target),t.writeU32(this.min),t.writeU32(this.max),t}fromRaw(t){const e=s.read(t,!0);return this.data=e.readBytes(80),this.target=e.readBytes(32),this.min=e.readU32(),this.max=e.readU32(),this}static fromRaw(t){return(new T).fromRaw(t)}}class C extends g{constructor(t){super(),this.cmd=p.MINERESULT,this.nonce=null!=t?t:-1}getSize(){return 5}toWriter(t){return t.writeU8(-1!==this.nonce?1:0),t.writeU32(this.nonce),t}fromRaw(t){const e=s.read(t,!0);return this.nonce=-1,1===e.readU8()&&(this.nonce=e.readU32()),this}static fromRaw(t){return(new C).fromRaw(t)}}class M extends g{constructor(t,e,i,r,s,n){super(),this.cmd=p.SCRYPT,this.passwd=t||null,this.salt=e||null,this.N=null!=i?i:-1,this.r=null!=r?r:-1,this.p=null!=s?s:-1,this.len=null!=n?n:-1}getSize(){let t=0;return t+=d.sizeVarBytes(this.passwd),(t+=d.sizeVarBytes(this.salt))+16}toWriter(t){return t.writeVarBytes(this.passwd),t.writeVarBytes(this.salt),t.writeU32(this.N),t.writeU32(this.r),t.writeU32(this.p),t.writeU32(this.len),t}fromRaw(t){const e=s.read(t,!0);return this.passwd=e.readVarBytes(),this.salt=e.readVarBytes(),this.N=e.readU32(),this.r=e.readU32(),this.p=e.readU32(),this.len=e.readU32(),this}static fromRaw(t){return(new M).fromRaw(t)}}class U extends g{constructor(t){super(),this.cmd=p.SCRYPTRESULT,this.key=t||null}getSize(){return d.sizeVarBytes(this.key)}toWriter(t){return t.writeVarBytes(this.key),t}fromRaw(t){const e=s.read(t,!0);return this.key=e.readVarBytes(),this}static fromRaw(t){return(new U).fromRaw(t)}}function L(t){return"string"!=typeof t?"":t}e.types=p,e.EnvPacket=m,e.EventPacket=b,e.LogPacket=w,e.ErrorPacket=y,e.ErrorResultPacket=v,e.CheckPacket=k,e.CheckResultPacket=E,e.SignPacket=S,e.SignResultPacket=R,e.CheckInputPacket=I,e.CheckInputResultPacket=A,e.SignInputPacket=x,e.SignInputResultPacket=O,e.ECVerifyPacket=_,e.ECVerifyResultPacket=B,e.ECSignPacket=P,e.ECSignResultPacket=N,e.MinePacket=T,e.MineResultPacket=C,e.ScryptPacket=M,e.ScryptResultPacket=U},function(t,e,i){"use strict";(function(r){
/*!
 * mtx.js - mutable transaction object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),{encoding:n}=i(2),{BufferMap:o}=i(13),a=i(10),h=i(20),c=i(52),l=i(16),u=i(50),f=i(17),d=i(35),p=i(12),g=i(3),m=i(25),b=i(18),w=i(40),y=i(5);class v extends h{constructor(t){super(),this.mutable=!0,this.changeIndex=-1,this.view=new d,t&&this.fromOptions(t)}fromOptions(t){if(null!=t.version&&(s(t.version>>>0===t.version,"Version must a be uint32."),this.version=t.version),t.inputs){s(Array.isArray(t.inputs),"Inputs must be an array.");for(const e of t.inputs)this.addInput(e)}if(t.outputs){s(Array.isArray(t.outputs),"Outputs must be an array.");for(const e of t.outputs)this.addOutput(e)}return null!=t.locktime&&(s(t.locktime>>>0===t.locktime,"Locktime must be a uint32."),this.locktime=t.locktime),null!=t.changeIndex&&(-1!==t.changeIndex?(s(t.changeIndex>>>0===t.changeIndex,"Change index must be a uint32."),this.changeIndex=t.changeIndex):this.changeIndex=-1),this}static fromOptions(t){return(new this).fromOptions(t)}clone(){const t=new this.constructor;return t.inject(this),t.changeIndex=this.changeIndex,t}addInput(t){const e=c.fromOptions(t);return this.inputs.push(e),e}addOutpoint(t){const e=f.fromOptions(t),i=c.fromOutpoint(e);return this.inputs.push(i),i}addCoin(t){s(t instanceof u,"Cannot add non-coin.");const e=c.fromCoin(t);return this.inputs.push(e),this.view.addCoin(t),e}addTX(t,e,i){s(t instanceof h,"Cannot add non-transaction."),null==i&&(i=-1);const r=c.fromTX(t,e);return this.inputs.push(r),this.view.addIndex(t,e,i),r}addOutput(t,e){let i;return i=null!=e?l.fromScript(t,e):l.fromOptions(t),this.outputs.push(i),i}check(t){return super.check(this.view,t)}checkAsync(t,e){return super.checkAsync(this.view,t,e)}verify(t){try{this.check(t)}catch(t){if("ScriptError"===t.type)return!1;throw t}return!0}async verifyAsync(t,e){try{await this.checkAsync(t,e)}catch(t){if("ScriptError"===t.type)return!1;throw t}return!0}getFee(){return super.getFee(this.view)}getInputValue(){return super.getInputValue(this.view)}getInputAddresses(){return super.getInputAddresses(this.view)}getAddresses(){return super.getAddresses(this.view)}getInputHashes(t){return super.getInputHashes(this.view,t)}getHashes(t){return super.getHashes(this.view,t)}hasCoins(){return super.hasCoins(this.view)}getSigops(t){return super.getSigops(this.view,t)}getSigopsCost(t){return super.getSigopsCost(this.view,t)}getSigopsSize(){return super.getSigopsSize(this.getSigopsCost())}verifyInputs(t){const[e]=this.checkInputs(t);return-1!==e}checkInputs(t){return super.checkInputs(this.view,t)}scriptInput(t,e,i){const r=this.inputs[t];if(s(r,"Input does not exist."),s(e,"No coin passed."),0!==r.script.raw.length||0!==r.witness.items.length)return!0;const n=e.script,o=n.getScripthash();if(o){const t=i.getRedeem(o);if(!t)return!1;if(t.isProgram()){const e=t.getWitnessScripthash();if(e){const s=i.getRedeem(e);if(!s)return!1;const n=this.scriptVector(s,i);return!!n&&(n.push(s.toRaw()),r.witness.fromStack(n),r.script.fromItems([t.toRaw()]),!0)}const s=t.getWitnessPubkeyhash();if(s){const e=a.fromPubkeyhash(s),n=this.scriptVector(e,i);return!!n&&(r.witness.fromStack(n),r.script.fromItems([t.toRaw()]),!0)}return!1}const e=this.scriptVector(t,i);return!!e&&(e.push(t.toRaw()),r.script.fromStack(e),!0)}if(n.isProgram()){const t=n.getWitnessScripthash();if(t){const e=i.getRedeem(t);if(!e)return!1;const s=this.scriptVector(e,i);return!!s&&(s.push(e.toRaw()),r.witness.fromStack(s),!0)}const e=n.getWitnessPubkeyhash();if(e){const t=a.fromPubkeyhash(e),s=this.scriptVector(t,i);return!!s&&(r.witness.fromStack(s),!0)}return!1}const h=this.scriptVector(n,i);return!!h&&(r.script.fromStack(h),!0)}scriptVector(t,e){const i=t.getPubkey();if(i){if(!i.equals(e.publicKey))return null;const t=new w;return t.pushInt(0),t}const r=t.getPubkeyhash();if(r){if(!r.equals(e.getKeyHash()))return null;const t=new w;return t.pushInt(0),t.pushData(e.publicKey),t}const[,s]=t.getMultisig();if(-1!==s){if(-1===t.indexOf(e.publicKey))return null;const i=new w;i.pushInt(0);for(let t=0;t<s;t++)i.pushInt(0);return i}return null}async signInputAsync(t,e,i,r,s){return s?await s.signInput(this,t,e,i,r,s):this.signInput(t,e,i,r)}signInput(t,e,i,r){const n=this.inputs[t],o=i.privateKey;s(n,"Input does not exist."),s(e,"No coin passed.");const h=e.value;let c=e.script,l=n.script,u=0,f=!1;if(c.isScripthash()){if(!(c=n.script.getRedeem()))throw new Error("Input has not been templated.");f=!0}if(c.isWitnessScripthash()){if(!(c=n.witness.getRedeem()))throw new Error("Input has not been templated.");l=n.witness,f=!0,u=1}else{const t=c.getWitnessPubkeyhash();t&&(c=a.fromPubkeyhash(t),l=n.witness,f=!1,u=1)}const d=this.signature(t,c,h,o,r,u);if(f){const t=l.toStack(),e=t.pop(),r=this.signVector(c,t,d,i);return!!r&&(r.push(e),l.fromStack(r),!0)}const p=l.toStack(),g=this.signVector(c,p,d,i);return!!g&&(l.fromStack(g),!0)}signVector(t,e,i,r){const n=t.getPubkey();if(n){if(!r.publicKey.equals(n))return null;if(0===e.length)throw new Error("Input has not been templated.");return e.get(0).length>0?e:(e.set(0,i),e)}const o=t.getPubkeyhash();if(o){if(!r.getKeyHash().equals(o))return null;if(2!==e.length)throw new Error("Input has not been templated.");if(0===e.get(1).length)throw new Error("Input has not been templated.");return e.get(0).length>0?e:(e.set(0,i),e)}const[a,h]=t.getMultisig();if(-1!==a){if(e.length<2)throw new Error("Input has not been templated.");if(0!==e.get(0).length)throw new Error("Input has not been templated.");if(e.length-1>h)throw new Error("Input has not been templated.");let n=0;for(let t=1;t<e.length;t++)e.get(t).length>0&&(n+=1);if(n===a&&e.length-1===a)return e;for(;e.length-1<h;)e.pushInt(0);const o=[];for(const e of t.code)e.data&&o.push(e.data);let c=-1;for(let t=0;t<o.length;t++)if(o[t].equals(r.publicKey)){c=t;break}if(-1===c)return null;if((c+=1)<e.length&&n<a&&0===e.get(c).length&&(e.set(c,i),n+=1),n>=a){for(let t=e.length-1;t>=1;t--)0===e.get(t).length&&e.remove(t);for(;n>a;)e.pop(),n-=1;s(n===a),s(e.length-1===a)}return e}return null}isSigned(){for(let t=0;t<this.inputs.length;t++){const{prevout:e}=this.inputs[t],i=this.view.getOutput(e);if(!i)return!1;if(!this.isInputSigned(t,i))return!1}return!0}isInputSigned(t,e){const i=this.inputs[t];s(i,"Input does not exist."),s(e,"No coin passed.");let r=e.script,n=i.script,o=!1;if(r.isScripthash()){if(!(r=i.script.getRedeem()))return!1;o=!0}if(r.isWitnessScripthash()){if(!(r=i.witness.getRedeem()))return!1;n=i.witness,o=!0}else{const t=r.getWitnessPubkeyhash();t&&(r=a.fromPubkeyhash(t),n=i.witness,o=!1)}const h=n.toStack();return o&&h.pop(),this.isVectorSigned(r,h)}isVectorSigned(t,e){if(t.isPubkey())return 1===e.length&&0!==e.get(0).length;if(t.isPubkeyhash())return 2===e.length&&0!==e.get(0).length&&0!==e.get(1).length;const[i]=t.getMultisig();if(-1!==i){if(e.length-1!==i)return!1;for(let t=1;t<e.length;t++)if(0===e.get(t).length)return!1;return!0}return!1}template(t){if(Array.isArray(t)){let e=0;for(const i of t)e+=this.template(i);return e}let e=0;for(let i=0;i<this.inputs.length;i++){const{prevout:r}=this.inputs[i],s=this.view.getOutput(r);s&&t.ownOutput(s)&&this.scriptInput(i,s,t)&&(e+=1)}return e}sign(t,e){if(Array.isArray(t)){let i=0;for(const r of t)i+=this.sign(r,e);return i}s(t.privateKey,"No private key available.");let i=0;for(let r=0;r<this.inputs.length;r++){const{prevout:s}=this.inputs[r],n=this.view.getOutput(s);n&&t.ownOutput(n)&&this.scriptInput(r,n,t)&&this.signInput(r,n,t,e)&&(i+=1)}return i}async signAsync(t,e,i){return i?await i.sign(this,t,e):this.sign(t,e)}async estimateSize(t){const e=g.WITNESS_SCALE_FACTOR;let i=0;i+=4,i+=n.sizeVarint(this.inputs.length),i+=40*this.inputs.length,i+=n.sizeVarint(this.outputs.length);for(const t of this.outputs)i+=t.getSize();i+=4;for(const{prevout:r}of this.inputs){const s=this.view.getOutput(r);if(!s){i+=110;continue}const o=s.script;if(o.isPubkey()){i+=1,i+=74;continue}if(o.isPubkeyhash()){i+=1,i+=74,i+=34;continue}const[a]=o.getMultisig();if(-1===a)if(o.isWitnessPubkeyhash()){let t=0;t+=1,t+=74,i+=t=((t+=34)+e-1)/e|0}else{if(t){const e=await t(o);if(-1!==e){i+=e;continue}}if(o.isScripthash())i+=1,i+=149;else if(o.isWitnessScripthash()){let t=0;t+=1,i+=t=((t+=149)+e-1)/e|0}else i+=110}else{let t=0;t+=1,t+=74*a,i+=t+=n.sizeVarint(t)}}return i}selectCoins(t,e){return new k(this,e).select(t)}subtractIndex(t,e){s("number"==typeof t),s("number"==typeof e);const i=this.outputs[t];if(!i)throw new Error("Subtraction index does not exist.");if(i.value<e+i.getDustThreshold())throw new Error("Could not subtract fee.");i.value-=e}subtractFee(t){s("number"==typeof t);let e=0;for(const t of this.outputs)t.script.isUnspendable()||(e+=1);if(0===e)throw new Error("Could not subtract fee.");const i=t%e,r=(t-i)/e;for(const t of this.outputs)if(!t.script.isUnspendable()){if(t.value<r+t.getDustThreshold())throw new Error("Could not subtract fee.");t.value-=r}for(const t of this.outputs)if(!t.script.isUnspendable()&&t.value>=i+t.getDustThreshold())return void(t.value-=i);throw new Error("Could not subtract fee.")}async fund(t,e){s(e,"Options are required."),s(e.changeAddress,"Change address is required."),s(0===this.inputs.length,"TX is already funded.");const i=await this.selectCoins(t,e);for(const t of i.chosen)this.addCoin(t);if(i.subtractFee){const t=i.subtractIndex;-1!==t?this.subtractIndex(t,i.fee):this.subtractFee(i.fee)}const r=new l;return r.value=i.change,r.script.fromAddress(i.changeAddress),r.isDust(m.MIN_RELAY)?(this.changeIndex=-1,s.strictEqual(this.getFee(),i.fee+i.change)):(this.outputs.push(r),this.changeIndex=this.outputs.length-1,s.strictEqual(this.getFee(),i.fee)),i}sortMembers(){let t=null;-1!==this.changeIndex&&(t=this.outputs[this.changeIndex],s(t)),this.inputs.sort(A),this.outputs.sort(x),-1!==this.changeIndex&&(this.changeIndex=this.outputs.indexOf(t),s(-1!==this.changeIndex))}avoidFeeSniping(t){s("number"==typeof t,"Must pass in height."),0==(10*Math.random()|0)&&(t-=100*Math.random()|0)<0&&(t=0),this.setLocktime(t)}setLocktime(t){s(t>>>0===t,"Locktime must be a uint32."),s(this.inputs.length>0,"Cannot set sequence with no inputs.");for(const t of this.inputs)4294967295===t.sequence&&(t.sequence=4294967294);this.locktime=t}setSequence(t,e,i){const r=this.inputs[t];s(r,"Input does not exist."),s(e>>>0===e,"Locktime must be a uint32."),this.version=2,i?(e>>>=g.SEQUENCE_GRANULARITY,e&=g.SEQUENCE_MASK,e|=g.SEQUENCE_TYPE_FLAG):e&=g.SEQUENCE_MASK,r.sequence=e}inspect(){return this.format()}format(){return super.format(this.view)}toJSON(){return super.toJSON(null,this.view)}getJSON(t){return super.getJSON(t,this.view)}fromJSON(t){super.fromJSON(t);for(let e=0;e<t.inputs.length;e++){const i=t.inputs[e],{prevout:r}=i;if(!i.coin)continue;const s=u.fromJSON(i.coin);s.hash=y.fromRev(r.hash),s.index=r.index,this.view.addCoin(s)}return this}static fromJSON(t){return(new this).fromJSON(t)}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t,e){return"string"==typeof t&&(t=r.from(t,e)),(new this).fromRaw(t)}toTX(){return(new h).inject(this)}commit(){return[this.toTX(),this.view]}static fromTX(t){return(new this).inject(t)}static isMTX(t){return t instanceof v}}class k{constructor(t,e){this.tx=t.clone(),this.coins=[],this.outputValue=0,this.index=0,this.chosen=[],this.change=0,this.fee=k.MIN_FEE,this.selection="value",this.subtractFee=!1,this.subtractIndex=-1,this.height=-1,this.depth=-1,this.hardFee=-1,this.rate=k.FEE_RATE,this.maxFee=-1,this.round=!1,this.changeAddress=null,this.inputs=new o,this.estimate=null,this.injectInputs(),e&&this.fromOptions(e)}fromOptions(t){if(t.selection&&(s("string"==typeof t.selection),this.selection=t.selection),null!=t.subtractFee&&("number"==typeof t.subtractFee?(s(Number.isSafeInteger(t.subtractFee)),s(t.subtractFee>=-1),this.subtractIndex=t.subtractFee,this.subtractFee=-1!==this.subtractIndex):(s("boolean"==typeof t.subtractFee),this.subtractFee=t.subtractFee)),null!=t.subtractIndex&&(s(Number.isSafeInteger(t.subtractIndex)),s(t.subtractIndex>=-1),this.subtractIndex=t.subtractIndex,this.subtractFee=-1!==this.subtractIndex),null!=t.height&&(s(Number.isSafeInteger(t.height)),s(t.height>=-1),this.height=t.height),null!=t.confirmations&&(s(Number.isSafeInteger(t.confirmations)),s(t.confirmations>=-1),this.depth=t.confirmations),null!=t.depth&&(s(Number.isSafeInteger(t.depth)),s(t.depth>=-1),this.depth=t.depth),null!=t.hardFee&&(s(Number.isSafeInteger(t.hardFee)),s(t.hardFee>=-1),this.hardFee=t.hardFee),null!=t.rate&&(s(Number.isSafeInteger(t.rate)),s(t.rate>=0),this.rate=t.rate),null!=t.maxFee&&(s(Number.isSafeInteger(t.maxFee)),s(t.maxFee>=-1),this.maxFee=t.maxFee),null!=t.round&&(s("boolean"==typeof t.round),this.round=t.round),t.changeAddress){const e=t.changeAddress;"string"==typeof e?this.changeAddress=p.fromString(e):(s(e instanceof p),this.changeAddress=e)}if(t.estimate&&(s("function"==typeof t.estimate),this.estimate=t.estimate),t.inputs){s(Array.isArray(t.inputs));for(let e=0;e<t.inputs.length;e++){const i=t.inputs[e];s(i&&"object"==typeof i);const{hash:n,index:o}=i;s(r.isBuffer(n)),s("number"==typeof o),this.inputs.set(f.toKey(n,o),e)}}return this}injectInputs(){if(this.tx.inputs.length>0)for(let t=0;t<this.tx.inputs.length;t++){const{prevout:e}=this.tx.inputs[t];this.inputs.set(e.toKey(),t)}}init(t){switch(this.coins=t.slice(),this.outputValue=this.tx.getOutputValue(),this.index=0,this.chosen=[],this.change=0,this.fee=k.MIN_FEE,this.tx.inputs.length=0,this.selection){case"all":case"random":this.coins.sort(R);break;case"age":this.coins.sort(S);break;case"value":this.coins.sort(I);break;default:throw new E(`Bad selection type: ${this.selection}.`)}}total(){return this.subtractFee?this.outputValue:this.outputValue+this.fee}isFull(){return this.tx.getInputValue()>=this.total()}isSpendable(t){return!this.tx.view.hasEntry(t)&&(-1===this.height||(t.coinbase?-1!==t.height&&!(this.height+1<t.height+g.COINBASE_MATURITY):-1===this.depth||!(t.getDepth(this.height)<this.depth)))}getFee(t){if(this.round){const e=m.getRoundFee(t,this.rate);return Math.min(e,k.MAX_FEE)}const e=m.getMinFee(t,this.rate);return Math.min(e,k.MAX_FEE)}fund(){if(this.inputs.size>0){const t=[];for(let e=0;e<this.inputs.size;e++)t.push(null);for(const e of this.coins){const{hash:i,index:r}=e,s=f.toKey(i,r),n=this.inputs.get(s);null!=n&&(t[n]=e,this.inputs.delete(s))}if(this.inputs.size>0)throw new Error("Could not resolve preferred inputs.");for(const e of t)this.tx.addCoin(e),this.chosen.push(e)}for(;this.index<this.coins.length;){const t=this.coins[this.index++];if(this.isSpendable(t)&&(this.tx.addCoin(t),this.chosen.push(t),"all"!==this.selection&&this.isFull()))break}}async select(t){if(this.init(t),-1!==this.hardFee?this.selectHard():await this.selectEstimate(),!this.isFull())throw new E("Not enough funds.",this.tx.getInputValue(),this.total());return this.change=this.tx.getInputValue()-this.total(),this}async selectEstimate(){this.fee=k.MIN_FEE,this.fund();const t=new l;this.changeAddress?t.script.fromAddress(this.changeAddress):t.script.fromPubkeyhash(r.allocUnsafe(20)),this.tx.outputs.push(t);do{const t=await this.tx.estimateSize(this.estimate);if(this.fee=this.getFee(t),this.maxFee>0&&this.fee>this.maxFee)throw new E("Fee is too high.");this.isFull()||this.fund()}while(!this.isFull()&&this.index<this.coins.length)}selectHard(){this.fee=Math.min(this.hardFee,k.MAX_FEE),this.fund()}}k.FEE_RATE=1e4,k.MIN_FEE=1e4,k.MAX_FEE=g.COIN/10;class E extends Error{constructor(t,e,i){super(),this.type="FundingError",this.message=t,this.availableFunds=-1,this.requiredFunds=-1,null!=e&&(this.message+=` (available=${b.btc(e)},`,this.message+=` required=${b.btc(i)})`,this.availableFunds=e,this.requiredFunds=i),Error.captureStackTrace&&Error.captureStackTrace(this,E)}}function S(t,e){return(t=-1===t.height?2147483647:t.height)-(-1===e.height?2147483647:e.height)}function R(t,e){return Math.random()>.5?1:-1}function I(t,e){return-1===t.height&&-1!==e.height?1:-1!==t.height&&-1===e.height?-1:e.value-t.value}function A(t,e){return t.compare(e)}function x(t,e){return t.compare(e)}(e=v).MTX=v,e.Selector=k,e.FundingError=E,t.exports=e}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * keyring.js - keyring object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),{base58:s}=i(27),n=i(2),o=i(24),a=i(9),h=i(4),c=i(10),l=i(12),u=i(16),f=i(15),{encoding:d}=n,p=e.alloc(33,0);class g{constructor(t){this.witness=!1,this.nested=!1,this.publicKey=p,this.privateKey=null,this.script=null,this._keyHash=null,this._keyAddress=null,this._program=null,this._nestedHash=null,this._nestedAddress=null,this._scriptHash160=null,this._scriptHash256=null,this._scriptAddress=null,t&&this.fromOptions(t)}fromOptions(t){let i=m(t);if(null!=t.witness&&(r("boolean"==typeof t.witness),this.witness=t.witness),null!=t.nested&&(r("boolean"==typeof t.nested),this.nested=t.nested),e.isBuffer(i))return this.fromKey(i);i=m(t.key),t.publicKey&&(i=m(t.publicKey)),t.privateKey&&(i=m(t.privateKey));const s=t.script,n=t.compressed;return s?this.fromScript(i,s,n):this.fromKey(i,n)}static fromOptions(t){return(new this).fromOptions(t)}refresh(){this._keyHash=null,this._keyAddress=null,this._program=null,this._nestedHash=null,this._nestedAddress=null,this._scriptHash160=null,this._scriptHash256=null,this._scriptAddress=null}fromPrivate(t,i){return r(e.isBuffer(t),"Private key must be a buffer."),r(f.privateKeyVerify(t),"Not a valid private key."),this.privateKey=t,this.publicKey=f.publicKeyCreate(t,!1!==i),this}static fromPrivate(t,e){return(new this).fromPrivate(t,e)}fromPublic(t){return r(e.isBuffer(t),"Public key must be a buffer."),r(f.publicKeyVerify(t),"Not a valid public key."),this.publicKey=t,this}generate(t){const e=f.privateKeyGenerate();return this.fromKey(e,t)}static generate(t){return(new this).generate(t)}static fromPublic(t){return(new this).fromPublic(t)}fromKey(t,i){return r(e.isBuffer(t),"Key must be a buffer."),32===t.length?this.fromPrivate(t,!1!==i):this.fromPublic(t)}static fromKey(t,e){return(new this).fromKey(t,e)}fromScript(t,e,i){return r(e instanceof c,"Non-script passed into KeyRing."),this.fromKey(t,i),this.script=e,this}static fromScript(t,e,i){return(new this).fromScript(t,e,i)}getSecretSize(){let t=0;return t+=1,t+=this.privateKey.length,33===this.publicKey.length&&(t+=1),t+4}toSecret(t){const e=this.getSecretSize(),i=n.write(e);return r(this.privateKey,"Cannot serialize without private key."),t=h.get(t),i.writeU8(t.keyPrefix.privkey),i.writeBytes(this.privateKey),33===this.publicKey.length&&i.writeU8(1),i.writeChecksum(a.digest),s.encode(i.render())}fromSecret(t,e){const i=n.read(s.decode(t),!0),o=i.readU8();h.fromWIF(o,e);const c=i.readBytes(32);let l=!1;return i.left()>4&&(r(1===i.readU8(),"Bad compression flag."),l=!0),i.verifyChecksum(a.digest),this.fromPrivate(c,l)}static fromSecret(t,e){return(new this).fromSecret(t,e)}getPrivateKey(t,e){return this.privateKey?"base58"===t?this.toSecret(e):"hex"===t?this.privateKey.toString("hex"):this.privateKey:null}getPublicKey(t){return"base58"===t?s.encode(this.publicKey):"hex"===t?this.publicKey.toString("hex"):this.publicKey}getScript(){return this.script}getProgram(){if(!this.witness)return null;if(!this._program){let t;if(this.script){const e=this.script.sha256();t=c.fromProgram(0,e)}else{const e=o.digest(this.publicKey);t=c.fromProgram(0,e)}this._program=t}return this._program}getNestedHash(t){return this.witness?(this._nestedHash||(this._nestedHash=this.getProgram().hash160()),"hex"===t?this._nestedHash.toString("hex"):this._nestedHash):null}getNestedAddress(t,e){if(!this.witness)return null;if(!this._nestedAddress){const t=this.getNestedHash(),e=l.fromScripthash(t);this._nestedAddress=e}return"base58"===t?this._nestedAddress.toBase58(e):"string"===t?this._nestedAddress.toString(e):this._nestedAddress}getScriptHash(t){return this.witness?this.getScriptHash256(t):this.getScriptHash160(t)}getScriptHash160(t){return this.script?(this._scriptHash160||(this._scriptHash160=this.script.hash160()),"hex"===t?this._scriptHash160.toString("hex"):this._scriptHash160):null}getScriptHash256(t){return this.script?(this._scriptHash256||(this._scriptHash256=this.script.sha256()),"hex"===t?this._scriptHash256.toString("hex"):this._scriptHash256):null}getScriptAddress(t,e){if(!this.script)return null;if(!this._scriptAddress){let t;if(this.witness){const e=this.getScriptHash256();t=l.fromWitnessScripthash(e)}else{const e=this.getScriptHash160();t=l.fromScripthash(e)}this._scriptAddress=t}return"base58"===t?this._scriptAddress.toBase58(e):"string"===t?this._scriptAddress.toString(e):this._scriptAddress}getKeyHash(t){return this._keyHash||(this._keyHash=o.digest(this.publicKey)),"hex"===t?this._keyHash.toString("hex"):this._keyHash}getKeyAddress(t,e){if(!this._keyAddress){const t=this.getKeyHash();let e;e=this.witness?l.fromWitnessPubkeyhash(t):l.fromPubkeyhash(t),this._keyAddress=e}return"base58"===t?this._keyAddress.toBase58(e):"string"===t?this._keyAddress.toString(e):this._keyAddress}getHash(t){return this.nested?this.getNestedHash(t):this.script?this.getScriptHash(t):this.getKeyHash(t)}getAddress(t,e){return this.nested?this.getNestedAddress(t,e):this.script?this.getScriptAddress(t,e):this.getKeyAddress(t,e)}ownHash(t){return!!(t&&(t.equals(this.getKeyHash())||this.script&&t.equals(this.getScriptHash())||this.witness&&t.equals(this.getNestedHash())))}ownOutput(t,e){let i;return t instanceof u?i=t:(i=t.outputs[e],r(i,"Output does not exist.")),this.ownHash(i.getHash())}getRedeem(t){if(this.witness&&t.equals(this.getNestedHash()))return this.getProgram();if(this.script){if(t.equals(this.getScriptHash160()))return this.script;if(t.equals(this.getScriptHash256()))return this.script}return null}sign(t){return r(this.privateKey,"Cannot sign without private key."),f.signDER(t,this.privateKey)}verify(t,e){return f.verifyDER(t,e,this.publicKey)}getVersion(){return this.witness?this.nested?-1:0:-1}getType(){return this.nested?l.types.SCRIPTHASH:this.witness?l.types.WITNESS:this.script?l.types.SCRIPTHASH:l.types.PUBKEYHASH}inspect(){return this.toJSON()}toJSON(t){return{witness:this.witness,nested:this.nested,publicKey:this.publicKey.toString("hex"),script:this.script?this.script.toRaw().toString("hex"):null,program:this.witness?this.getProgram().toRaw().toString("hex"):null,type:l.typesByVal[this.getType()].toLowerCase(),address:this.getAddress("string",t)}}fromJSON(t){return r(t),r("boolean"==typeof t.witness),r("boolean"==typeof t.nested),r("string"==typeof t.publicKey),r(!t.script||"string"==typeof t.script),this.witness=t.witness,this.nested=t.nested,this.publicKey=e.from(t.publicKey,"hex"),t.script&&(this.script=e.from(t.script,"hex")),this}static fromJSON(t){return(new this).fromJSON(t)}getSize(){let t=0;return t+=1,this.privateKey?(t+=d.sizeVarBytes(this.privateKey),t+=1):t+=d.sizeVarBytes(this.publicKey),t+(this.script?this.script.getVarSize():1)}toWriter(t){let e=0;return this.witness&&(e|=1),this.nested&&(e|=2),t.writeU8(e),this.privateKey?(t.writeVarBytes(this.privateKey),t.writeU8(33===this.publicKey.length?1:0)):t.writeVarBytes(this.publicKey),this.script?t.writeVarBytes(this.script.toRaw()):t.writeVarint(0),t}toRaw(){const t=this.getSize();return this.toWriter(n.write(t)).render()}fromReader(t){const e=t.readU8();this.witness=0!=(1&e),this.nested=0!=(2&e);const i=t.readVarBytes();if(32===i.length){const e=1===t.readU8();this.privateKey=i,this.publicKey=f.publicKeyCreate(i,e)}else this.publicKey=i,r(f.publicKeyVerify(i),"Invalid public key.");const s=t.readVarBytes();return s.length>0&&(this.script=c.fromRaw(s)),this}fromRaw(t){return this.fromReader(n.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t){return(new this).fromRaw(t)}static isKeyRing(t){return t instanceof g}}function m(t){return t?t.privateKey?t.privateKey:t.publicKey?t.publicKey:t:t}t.exports=g}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * blgr.js - basic logger for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */t.exports=i(172)},function(t,e,i){(function(t){function i(t,e){for(var i=0,r=t.length-1;r>=0;r--){var s=t[r];"."===s?t.splice(r,1):".."===s?(t.splice(r,1),i++):i&&(t.splice(r,1),i--)}if(e)for(;i--;i)t.unshift("..");return t}var r=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/,s=function(t){return r.exec(t).slice(1)};function n(t,e){if(t.filter)return t.filter(e);for(var i=[],r=0;r<t.length;r++)e(t[r],r,t)&&i.push(t[r]);return i}e.resolve=function(){for(var e="",r=!1,s=arguments.length-1;s>=-1&&!r;s--){var o=s>=0?arguments[s]:t.cwd();if("string"!=typeof o)throw new TypeError("Arguments to path.resolve must be strings");o&&(e=o+"/"+e,r="/"===o.charAt(0))}return e=i(n(e.split("/"),function(t){return!!t}),!r).join("/"),(r?"/":"")+e||"."},e.normalize=function(t){var r=e.isAbsolute(t),s="/"===o(t,-1);return(t=i(n(t.split("/"),function(t){return!!t}),!r).join("/"))||r||(t="."),t&&s&&(t+="/"),(r?"/":"")+t},e.isAbsolute=function(t){return"/"===t.charAt(0)},e.join=function(){var t=Array.prototype.slice.call(arguments,0);return e.normalize(n(t,function(t,e){if("string"!=typeof t)throw new TypeError("Arguments to path.join must be strings");return t}).join("/"))},e.relative=function(t,i){function r(t){for(var e=0;e<t.length&&""===t[e];e++);for(var i=t.length-1;i>=0&&""===t[i];i--);return e>i?[]:t.slice(e,i-e+1)}t=e.resolve(t).substr(1),i=e.resolve(i).substr(1);for(var s=r(t.split("/")),n=r(i.split("/")),o=Math.min(s.length,n.length),a=o,h=0;h<o;h++)if(s[h]!==n[h]){a=h;break}var c=[];for(h=a;h<s.length;h++)c.push("..");return(c=c.concat(n.slice(a))).join("/")},e.sep="/",e.delimiter=":",e.dirname=function(t){var e=s(t),i=e[0],r=e[1];return i||r?(r&&(r=r.substr(0,r.length-1)),i+r):"."},e.basename=function(t,e){var i=s(t)[2];return e&&i.substr(-1*e.length)===e&&(i=i.substr(0,i.length-e.length)),i},e.extname=function(t){return s(t)[3]};var o="b"==="ab".substr(-1)?function(t,e,i){return t.substr(e,i)}:function(t,e,i){return e<0&&(e=t.length+e),t.substr(e,i)}}).call(this,i(21))},function(t,e,i){"use strict";
/*!
 * binary.js - binary search utils for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.search=function(t,e,i,r){let s=0,n=t.length-1;for(;s<=n;){const r=s+n>>>1,o=i(t[r],e);if(0===o)return r;o<0?s=r+1:n=r-1}return r?s:-1},e.insert=function(t,i,r,s){const n=e.search(t,i,r,!0);return s&&n<t.length&&0===r(t[n],i)?-1:(0===n?t.unshift(i):n===t.length?t.push(i):t.splice(n,0,i),n)},e.remove=function(t,i,r){const s=e.search(t,i,r,!1);return-1!==s&&(function(t,e){if(0===e)return void t.shift();let i=e+1;for(;i<t.length;)t[e++]=t[i++];t.pop()}(t,s),!0)}},function(t,e,i){"use strict";
/*!
 * bn.js - big numbers for bcoin
 * Copyright (c) 2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */t.exports=i(8)},function(t,e,i){"use strict";(function(e){
/*!
 * coin.js - coin object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(2),n=i(5),o=i(18),a=i(16),h=i(4),c=i(3),l=i(17);class u extends a{constructor(t){super(),this.version=1,this.height=-1,this.coinbase=!1,this.hash=c.ZERO_HASH,this.index=0,t&&this.fromOptions(t)}fromOptions(t){return r(t,"Coin data is required."),null!=t.version&&(r(t.version>>>0===t.version,"Version must be a uint32."),this.version=t.version),null!=t.height&&(-1!==t.height?(r(t.height>>>0===t.height,"Height must be a uint32."),this.height=t.height):this.height=-1),null!=t.value&&(r(Number.isSafeInteger(t.value)&&t.value>=0,"Value must be a uint64."),this.value=t.value),t.script&&this.script.fromOptions(t.script),null!=t.coinbase&&(r("boolean"==typeof t.coinbase,"Coinbase must be a boolean."),this.coinbase=t.coinbase),null!=t.hash&&(r(e.isBuffer(t.hash)),this.hash=t.hash),null!=t.index&&(r(t.index>>>0===t.index,"Index must be a uint32."),this.index=t.index),this}static fromOptions(t){return(new this).fromOptions(t)}clone(){r(!1,"Coins are not cloneable.")}getDepth(t){return r("number"==typeof t,"Must pass a height."),-1===this.height?0:-1===t?0:t<this.height?0:t-this.height+1}toKey(){return l.toKey(this.hash,this.index)}fromKey(t){const{hash:e,index:i}=l.fromKey(t);return this.hash=e,this.index=i,this}static fromKey(t){return(new this).fromKey(t)}rhash(){return n.revHex(this.hash)}txid(){return this.rhash()}inspect(){return{type:this.getType(),version:this.version,height:this.height,value:o.btc(this.value),script:this.script,coinbase:this.coinbase,hash:this.hash?n.revHex(this.hash):null,index:this.index,address:this.getAddress()}}toJSON(){return this.getJSON()}getJSON(t,e){let i=this.getAddress();return t=h.get(t),i&&(i=i.toString(t)),{version:this.version,height:this.height,value:this.value,script:this.script.toJSON(),address:i,coinbase:this.coinbase,hash:e?void 0:this.rhash(),index:e?void 0:this.index}}fromJSON(t){return r(t,"Coin data required."),r(t.version>>>0===t.version,"Version must be a uint32."),r(-1===t.height||t.height>>>0===t.height,"Height must be a uint32."),r(Number.isSafeInteger(t.value)&&t.value>=0,"Value must be a uint64."),r("boolean"==typeof t.coinbase,"Coinbase must be a boolean."),this.version=t.version,this.height=t.height,this.value=t.value,this.script.fromJSON(t.script),this.coinbase=t.coinbase,null!=t.hash&&(r("string"==typeof t.hash,"Hash must be a string."),r(64===t.hash.length,"Hash must be a string."),r(t.index>>>0===t.index,"Index must be a uint32."),this.hash=n.fromRev(t.hash),this.index=t.index),this}static fromJSON(t){return(new this).fromJSON(t)}getSize(){return 17+this.script.getVarSize()}toWriter(t){let e=this.height;return-1===e&&(e=2147483647),t.writeU32(this.version),t.writeU32(e),t.writeI64(this.value),t.writeVarBytes(this.script.toRaw()),t.writeU8(this.coinbase?1:0),t}toRaw(){const t=this.getSize();return this.toWriter(s.write(t)).render()}fromReader(t){return this.version=t.readU32(),this.height=t.readU32(),this.value=t.readI64(),this.script.fromRaw(t.readVarBytes()),this.coinbase=1===t.readU8(),2147483647===this.height&&(this.height=-1),this}fromRaw(t){return this.fromReader(s.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t,i){return"string"==typeof t&&(t=e.from(t,i)),(new this).fromRaw(t)}fromTX(t,e,i){return r("number"==typeof e),r("number"==typeof i),r(e>=0&&e<t.outputs.length),this.version=t.version,this.height=i,this.value=t.outputs[e].value,this.script=t.outputs[e].script,this.coinbase=t.isCoinbase(),this.hash=t.hash(),this.index=e,this}static fromTX(t,e,i){return(new this).fromTX(t,e,i)}static isCoin(t){return t instanceof u}}t.exports=u}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * sha512.js - sha512 for bcrypto
 * Copyright (c) 2017-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */t.exports=i(61)},function(t,e,i){"use strict";(function(e){
/*!
 * input.js - input object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(2),n=i(4),o=i(10),a=i(65),h=i(17);class c{constructor(t){this.prevout=new h,this.script=new o,this.sequence=4294967295,this.witness=new a,t&&this.fromOptions(t)}fromOptions(t){return r(t,"Input data is required."),this.prevout.fromOptions(t.prevout),t.script&&this.script.fromOptions(t.script),null!=t.sequence&&(r(t.sequence>>>0===t.sequence,"Sequence must be a uint32."),this.sequence=t.sequence),t.witness&&this.witness.fromOptions(t.witness),this}static fromOptions(t){return(new this).fromOptions(t)}clone(){const t=new this.constructor;return t.prevout=this.prevout,t.script.inject(this.script),t.sequence=this.sequence,t.witness.inject(this.witness),t}equals(t){return r(c.isInput(t)),this.prevout.equals(t.prevout)}compare(t){return r(c.isInput(t)),this.prevout.compare(t.prevout)}getType(t){if(this.isCoinbase())return"coinbase";if(t)return t.getType();let e;return e=this.witness.items.length>0?this.witness.getInputType():this.script.getInputType(),o.typesByVal[e].toLowerCase()}getRedeem(t){if(this.isCoinbase())return null;if(!t)return this.witness.isScripthashInput()?this.witness.getRedeem():this.script.isScripthashInput()?this.script.getRedeem():null;let e=t.script,i=null;return e.isScripthash()&&(i=e=this.script.getRedeem()),e&&e.isWitnessScripthash()&&(i=e=this.witness.getRedeem()),i}getSubtype(t){if(this.isCoinbase())return null;const e=this.getRedeem(t);if(!e)return null;const i=e.getType();return o.typesByVal[i].toLowerCase()}getAddress(t){return this.isCoinbase()?null:t?t.getAddress():this.script.code.length>0?this.script.getInputAddress():this.witness.items.length>0?this.witness.getInputAddress():null}getHash(t,e){const i=this.getAddress(t);return i?i.getHash(e):null}isFinal(){return 4294967295===this.sequence}isRBF(){return this.sequence<4294967294}isCoinbase(){return this.prevout.isNull()}inspect(){return this.format()}format(t){return{type:this.getType(t),subtype:this.getSubtype(t),address:this.getAddress(t),script:this.script,witness:this.witness,redeem:this.getRedeem(t),sequence:this.sequence,prevout:this.prevout,coin:t||null}}toJSON(t,e){return this.getJSON()}getJSON(t,e){let i;return t=n.get(t),e||(i=this.getAddress())&&(i=i.toString(t)),{prevout:this.prevout.toJSON(),script:this.script.toJSON(),witness:this.witness.toJSON(),sequence:this.sequence,address:i,coin:e?e.getJSON(t,!0):void 0}}fromJSON(t){return r(t,"Input data is required."),r(t.sequence>>>0===t.sequence,"Sequence must be a uint32."),this.prevout.fromJSON(t.prevout),this.script.fromJSON(t.script),this.witness.fromJSON(t.witness),this.sequence=t.sequence,this}static fromJSON(t){return(new this).fromJSON(t)}getSize(){return 40+this.script.getVarSize()}toRaw(){const t=this.getSize();return this.toWriter(s.write(t)).render()}toWriter(t){return this.prevout.toWriter(t),t.writeVarBytes(this.script.toRaw()),t.writeU32(this.sequence),t}fromReader(t){return this.prevout.fromReader(t),this.script.fromRaw(t.readVarBytes()),this.sequence=t.readU32(),this}fromRaw(t){return this.fromReader(s.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t,i){return"string"==typeof t&&(t=e.from(t,i)),(new this).fromRaw(t)}fromOutpoint(t){return r(e.isBuffer(t.hash)),r("number"==typeof t.index),this.prevout.hash=t.hash,this.prevout.index=t.index,this}static fromOutpoint(t){return(new this).fromOutpoint(t)}fromCoin(t){return r(e.isBuffer(t.hash)),r("number"==typeof t.index),this.prevout.hash=t.hash,this.prevout.index=t.index,this}static fromCoin(t){return(new this).fromCoin(t)}fromTX(t,e){return r(t),r("number"==typeof e),r(e>=0&&e<t.outputs.length),this.prevout.hash=t.hash(),this.prevout.index=e,this}static fromTX(t,e){return(new this).fromTX(t,e)}static isInput(t){return t instanceof c}}t.exports=c}).call(this,i(1).Buffer)},function(t,e,i){(function(t,r){var s=/%[sdj%]/g;e.format=function(t){if(!b(t)){for(var e=[],i=0;i<arguments.length;i++)e.push(a(arguments[i]));return e.join(" ")}i=1;for(var r=arguments,n=r.length,o=String(t).replace(s,function(t){if("%%"===t)return"%";if(i>=n)return t;switch(t){case"%s":return String(r[i++]);case"%d":return Number(r[i++]);case"%j":try{return JSON.stringify(r[i++])}catch(t){return"[Circular]"}default:return t}}),h=r[i];i<n;h=r[++i])g(h)||!v(h)?o+=" "+h:o+=" "+a(h);return o},e.deprecate=function(i,s){if(w(t.process))return function(){return e.deprecate(i,s).apply(this,arguments)};if(!0===r.noDeprecation)return i;var n=!1;return function(){if(!n){if(r.throwDeprecation)throw new Error(s);r.traceDeprecation?console.trace(s):console.error(s),n=!0}return i.apply(this,arguments)}};var n,o={};function a(t,i){var r={seen:[],stylize:c};return arguments.length>=3&&(r.depth=arguments[2]),arguments.length>=4&&(r.colors=arguments[3]),p(i)?r.showHidden=i:i&&e._extend(r,i),w(r.showHidden)&&(r.showHidden=!1),w(r.depth)&&(r.depth=2),w(r.colors)&&(r.colors=!1),w(r.customInspect)&&(r.customInspect=!0),r.colors&&(r.stylize=h),l(r,t,r.depth)}function h(t,e){var i=a.styles[e];return i?"["+a.colors[i][0]+"m"+t+"["+a.colors[i][1]+"m":t}function c(t,e){return t}function l(t,i,r){if(t.customInspect&&i&&S(i.inspect)&&i.inspect!==e.inspect&&(!i.constructor||i.constructor.prototype!==i)){var s=i.inspect(r,t);return b(s)||(s=l(t,s,r)),s}var n=function(t,e){if(w(e))return t.stylize("undefined","undefined");if(b(e)){var i="'"+JSON.stringify(e).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return t.stylize(i,"string")}return m(e)?t.stylize(""+e,"number"):p(e)?t.stylize(""+e,"boolean"):g(e)?t.stylize("null","null"):void 0}(t,i);if(n)return n;var o=Object.keys(i),a=function(t){var e={};return o.forEach(function(t,i){e[t]=!0}),e}();if(t.showHidden&&(o=Object.getOwnPropertyNames(i)),E(i)&&(o.indexOf("message")>=0||o.indexOf("description")>=0))return u(i);if(0===o.length){if(S(i)){var h=i.name?": "+i.name:"";return t.stylize("[Function"+h+"]","special")}if(y(i))return t.stylize(RegExp.prototype.toString.call(i),"regexp");if(k(i))return t.stylize(Date.prototype.toString.call(i),"date");if(E(i))return u(i)}var c,v="",R=!1,I=["{","}"];return d(i)&&(R=!0,I=["[","]"]),S(i)&&(v=" [Function"+(i.name?": "+i.name:"")+"]"),y(i)&&(v=" "+RegExp.prototype.toString.call(i)),k(i)&&(v=" "+Date.prototype.toUTCString.call(i)),E(i)&&(v=" "+u(i)),0!==o.length||R&&0!=i.length?r<0?y(i)?t.stylize(RegExp.prototype.toString.call(i),"regexp"):t.stylize("[Object]","special"):(t.seen.push(i),c=R?function(t,e,i,r,s){for(var n=[],o=0,a=e.length;o<a;++o)x(e,String(o))?n.push(f(t,e,i,r,String(o),!0)):n.push("");return s.forEach(function(s){s.match(/^\d+$/)||n.push(f(t,e,i,r,s,!0))}),n}(t,i,r,a,o):o.map(function(e){return f(t,i,r,a,e,R)}),t.seen.pop(),function(t,e,i){return t.reduce(function(t,e){return e.indexOf("\n"),t+e.replace(/\u001b\[\d\d?m/g,"").length+1},0)>60?i[0]+(""===e?"":e+"\n ")+" "+t.join(",\n  ")+" "+i[1]:i[0]+e+" "+t.join(", ")+" "+i[1]}(c,v,I)):I[0]+v+I[1]}function u(t){return"["+Error.prototype.toString.call(t)+"]"}function f(t,e,i,r,s,n){var o,a,h;if((h=Object.getOwnPropertyDescriptor(e,s)||{value:e[s]}).get?a=h.set?t.stylize("[Getter/Setter]","special"):t.stylize("[Getter]","special"):h.set&&(a=t.stylize("[Setter]","special")),x(r,s)||(o="["+s+"]"),a||(t.seen.indexOf(h.value)<0?(a=g(i)?l(t,h.value,null):l(t,h.value,i-1)).indexOf("\n")>-1&&(a=n?a.split("\n").map(function(t){return"  "+t}).join("\n").substr(2):"\n"+a.split("\n").map(function(t){return"   "+t}).join("\n")):a=t.stylize("[Circular]","special")),w(o)){if(n&&s.match(/^\d+$/))return a;(o=JSON.stringify(""+s)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(o=o.substr(1,o.length-2),o=t.stylize(o,"name")):(o=o.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),o=t.stylize(o,"string"))}return o+": "+a}function d(t){return Array.isArray(t)}function p(t){return"boolean"==typeof t}function g(t){return null===t}function m(t){return"number"==typeof t}function b(t){return"string"==typeof t}function w(t){return void 0===t}function y(t){return v(t)&&"[object RegExp]"===R(t)}function v(t){return"object"==typeof t&&null!==t}function k(t){return v(t)&&"[object Date]"===R(t)}function E(t){return v(t)&&("[object Error]"===R(t)||t instanceof Error)}function S(t){return"function"==typeof t}function R(t){return Object.prototype.toString.call(t)}function I(t){return t<10?"0"+t.toString(10):t.toString(10)}e.debuglog=function(t){if(w(n)&&(n=r.env.NODE_DEBUG||""),t=t.toUpperCase(),!o[t])if(new RegExp("\\b"+t+"\\b","i").test(n)){var i=r.pid;o[t]=function(){var r=e.format.apply(e,arguments);console.error("%s %d: %s",t,i,r)}}else o[t]=function(){};return o[t]},e.inspect=a,a.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},a.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},e.isArray=d,e.isBoolean=p,e.isNull=g,e.isNullOrUndefined=function(t){return null==t},e.isNumber=m,e.isString=b,e.isSymbol=function(t){return"symbol"==typeof t},e.isUndefined=w,e.isRegExp=y,e.isObject=v,e.isDate=k,e.isError=E,e.isFunction=S,e.isPrimitive=function(t){return null===t||"boolean"==typeof t||"number"==typeof t||"string"==typeof t||"symbol"==typeof t||void 0===t},e.isBuffer=i(143);var A=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function x(t,e){return Object.prototype.hasOwnProperty.call(t,e)}e.log=function(){console.log("%s - %s",function(){var t=new Date,e=[I(t.getHours()),I(t.getMinutes()),I(t.getSeconds())].join(":");return[t.getDate(),A[t.getMonth()],e].join(" ")}(),e.format.apply(e,arguments))},e.inherits=i(144),e._extend=function(t,e){if(!e||!v(e))return t;for(var i=Object.keys(e),r=i.length;r--;)t[i[r]]=e[i[r]];return t}}).call(this,i(11),i(21))},function(t,e,i){"use strict";e.custom="inspect"},function(t,e,i){"use strict";(function(e){
/*!
 * reader.js - buffer reader for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(22),s=i(29),n=i(23),o=e.alloc(0);t.exports=class{constructor(t,i=!1){r(e.isBuffer(t),"data","buffer"),r("boolean"==typeof i,"zeroCopy","boolean"),this.data=t,this.offset=0,this.zeroCopy=i,this.stack=[]}check(t){if(this.offset+t>this.data.length)throw new n(this.offset,"Out of bounds read",this.check)}getSize(){return this.data.length}left(){return this.check(0),this.data.length-this.offset}seek(t){if(r(Number.isSafeInteger(t),"off","integer"),this.offset+t<0)throw new n(this.offset,"Out of bounds read");return this.check(t),this.offset+=t,this}start(){return this.stack.push(this.offset),this.offset}end(){if(0===this.stack.length)throw new Error("Cannot end without a stack item.");const t=this.stack.pop();return this.offset-t}endData(t=!1){if(r("boolean"==typeof t,"zeroCopy","boolean"),0===this.stack.length)throw new Error("Cannot end without a stack item.");const i=this.stack.pop(),s=this.offset,n=s-i,o=this.data;if(n===o.length)return o;if(this.zeroCopy||t)return o.slice(i,s);const a=e.allocUnsafe(n);return o.copy(a,0,i,s),a}destroy(){return this.data=o,this.offset=0,this.stack.length=0,this}readU8(){this.check(1);const t=this.data[this.offset];return this.offset+=1,t}readU16(){this.check(2);const t=s.readU16(this.data,this.offset);return this.offset+=2,t}readU16BE(){this.check(2);const t=s.readU16BE(this.data,this.offset);return this.offset+=2,t}readU24(){this.check(3);const t=s.readU24(this.data,this.offset);return this.offset+=3,t}readU24BE(){this.check(3);const t=s.readU24BE(this.data,this.offset);return this.offset+=3,t}readU32(){this.check(4);const t=s.readU32(this.data,this.offset);return this.offset+=4,t}readU32BE(){this.check(4);const t=s.readU32BE(this.data,this.offset);return this.offset+=4,t}readU40(){this.check(5);const t=s.readU40(this.data,this.offset);return this.offset+=5,t}readU40BE(){this.check(5);const t=s.readU40BE(this.data,this.offset);return this.offset+=5,t}readU48(){this.check(6);const t=s.readU48(this.data,this.offset);return this.offset+=6,t}readU48BE(){this.check(6);const t=s.readU48BE(this.data,this.offset);return this.offset+=6,t}readU56(){this.check(7);const t=s.readU56(this.data,this.offset);return this.offset+=7,t}readU56BE(){this.check(7);const t=s.readU56BE(this.data,this.offset);return this.offset+=7,t}readU64(){this.check(8);const t=s.readU64(this.data,this.offset);return this.offset+=8,t}readU64BE(){this.check(8);const t=s.readU64BE(this.data,this.offset);return this.offset+=8,t}readI8(){this.check(1);const t=s.readI8(this.data,this.offset);return this.offset+=1,t}readI16(){this.check(2);const t=s.readI16(this.data,this.offset);return this.offset+=2,t}readI16BE(){this.check(2);const t=s.readI16BE(this.data,this.offset);return this.offset+=2,t}readI24(){this.check(3);const t=s.readI24(this.data,this.offset);return this.offset+=3,t}readI24BE(){this.check(3);const t=s.readI24BE(this.data,this.offset);return this.offset+=3,t}readI32(){this.check(4);const t=s.readI32(this.data,this.offset);return this.offset+=4,t}readI32BE(){this.check(4);const t=s.readI32BE(this.data,this.offset);return this.offset+=4,t}readI40(){this.check(5);const t=s.readI40(this.data,this.offset);return this.offset+=5,t}readI40BE(){this.check(5);const t=s.readI40BE(this.data,this.offset);return this.offset+=5,t}readI48(){this.check(6);const t=s.readI48(this.data,this.offset);return this.offset+=6,t}readI48BE(){this.check(6);const t=s.readI48BE(this.data,this.offset);return this.offset+=6,t}readI56(){this.check(7);const t=s.readI56(this.data,this.offset);return this.offset+=7,t}readI56BE(){this.check(7);const t=s.readI56BE(this.data,this.offset);return this.offset+=7,t}readI64(){this.check(8);const t=s.readI64(this.data,this.offset);return this.offset+=8,t}readI64BE(){this.check(8);const t=s.readI64BE(this.data,this.offset);return this.offset+=8,t}readFloat(){this.check(4);const t=s.readFloat(this.data,this.offset);return this.offset+=4,t}readFloatBE(){this.check(4);const t=s.readFloatBE(this.data,this.offset);return this.offset+=4,t}readDouble(){this.check(8);const t=s.readDouble(this.data,this.offset);return this.offset+=8,t}readDoubleBE(){this.check(8);const t=s.readDoubleBE(this.data,this.offset);return this.offset+=8,t}readVarint(){const{size:t,value:e}=s.readVarint(this.data,this.offset);return this.offset+=t,e}readVarint2(){const{size:t,value:e}=s.readVarint2(this.data,this.offset);return this.offset+=t,e}readBytes(t,i=!1){let s;return r(t>>>0===t,"size","integer"),r("boolean"==typeof i,"zeroCopy","boolean"),this.check(t),this.zeroCopy||i?s=this.data.slice(this.offset,this.offset+t):(s=e.allocUnsafe(t),this.data.copy(s,0,this.offset,this.offset+t)),this.offset+=t,s}readVarBytes(t=!1){return this.readBytes(this.readVarint(),t)}readChild(t){r(t>>>0===t,"size","integer"),this.check(t);const e=this.data.slice(0,this.offset+t),i=new this.constructor(e);return i.offset=this.offset,this.offset+=t,i}readString(t,e){null==e&&(e="binary"),r(t>>>0===t,"size","integer"),r("string"==typeof e,"enc","string"),this.check(t);const i=this.data.toString(e,this.offset,this.offset+t);return this.offset+=t,i}readHash(t){return t?this.readString(32,t):this.readBytes(32)}readVarString(t,e=0){null==t&&(t="binary"),r("string"==typeof t,"enc","string"),r(e>>>0===e,"limit","integer");const i=this.readVarint();if(0!==e&&i>e)throw new n(this.offset,"String exceeds limit");return this.readString(i,t)}readNullString(t){null==t&&(t="binary"),r("string"==typeof t,"enc","string");let e=this.offset;for(;e<this.data.length&&0!==this.data[e];e++);if(e===this.data.length)throw new n(this.offset,"No NUL terminator");const i=this.readString(e-this.offset,t);return this.offset=e+1,i}createChecksum(t){r("function"==typeof t,"hash","function");let e=0;this.stack.length>0&&(e=this.stack[this.stack.length-1]);const i=this.data.slice(e,this.offset);return s.readU32(t(i),0)}verifyChecksum(t){const e=this.createChecksum(t);if(e!==this.readU32())throw new n(this.offset,"Checksum mismatch");return e}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * writer.js - buffer writer for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(22),s=i(29),n=i(23);class o{constructor(t){this.type=t}}class a extends o{constructor(t,e){super(t),this.value=e}}class h extends o{constructor(t,e){super(t),this.data=e}}class c extends o{constructor(t,e,i){super(t),this.value=e,this.enc=i}}t.exports=class{constructor(){this.ops=[],this.offset=0}render(){const t=e.allocUnsafe(this.offset);let i=0;for(const e of this.ops)switch(e.type){case 0:i+=e.value;break;case 1:i=s.writeU8(t,e.value,i);break;case 2:i=s.writeU16(t,e.value,i);break;case 3:i=s.writeU16BE(t,e.value,i);break;case 4:i=s.writeU24(t,e.value,i);break;case 5:i=s.writeU24BE(t,e.value,i);break;case 6:i=s.writeU32(t,e.value,i);break;case 7:i=s.writeU32BE(t,e.value,i);break;case 8:i=s.writeU40(t,e.value,i);break;case 9:i=s.writeU40BE(t,e.value,i);break;case 10:i=s.writeU48(t,e.value,i);break;case 11:i=s.writeU48BE(t,e.value,i);break;case 12:i=s.writeU56(t,e.value,i);break;case 13:i=s.writeU56BE(t,e.value,i);break;case 14:i=s.writeU64(t,e.value,i);break;case 15:i=s.writeU64BE(t,e.value,i);break;case 16:i=s.writeI8(t,e.value,i);break;case 17:i=s.writeI16(t,e.value,i);break;case 18:i=s.writeI16BE(t,e.value,i);break;case 19:i=s.writeI24(t,e.value,i);break;case 20:i=s.writeI24BE(t,e.value,i);break;case 21:i=s.writeI32(t,e.value,i);break;case 22:i=s.writeI32BE(t,e.value,i);break;case 23:i=s.writeI40(t,e.value,i);break;case 24:i=s.writeI40BE(t,e.value,i);break;case 25:i=s.writeI48(t,e.value,i);break;case 26:i=s.writeI48BE(t,e.value,i);break;case 27:i=s.writeI56(t,e.value,i);break;case 28:i=s.writeI56BE(t,e.value,i);break;case 29:i=s.writeI64(t,e.value,i);break;case 30:i=s.writeI64BE(t,e.value,i);break;case 31:i=s.writeFloat(t,e.value,i);break;case 32:i=s.writeFloatBE(t,e.value,i);break;case 33:i=s.writeDouble(t,e.value,i);break;case 34:i=s.writeDoubleBE(t,e.value,i);break;case 35:i=s.writeVarint(t,e.value,i);break;case 36:i=s.writeVarint2(t,e.value,i);break;case 37:i+=e.data.copy(t,i);break;case 38:i+=t.write(e.value,i,e.enc);break;case 39:i+=e.func(t.slice(0,i)).copy(t,i,0,4);break;case 40:t.fill(e.value,i,i+e.size),i+=e.size;break;default:throw new Error("Invalid type.")}if(i!==t.length)throw new n(i,"Out of bounds write");return this.destroy(),t}getSize(){return this.offset}seek(t){if(r(Number.isSafeInteger(t),"off","integer"),this.offset+t<0)throw new n(this.offset,"Out of bounds write");return this.offset+=t,this.ops.push(new a(0,t)),this}destroy(){return this.ops.length=0,this.offset=0,this}writeU8(t){return this.offset+=1,this.ops.push(new a(1,t)),this}writeU16(t){return this.offset+=2,this.ops.push(new a(2,t)),this}writeU16BE(t){return this.offset+=2,this.ops.push(new a(3,t)),this}writeU24(t){return this.offset+=3,this.ops.push(new a(4,t)),this}writeU24BE(t){return this.offset+=3,this.ops.push(new a(5,t)),this}writeU32(t){return this.offset+=4,this.ops.push(new a(6,t)),this}writeU32BE(t){return this.offset+=4,this.ops.push(new a(7,t)),this}writeU40(t){return this.offset+=5,this.ops.push(new a(8,t)),this}writeU40BE(t){return this.offset+=5,this.ops.push(new a(9,t)),this}writeU48(t){return this.offset+=6,this.ops.push(new a(10,t)),this}writeU48BE(t){return this.offset+=6,this.ops.push(new a(11,t)),this}writeU56(t){return this.offset+=7,this.ops.push(new a(12,t)),this}writeU56BE(t){return this.offset+=7,this.ops.push(new a(13,t)),this}writeU64(t){return this.offset+=8,this.ops.push(new a(14,t)),this}writeU64BE(t){return this.offset+=8,this.ops.push(new a(15,t)),this}writeI8(t){return this.offset+=1,this.ops.push(new a(16,t)),this}writeI16(t){return this.offset+=2,this.ops.push(new a(17,t)),this}writeI16BE(t){return this.offset+=2,this.ops.push(new a(18,t)),this}writeI24(t){return this.offset+=3,this.ops.push(new a(19,t)),this}writeI24BE(t){return this.offset+=3,this.ops.push(new a(20,t)),this}writeI32(t){return this.offset+=4,this.ops.push(new a(21,t)),this}writeI32BE(t){return this.offset+=4,this.ops.push(new a(22,t)),this}writeI40(t){return this.offset+=5,this.ops.push(new a(23,t)),this}writeI40BE(t){return this.offset+=5,this.ops.push(new a(24,t)),this}writeI48(t){return this.offset+=6,this.ops.push(new a(25,t)),this}writeI48BE(t){return this.offset+=6,this.ops.push(new a(26,t)),this}writeI56(t){return this.offset+=7,this.ops.push(new a(27,t)),this}writeI56BE(t){return this.offset+=7,this.ops.push(new a(28,t)),this}writeI64(t){return this.offset+=8,this.ops.push(new a(29,t)),this}writeI64BE(t){return this.offset+=8,this.ops.push(new a(30,t)),this}writeFloat(t){return this.offset+=4,this.ops.push(new a(31,t)),this}writeFloatBE(t){return this.offset+=4,this.ops.push(new a(32,t)),this}writeDouble(t){return this.offset+=8,this.ops.push(new a(33,t)),this}writeDoubleBE(t){return this.offset+=8,this.ops.push(new a(34,t)),this}writeVarint(t){return this.offset+=s.sizeVarint(t),this.ops.push(new a(35,t)),this}writeVarint2(t){return this.offset+=s.sizeVarint2(t),this.ops.push(new a(36,t)),this}writeBytes(t){return r(e.isBuffer(t),"value","buffer"),0===t.length?this:(this.offset+=t.length,this.ops.push(new h(37,t)),this)}writeVarBytes(t){return r(e.isBuffer(t),"value","buffer"),this.offset+=s.sizeVarint(t.length),this.ops.push(new a(35,t.length)),0===t.length?this:(this.offset+=t.length,this.ops.push(new h(37,t)),this)}copy(t,i,s){r(e.isBuffer(t),"value","buffer"),r(i>>>0===i,"start","integer"),r(s>>>0===s,"end","integer"),r(s>=i,"start","integer");const n=t.slice(i,s);return this.writeBytes(n),this}writeString(t,i){return null==i&&(i="binary"),r("string"==typeof t,"value","string"),r("string"==typeof i,"enc","string"),0===t.length?this:(this.offset+=e.byteLength(t,i),this.ops.push(new c(38,t,i)),this)}writeHash(t){return"string"!=typeof t?(r(e.isBuffer(t),"value","buffer"),r(32===t.length,"value","32-byte hash"),this.writeBytes(t),this):(r(64===t.length,"value","32-byte hash"),this.writeString(t,"hex"),this)}writeVarString(t,i){if(null==i&&(i="binary"),r("string"==typeof t,"value","string"),r("string"==typeof i,"enc","string"),0===t.length)return this.ops.push(new a(35,0)),this;const n=e.byteLength(t,i);return this.offset+=s.sizeVarint(n),this.offset+=n,this.ops.push(new a(35,n)),this.ops.push(new c(38,t,i)),this}writeNullString(t,e){return this.writeString(t,e),this.writeU8(0),this}writeChecksum(t){return r("function"==typeof t,"hash","function"),this.offset+=4,this.ops.push(new class extends o{constructor(t,e){super(t),this.func=e}}(39,t)),this}fill(t,e){return r((255&t)===t,"value","byte"),r(e>>>0===e,"size","integer"),0===e?this:(this.offset+=e,this.ops.push(new class extends o{constructor(t,e,i){super(t),this.value=e,this.size=i}}(40,t,e)),this)}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * staticwriter.js - buffer writer for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(22),s=i(29),n=i(23),o=e.alloc(0),a=102400;let h=null;class c{constructor(t){this.data=o,this.offset=0,null!=t&&this.init(t)}check(t){if(this.offset+t>this.data.length)throw new n(this.offset,"Out of bounds write",this.check)}init(t){return e.isBuffer(t)?(this.data=t,this.offset=0,this):(r(t>>>0===t,"size","integer"),this.data=e.allocUnsafe(t),this.offset=0,this)}static pool(t){if(r(t>>>0===t,"size","integer"),t<=a){h||(h=e.allocUnsafe(a));const i=new c;return i.data=h.slice(0,t),i}return new c(t)}render(){const{data:t,offset:e}=this;if(e!==t.length)throw new n(e,"Out of bounds write");return this.destroy(),t}slice(){const{data:t,offset:e}=this;if(e>t.length)throw new n(e,"Out of bounds write");return this.destroy(),t.slice(0,e)}getSize(){return this.offset}seek(t){if(r(Number.isSafeInteger(t),"off","integer"),this.offset+t<0)throw new n(this.offset,"Out of bounds write");return this.check(t),this.offset+=t,this}destroy(){return this.data=o,this.offset=0,this}writeU8(t){return this.check(1),this.offset=s.writeU8(this.data,t,this.offset),this}writeU16(t){return this.check(2),this.offset=s.writeU16(this.data,t,this.offset),this}writeU16BE(t){return this.check(2),this.offset=s.writeU16BE(this.data,t,this.offset),this}writeU24(t){return this.check(3),this.offset=s.writeU24(this.data,t,this.offset),this}writeU24BE(t){return this.check(3),this.offset=s.writeU24BE(this.data,t,this.offset),this}writeU32(t){return this.check(4),this.offset=s.writeU32(this.data,t,this.offset),this}writeU32BE(t){return this.check(4),this.offset=s.writeU32BE(this.data,t,this.offset),this}writeU40(t){return this.check(5),this.offset=s.writeU40(this.data,t,this.offset),this}writeU40BE(t){return this.check(5),this.offset=s.writeU40BE(this.data,t,this.offset),this}writeU48(t){return this.check(6),this.offset=s.writeU48(this.data,t,this.offset),this}writeU48BE(t){return this.check(6),this.offset=s.writeU48BE(this.data,t,this.offset),this}writeU56(t){return this.check(7),this.offset=s.writeU56(this.data,t,this.offset),this}writeU56BE(t){return this.check(7),this.offset=s.writeU56BE(this.data,t,this.offset),this}writeU64(t){return this.check(8),this.offset=s.writeU64(this.data,t,this.offset),this}writeU64BE(t){return this.check(8),this.offset=s.writeU64BE(this.data,t,this.offset),this}writeI8(t){return this.check(1),this.offset=s.writeI8(this.data,t,this.offset),this}writeI16(t){return this.check(2),this.offset=s.writeI16(this.data,t,this.offset),this}writeI16BE(t){return this.check(2),this.offset=s.writeI16BE(this.data,t,this.offset),this}writeI24(t){return this.check(3),this.offset=s.writeI24(this.data,t,this.offset),this}writeI24BE(t){return this.check(3),this.offset=s.writeI24BE(this.data,t,this.offset),this}writeI32(t){return this.check(4),this.offset=s.writeI32(this.data,t,this.offset),this}writeI32BE(t){return this.check(4),this.offset=s.writeI32BE(this.data,t,this.offset),this}writeI40(t){return this.check(5),this.offset=s.writeI40(this.data,t,this.offset),this}writeI40BE(t){return this.check(5),this.offset=s.writeI40BE(this.data,t,this.offset),this}writeI48(t){return this.check(6),this.offset=s.writeI48(this.data,t,this.offset),this}writeI48BE(t){return this.check(6),this.offset=s.writeI48BE(this.data,t,this.offset),this}writeI56(t){return this.check(7),this.offset=s.writeI56(this.data,t,this.offset),this}writeI56BE(t){return this.check(7),this.offset=s.writeI56BE(this.data,t,this.offset),this}writeI64(t){return this.check(8),this.offset=s.writeI64(this.data,t,this.offset),this}writeI64BE(t){return this.check(8),this.offset=s.writeI64BE(this.data,t,this.offset),this}writeFloat(t){return this.check(4),this.offset=s.writeFloat(this.data,t,this.offset),this}writeFloatBE(t){return this.check(4),this.offset=s.writeFloatBE(this.data,t,this.offset),this}writeDouble(t){return this.check(8),this.offset=s.writeDouble(this.data,t,this.offset),this}writeDoubleBE(t){return this.check(8),this.offset=s.writeDoubleBE(this.data,t,this.offset),this}writeVarint(t){return this.offset=s.writeVarint(this.data,t,this.offset),this}writeVarint2(t){return this.offset=s.writeVarint2(this.data,t,this.offset),this}writeBytes(t){return r(e.isBuffer(t),"value","buffer"),this.check(t.length),this.offset+=t.copy(this.data,this.offset),this}writeVarBytes(t){return r(e.isBuffer(t),"value","buffer"),this.writeVarint(t.length),this.writeBytes(t),this}copy(t,i,s){return r(e.isBuffer(t),"value","buffer"),r(i>>>0===i,"start","integer"),r(s>>>0===s,"end","integer"),r(s>=i,"start","integer"),this.check(s-i),this.offset+=t.copy(this.data,this.offset,i,s),this}writeString(t,i){if(null==i&&(i="binary"),r("string"==typeof t,"value","string"),r("string"==typeof i,"enc","string"),0===t.length)return this;const s=e.byteLength(t,i);return this.check(s),this.offset+=this.data.write(t,this.offset,i),this}writeHash(t){return"string"!=typeof t?(r(e.isBuffer(t),"value","buffer"),r(32===t.length,"value","32-byte hash"),this.writeBytes(t),this):(r(64===t.length,"value","32-byte hash"),this.check(32),this.offset+=this.data.write(t,this.offset,"hex"),this)}writeVarString(t,i){if(null==i&&(i="binary"),r("string"==typeof t,"value","string"),r("string"==typeof i,"enc","string"),0===t.length)return this.writeVarint(0),this;const s=e.byteLength(t,i);return this.writeVarint(s),this.check(s),this.offset+=this.data.write(t,this.offset,i),this}writeNullString(t,e){return this.writeString(t,e),this.writeU8(0),this}writeChecksum(t){return r("function"==typeof t,"hash","function"),this.check(4),t(this.data.slice(0,this.offset)).copy(this.data,this.offset,0,4),this.offset+=4,this}fill(t,e){return r((255&t)===t,"value","byte"),r(e>>>0===e,"size","integer"),this.check(e),this.data.fill(t,this.offset,this.offset+e),this.offset+=e,this}}t.exports=c}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * int64.js - int64 object for javascript.
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/chjj/n64
 */function r(t){h(this instanceof r,"this","N64"),h(0===t||1===t,"sign","bit"),this.hi=0,this.lo=0,this.sign=t}function s(t,e){if(!(this instanceof s))return new s(t,e);r.call(this,0),this.from(t,e)}function n(t,e){if(!(this instanceof n))return new n(t,e);r.call(this,1),this.from(t,e)}function o(t){if(null==t)return 10;if("number"==typeof t)return t;switch(t){case"bin":return 2;case"oct":return 8;case"dec":return 10;case"hex":return 16}return 0}function a(t){if(Math.clz32)return 32-Math.clz32(t);let e=31;for(;e>=0&&0==(t&1<<e);e--);return e+1}function h(t,e,i){if(!t){const t=new TypeError(`'${e}' must be a(n) ${i}.`);throw Error.captureStackTrace&&Error.captureStackTrace(t,h),t}}function c(t){return"number"==typeof t&&isFinite(t)}function l(t){return Array.isArray?Array.isArray(t):"Array"==={}.toString.call(t).slice(8,-1)}function u(t,e){return t.allocUnsafe?t.allocUnsafe(e):new t(e)}function f(t,e){return t[e]|t[e+1]<<8|t[e+2]<<16|t[e+3]<<24}function d(t,e){return t[e]<<24|t[e+1]<<16|t[e+2]<<8|t[e+3]}function p(t,e,i){t[i]=255&e,t[i+1]=e>>>8&255,t[i+2]=e>>>16&255,t[i+3]=e>>>24&255}function g(t,e,i){t[i]=e>>>24&255,t[i+1]=e>>>16&255,t[i+2]=e>>>8&255,t[i+3]=255&e}r.prototype._add=function(t,e){const i=this.hi,r=this.lo,s=r+e|0,n=r>>31,o=e>>31,a=(i+t|0)+(1&(n&o|~(s>>31)&(n^o)));return this.hi=0|a,this.lo=s,this},r.prototype.iadd=function(t){return h(r.isN64(t),"operand","int64"),this._add(t.hi,t.lo)},r.prototype.iaddn=function(t){return h(c(t),"operand","number"),this._add(t>>31&-this.sign,0|t)},r.prototype.add=function(t){return this.clone().iadd(t)},r.prototype.addn=function(t){return this.clone().iaddn(t)},r.prototype._sub=function(t,e){return t=~t,-1==(e=~e)?(e=0,t+=1,t|=0):e+=1,this._add(t,e)},r.prototype.isub=function(t){return h(r.isN64(t),"operand","int64"),this._sub(t.hi,t.lo)},r.prototype.isubn=function(t){return h(c(t),"operand","number"),this._sub(t>>31&-this.sign,0|t)},r.prototype.sub=function(t){return this.clone().isub(t)},r.prototype.subn=function(t){return this.clone().isubn(t)},r.prototype._mul=function(t,e){const i=this.hi,r=this.lo,s=65535&i,n=r>>>16,o=65535&r,a=65535&t,h=e>>>16,c=65535&e;let l=0,u=0,f=0,d=0;f+=(d+=o*c)>>>16,u+=(f+=n*c)>>>16,f&=65535,u+=(f+=o*h)>>>16,l+=(u+=s*c)>>>16,u&=65535,l+=(u+=n*h)>>>16,u&=65535,l+=(u+=o*a)>>>16,l+=(i>>>16)*c+s*h+n*a+o*(t>>>16);const p=(l&=65535)<<16|(u&=65535),g=(f&=65535)<<16|(d&=65535);return this.hi=p,this.lo=g,this},r.prototype.imul=function(t){return h(r.isN64(t),"multiplicand","int64"),this._mul(t.hi,t.lo)},r.prototype.imuln=function(t){return h(c(t),"multiplicand","number"),this._mul(t>>31&-this.sign,0|t)},r.prototype.mul=function(t){return this.clone().imul(t)},r.prototype.muln=function(t){return this.clone().imuln(t)},r.prototype.idiv=function(t){let e=this;if(h(r.isN64(t),"divisor","int64"),t.isZero())throw new Error("Cannot divide by zero.");if(e.isZero())return e;if(e.eq(t))return e.set(1);if(e.isSafe()&&t.isSafe()){const i=function(t){return t<0?-Math.floor(-t):Math.floor(t)}(e.toDouble()/t.toDouble());return e.set(i)}let i=!1;e.sign&&(e.hi<0?t.hi<0?(e=e.ineg(),t=t.neg()):(e=e.ineg(),i=!0):t.hi<0&&(t=t.neg(),i=!0));const n=e.toU64(),o=t.toU64();if(n.lt(o))return e.set(0);if(n.ushrn(1).lt(o))return e.set(i?-1:1);const a=new s,c=new s;let l=n.bitLength();for(;l--;)c.ishln(1),c.lo|=n.testn(l),c.gte(o)&&(c.isub(o),a.setn(l,1));return e.hi=a.hi,e.lo=a.lo,i&&e.ineg(),e},r.prototype.idivn=function(t){return h(c(t),"divisor","number"),this.idiv(this._small(t))},r.prototype.div=function(t){return this.clone().idiv(t)},r.prototype.divn=function(t){return this.clone().idivn(t)},r.prototype.imod=function(t){const e=this;if(h(r.isN64(t),"divisor","int64"),t.isZero())throw new Error("Cannot divide by zero.");if(e.isZero())return e;if(e.eq(t))return e.set(0);if(e.isSafe()&&t.isSafe()){const i=e.toDouble()%t.toDouble();return e.set(i)}return e.isub(e.div(t).imul(t))},r.prototype.imodn=function(t){return h(c(t),"divisor","number"),this.imod(this._small(t))},r.prototype.mod=function(t){return this.clone().imod(t)},r.prototype.modn=function(t){return this.clone().imodn(t)},r.prototype.ipow=function(t){return h(r.isN64(t),"exponent","int64"),this.ipown(t.lo)},r.prototype.ipown=function(t){if(h(c(t),"exponent","number"),this.isZero())return this;const e=this.clone(),i=this;let r=t>>>0;for(i.set(1);r>0;)1&r&&i.imul(e),r>>>=1,e.imul(e);return i},r.prototype.pow=function(t){return this.clone().ipow(t)},r.prototype.pown=function(t){return this.clone().ipown(t)},r.prototype.sqr=function(){return this.mul(this)},r.prototype.isqr=function(){return this.imul(this)},r.prototype.iand=function(t){return h(r.isN64(t),"operand","int64"),this.hi&=t.hi,this.lo&=t.lo,this},r.prototype.iandn=function(t){return h(c(t),"operand","number"),this.hi&=t>>31&-this.sign,this.lo&=0|t,this},r.prototype.and=function(t){return this.clone().iand(t)},r.prototype.andn=function(t){return this.clone().iandn(t)},r.prototype.ior=function(t){return h(r.isN64(t),"operand","int64"),this.hi|=t.hi,this.lo|=t.lo,this},r.prototype.iorn=function(t){return h(c(t),"operand","number"),this.hi|=t>>31&-this.sign,this.lo|=0|t,this},r.prototype.or=function(t){return this.clone().ior(t)},r.prototype.orn=function(t){return this.clone().iorn(t)},r.prototype.ixor=function(t){return h(r.isN64(t),"operand","int64"),this.hi^=t.hi,this.lo^=t.lo,this},r.prototype.ixorn=function(t){return h(c(t),"operand","number"),this.hi^=t>>31&-this.sign,this.lo^=0|t,this},r.prototype.xor=function(t){return this.clone().ixor(t)},r.prototype.xorn=function(t){return this.clone().ixorn(t)},r.prototype.inot=function(){return this.hi=~this.hi,this.lo=~this.lo,this},r.prototype.not=function(){return this.clone().inot()},r.prototype.ishl=function(t){return h(r.isN64(t),"bits","int64"),this.ishln(t.lo)},r.prototype.ishln=function(t){if(h(c(t),"bits","number"),0==(t&=63))return this;let e=this.hi,i=this.lo;return t<32?(e<<=t,e|=i>>>32-t,i<<=t):(e=i<<t-32,i=0),this.hi=e,this.lo=i,this},r.prototype.shl=function(t){return this.clone().ishl(t)},r.prototype.shln=function(t){return this.clone().ishln(t)},r.prototype.ishr=function(t){return h(r.isN64(t),"bits","int64"),this.ishrn(t.lo)},r.prototype.ishrn=function(t){if(!this.sign)return this.iushrn(t);if(h(c(t),"bits","number"),0==(t&=63))return this;let e=this.hi,i=this.lo;return t<32?(i>>>=t,i|=e<<32-t,e>>=t):(i=e>>t-32,e>>=31),this.hi=e,this.lo=i,this},r.prototype.shr=function(t){return this.clone().ishr(t)},r.prototype.shrn=function(t){return this.clone().ishrn(t)},r.prototype.iushr=function(t){return h(r.isN64(t),"bits","int64"),this.iushrn(t.lo)},r.prototype.iushrn=function(t){if(h(c(t),"bits","number"),0==(t&=63))return this;let e=this.hi,i=this.lo;return t<32?(i>>>=t,i|=e<<32-t,e>>>=t):(i=e>>>t-32,e=0),this.hi=0|e,this.lo=0|i,this},r.prototype.ushr=function(t){return this.clone().iushr(t)},r.prototype.ushrn=function(t){return this.clone().iushrn(t)},r.prototype.setn=function(t,e){return h(c(t),"bit","number"),(t&=63)<32?e?this.lo|=1<<t:this.lo&=~(1<<t):e?this.hi|=1<<t-32:this.hi&=~(1<<t-32),this},r.prototype.testn=function(t){return h(c(t),"bit","number"),(t&=63)<32?this.lo>>>t&1:this.hi>>>t-32&1},r.prototype.setb=function(t,e){return h(c(t),"pos","number"),h(c(e),"ch","number"),e&=255,(t&=7)<4?(this.lo&=~(255<<8*t),this.lo|=e<<8*t):(this.hi&=~(255<<8*(t-4)),this.hi|=e<<8*(t-4)),this},r.prototype.orb=function(t,e){return h(c(t),"pos","number"),h(c(e),"ch","number"),e&=255,(t&=7)<4?this.lo|=e<<8*t:this.hi|=e<<8*(t-4),this},r.prototype.getb=function(t){return h(c(t),"pos","number"),(t&=7)<4?this.lo>>8*t&255:this.hi>>8*(t-4)&255},r.prototype.imaskn=function(t){return h(c(t),"bit","number"),(t&=63)<32?(this.hi=0,this.lo&=(1<<t)-1):(this.hi&=(1<<t-32)-1,this.lo&=4294967295),this},r.prototype.maskn=function(t){return this.clone().imaskn(t)},r.prototype.andln=function(t){return h(c(t),"operand","number"),this.lo&t},r.prototype.ineg=function(){let t=~this.hi,e=~this.lo;return-1===e?(e=0,t+=1,t|=0):e+=1,this.hi=t,this.lo=e,this},r.prototype.neg=function(){return this.clone().ineg()},r.prototype.iabs=function(){return this.isNeg()&&this.ineg(),this},r.prototype.abs=function(){return this.clone().iabs()},r.prototype._cmp=function(t,e){const i=this;let r=i.hi,s=i.lo;if(r===t&&s===e)return 0;let n=!1;if(i.sign){const e=r<0,i=t<0;if(e&&!i)return-1;if(!e&&i)return 1;n=e}return n||(r>>>=0,t>>>=0),r<t?-1:r>t?1:(s>>>=0)<(e>>>=0)?-1:1},r.prototype.cmp=function(t){return h(r.isN64(t),"value","int64"),this._cmp(t.hi,t.lo)},r.prototype.cmpn=function(t){return h(c(t),"value","number"),this._cmp(t>>31&-this.sign,0|t)},r.prototype.eq=function(t){return h(r.isN64(t),"value","int64"),this.hi===t.hi&&this.lo===t.lo},r.prototype.eqn=function(t){return h(c(t),"value","number"),this.hi===(t>>31&-this.sign)&&this.lo===(0|t)},r.prototype.gt=function(t){return this.cmp(t)>0},r.prototype.gtn=function(t){return this.cmpn(t)>0},r.prototype.gte=function(t){return this.cmp(t)>=0},r.prototype.gten=function(t){return this.cmpn(t)>=0},r.prototype.lt=function(t){return this.cmp(t)<0},r.prototype.ltn=function(t){return this.cmpn(t)<0},r.prototype.lte=function(t){return this.cmp(t)<=0},r.prototype.lten=function(t){return this.cmpn(t)<=0},r.prototype.isZero=function(){return 0===this.hi&&0===this.lo},r.prototype.isNeg=function(){return 1===this.sign&&this.hi<0},r.prototype.isOdd=function(){return 1==(1&this.lo)},r.prototype.isEven=function(){return 0==(1&this.lo)},r.prototype.clone=function(){const t=new this.constructor;return t.hi=this.hi,t.lo=this.lo,t},r.prototype.inject=function(t){return h(r.isN64(t),"value","int64"),this.hi=t.hi,this.lo=t.lo,this},r.prototype.set=function(t){h(function(t){return Number.isSafeInteger?Number.isSafeInteger(t):c(t)&&Math.floor(t)===t&&t>=-9007199254740991&&t<=9007199254740991}(t),"number","integer");let e=!1;return t<0&&(t=-t,e=!0),this.hi=t*(1/4294967296)|0,this.lo=0|t,e&&this.ineg(),this},r.prototype.join=function(t,e){return h(c(t),"hi","number"),h(c(e),"lo","number"),this.hi=0|t,this.lo=0|e,this},r.prototype._small=function(t){const e=new this.constructor;return e.hi=t>>31&-this.sign,e.lo=0|t,e},r.prototype.bitLength=function(){let t=this;return this.isNeg()&&(t=this.neg()),0===t.hi?a(t.lo):a(t.hi)+32},r.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},r.prototype.isSafe=function(){let t=this.hi;return this.isNeg()&&(t=~t,0===this.lo&&(t+=1)),0==(4292870144&t)},r.prototype.inspect=function(){let t="I64";return this.sign||(t="U64"),`<${t}: ${this.toString(10)}>`},r.prototype.readLE=function(t,e){return h(t&&"number"==typeof t.length,"data","arraylike"),h(e>>0===e,"offset","integer"),h(e+8<=t.length,"offset","valid offset"),this.lo=f(t,e),this.hi=f(t,e+4),e+8},r.prototype.readBE=function(t,e){return h(t&&"number"==typeof t.length,"data","arraylike"),h(e>>0===e,"offset","integer"),h(e+8<=t.length,"offset","valid offset"),this.hi=d(t,e),this.lo=d(t,e+4),e+8},r.prototype.readRaw=function(t,e){return this.readLE(t,e)},r.prototype.writeLE=function(t,e){return h(t&&"number"==typeof t.length,"data","arraylike"),h(e>>0===e,"offset","integer"),h(e+8<=t.length,"offset","valid offset"),p(t,this.lo,e),p(t,this.hi,e+4),e+8},r.prototype.writeBE=function(t,e){return h(t&&"number"==typeof t.length,"data","arraylike"),h(e>>0===e,"offset","integer"),h(e+8<=t.length,"offset","valid offset"),g(t,this.hi,e),g(t,this.lo,e+4),e+8},r.prototype.writeRaw=function(t,e){return this.writeLE(t,e)},r.prototype.toU64=function(){const t=new s;return t.hi=this.hi,t.lo=this.lo,t},r.prototype.toI64=function(){const t=new n;return t.hi=this.hi,t.lo=this.lo,t},r.prototype.toNumber=function(){if(!this.isSafe())throw new Error("Number exceeds 53 bits.");return this.toDouble()},r.prototype.toDouble=function(){let t=this.hi;return this.sign||(t>>>=0),4294967296*t+(this.lo>>>0)},r.prototype.toInt=function(){return this.sign?this.lo:this.lo>>>0},r.prototype.toBool=function(){return!this.isZero()},r.prototype.toBits=function(){return[this.hi,this.lo]},r.prototype.toObject=function(){return{hi:this.hi,lo:this.lo}},r.prototype.toString=function(t,e){if(t=o(t),null==e&&(e=0),h(t>>>0===t,"base","integer"),h(e>>>0===e,"pad","integer"),t<2||t>16)throw new Error("Base ranges between 2 and 16.");if(e>64)throw new Error("Maximum padding is 64 characters.");let i=this,r=!1;i.isNeg()&&(i=i.neg(),r=!0);let s=i.hi>>>0,n=i.lo>>>0,a="";do{const e=s%t;s-=e,s/=t;const i=(n+=4294967296*e)%t;n-=i,n/=t;let r=i;r+=r<10?48:87,a=String.fromCharCode(r)+a}while(n>0||s>0);for(;a.length<e;)a="0"+a;return r&&(a="-"+a),a},r.prototype.toJSON=function(){return this.toString(16,16)},r.prototype.toBN=function(t){const e=this.isNeg();let i=this.hi,r=this.lo;e&&(i=~i,-1==(r=~r)?(r=0,i+=1,i|=0):r+=1),r>>>=0;const s=new t(i>>>=0);return s.ishln(32),s.iadd(new t(r)),e&&s.ineg(),s},r.prototype.toLE=function(t){h("function"==typeof t,"ArrayLike","constructor");const e=u(t,8);return this.writeLE(e,0),e},r.prototype.toBE=function(t){h("function"==typeof t,"ArrayLike","constructor");const e=u(t,8);return this.writeBE(e,0),e},r.prototype.toRaw=function(t){return this.toLE(t)},r.prototype.fromNumber=function(t){return this.set(t)},r.prototype.fromInt=function(t){return h(c(t),"integer","number"),this.join(t>>31&-this.sign,t)},r.prototype.fromBool=function(t){return h("boolean"==typeof t,"value","boolean"),this.hi=0,this.lo=t?1:0,this},r.prototype.fromBits=function(t,e){return this.join(t,e)},r.prototype.fromObject=function(t){return h(t&&"object"==typeof t,"number","object"),this.fromBits(t.hi,t.lo)},r.prototype.fromString=function(t,e){if(e=o(e),h("string"==typeof t,"string","string"),h(e>>>0===e,"base","integer"),e<2||e>16)throw new Error("Base ranges between 2 and 16.");let i=!1,r=0;if(t.length>0&&"-"===t[0]&&(r+=1,i=!0),t.length===r||t.length>r+64)throw new Error("Invalid string (bad length).");let s=0,n=0;for(;r<t.length;r++){let i=t.charCodeAt(r);if(i>=48&&i<=57?i-=48:i>=65&&i<=90?i-=55:i>=97&&i<=122?i-=87:i=e,i>=e)throw new Error("Invalid string (parse error).");if(n*=e,s*=e,(n+=i)>4294967295&&(s+=(n-(i=n%4294967296))/4294967296,n=i),s>4294967295)throw new Error("Invalid string (overflow).")}return this.hi=0|s,this.lo=0|n,i&&this.ineg(),this},r.prototype.fromJSON=function(t){return this.fromString(t,16)},r.prototype.fromBN=function(t){h(t&&l(t.words),"number","big number");const e=this,i=t.clone(),r=i.isNeg();if(e.sign&&i.testn(63))throw new Error("Big number overflow.");let s=0;for(;!i.isZero();){if(8===s)throw new Error("Big number overflow.");e.orb(s,i.andln(255)),i.iushrn(8),s++}return r&&e.ineg(),e},r.prototype.fromLE=function(t){return this.readLE(t,0),this},r.prototype.fromBE=function(t){return this.readBE(t,0),this},r.prototype.fromRaw=function(t){return this.fromLE(t)},r.prototype.from=function(t,e){if(null==t)return this;if("number"==typeof t)return"number"==typeof e?this.fromBits(t,e):this.fromNumber(t);if("string"==typeof t)return this.fromString(t,e);if("object"==typeof t)return l(t.words)?this.fromBN(t):"number"==typeof t.length?this.fromRaw(t):this.fromObject(t);if("boolean"==typeof t)return this.fromBool(t);throw new TypeError("Non-numeric object passed to N64.")},r.min=function(t,e){return t.cmp(e)<0?t:e},r.max=function(t,e){return t.cmp(e)>0?t:e},r.random=function(){const t=new this;return t.hi=4294967296*Math.random()|0,t.lo=4294967296*Math.random()|0,t},r.pow=function(t,e){return(new this).fromInt(t).ipown(e)},r.shift=function(t,e){return(new this).fromInt(t).ishln(e)},r.readLE=function(t,e){const i=new this;return i.readLE(t,e),i},r.readBE=function(t,e){const i=new this;return i.readBE(t,e),i},r.readRaw=function(t,e){const i=new this;return i.readRaw(t,e),i},r.fromNumber=function(t){return(new this).fromNumber(t)},r.fromInt=function(t){return(new this).fromInt(t)},r.fromBool=function(t){return(new this).fromBool(t)},r.fromBits=function(t,e){return(new this).fromBits(t,e)},r.fromObject=function(t){return(new this).fromObject(t)},r.fromString=function(t,e){return(new this).fromString(t,e)},r.fromJSON=function(t){return(new this).fromJSON(t)},r.fromBN=function(t){return(new this).fromBN(t)},r.fromLE=function(t){return(new this).fromLE(t)},r.fromBE=function(t){return(new this).fromBE(t)},r.fromRaw=function(t){return(new this).fromRaw(t)},r.from=function(t,e){return(new this).from(t,e)},r.isN64=function(t){return t instanceof r},r.isU64=function(t){return t instanceof s},r.isI64=function(t){return t instanceof n},s.__proto__=r,s.prototype.__proto__=r.prototype,s.ULONG_MIN=0,s.ULONG_MAX=4294967295,s.UINT32_MIN=s(0,0),s.UINT32_MAX=s(0,4294967295),s.UINT64_MIN=s(0,0),s.UINT64_MAX=s(4294967295,4294967295),n.__proto__=r,n.prototype.__proto__=r.prototype,n.LONG_MIN=-2147483648,n.LONG_MAX=2147483647,n.INT32_MIN=n(4294967295,2147483648),n.INT32_MAX=n(0,2147483647),n.INT64_MIN=n(2147483648,0),n.INT64_MAX=n(2147483647,4294967295),e.N64=r,e.U64=s,e.I64=n},function(t,e,i){"use strict";(function(e){
/*!
 * ripemd160.js - RIPEMD160 implementation for bcrypto
 * Copyright (c) 2017-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 * Parts of this software based on hash.js.
 */
const r=i(0),s=i(14),n=-1,o=e.alloc(8,0),a=e.alloc(64,0);a[0]=128;const h=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],c=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],l=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],u=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11];class f{constructor(){this.state=new Uint32Array(5),this.msg=new Uint32Array(16),this.block=e.allocUnsafe(64),this.size=n}init(){return this.state[0]=1732584193,this.state[1]=4023233417,this.state[2]=2562383102,this.state[3]=271733878,this.state[4]=3285377520,this.size=0,this}update(t){return r(e.isBuffer(t)),this._update(t,t.length),this}final(){return this._final(e.allocUnsafe(20))}_update(t,e){r(this.size!==n,"Context already finalized.");let i=63&this.size,s=0;if(this.size+=e,i>0){let r=64-i;if(r>e&&(r=e),t.copy(this.block,i,s,s+r),e-=r,s+=r,(i+=r)<64)return;this.transform(this.block,0)}for(;e>=64;)this.transform(t,s),s+=64,e-=64;e>0&&t.copy(this.block,0,s,s+e)}_final(t){r(this.size!==n,"Context already finalized.");const e=this.size%64,i=8*this.size;b(o,i,0),b(o,i*(1/4294967296),4),this._update(a,1+(119-e)%64),this._update(o,8);for(let e=0;e<5;e++)b(t,this.state[e],4*e),this.state[e]=0;for(let t=0;t<16;t++)this.msg[t]=0;for(let t=0;t<64;t++)this.block[t]=0;return this.size=n,t}transform(t,e){const i=this.msg;let r=this.state[0],s=this.state[1],n=this.state[2],o=this.state[3],a=this.state[4],f=r,b=s,y=n,v=o,k=a;for(let r=0;r<16;r++)i[r]=w(t,e+4*r);for(let t=0;t<80;t++){let e=r+p(t,s,n,o)+i[h[t]]+g(t),w=d(e,l[t]),E=w+a;r=a,a=o,o=d(n,10),n=s,s=E,E=(w=d(e=f+p(79-t,b,y,v)+i[c[t]]+m(t),u[t]))+k,f=k,k=v,v=d(y,10),y=b,b=E}const E=this.state[1]+n+v;this.state[1]=this.state[2]+o+k,this.state[2]=this.state[3]+a+f,this.state[3]=this.state[4]+r+b,this.state[4]=this.state[0]+s+y,this.state[0]=E}static hash(){return new f}static hmac(){return new s(f,64)}static digest(t){return f.ctx.init().update(t).final()}static root(t,i){return r(e.isBuffer(t)&&20===t.length),r(e.isBuffer(i)&&20===i.length),f.ctx.init().update(t).update(i).final()}static multi(t,e,i){const r=f.ctx;return r.init(),r.update(t),r.update(e),i&&r.update(i),r.final()}static mac(t,e){return f.hmac().init(e).update(t).final()}}function d(t,e){return t<<e|t>>>32-e}function p(t,e,i,r){return t<=15?e^i^r:t<=31?e&i|~e&r:t<=47?(e|~i)^r:t<=63?e&r|i&~r:e^(i|~r)}function g(t){return t<=15?0:t<=31?1518500249:t<=47?1859775393:t<=63?2400959708:2840853838}function m(t){return t<=15?1352829926:t<=31?1548603684:t<=47?1836072691:t<=63?2053994217:0}function b(t,e,i){t[i+3]=e>>>24,t[i+2]=e>>16&255,t[i+1]=e>>8&255,t[i]=255&e}function w(t,e){return 16777216*(255&t[e+3])+((255&t[e+2])<<16|(255&t[e+1])<<8|255&t[e])}f.native=0,f.id="RIPEMD160",f.size=20,f.bits=160,f.blockSize=64,f.zero=e.alloc(20,0),f.ctx=new f,t.exports=f}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){const r=i(116),s=i(19),n=i(118),o=i(51);function a(e,i,r){const s=function t(){if(!(this instanceof t))return new t;this.ctx=new e,this.ctx.init()};return s.prototype.update=function(e,i){return this.ctx.update(function(e,i){return e?"string"==typeof e?t.from(e,i||"ascii"):Array.isArray(e)?t.from(e):e:t.alloc(0)}(e,i)),this},s.prototype.digest=function(t){return"hex"===t?this.ctx.final().toString("hex"):Array.prototype.slice.call(this.ctx.final())},s.bcrypto=e,s.blockSize=8*e.blockSize,s.outSize=e.bits,s.hmacStrength=i,s.padLength=r,s}e.sha224=a(r,192,64),e.sha256=a(s,192,64),e.sha384=a(n,192,128),e.sha512=a(o,192,128)}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * sha512.js - SHA512 implementation for bcrypto
 * Copyright (c) 2017-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 * Parts of this software based on hash.js.
 */
const r=i(0),s=i(14),n=-1,o=e.alloc(16,0),a=e.alloc(128,0);a[0]=128;const h=new Uint32Array([1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591]);class c{constructor(){this.state=new Uint32Array(16),this.msg=new Uint32Array(160),this.block=e.allocUnsafe(128),this.size=n}init(){return this.state[0]=1779033703,this.state[1]=4089235720,this.state[2]=3144134277,this.state[3]=2227873595,this.state[4]=1013904242,this.state[5]=4271175723,this.state[6]=2773480762,this.state[7]=1595750129,this.state[8]=1359893119,this.state[9]=2917565137,this.state[10]=2600822924,this.state[11]=725511199,this.state[12]=528734635,this.state[13]=4215389547,this.state[14]=1541459225,this.state[15]=327033209,this.size=0,this}update(t){return r(e.isBuffer(t)),this._update(t,t.length),this}final(){return this._final(e.allocUnsafe(64))}_update(t,e){r(this.size!==n,"Context already finalized.");let i=127&this.size,s=0;if(this.size+=e,i>0){let r=128-i;if(r>e&&(r=e),t.copy(this.block,i,s,s+r),e-=r,s+=r,(i+=r)<128)return;this.transform(this.block,0)}for(;e>=128;)this.transform(t,s),s+=128,e-=128;e>0&&t.copy(this.block,0,s,s+e)}_final(t){r(this.size!==n,"Context already finalized.");const e=this.size%128,i=8*this.size;T(o,i*(1/4294967296),8),T(o,i,12),this._update(a,1+(239-e)%128),this._update(o,16);for(let e=0;e<16;e++)T(t,this.state[e],4*e),this.state[e]=0;for(let t=0;t<160;t++)this.msg[t]=0;for(let t=0;t<128;t++)this.block[t]=0;return this.size=n,t}prepare(t,e){const i=this.msg;let r=0;for(;r<32;r++)i[r]=C(t,e+4*r);for(;r<160;r+=2){const t=P(i[r-4],i[r-3]),e=N(i[r-4],i[r-3]),s=i[r-14],n=i[r-13],o=_(i[r-30],i[r-29]),a=B(i[r-30],i[r-29]),h=i[r-32],c=i[r-31];i[r]=d(t,e,s,n,o,a,h,c),i[r+1]=p(t,e,s,n,o,a,h,c)}}transform(t,e){const i=this.msg;this.prepare(t,e);let r=this.state[0],s=this.state[1],n=this.state[2],o=this.state[3],a=this.state[4],c=this.state[5],d=this.state[6],p=this.state[7],b=this.state[8],w=this.state[9],y=this.state[10],v=this.state[11],_=this.state[12],B=this.state[13],P=this.state[14],N=this.state[15];for(let t=0;t<i.length;t+=2){let e=P,l=N,T=x(b,w),C=O(b,w);const M=k(b,w,y,v,_),U=E(b,w,y,v,_,B),L=h[t],z=h[t+1],D=i[t],H=i[t+1],F=g(e,l,T,C,M,U,L,z,D,H),V=m(e,l,T,C,M,U,L,z,D,H),K=u(e=I(r,s),l=A(r,s),T=S(r,s,n,o,a),C=R(r,s,n,o,a,c)),j=f(e,l,T,C);P=_,N=B,_=y,B=v,y=b,v=w,b=u(d,p,F,V),w=f(p,p,F,V),d=a,p=c,a=n,c=o,n=r,o=s,r=u(F,V,K,j),s=f(F,V,K,j)}l(this.state,0,r,s),l(this.state,2,n,o),l(this.state,4,a,c),l(this.state,6,d,p),l(this.state,8,b,w),l(this.state,10,y,v),l(this.state,12,_,B),l(this.state,14,P,N)}static hash(){return new c}static hmac(){return new s(c,128)}static digest(t){return c.ctx.init().update(t).final()}static root(t,i){return r(e.isBuffer(t)&&64===t.length),r(e.isBuffer(i)&&64===i.length),c.ctx.init().update(t).update(i).final()}static multi(t,e,i){const r=c.ctx;return r.init(),r.update(t),r.update(e),i&&r.update(i),r.final()}static mac(t,e){return c.hmac().init(e).update(t).final()}}function l(t,e,i,r){const s=t[e],n=r+t[e+1]>>>0,o=(n<r?1:0)+i+s;t[e]=o>>>0,t[e+1]=n}function u(t,e,i,r){return(e+r>>>0<e?1:0)+t+i>>>0}function f(t,e,i,r){return e+r>>>0}function d(t,e,i,r,s,n,o,a){let h=0,c=e;return h+=(c=c+r>>>0)<e?1:0,h+=(c=c+n>>>0)<n?1:0,t+i+s+o+(h+=(c=c+a>>>0)<a?1:0)>>>0}function p(t,e,i,r,s,n,o,a){return e+r+n+a>>>0}function g(t,e,i,r,s,n,o,a,h,c){let l=0,u=e;return l+=(u=u+r>>>0)<e?1:0,l+=(u=u+n>>>0)<n?1:0,l+=(u=u+a>>>0)<a?1:0,t+i+s+o+h+(l+=(u=u+c>>>0)<c?1:0)>>>0}function m(t,e,i,r,s,n,o,a,h,c){return e+r+n+a+c>>>0}function b(t,e,i){return(e<<32-i|t>>>i)>>>0}function w(t,e,i){return(t<<32-i|e>>>i)>>>0}function y(t,e,i){return t>>>i}function v(t,e,i){return(t<<32-i|e>>>i)>>>0}function k(t,e,i,r,s){let n=t&i^~t&s;return n<0&&(n+=4294967296),n}function E(t,e,i,r,s,n){let o=e&r^~e&n;return o<0&&(o+=4294967296),o}function S(t,e,i,r,s){let n=t&i^t&s^i&s;return n<0&&(n+=4294967296),n}function R(t,e,i,r,s,n){let o=e&r^e&n^r&n;return o<0&&(o+=4294967296),o}function I(t,e){let i=b(t,e,28)^b(e,t,2)^b(e,t,7);return i<0&&(i+=4294967296),i}function A(t,e){let i=w(t,e,28)^w(e,t,2)^w(e,t,7);return i<0&&(i+=4294967296),i}function x(t,e){let i=b(t,e,14)^b(t,e,18)^b(e,t,9);return i<0&&(i+=4294967296),i}function O(t,e){let i=w(t,e,14)^w(t,e,18)^w(e,t,9);return i<0&&(i+=4294967296),i}function _(t,e){let i=b(t,e,1)^b(t,e,8)^y(t,0,7);return i<0&&(i+=4294967296),i}function B(t,e){let i=w(t,e,1)^w(t,e,8)^v(t,e,7);return i<0&&(i+=4294967296),i}function P(t,e){let i=b(t,e,19)^b(e,t,29)^y(t,0,6);return i<0&&(i+=4294967296),i}function N(t,e){let i=w(t,e,19)^w(e,t,29)^v(t,e,6);return i<0&&(i+=4294967296),i}function T(t,e,i){t[i]=e>>>24,t[i+1]=e>>16&255,t[i+2]=e>>8&255,t[i+3]=255&e}function C(t,e){return 16777216*(255&t[e])+((255&t[e+1])<<16|(255&t[e+2])<<8|255&t[e+3])}c.native=0,c.id="SHA512",c.size=64,c.bits=512,c.blockSize=128,c.zero=e.alloc(64,0),c.ctx=new c,t.exports=c}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){
/*!
 * utils.js - utils for javascript
 * Copyright (c) 2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */
const r=i(0),s=t.alloc(1,0),n=[];function o(e){if(null==e)return s;if(r(t.isBuffer(e)),0===e.length)return s;if(0!==e[0])return e;for(let t=1;t<e.length;t++)if(0!==e[t])return e.slice(t);return e.slice(-1)}function a(e){for(r(e>>>0===e),r(e<=128);n.length<e;)n.push(null);let i=n[e];return i||(i=t.alloc(e,0),n[e]=i),i}function h(t){r("string"==typeof t);for(let e=t.length-1;e>=0;e--){switch(t.charCodeAt(e)){case 9:case 11:case 32:continue}return t.substring(0,e+1)}return t}e.countBits=function(e){r(t.isBuffer(e));let i=0;for(;i<e.length&&0===e[i];i++);let s=8*(e.length-i);if(0===s)return 0;s-=8;let n=e[i];for(;n;)s+=1,n>>>=1;return s},e.trimZeroes=o,e.getZero=a,e.leftPad=function(e,i){if(null==e)return a(i);if(r(t.isBuffer(e)),r(i>>>0===i),e.length>i&&(e=o(e)),r(e.length<=i),e.length===i)return e;const s=t.allocUnsafe(i),n=i-e.length;return s.fill(0,0,n),e.copy(s,n),s},e.lines=function*(t){r("string"==typeof t);let e=0,i=0;for(t.length>0&&65279===t.charCodeAt(0)&&(e+=1,i+=1);e<t.length;e++){const r=t.charCodeAt(e);switch(r){case 13:case 10:if(i!==e){const r=h(t.substring(i,e));r.length>0&&(yield r)}13===r&&e+1<t.length&&10===t.charCodeAt(e+1)&&(e+=1),i=e+1}}if(i!==e){const r=h(t.substring(i,e));r.length>0&&(yield r)}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * block.js - block object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(2),{BufferSet:n}=i(13),o=i(9),a=i(189),h=i(3),c=i(64),l=i(20),u=i(73),f=i(41),d=i(4),p=i(5),{encoding:g}=s;class m extends c{constructor(t){super(),this.txs=[],this._raw=null,this._size=-1,this._witness=-1,t&&this.fromOptions(t)}fromOptions(t){if(this.parseOptions(t),t.txs){r(Array.isArray(t.txs));for(const e of t.txs)r(e instanceof l),this.txs.push(e)}return this}static fromOptions(t){return(new this).fromOptions(t)}refresh(t){if(this._refresh(),this._raw=null,this._size=-1,this._witness=-1,!t)return this;for(const t of this.txs)t.refresh();return this}toRaw(){return this.frame().data}toNormal(){return this.hasWitness()?this.frameNormal().data:this.toRaw()}toWriter(t){if(this.mutable)return this.writeWitness(t);const e=this.frame();return t.writeBytes(e.data),t}toNormalWriter(t){return this.hasWitness()?(this.writeNormal(t),t):this.toWriter(t)}frame(){if(this.mutable)return r(!this._raw),this.frameWitness();if(this._raw){r(this._size>=0),r(this._witness>=0);const t=new b(this._size,this._witness);return t.data=this._raw,t}const t=this.frameWitness();return this._raw=t.data,this._size=t.size,this._witness=t.witness,t}getSizes(){return this.mutable?this.getWitnessSizes():this.frame()}getVirtualSize(){const t=h.WITNESS_SCALE_FACTOR;return(this.getWeight()+t-1)/t|0}getWeight(){const t=this.getSizes();return(t.size-t.witness)*(h.WITNESS_SCALE_FACTOR-1)+t.size}getSize(){return this.getSizes().size}getBaseSize(){const t=this.getSizes();return t.size-t.witness}hasWitness(){if(-1!==this._witness)return 0!==this._witness;for(const t of this.txs)if(t.hasWitness())return!0;return!1}hasTX(t){return-1!==this.indexOf(t)}indexOf(t){for(let e=0;e<this.txs.length;e++)if(this.txs[e].hash().equals(t))return e;return-1}createMerkleRoot(t){const e=[];for(const t of this.txs)e.push(t.hash());const[i,r]=a.createRoot(o,e);return r?null:"hex"===t?i.toString("hex"):i}createWitnessNonce(){return e.from(h.ZERO_HASH)}createCommitmentHash(t){const e=this.getWitnessNonce(),i=[];r(e,"No witness nonce present."),i.push(h.ZERO_HASH);for(let t=1;t<this.txs.length;t++){const e=this.txs[t];i.push(e.witnessHash())}const[s]=a.createRoot(o,i),n=o.root(s,e);return"hex"===t?n.toString("hex"):n}getMerkleRoot(t){return"hex"===t?this.merkleRoot.toString("hex"):this.merkleRoot}getWitnessNonce(){if(0===this.txs.length)return null;const t=this.txs[0];if(1!==t.inputs.length)return null;const e=t.inputs[0];return 1!==e.witness.items.length?null:32!==e.witness.items[0].length?null:e.witness.items[0]}getCommitmentHash(t){if(0===this.txs.length)return null;const e=this.txs[0];let i=null;for(let t=e.outputs.length-1;t>=0;t--){const r=e.outputs[t];if(r.script.isCommitment()){i=r.script.getCommitment();break}}return i?"hex"===t?i.toString("hex"):i:null}verifyBody(){const[t]=this.checkBody();return t}checkBody(){if(0===this.txs.length||this.txs.length>h.MAX_BLOCK_SIZE||this.getBaseSize()>h.MAX_BLOCK_SIZE)return[!1,"bad-blk-length",100];if(0===this.txs.length||!this.txs[0].isCoinbase())return[!1,"bad-cb-missing",100];const t=this.createMerkleRoot();if(!t)return[!1,"bad-txns-duplicate",100];if(!this.merkleRoot.equals(t))return[!1,"bad-txnmrklroot",100];const e=h.WITNESS_SCALE_FACTOR;let i=0;for(let t=0;t<this.txs.length;t++){const r=this.txs[t];if(t>0&&r.isCoinbase())return[!1,"bad-cb-multiple",100];const[s,n,o]=r.checkSanity();if(!s)return[s,n,o];if((i+=r.getLegacySigops())*e>h.MAX_BLOCK_SIGOPS_COST)return[!1,"bad-blk-sigops",100]}return[!0,"valid",0]}getCoinbaseHeight(){if(this.version<2)return-1;if(0===this.txs.length)return-1;const t=this.txs[0];return 0===t.inputs.length?-1:t.inputs[0].script.getCoinbaseHeight()}getClaimed(){return r(this.txs.length>0),r(this.txs[0].isCoinbase()),this.txs[0].getOutputValue()}getPrevout(){const t=new n;for(let e=1;e<this.txs.length;e++){const i=this.txs[e];for(const e of i.inputs)t.add(e.prevout.hash)}return t.toArray()}inspect(){return this.format()}format(t,e){const i=this.getCommitmentHash("hex");return{hash:this.rhash(),height:null!=e?e:-1,size:this.getSize(),virtualSize:this.getVirtualSize(),date:p.date(this.time),version:this.version.toString(16),prevBlock:p.revHex(this.prevBlock),merkleRoot:p.revHex(this.merkleRoot),commitmentHash:i?p.revHex(i):null,time:this.time,bits:this.bits,nonce:this.nonce,txs:this.txs.map((e,i)=>e.format(t,null,i))}}toJSON(){return this.getJSON()}getJSON(t,e,i,r){return t=d.get(t),{hash:this.rhash(),height:i,depth:r,version:this.version,prevBlock:p.revHex(this.prevBlock),merkleRoot:p.revHex(this.merkleRoot),time:this.time,bits:this.bits,nonce:this.nonce,txs:this.txs.map((i,r)=>i.getJSON(t,e,null,r))}}fromJSON(t){r(t,"Block data is required."),r(Array.isArray(t.txs)),this.parseJSON(t);for(const e of t.txs)this.txs.push(l.fromJSON(e));return this}static fromJSON(t){return(new this).fromJSON(t)}fromReader(t){t.start(),this.readHead(t);const e=t.readVarint();let i=0;for(let r=0;r<e;r++){const e=l.fromReader(t);i+=e._witness,this.txs.push(e)}return this.mutable||(this._raw=t.endData(),this._size=this._raw.length,this._witness=i),this}fromRaw(t){return this.fromReader(s.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t,i){return"string"==typeof t&&(t=e.from(t,i)),(new this).fromRaw(t)}toMerkle(t){return u.fromBlock(this,t)}writeNormal(t){this.writeHead(t),t.writeVarint(this.txs.length);for(const e of this.txs)e.toNormalWriter(t);return t}writeWitness(t){this.writeHead(t),t.writeVarint(this.txs.length);for(const e of this.txs)e.toWriter(t);return t}frameNormal(){const t=this.getNormalSizes(),e=s.write(t.size);return this.writeNormal(e),t.data=e.render(),t}frameWitness(){const t=this.getWitnessSizes(),e=s.write(t.size);return this.writeWitness(e),t.data=e.render(),t}toHeaders(){return f.fromBlock(this)}getNormalSizes(){let t=0;t+=80,t+=g.sizeVarint(this.txs.length);for(const e of this.txs)t+=e.getBaseSize();return new b(t,0)}getWitnessSizes(){let t=0,e=0;t+=80,t+=g.sizeVarint(this.txs.length);for(const i of this.txs){const r=i.getSizes();t+=r.size,e+=r.witness}return new b(t,e)}static isBlock(t){return t instanceof m}}class b{constructor(t,e){this.data=null,this.size=t,this.witness=e}}t.exports=m}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * abstractblock.js - abstract block object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(9),n=i(2),o=i(5),a=i(38),h=i(3);t.exports=class{constructor(){this.version=1,this.prevBlock=h.ZERO_HASH,this.merkleRoot=h.ZERO_HASH,this.time=0,this.bits=0,this.nonce=0,this.mutable=!1,this._hash=null,this._hhash=null}parseOptions(t){return r(t,"Block data is required."),r(t.version>>>0===t.version),r(e.isBuffer(t.prevBlock)),r(e.isBuffer(t.merkleRoot)),r(t.time>>>0===t.time),r(t.bits>>>0===t.bits),r(t.nonce>>>0===t.nonce),this.version=t.version,this.prevBlock=t.prevBlock,this.merkleRoot=t.merkleRoot,this.time=t.time,this.bits=t.bits,this.nonce=t.nonce,null!=t.mutable&&(r("boolean"==typeof t.mutable),this.mutable=t.mutable),this}parseJSON(t){return r(t,"Block data is required."),r(t.version>>>0===t.version),r("string"==typeof t.prevBlock),r("string"==typeof t.merkleRoot),r(t.time>>>0===t.time),r(t.bits>>>0===t.bits),r(t.nonce>>>0===t.nonce),this.version=t.version,this.prevBlock=o.fromRev(t.prevBlock),this.merkleRoot=o.fromRev(t.merkleRoot),this.time=t.time,this.bits=t.bits,this.nonce=t.nonce,this}isMemory(){return!1}_refresh(){this._hash=null,this._hhash=null}refresh(){return this._refresh()}hash(t){let e=this._hash;if(e||(e=s.digest(this.toHead()),this.mutable||(this._hash=e)),"hex"===t){let t=this._hhash;t||(t=e.toString("hex"),this.mutable||(this._hhash=t)),e=t}return e}toHead(){return this.writeHead(n.write(80)).render()}fromHead(t){return this.readHead(n.read(t))}writeHead(t){return t.writeU32(this.version),t.writeHash(this.prevBlock),t.writeHash(this.merkleRoot),t.writeU32(this.time),t.writeU32(this.bits),t.writeU32(this.nonce),t}readHead(t){return this.version=t.readU32(),this.prevBlock=t.readHash(),this.merkleRoot=t.readHash(),this.time=t.readU32(),this.bits=t.readU32(),this.nonce=t.readU32(),this}verify(){return!!this.verifyPOW()&&!!this.verifyBody()}verifyPOW(){return h.verifyPOW(this.hash(),this.bits)}verifyBody(){throw new Error("Abstract method.")}rhash(){return o.revHex(this.hash())}toInv(){return new a(a.types.BLOCK,this.hash())}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * witness.js - witness object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(2),n=i(10),o=i(26),a=i(12),h=i(40),{encoding:c}=s,l=o.types;class u extends h{constructor(t){super(),t&&this.fromOptions(t)}fromOptions(t){return r(t,"Witness data is required."),Array.isArray(t)?this.fromArray(t):t.items?this.fromArray(t.items):this}static fromOptions(t){return(new this).fromOptions(t)}toArray(){return this.items.slice()}fromArray(t){return r(Array.isArray(t)),this.items=t,this}static fromArray(t){return(new this).fromArray(t)}toItems(){return this.items.slice()}fromItems(t){return r(Array.isArray(t)),this.items=t,this}static fromItems(t){return(new this).fromItems(t)}toStack(){return new h(this.toArray())}fromStack(t){return this.fromArray(t.items)}static fromStack(t){return(new this).fromStack(t)}inspect(){return`<Witness: ${this.toString()}>`}clone(){return(new this.constructor).inject(this)}inject(t){return this.items=t.items.slice(),this}compile(){return this}getInputType(){return this.isPubkeyhashInput()?l.WITNESSPUBKEYHASH:this.isScripthashInput()?l.WITNESSSCRIPTHASH:l.NONSTANDARD}getInputAddress(){return a.fromWitness(this)}isPubkeyInput(){return!1}getPubkeyInput(){return null}isPubkeyhashInput(){return 2===this.items.length&&o.isSignatureEncoding(this.items[0])&&o.isKeyEncoding(this.items[1])}getPubkeyhashInput(){return this.isPubkeyhashInput()?[this.items[0],this.items[1]]:[null,null]}isMultisigInput(){return!1}getMultisigInput(){return null}isScripthashInput(){return this.items.length>0&&!this.isPubkeyhashInput()}getScripthashInput(){return this.isScripthashInput()?this.items[this.items.length-1]:null}isUnknownInput(){return this.getInputType()===l.NONSTANDARD}test(t){for(const e of this.items)if(0!==e.length&&t.test(e))return!0;return!1}getRedeem(){if(0===this.items.length)return null;const t=this.items[this.items.length-1];return t?n.fromRaw(t):null}indexOf(t){for(let e=0;e<this.items.length;e++)if(this.items[e].equals(t))return e;return-1}getSize(){let t=0;for(const e of this.items)t+=c.sizeVarBytes(e);return t}getVarSize(){return c.sizeVarint(this.items.length)+this.getSize()}toWriter(t){t.writeVarint(this.items.length);for(const e of this.items)t.writeVarBytes(e);return t}toRaw(){const t=this.getVarSize();return this.toWriter(s.write(t)).render()}toJSON(){return this.toRaw().toString("hex")}fromJSON(t){return r("string"==typeof t,"Witness must be a string."),this.fromRaw(e.from(t,"hex"))}static fromJSON(t){return(new this).fromJSON(t)}fromReader(t){const e=t.readVarint();for(let i=0;i<e;i++)this.items.push(t.readVarBytes());return this}fromRaw(t){return this.fromReader(s.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t,i){return"string"==typeof t&&(t=e.from(t,i)),(new this).fromRaw(t)}fromString(t){if(!Array.isArray(t)){if(r("string"==typeof t),0===(t=t.trim()).length)return this;t=t.split(/\s+/)}for(const i of t)this.items.push(e.from(i,"hex"));return this}static fromString(t){return(new this).fromString(t)}static isWitness(t){return t instanceof u}}t.exports=u}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * bfilter.js - bloom filters for javascript
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(204),s=i(206);e.BloomFilter=r,e.RollingFilter=s},function(t,e,i){"use strict";
/*!
 * pbkdf2.js - pbkdf2 for bcrypto
 * Copyright (c) 2017-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */t.exports=i(149)},function(t,e,i){"use strict";
/*!
 * common.js - commonly required functions for wallet.
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const{BufferMap:r}=i(13),s=e;s.isName=function(t){if("string"!=typeof t)return!1;if(0===t.length)return!1;if(!/^[\-\._0-9A-Za-z]+$/.test(t))return!1;switch(t[0]){case"_":case"-":case".":return!1}switch(t[t.length-1]){case"_":case"-":case".":return!1}return t.length>=1&&t.length<=40},s.sortTX=function(t){return t.sort((t,e)=>t.mtime-e.mtime)},s.sortCoins=function(t){return t.sort((t,e)=>(t=-1===t.height?2147483647:t.height)-(e=-1===e.height?2147483647:e.height))},s.sortDeps=function(t){const e=new r;for(const i of t){const t=i.hash();e.set(t,i)}const i=new r,s=new r,n=[];for(const[t,r]of e){s.set(t,0);let o=!1;for(const n of r.inputs){const a=n.prevout.hash;if(!e.has(a))continue;const h=s.get(t);s.set(t,h+1),o=!0,i.has(a)||i.set(a,[]),i.get(a).push(r)}o||n.push(r)}const o=[];for(const t of n){const e=i.get(t.hash());if(o.push(t),e)for(const t of e){let e=s.get(t.hash());0==--e&&n.push(t),s.set(t.hash(),e)}}return o}},function(t,e,i){"use strict";
/*!
 * cleanse.js - cleanse for bcrypto
 * Copyright (c) 2017-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */t.exports=i(238)},function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}},function(t,e,i){"use strict";const r=i(0),s=i(183),n=i(184),o=i(185),a=i(187);e.DB=s,e.Key=n,e.create=(t=>{null==t&&(t={}),"string"==typeof t&&(t={location:t}),r(t&&"object"==typeof t);const{memory:e,location:i}=t;return e?new s(o,"memory",t):new s(a,i,t)}),e.key=((t,e)=>new n(t,e))},function(t,e,i){"use strict";
/*!
 * undocoins.js - undocoins object for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(0),s=i(2),n=i(36);t.exports=class{constructor(){this.items=[]}push(t){return this.items.push(t)}getSize(){let t=0;t+=4;for(const e of this.items)t+=e.getSize();return t}toRaw(){const t=this.getSize(),e=s.write(t);e.writeU32(this.items.length);for(const t of this.items)t.toWriter(e);return e.render()}fromRaw(t){const e=s.read(t),i=e.readU32();for(let t=0;t<i;t++)this.items.push(n.fromReader(e));return this}static fromRaw(t){return(new this).fromRaw(t)}isEmpty(){return 0===this.items.length}commit(){const t=this.toRaw();return this.items.length=0,t}apply(t,e){const i=this.items.pop();r(i),t.addEntry(e,i)}}},function(t,e,i){"use strict";(function(e){
/*!
 * merkleblock.js - merkleblock object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(2),{BufferMap:n,BufferSet:o}=i(13),a=i(5),h=i(9),c=i(3),l=i(64),u=i(41),f=e.from([0]),{encoding:d}=s;class p extends l{constructor(t){super(),this.txs=[],this.hashes=[],this.flags=f,this.totalTX=0,this._tree=null,t&&this.fromOptions(t)}fromOptions(t){if(this.parseOptions(t),r(t,"MerkleBlock data is required."),r(Array.isArray(t.hashes)),r(e.isBuffer(t.flags)),r(t.totalTX>>>0===t.totalTX),t.hashes)for(const i of t.hashes)r(e.isBuffer(i)),this.hashes.push(i);return t.flags&&(r(e.isBuffer(t.flags)),this.flags=t.flags),null!=t.totalTX&&(r(t.totalTX>>>0===t.totalTX),this.totalTX=t.totalTX),this}static fromOptions(t){return(new this).fromOptions(t)}refresh(t){if(this._refresh(),this._tree=null,t)for(const t of this.txs)t.refresh()}hasTX(t){return-1!==this.indexOf(t)}indexOf(t){const e=this.getTree().map.get(t);return null==e?-1:e}verifyBody(){const[t]=this.checkBody();return t}checkBody(){return this.getTree().root.equals(this.merkleRoot)?[!0,"valid",0]:[!1,"bad-txnmrklroot",100]}getTree(){if(!this._tree)try{this._tree=this.extractTree()}catch(t){this._tree=new g}return this._tree}extractTree(){const t=[],e=[],i=new n,r=this.hashes,s=this.flags,o=this.totalTX;let a=0,l=0,u=!1,f=0;const d=t=>o+(1<<t)-1>>>t,p=(n,o)=>{if(a>=8*s.length)return u=!0,c.ZERO_HASH;const f=s[a/8|0]>>>a%8&1;if(a+=1,0===n||!f){if(l>=r.length)return u=!0,c.ZERO_HASH;const s=r[l];return l+=1,0===n&&f&&(t.push(s),e.push(o),i.set(s,o)),s}const g=p(n-1,2*o);let m;return 2*o+1<d(n-1)?(m=p(n-1,2*o+1)).equals(g)&&(u=!0):m=g,h.root(g,m)};if(0===o)throw new Error("Zero transactions.");if(o>c.MAX_BLOCK_SIZE/60)throw new Error("Too many transactions.");if(r.length>o)throw new Error("Too many hashes.");if(8*s.length<r.length)throw new Error("Flags too small.");for(;d(f)>1;)f+=1;const m=p(f,0);if(u)throw new Error("Mutated merkle tree.");if(((a+7)/8|0)!==s.length)throw new Error("Too many flag bits.");if(l!==r.length)throw new Error("Incorrect number of hashes.");return new g(m,t,e,i)}getCoinbaseHeight(){return-1}inspect(){return this.format()}format(t,e){return{hash:this.rhash(),height:null!=e?e:-1,date:a.date(this.time),version:this.version.toString(16),prevBlock:a.revHex(this.prevBlock),merkleRoot:a.revHex(this.merkleRoot),time:this.time,bits:this.bits,nonce:this.nonce,totalTX:this.totalTX,hashes:this.hashes.map(t=>t.toString("hex")),flags:this.flags,map:this.getTree().map,txs:this.txs.length}}getSize(){let t=0;return t+=80,t+=4,t+=d.sizeVarint(this.hashes.length),t+=32*this.hashes.length,(t+=d.sizeVarint(this.flags.length))+this.flags.length}toWriter(t){this.writeHead(t),t.writeU32(this.totalTX),t.writeVarint(this.hashes.length);for(const e of this.hashes)t.writeHash(e);return t.writeVarBytes(this.flags),t}toRaw(){const t=this.getSize();return this.toWriter(s.write(t)).render()}fromReader(t){this.readHead(t),this.totalTX=t.readU32();const e=t.readVarint();for(let i=0;i<e;i++)this.hashes.push(t.readHash());return this.flags=t.readVarBytes(),this}fromRaw(t){return this.fromReader(s.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t,i){return"string"==typeof t&&(t=e.from(t,i)),(new this).fromRaw(t)}toJSON(){return this.getJSON()}getJSON(t,e,i){return{hash:this.rhash(),height:i,version:this.version,prevBlock:a.revHex(this.prevBlock),merkleRoot:a.revHex(this.merkleRoot),time:this.time,bits:this.bits,nonce:this.nonce,totalTX:this.totalTX,hashes:this.hashes.map(t=>a.revHex(t)),flags:this.flags.toString("hex")}}fromJSON(t){r(t,"MerkleBlock data is required."),r(Array.isArray(t.hashes)),r("string"==typeof t.flags),r(t.totalTX>>>0===t.totalTX),this.parseJSON(t);for(const e of t.hashes)this.hashes.push(a.fromRev(e));return this.flags=e.from(t.flags,"hex"),this.totalTX=t.totalTX,this}static fromJSON(t){return(new this).fromJSON(t)}static fromBlock(t,e){const i=[];for(const r of t.txs)i.push(r.isWatched(e)?1:0);return this.fromMatches(t,i)}static fromHashes(t,e){const i=new o;for(const t of e)i.add(t);const r=[];for(const e of t.txs){const t=e.hash();r.push(i.has(t)?1:0)}return this.fromMatches(t,r)}static fromMatches(t,i){const r=[],s=[],n=[],o=[],a=t.txs.length;let c=0;const l=t=>a+(1<<t)-1>>>t,u=(t,e,i)=>{if(0===t)return i[e];const r=u(t-1,2*e,i);let s;return s=2*e+1<l(t-1)?u(t-1,2*e+1,i):r,h.root(r,s)},f=(t,e,i,r)=>{let s=0;for(let i=e<<t;i<e+1<<t&&i<a;i++)s|=r[i];n.push(s),0!==t&&s?(f(t-1,2*e,i,r),2*e+1<l(t-1)&&f(t-1,2*e+1,i,r)):o.push(u(t,e,i))};for(let e=0;e<t.txs.length;e++){const n=t.txs[e];i[e]&&r.push(n),s.push(n.hash())}for(;l(c)>1;)c+=1;f(c,0,s,i);const d=e.allocUnsafe((n.length+7)/8|0);d.fill(0);for(let t=0;t<n.length;t++)d[t/8|0]|=n[t]<<t%8;const p=new this;return p._hash=t._hash,p._hhash=t._hhash,p.version=t.version,p.prevBlock=t.prevBlock,p.merkleRoot=t.merkleRoot,p.time=t.time,p.bits=t.bits,p.nonce=t.nonce,p.totalTX=a,p.hashes=o,p.flags=d,p.txs=r,p}static isMerkleBlock(t){return t instanceof p}toHeaders(){return u.fromBlock(this)}}class g{constructor(t,e,i,r){this.root=t||c.ZERO_HASH,this.matches=e||[],this.indexes=i||[],this.map=r||new n}}t.exports=p}).call(this,i(1).Buffer)},function(t,e,i){"use strict";t.exports=i(193)},function(t,e,i){"use strict";
/*!
 * pkg.js - package constants
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=e;r.name=i(160).name,r.core="bcoin",r.organization="bcoin-org",r.currency="bitcoin",r.unit="btc",r.base="satoshi",r.cfg=`${r.core}.conf`,r.url=`https://github.com/${r.organization}/${r.name}`,r.version=i(160).version},function(t,e,i){"use strict";
/*!
 * netaddress.js - network address object for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(0),s=i(2),n=i(74),o=i(4),a=i(5),h=i(42);class c{constructor(t){this.host="0.0.0.0",this.port=0,this.services=0,this.time=0,this.hostname="0.0.0.0:0",this.raw=n.ZERO_IP,t&&this.fromOptions(t)}fromOptions(t){return r("string"==typeof t.host),r("number"==typeof t.port),this.raw=n.toBuffer(t.host),this.host=n.toString(this.raw),this.port=t.port,t.services&&(r("number"==typeof t.services),this.services=t.services),t.time&&(r("number"==typeof t.time),this.time=t.time),this.hostname=n.toHostname(this.host,this.port),this}static fromOptions(t){return(new this).fromOptions(t)}hasServices(t){return(this.services&t)===t}isIPv4(){return n.isIPv4(this.raw)}isIPv6(){return n.isIPv6(this.raw)}isNull(){return n.isNull(this.raw)}isLocal(){return n.isLocal(this.raw)}isValid(){return n.isValid(this.raw)}isRoutable(){return n.isRoutable(this.raw)}isOnion(){return n.isOnion(this.raw)}equal(t){return 0===this.compare(t)}compare(t){const e=this.raw.compare(t.raw);return 0!==e?e:this.port-t.port}getReachability(t){return n.getReachability(this.raw,t.raw)}setNull(){this.raw=n.ZERO_IP,this.host="0.0.0.0",this.hostname=n.toHostname(this.host,this.port)}setHost(t){this.raw=n.toBuffer(t),this.host=n.toString(this.raw),this.hostname=n.toHostname(this.host,this.port)}setPort(t){r(t>=0&&t<=65535),this.port=t,this.hostname=n.toHostname(this.host,t)}fromHost(t,e,i){return i=o.get(i),r(e>=0&&e<=65535),this.raw=n.toBuffer(t),this.host=n.toString(this.raw),this.port=e,this.services=c.DEFAULT_SERVICES,this.time=i.now(),this.hostname=n.toHostname(this.host,this.port),this}static fromHost(t,e,i){return(new this).fromHost(t,e,i)}fromHostname(t,e){e=o.get(e);const i=n.fromHostname(t,e.port);return this.fromHost(i.host,i.port,e)}static fromHostname(t,e){return(new this).fromHostname(t,e)}fromSocket(t,e){const i=t.remoteAddress,s=t.remotePort;return r("string"==typeof i),r("number"==typeof s),this.fromHost(n.normalize(i),s,e)}static fromSocket(t,e){return(new this).fromSocket(t,e)}fromReader(t,e){return this.time=e?t.readU32():0,this.services=t.readU32(),t.readU32(),this.raw=t.readBytes(16),this.host=n.toString(this.raw),this.port=t.readU16BE(),this.hostname=n.toHostname(this.host,this.port),this}fromRaw(t,e){return this.fromReader(s.read(t),e)}static fromReader(t,e){return(new this).fromReader(t,e)}static fromRaw(t,e){return(new this).fromRaw(t,e)}toWriter(t,e){return e&&t.writeU32(this.time),t.writeU32(this.services),t.writeU32(0),t.writeBytes(this.raw),t.writeU16BE(this.port),t}getSize(t){return 26+(t?4:0)}toRaw(t){const e=this.getSize(t);return this.toWriter(s.write(e),t).render()}toJSON(){return{host:this.host,port:this.port,services:this.services,time:this.time}}fromJSON(t){return r((65535&t.port)===t.port),r(t.services>>>0===t.services),r(t.time>>>0===t.time),this.raw=n.toBuffer(t.host),this.host=t.host,this.port=t.port,this.services=t.services,this.time=t.time,this.hostname=n.toHostname(this.host,this.port),this}static fromJSON(t){return(new this).fromJSON(t)}inspect(){return"<NetAddress:"+` hostname=${this.hostname}`+` services=${this.services.toString(2)}`+` date=${a.date(this.time)}`+">"}}c.DEFAULT_SERVICES=0|h.services.NETWORK|h.services.WITNESS|h.services.BLOOM,t.exports=c},function(t,e,i){"use strict";
/*!
 * scrypt.js - scrypt for bcrypto
 * Copyright (c) 2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */t.exports=i(148)},function(t,e,i){"use strict";
/*!
 * bweb.js - a web server
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bweb
 */const r=i(225),s=i(226),{RPC:n,RPCError:o,errors:a}=i(161),h=i(229);e.Server=r,e.createServer=(t=>new r(t)),e.server=(t=>new r(t)),e.Router=s,e.router=(()=>new s),e.RPC=n,e.rpc=(()=>new n),e.RPCError=o,e.errors=a,e.middleware=h},function(t,e,i){"use strict";t.exports=i(230)},function(t,e,i){"use strict";(function(t){
/*!
 * safe.js - constant-time equals for bcrypto
 * Copyright (c) 2016-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 *
 * Parts of this software are based on golang/go:
 *   Copyright (c) 2009 The Go Authors. All rights reserved.
 *   https://github.com/golang/go
 *
 * Resources:
 *   https://github.com/golang/go/blob/master/src/crypto/subtle/constant_time.go
 */
const r=i(0);function s(t,e){return n(255&t,255&e)}function n(t,e){return(t^e)-1>>>31}e.safeCompare=function(e,i){if(r(t.isBuffer(e)),r(t.isBuffer(i)),n(i.length,0))return n(e.length,0);let o=e.length^i.length;for(let t=0;t<e.length;t++)o|=e[t]^i[t%i.length];return s(o,0)},e.safeEqual=function(e,i){if(r(t.isBuffer(e)),r(t.isBuffer(i)),e.length!==i.length)return 0;let n=0;for(let t=0;t<e.length;t++)n|=e[t]^i[t];return s(n,0)},e.safeEqualByte=s,e.safeEqualInt=n,e.safeSelect=function(t,e,i){return~(t-1)&e|t-1&i},e.safeLTE=function(t,e){return t-e-1>>>31&1},e.safeCopy=function(e,i,s){r(Number.isSafeInteger(e)),r(t.isBuffer(i)),r(t.isBuffer(s)),r(i.length===s.length);const n=e-1&255,o=255&~(e-1);for(let t=0;t<i.length;t++)i[t]=i[t]&n|s[t]&o}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * path.js - path object for wallets
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(0),s=i(2),n=i(12),{encoding:o}=s;class a{constructor(t){this.keyType=a.types.HD,this.name=null,this.account=0,this.type=n.types.PUBKEYHASH,this.version=-1,this.branch=-1,this.index=-1,this.encrypted=!1,this.data=null,this.hash=null,t&&this.fromOptions(t)}fromOptions(t){return this.keyType=t.keyType,this.name=t.name,this.account=t.account,this.branch=t.branch,this.index=t.index,this.encrypted=t.encrypted,this.data=t.data,this.type=t.type,this.version=t.version,this.hash=t.hash,this}static fromOptions(t){return(new this).fromOptions(t)}clone(){const t=new this.constructor;return t.keyType=this.keyType,t.name=this.name,t.account=this.account,t.branch=this.branch,t.index=this.index,t.encrypted=this.encrypted,t.data=this.data,t.type=this.type,t.version=this.version,t.hash=this.hash,t}fromRaw(t){const e=s.read(t);this.account=e.readU32(),this.keyType=e.readU8();const i=e.readU8();switch(this.type=7&i,this.version=i>>>3,31===this.version&&(this.version=-1),this.keyType){case a.types.HD:this.branch=e.readU32(),this.index=e.readU32();break;case a.types.KEY:this.encrypted=1===e.readU8(),this.data=e.readVarBytes();break;case a.types.ADDRESS:break;default:r(!1)}return this}static fromRaw(t){return(new this).fromRaw(t)}getSize(){let t=0;switch(t+=6,this.keyType){case a.types.HD:t+=8;break;case a.types.KEY:t+=1,t+=o.sizeVarBytes(this.data)}return t}toRaw(){const t=this.getSize(),e=s.write(t);e.writeU32(this.account),e.writeU8(this.keyType);let i=this.version;-1===i&&(i=31);const n=i<<3|this.type;switch(e.writeU8(n),this.keyType){case a.types.HD:r(!this.data),r(-1!==this.index),e.writeU32(this.branch),e.writeU32(this.index);break;case a.types.KEY:r(this.data),r(-1===this.index),e.writeU8(this.encrypted?1:0),e.writeVarBytes(this.data);break;case a.types.ADDRESS:r(!this.data),r(-1===this.index);break;default:r(!1)}return e.render()}fromAddress(t,e){return this.keyType=a.types.ADDRESS,this.name=t.name,this.account=t.accountIndex,this.version=e.version,this.type=e.type,this.hash=e.getHash(),this}static fromAddress(t,e){return(new this).fromAddress(t,e)}toPath(){return this.keyType!==a.types.HD?null:`m/${this.account}'/${this.branch}/${this.index}`}toAddress(){return n.fromHash(this.hash,this.type,this.version)}toJSON(){return{name:this.name,account:this.account,change:1===this.branch,derivation:this.toPath()}}inspect(){return`<Path: ${this.name}:${this.toPath()}>`}}a.types={HD:0,KEY:1,ADDRESS:2},a.typesByVal=["HD","KEY","ADDRESS"],t.exports=a},function(t,e,i){"use strict";(function(t){
/*!
 * common.js - common functions for hd
 * Copyright (c) 2015-2016, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(87),n=e;n.HARDENED=2147483648,n.MIN_ENTROPY=128,n.MAX_ENTROPY=512,n.cache=new s(500),n.parsePath=function(t,e){r("string"==typeof t),r("boolean"==typeof e),r(t.length>=1),r(t.length<=3062);const i=t.split("/"),s=i[0];if("m"!==s&&"M"!==s&&"m'"!==s&&"M'"!==s)throw new Error("Invalid path root.");const o=[];for(let t=1;t<i.length;t++){let r=i[t];const s="'"===r[r.length-1];if(s&&(r=r.slice(0,-1)),r.length>10)throw new Error("Path index too large.");if(!/^\d+$/.test(r))throw new Error("Path index is non-numeric.");let a=parseInt(r,10);if(a>>>0!==a)throw new Error("Path index out of range.");if(s&&(a|=n.HARDENED,a>>>=0),!e&&a&n.HARDENED)throw new Error("Path index cannot be hardened.");o.push(a)}return o},n.isMaster=function(t){return 0===t.depth&&0===t.childIndex&&0===t.parentFingerPrint},n.isAccount=function(t,e){if(null!=e){const i=(n.HARDENED|e)>>>0;if(t.childIndex!==i)return!1}return 3===t.depth&&0!=(t.childIndex&n.HARDENED)},n.ZERO_KEY=t.alloc(33,0)}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * mnemonic.js - hd mnemonics for bcoin
 * Copyright (c) 2015-2016, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(2),n=i(19),o=i(69),a=i(37),h=i(67),c=i(51),l=i(167),u=i(82),f=i(248),d=Object.create(null);class p{constructor(t){this.bits=u.MIN_ENTROPY,this.language="english",this.entropy=null,this.phrase=null,t&&this.fromOptions(t)}fromOptions(t){return"string"==typeof t&&(t={phrase:t}),null!=t.bits&&(r((65535&t.bits)===t.bits),r(t.bits>=u.MIN_ENTROPY),r(t.bits<=u.MAX_ENTROPY),r(t.bits%32==0),this.bits=t.bits),t.language&&(r("string"==typeof t.language),r(-1!==p.languages.indexOf(t.language)),this.language=t.language),t.phrase?(this.fromPhrase(t.phrase),this):t.entropy?(this.fromEntropy(t.entropy),this):this}static fromOptions(t){return(new this).fromOptions(t)}destroy(){this.bits=u.MIN_ENTROPY,this.language="english",this.entropy&&(o(this.entropy),this.entropy=null),this.phrase=null}toSeed(t){t||(t="");const i=f(this.getPhrase()),r=f(`mnemonic${t}`);return h.derive(c,e.from(i,"utf8"),e.from(r,"utf8"),2048,64)}getEntropy(){return this.entropy||(this.entropy=a.randomBytes(this.bits/8)),r(this.bits/8===this.entropy.length),this.entropy}getPhrase(){if(this.phrase)return this.phrase;const t=this.bits+this.bits/32,i=this.getEntropy(),r=n.digest(i),s=Math.ceil(t/8),o=e.allocUnsafe(s);i.copy(o,0),r.copy(o,i.length);const a=p.getWordlist(this.language);let h=[];for(let e=0;e<t/11;e++){let t=0;for(let i=0;i<11;i++){const r=11*e+i,s=r%8;t<<=1,t|=o[(r-s)/8]>>>7-s&1}h.push(a.words[t])}return h="japanese"===this.language?h.join("　"):h.join(" "),this.phrase=h,h}fromPhrase(t){r("string"==typeof t),r(t.length<=1e3);const i=t.trim().split(/[\s\u3000]+/),s=11*i.length,o=s%32;r(0!==o,"Invalid checksum.");const a=s-o;r(a>=u.MIN_ENTROPY),r(a<=u.MAX_ENTROPY),r(a%32==0);const h=Math.ceil(s/8),c=e.allocUnsafe(h);c.fill(0);const l=p.getLanguage(i[0]),f=p.getWordlist(l);for(let t=0;t<i.length;t++){const e=i[t],r=f.map[e];if(null==r)throw new Error("Could not find word.");for(let e=0;e<11;e++){const i=11*t+e,s=i%8,n=r>>>10-e&1;c[(i-s)/8]|=n<<7-s}}const d=Math.ceil(o/8),g=c.slice(0,c.length-d),m=c.slice(c.length-d),b=n.digest(g);for(let t=0;t<o;t++){const e=t%8,i=(t-e)/8;if((m[i]>>>7-e&1)!=(b[i]>>>7-e&1))throw new Error("Invalid checksum.")}return r(a/8===g.length),this.bits=a,this.language=l,this.entropy=g,this.phrase=t,this}static fromPhrase(t){return(new this).fromPhrase(t)}fromEntropy(t,i){return r(e.isBuffer(t)),r(8*t.length>=u.MIN_ENTROPY),r(8*t.length<=u.MAX_ENTROPY),r(8*t.length%32==0),r(!i||-1!==p.languages.indexOf(i)),this.entropy=t,this.bits=8*t.length,i&&(this.language=i),this}static fromEntropy(t,e){return(new this).fromEntropy(t,e)}static getLanguage(t){for(const e of p.languages)if(null!=p.getWordlist(e).map[t])return e;throw new Error("Could not determine language.")}static getWordlist(t){const e=d[t];if(e)return e;const i=l.get(t),r=new g(i);return d[t]=r,r}toJSON(){return{bits:this.bits,language:this.language,entropy:this.getEntropy().toString("hex"),phrase:this.getPhrase()}}fromJSON(t){return r(t),r((65535&t.bits)===t.bits),r("string"==typeof t.language),r("string"==typeof t.entropy),r("string"==typeof t.phrase),r(t.bits>=u.MIN_ENTROPY),r(t.bits<=u.MAX_ENTROPY),r(t.bits%32==0),r(t.bits/8==t.entropy.length/2),this.bits=t.bits,this.language=t.language,this.entropy=e.from(t.entropy,"hex"),this.phrase=t.phrase,this}static fromJSON(t){return(new this).fromJSON(t)}getSize(){let t=0;return(t+=3)+this.getEntropy().length}toWriter(t){const e=p.languages.indexOf(this.language);return r(-1!==e),t.writeU16(this.bits),t.writeU8(e),t.writeBytes(this.getEntropy()),t}toRaw(t){const e=this.getSize();return this.toWriter(s.write(e)).render()}fromReader(t){const e=t.readU16();r(e>=u.MIN_ENTROPY),r(e<=u.MAX_ENTROPY),r(e%32==0);const i=p.languages[t.readU8()];return r(i),this.bits=e,this.language=i,this.entropy=t.readBytes(e/8),this}fromRaw(t){return this.fromReader(s.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t){return(new this).fromRaw(t)}toString(){return this.getPhrase()}inspect(){return`<Mnemonic: ${this.getPhrase()}>`}static isMnemonic(t){return t instanceof p}}p.languages=["simplified chinese","traditional chinese","english","french","italian","japanese","spanish"];class g{constructor(t){this.words=t,this.map=Object.create(null);for(let e=0;e<t.length;e++){const i=t[e];this.map[i]=e}}}t.exports=p}).call(this,i(1).Buffer)},function(t,e,i){"use strict";e.byteLength=function(t){var e=c(t),i=e[0],r=e[1];return 3*(i+r)/4-r},e.toByteArray=function(t){for(var e,i=c(t),r=i[0],o=i[1],a=new n(3*(r+o)/4-o),h=0,l=o>0?r-4:r,u=0;u<l;u+=4)e=s[t.charCodeAt(u)]<<18|s[t.charCodeAt(u+1)]<<12|s[t.charCodeAt(u+2)]<<6|s[t.charCodeAt(u+3)],a[h++]=e>>16&255,a[h++]=e>>8&255,a[h++]=255&e;return 2===o&&(e=s[t.charCodeAt(u)]<<2|s[t.charCodeAt(u+1)]>>4,a[h++]=255&e),1===o&&(e=s[t.charCodeAt(u)]<<10|s[t.charCodeAt(u+1)]<<4|s[t.charCodeAt(u+2)]>>2,a[h++]=e>>8&255,a[h++]=255&e),a},e.fromByteArray=function(t){for(var e,i=t.length,s=i%3,n=[],o=0,a=i-s;o<a;o+=16383)n.push(u(t,o,o+16383>a?a:o+16383));return 1===s?(e=t[i-1],n.push(r[e>>2]+r[e<<4&63]+"==")):2===s&&(e=(t[i-2]<<8)+t[i-1],n.push(r[e>>10]+r[e>>4&63]+r[e<<2&63]+"=")),n.join("")};for(var r=[],s=[],n="undefined"!=typeof Uint8Array?Uint8Array:Array,o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",a=0,h=o.length;a<h;++a)r[a]=o[a],s[o.charCodeAt(a)]=a;function c(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var i=t.indexOf("=");return-1===i&&(i=e),[i,i===e?0:4-i%4]}function l(t){return r[t>>18&63]+r[t>>12&63]+r[t>>6&63]+r[63&t]}function u(t,e,i){for(var r,s=[],n=e;n<i;n+=3)r=(t[n]<<16&16711680)+(t[n+1]<<8&65280)+(255&t[n+2]),s.push(l(r));return s.join("")}s["-".charCodeAt(0)]=62,s["_".charCodeAt(0)]=63},function(t,e){e.read=function(t,e,i,r,s){var n,o,a=8*s-r-1,h=(1<<a)-1,c=h>>1,l=-7,u=i?s-1:0,f=i?-1:1,d=t[e+u];for(u+=f,n=d&(1<<-l)-1,d>>=-l,l+=a;l>0;n=256*n+t[e+u],u+=f,l-=8);for(o=n&(1<<-l)-1,n>>=-l,l+=r;l>0;o=256*o+t[e+u],u+=f,l-=8);if(0===n)n=1-c;else{if(n===h)return o?NaN:1/0*(d?-1:1);o+=Math.pow(2,r),n-=c}return(d?-1:1)*o*Math.pow(2,n-r)},e.write=function(t,e,i,r,s,n){var o,a,h,c=8*n-s-1,l=(1<<c)-1,u=l>>1,f=23===s?Math.pow(2,-24)-Math.pow(2,-77):0,d=r?0:n-1,p=r?1:-1,g=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(a=isNaN(e)?1:0,o=l):(o=Math.floor(Math.log(e)/Math.LN2),e*(h=Math.pow(2,-o))<1&&(o--,h*=2),(e+=o+u>=1?f/h:f*Math.pow(2,1-u))*h>=2&&(o++,h/=2),o+u>=l?(a=0,o=l):o+u>=1?(a=(e*h-1)*Math.pow(2,s),o+=u):(a=e*Math.pow(2,u-1)*Math.pow(2,s),o=0));s>=8;t[i+d]=255&a,d+=p,a/=256,s-=8);for(o=o<<s|a,c+=s;c>0;t[i+d]=255&o,d+=p,o/=256,c-=8);t[i+d-p]|=128*g}},function(t,e){var i={}.toString;t.exports=Array.isArray||function(t){return"[object Array]"==i.call(t)}},function(t,e,i){"use strict";t.exports=i(181)},function(t,e,i){"use strict";e.custom="inspect"},function(t,e,i){"use strict";(function(t){
/*!
 * network.js - bitcoin networks for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(49),s=e;function n(e){return t.from(e,"hex")}s.types=["main","testnet","regtest","simnet"];const o={type:"main",seeds:["seed.bitcoin.sipa.be","dnsseed.bluematt.me","dnsseed.bitcoin.dashjr.org","seed.bitcoinstats.com","seed.bitcoin.jonasschnelli.ch","seed.btc.petertodd.org"],magic:3652501241,port:8333};o.checkpointMap={11111:n("1d7c6eb2fd42f55925e92efad68b61edd22fba29fde8783df744e26900000000"),33333:n("a6d0b5df7d0df069ceb1e736a216ad187a50b07aaa4e78748a58d52d00000000"),74000:n("201a66b853f9e7814a820e2af5f5dc79c07144e31ce4c9a39339570000000000"),105000:n("97dc6b1d15fbeef373a744fee0b254b0d2c820a3ae7f0228ce91020000000000"),134444:n("feb0d2420d4a18914c81ac30f494a5d4ff34cd15d34cfd2fb105000000000000"),168000:n("63b703835cb735cb9a89d733cbe66f212f63795e0172ea619e09000000000000"),193000:n("17138bca83bdc3e6f60f01177c3877a98266de40735f2a459f05000000000000"),210000:n("2e3471a19b8e22b7f939c63663076603cf692f19837e34958b04000000000000"),216116:n("4edf231bf170234e6a811460f95c94af9464e41ee833b4f4b401000000000000"),225430:n("32595730b165f097e7b806a679cf7f3e439040f750433808c101000000000000"),250000:n("14d2f24d29bed75354f3f88a5fb50022fc064b02291fdf873800000000000000"),279000:n("407ebde958e44190fa9e810ea1fc3a7ef601c3b0a0728cae0100000000000000"),295000:n("83a93246c67003105af33ae0b29dd66f689d0f0ff54e9b4d0000000000000000"),300255:n("b2f3a0f0de4120c1089d5f5280a263059f9b6e7c520428160000000000000000"),319400:n("3bf115fd057391587ca39a531c5d4989e1adec9b2e05c6210000000000000000"),343185:n("548536d48e7678fcfa034202dd45d4a76b1ad061f38b2b070000000000000000"),352940:n("ffc9520143e41c94b6e03c2fa3e62bb76b55ba2df45d75100000000000000000"),382320:n("b28afdde92b0899715e40362f56afdb20e3d135bedc68d0a0000000000000000"),401465:n("eed16cb3e893ed9366f27c39a9ecd95465d02e3ef40e45010000000000000000"),420000:n("a1ff746b2d42b834cb7d6b8981b09c265c2cabc016e8cc020000000000000000"),440000:n("9bf296b8de5f834f7635d5e258a434ad51b4dbbcf7c08c030000000000000000"),450000:n("0ba2070c62cd9da1f8cef88a0648c661a411d33e728340010000000000000000"),460000:n("8c25fc7e414d3e868d6ce0ec473c30ad44e7e8bc1b75ef000000000000000000"),470000:n("89756d1ed75901437300af10d5ab69070a282e729c536c000000000000000000"),480000:n("b1a896fd31e639e0c74d1abeb1dbc93f176b767a5d4c02010000000000000000"),490000:n("90dec4d0153f20fbdcb245b1d5fb3d5a8d7bb1379106de000000000000000000"),500000:n("045d94a1c33354c3759cc0512dcc49fd81bf4c3637fb24000000000000000000"),510000:n("297301b8ca28584cb0c31c7e3fed51696bc33ef8782615000000000000000000"),525000:n("1dde8e3fb49bbd5ab66a1b847544d67fff10b108a1fa2f000000000000000000")},o.lastCheckpoint=525e3,o.halvingInterval=21e4,o.genesis={version:1,hash:n("6fe28c0ab6f1b372c1a6a246ae63f74f931e8365e15a089c68d6190000000000"),prevBlock:n("0000000000000000000000000000000000000000000000000000000000000000"),merkleRoot:n("3ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a"),time:1231006505,bits:486604799,nonce:2083236893,height:0},o.genesisBlock="0100000000000000000000000000000000000000000000000000000000000000000000003ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a29ab5f49ffff001d1dac2b7c0101000000010000000000000000000000000000000000000000000000000000000000000000ffffffff4d04ffff001d0104455468652054696d65732030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757420666f722062616e6b73ffffffff0100f2052a01000000434104678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5fac00000000",o.pow={limit:new r("00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff","hex"),bits:486604799,chainwork:new r("00000000000000000000000000000000000000000259c9b7d8c7779d29a1188f","hex"),targetTimespan:1209600,targetSpacing:600,retargetInterval:2016,targetReset:!1,noRetargeting:!1},o.block={bip34height:227931,bip34hash:n("b808089c756add1591b1d17bab44bba3fed9e02f942ab4894b02000000000000"),bip65height:388381,bip65hash:n("f035476cfaeb9f677c2cdad00fd908c556775ded24b6c2040000000000000000"),bip66height:363725,bip66hash:n("3109b588941188a9f1c2576aae462d729b8cce9da1ea79030000000000000000"),pruneAfterHeight:1e3,keepBlocks:288,maxTipAge:86400,slowHeight:325e3},o.bip30={91842:n("eccae000e3c8e4e093936360431f3b7603c563c1ff6181390a4d0a0000000000"),91880:n("21d77ccb4c08386a04ac0196ae10f6a1d2c2a377558ca190f143070000000000")},o.activationThreshold=1916,o.minerWindow=2016,o.deployments={csv:{name:"csv",bit:0,startTime:1462060800,timeout:1493596800,threshold:-1,window:-1,required:!1,force:!0},segwit:{name:"segwit",bit:1,startTime:1479168e3,timeout:1510704e3,threshold:-1,window:-1,required:!0,force:!1},segsignal:{name:"segsignal",bit:4,startTime:1496275200,timeout:1510704e3,threshold:269,window:336,required:!1,force:!1},testdummy:{name:"testdummy",bit:28,startTime:1199145601,timeout:1230767999,threshold:-1,window:-1,required:!1,force:!0}},o.deploys=[o.deployments.csv,o.deployments.segwit,o.deployments.segsignal,o.deployments.testdummy],o.keyPrefix={privkey:128,xpubkey:76067358,xprivkey:76066276,xpubkey58:"xpub",xprivkey58:"xprv",coinType:0},o.addressPrefix={pubkeyhash:0,scripthash:5,witnesspubkeyhash:6,witnessscripthash:10,bech32:"bc"},o.requireStandard=!0,o.rpcPort=8332,o.walletPort=8334,o.minRelay=1e3,o.feeRate=1e5,o.maxFeeRate=4e5,o.selfConnect=!1,o.requestMempool=!1;const a={type:"testnet",seeds:["testnet-seed.bitcoin.jonasschnelli.ch","seed.tbtc.petertodd.org","testnet-seed.bluematt.me","testnet-seed.bitcoin.schildbach.de"],magic:118034699,port:18333};a.checkpointMap={546:n("70cb6af7ebbcb1315d3414029c556c55f3e2fc353c4c9063a76c932a00000000"),10000:n("02a1b43f52591e53b660069173ac83b675798e12599dbb0442b7580000000000"),50000:n("0c6ceabe803cec55ba2831e445956d0a43ba9521743a802cddac7e0700000000"),90000:n("cafc21e17faf90461a5905aa03302c394912651ed9475ae711723e0d00000000"),100000:n("1e0a16bbadccde1d80c66597b1939e45f91b570d29f95fc158299e0000000000"),140000:n("92c0877b54c556889b72175ccbe0c91a1208f6ef7efb2c006101062300000000"),170000:n("508125560d202b89757889bb0e49c712477be20440058f05db4f0e0000000000"),210000:n("32365454b5f29a826bff8ad9b0448cad0072fc73d50e482d91a3dece00000000"),230000:n("b11a447e62643e0b27406eb0fc270cb8126d7b5b70822fb642d9513400000000"),270000:n("1c42b811cf9c163932f6e95ec55bf9b5e2cb5324e7e93001572e000000000000"),300000:n("a141bf3972424853f04367b47995e220e0b5a2706e5618766f22000000000000"),340000:n("67edd4d92e405608109164b15f92b193377d49325b0ed036739c010000000000"),350000:n("592b44bc0f7a4286cf07ead8497114c6952c1c7dea7305193deacf8e00000000"),390000:n("f217e183484fb6d695609cc71fa2ae24c3020943407e0150b298030000000000"),420000:n("de9e73a3b91fbb014e036e8583a17d6b638a699aeb2de8573d12580800000000"),460000:n("2e8baaffc107f15c87aebe01664b63d07476afa53bcbada1281a030000000000"),500000:n("06f60922a2aab2757317820fc6ffaf6a470e2cbb0f63a2aac0a7010000000000"),540000:n("8dd0bebfbc4878f5af09d3e848dcc57827d2c1cebea8ec5d8cbe420500000000"),570000:n("87acbd4cd3c40ec9bd648f8698ed226b31187274c06cc7a9af79030000000000"),600000:n("169a05b3bb04b7d13ad628915630900a5ed2e89f3a9dc6064f62000000000000"),630000:n("bbbe117035432a6a4effcb297207a02b031735b43e0d19a9217c000000000000"),670000:n("080bfe75caed8624fcfdfbc65973c8f962d7bdc495a891f5d16b7d0000000000"),700000:n("c14d3f6a1e7c7d66fd940951e44f3c3be1273bea4d2ab1786140000000000000"),740000:n("b3b423f0462fd78a01e4f1a59a2737a0525b5dbb9bba0b4634f9000000000000"),780000:n("0381582e34c3755964dc2813e2b33e521e5596367144e1670851050000000000"),800000:n("03b5f8ab257e02903f509f5ff2935220eec2e77b1819651d099b200000000000"),840000:n("dac1648107bd4394e57e4083c86d42b548b1cfb119665f179ea80a0000000000"),880000:n("ff90b4bb07eded8e96715bf595c09c7d21dd8c61b8306ff48705d60000000000"),900000:n("9bd8ac418beeb1a2cf5d68c8b5c6ebaa947a5b766e5524898d6f350000000000"),940000:n("c98f1651a475b00d12f8c25eb166ee843affaa90610e36a19d68030000000000"),980000:n("cc8e9774542d044a9698ca2336ae02d5987157e676f1c76aa3877c0000000000"),1010000:n("9d9fb11abc2712d80368229e97b8d827b2a07d27eb5335e5c924000000000000"),1050000:n("d8190cf0af7f08e179cab51d67db0b44b87951a78f7fdc31b4a01a0000000000")},a.lastCheckpoint=105e4,a.halvingInterval=21e4,a.genesis={version:1,hash:n("43497fd7f826957108f4a30fd9cec3aeba79972084e90ead01ea330900000000"),prevBlock:n("0000000000000000000000000000000000000000000000000000000000000000"),merkleRoot:n("3ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a"),time:1296688602,bits:486604799,nonce:414098458,height:0},a.genesisBlock="0100000000000000000000000000000000000000000000000000000000000000000000003ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4adae5494dffff001d1aa4ae180101000000010000000000000000000000000000000000000000000000000000000000000000ffffffff4d04ffff001d0104455468652054696d65732030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757420666f722062616e6b73ffffffff0100f2052a01000000434104678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5fac00000000",a.pow={limit:new r("00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff","hex"),bits:486604799,chainwork:new r("000000000000000000000000000000000000000000000062b7123cfd7d09f7b6","hex"),targetTimespan:1209600,targetSpacing:600,retargetInterval:2016,targetReset:!0,noRetargeting:!1},a.block={bip34height:21111,bip34hash:n("f88ecd9912d00d3f5c2a8e0f50417d3e415c75b3abe584346da9b32300000000"),bip65height:581885,bip65hash:n("b61e864fbec41dfaf09da05d1d76dc068b0dd82ee7982ff255667f0000000000"),bip66height:330776,bip66hash:n("82a14b9e5ea81d4832b8e2cd3c2a6092b5a3853285a8995ec4c8042100000000"),pruneAfterHeight:1e3,keepBlocks:1e4,maxTipAge:86400,slowHeight:95e4},a.bip30={},a.activationThreshold=1512,a.minerWindow=2016,a.deployments={csv:{name:"csv",bit:0,startTime:1456790400,timeout:1493596800,threshold:-1,window:-1,required:!1,force:!0},segwit:{name:"segwit",bit:1,startTime:1462060800,timeout:1493596800,threshold:-1,window:-1,required:!0,force:!1},segsignal:{name:"segsignal",bit:4,startTime:4294967295,timeout:4294967295,threshold:269,window:336,required:!1,force:!1},testdummy:{name:"testdummy",bit:28,startTime:1199145601,timeout:1230767999,threshold:-1,window:-1,required:!1,force:!0}},a.deploys=[a.deployments.csv,a.deployments.segwit,a.deployments.segsignal,a.deployments.testdummy],a.keyPrefix={privkey:239,xpubkey:70617039,xprivkey:70615956,xpubkey58:"tpub",xprivkey58:"tprv",coinType:1},a.addressPrefix={pubkeyhash:111,scripthash:196,witnesspubkeyhash:3,witnessscripthash:40,bech32:"tb"},a.requireStandard=!1,a.rpcPort=18332,a.walletPort=18334,a.minRelay=1e3,a.feeRate=2e4,a.maxFeeRate=6e4,a.selfConnect=!1,a.requestMempool=!1;const h={type:"regtest",seeds:["127.0.0.1"],magic:3669344250,port:48444,checkpointMap:{},lastCheckpoint:0,halvingInterval:150};h.genesis={version:1,hash:n("06226e46111a0b59caaf126043eb5bbf28c34f3a5e332a1fc7b2b73cf188910f"),prevBlock:n("0000000000000000000000000000000000000000000000000000000000000000"),merkleRoot:n("3ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a"),time:1296688602,bits:545259519,nonce:2,height:0},h.genesisBlock="0100000000000000000000000000000000000000000000000000000000000000000000003ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4adae5494dffff7f20020000000101000000010000000000000000000000000000000000000000000000000000000000000000ffffffff4d04ffff001d0104455468652054696d65732030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757420666f722062616e6b73ffffffff0100f2052a01000000434104678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5fac00000000",h.pow={limit:new r("7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","hex"),bits:545259519,chainwork:new r("0000000000000000000000000000000000000000000000000000000000000002","hex"),targetTimespan:1209600,targetSpacing:600,retargetInterval:2016,targetReset:!0,noRetargeting:!0},h.block={bip34height:1e8,bip34hash:null,bip65height:1351,bip65hash:null,bip66height:1251,bip66hash:null,pruneAfterHeight:1e3,keepBlocks:1e4,maxTipAge:4294967295,slowHeight:0},h.bip30={},h.activationThreshold=108,h.minerWindow=144,h.deployments={csv:{name:"csv",bit:0,startTime:0,timeout:4294967295,threshold:-1,window:-1,required:!1,force:!0},segwit:{name:"segwit",bit:1,startTime:0,timeout:4294967295,threshold:-1,window:-1,required:!0,force:!1},segsignal:{name:"segsignal",bit:4,startTime:4294967295,timeout:4294967295,threshold:269,window:336,required:!1,force:!1},testdummy:{name:"testdummy",bit:28,startTime:0,timeout:4294967295,threshold:-1,window:-1,required:!1,force:!0}},h.deploys=[h.deployments.csv,h.deployments.segwit,h.deployments.segsignal,h.deployments.testdummy],h.keyPrefix={privkey:90,xpubkey:3937729029,xprivkey:3937666247,xpubkey58:"rpub",xprivkey58:"rprv",coinType:1},h.addressPrefix={pubkeyhash:60,scripthash:38,witnesspubkeyhash:122,witnessscripthash:20,bech32:"rb"},h.requireStandard=!1,h.rpcPort=48332,h.walletPort=48334,h.minRelay=1e3,h.feeRate=2e4,h.maxFeeRate=6e4,h.selfConnect=!0,h.requestMempool=!0;const c={type:"simnet",seeds:["127.0.0.1"],magic:303307798,port:18555,checkpointMap:{},lastCheckpoint:0,halvingInterval:21e4};c.genesis={version:1,hash:n("f67ad7695d9b662a72ff3d8edbbb2de0bfa67b13974bb9910d116d5cbd863e68"),prevBlock:n("0000000000000000000000000000000000000000000000000000000000000000"),merkleRoot:n("3ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a"),time:1401292357,bits:545259519,nonce:2,height:0},c.genesisBlock="0100000000000000000000000000000000000000000000000000000000000000000000003ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a45068653ffff7f20020000000101000000010000000000000000000000000000000000000000000000000000000000000000ffffffff4d04ffff001d0104455468652054696d65732030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757420666f722062616e6b73ffffffff0100f2052a01000000434104678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5fac00000000",c.pow={limit:new r("7fffff0000000000000000000000000000000000000000000000000000000000","hex"),bits:545259519,chainwork:new r("0000000000000000000000000000000000000000000000000000000000000002","hex"),targetTimespan:1209600,targetSpacing:600,retargetInterval:2016,targetReset:!0,noRetargeting:!1},c.block={bip34height:0,bip34hash:n("f67ad7695d9b662a72ff3d8edbbb2de0bfa67b13974bb9910d116d5cbd863e68"),bip65height:0,bip65hash:n("f67ad7695d9b662a72ff3d8edbbb2de0bfa67b13974bb9910d116d5cbd863e68"),bip66height:0,bip66hash:n("f67ad7695d9b662a72ff3d8edbbb2de0bfa67b13974bb9910d116d5cbd863e68"),pruneAfterHeight:1e3,keepBlocks:1e4,maxTipAge:4294967295,slowHeight:0},c.bip30={},c.activationThreshold=75,c.minerWindow=100,c.deployments={csv:{name:"csv",bit:0,startTime:0,timeout:4294967295,threshold:-1,window:-1,required:!1,force:!0},segwit:{name:"segwit",bit:1,startTime:0,timeout:4294967295,threshold:-1,window:-1,required:!0,force:!1},segsignal:{name:"segsignal",bit:4,startTime:4294967295,timeout:4294967295,threshold:269,window:336,required:!1,force:!1},testdummy:{name:"testdummy",bit:28,startTime:1199145601,timeout:1230767999,threshold:-1,window:-1,required:!1,force:!0}},c.deploys=[c.deployments.csv,c.deployments.segwit,c.deployments.segsignal,c.deployments.testdummy],c.keyPrefix={privkey:100,xpubkey:69254458,xprivkey:69253376,xpubkey58:"spub",xprivkey58:"sprv",coinType:115},c.addressPrefix={pubkeyhash:63,scripthash:123,witnesspubkeyhash:25,witnessscripthash:40,bech32:"sb"},c.requireStandard=!1,c.rpcPort=18556,c.walletPort=18558,c.minRelay=1e3,c.feeRate=2e4,c.maxFeeRate=6e4,c.selfConnect=!1,c.requestMempool=!1,s.main=o,s.testnet=a,s.regtest=h,s.simnet=c}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * timedata.js - time management for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(7),s=i(5),n=i(48);function o(t,e){return t-e}t.exports=class extends r{constructor(t){super(),null==t&&(t=200),this.samples=[],this.known=new Map,this.limit=t,this.offset=0,this.checked=!1}add(t,e){if(this.samples.length>=this.limit)return;if(this.known.has(t))return;const i=e-s.now();if(this.known.set(t,i),n.insert(this.samples,i,o),this.emit("sample",i,this.samples.length),this.samples.length>=5&&this.samples.length%2==1){let t=this.samples[this.samples.length>>>1];if(Math.abs(t)>=4200){if(!this.checked){let t=!1;for(const e of this.samples)if(0!==e&&Math.abs(e)<300){t=!0;break}t||(this.checked=!0,this.emit("mismatch"))}t=0}this.offset=t,this.emit("offset",this.offset)}}now(){return s.now()+this.offset}adjust(t){return t+this.offset}local(t){return t-this.offset}ms(){return Date.now()+1e3*this.offset}}},function(t,e,i){(function(t,e){!function(t,i){"use strict";if(!t.setImmediate){var r,s=1,n={},o=!1,a=t.document,h=Object.getPrototypeOf&&Object.getPrototypeOf(t);h=h&&h.setTimeout?h:t,"[object process]"==={}.toString.call(t.process)?r=function(t){e.nextTick(function(){l(t)})}:function(){if(t.postMessage&&!t.importScripts){var e=!0,i=t.onmessage;return t.onmessage=function(){e=!1},t.postMessage("","*"),t.onmessage=i,e}}()?function(){var e="setImmediate$"+Math.random()+"$",i=function(i){i.source===t&&"string"==typeof i.data&&0===i.data.indexOf(e)&&l(+i.data.slice(e.length))};t.addEventListener?t.addEventListener("message",i,!1):t.attachEvent("onmessage",i),r=function(i){t.postMessage(e+i,"*")}}():t.MessageChannel?function(){var t=new MessageChannel;t.port1.onmessage=function(t){l(t.data)},r=function(e){t.port2.postMessage(e)}}():a&&"onreadystatechange"in a.createElement("script")?function(){var t=a.documentElement;r=function(e){var i=a.createElement("script");i.onreadystatechange=function(){l(e),i.onreadystatechange=null,t.removeChild(i),i=null},t.appendChild(i)}}():r=function(t){setTimeout(l,0,t)},h.setImmediate=function(t){"function"!=typeof t&&(t=new Function(""+t));for(var e=new Array(arguments.length-1),i=0;i<e.length;i++)e[i]=arguments[i+1];var o={callback:t,args:e};return n[s]=o,r(s),s++},h.clearImmediate=c}function c(t){delete n[t]}function l(t){if(o)setTimeout(l,0,t);else{var e=n[t];if(e){o=!0;try{!function(t){var e=t.callback,r=t.args;switch(r.length){case 0:e();break;case 1:e(r[0]);break;case 2:e(r[0],r[1]);break;case 3:e(r[0],r[1],r[2]);break;default:e.apply(i,r)}}(e)}finally{c(t),o=!1}}}}}("undefined"==typeof self?void 0===t?this:t:self)}).call(this,i(11),i(21))},function(t,e,i){"use strict";(function(e){
/*!
 * struct.js - struct object for bcoin
 * Copyright (c) 2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(22),s=i(55),n=i(56),o=i(57),{custom:a}=i(54);t.exports=class{constructor(){}inject(t){return r(t instanceof this.constructor,"obj","struct"),this.decode(t.encode())}clone(){return(new this.constructor).inject(this)}getSize(t){return-1}write(t,e){return t}read(t,e){return this}toString(){return Object.prototype.toString.call(this)}fromString(t,e){return this}getJSON(){return this}fromJSON(t,e){return this}fromOptions(t,e){return this}from(t,e){return this.fromOptions(t,e)}format(){return this.getJSON()}encode(t){const e=this.getSize(t),i=-1===e?new n:new o(e);return this.write(i,t),i.render()}decode(t,e){const i=new s(t);return this.read(i,e),this}toHex(t){return this.encode(t).toString("hex")}fromHex(t,i){r("string"==typeof t,"str","string");const s=t.length>>>1,n=e.from(t,"hex");if(n.length!==s)throw new Error("Invalid hex string.");return this.decode(n,i)}toBase64(t){return this.encode(t).toString("base64")}fromBase64(t,i){r("string"==typeof t,"str","string");const s=e.from(t,"base64");if(t.length>(4*s.length/3+3&-4)>>>0)throw new Error("Invalid base64 string.");return this.decode(s,i)}toJSON(){return this.getJSON()}[a](){return this.format()}static read(t,e){return(new this).read(t,e)}static decode(t,e){return(new this).decode(t,e)}static fromHex(t,e){return(new this).fromHex(t,e)}static fromBase64(t,e){return(new this).fromBase64(t,e)}static fromString(t,e){return(new this).fromString(t,e)}static fromJSON(t,e){return(new this).fromJSON(t,e)}static fromOptions(t,e){return(new this).fromOptions(t,e)}static from(t,e){return(new this).from(t,e)}toWriter(t,e){return this.write(t,e)}fromReader(t,e){return this.read(t,e)}toRaw(t){return this.encode(t)}fromRaw(t,e){return this.decode(t,e)}static fromReader(t,e){return this.read(t,e)}static fromRaw(t,e){return this.decode(t,e)}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * fixed.js - fixed number parsing
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(0);function s(t){switch(t){case 0:return 1;case 1:return 10;case 2:return 100;case 3:return 1e3;case 4:return 1e4;case 5:return 1e5;case 6:return 1e6;case 7:return 1e7;case 8:return 1e8}throw new Error("Exponent is too large.")}e.encode=function(t,e){r(Number.isSafeInteger(t),"Invalid integer value.");let i="";t<0&&(t=-t,i="-");const n=s(e);let o=t%n,a=(t-o)/n;for(o=o.toString(10),a=a.toString(10);o.length<e;)o="0"+o;return o=o.replace(/0+$/,""),r(o.length<=e,"Invalid integer value."),0===o.length&&(o="0"),0===e?`${i}${a}`:`${i}${a}.${o}`},e.decode=function(t,e){r("string"==typeof t),r(t.length<=32,"Fixed number string too large.");let i=1;t.length>0&&"-"===t[0]&&(t=t.substring(1),i=-1);let n=t,o="0";const a=t.indexOf(".");for(-1!==a&&(n=t.substring(0,a),o=t.substring(a+1)),n=n.replace(/^0+/,""),o=o.replace(/0+$/,""),r(n.length<=16-e,"Fixed number string exceeds 2^53-1."),r(o.length<=e,"Too many decimal places in fixed number string."),0===n.length&&(n="0");o.length<e;)o+="0";0===o.length&&(o="0"),r(/^\d+$/.test(n)&&/^\d+$/.test(o),"Non-numeric characters in fixed number string."),n=parseInt(n,10),o=parseInt(o,10);const h=s(e),c=function(t){switch(h){case 1:return 0;case 10:return 1;case 100:return 91;case 1e3:case 1e4:return 991;case 1e5:return 40991;case 1e6:return 740991;case 1e7:return 4740991;case 1e8:return 54740991}throw new Error("Exponent is too large.")}(),l=function(t){switch(h){case 1:return 9007199254740991;case 10:return 900719925474099;case 100:return 90071992547409;case 1e3:return 9007199254740;case 1e4:return 900719925474;case 1e5:return 90071992547;case 1e6:return 9007199254;case 1e7:return 900719925;case 1e8:return 90071992}throw new Error("Exponent is too large.")}();return r(n<l||n===l&&o<=c,"Fixed number string exceeds 2^53-1."),i*(n*h+o)},e.toFloat=function(t,i){return parseFloat(e.encode(t,i))},e.fromFloat=function(t,i){return r("number"==typeof t&&isFinite(t)),r(Number.isSafeInteger(i)),e.decode(t.toFixed(i),i)}},function(t,e,i){"use strict";
/*!
 * coins.js - coins object for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(0),s=i(36);t.exports=class{constructor(){this.outputs=new Map}add(t,e){return r(t>>>0===t),r(e),this.outputs.set(t,e),e}addOutput(t,e){return this.add(t,s.fromOutput(e))}addIndex(t,e,i){return this.add(e,s.fromTX(t,e,i))}addCoin(t){return this.add(t.index,s.fromCoin(t))}has(t){return this.outputs.has(t)}isUnspent(t){const e=this.outputs.get(t);return!(!e||e.spent)}get(t){return this.outputs.get(t)||null}getOutput(t){const e=this.outputs.get(t);return e?e.output:null}getCoin(t){const e=this.outputs.get(t.index);return e?e.toCoin(t):null}spend(t){const e=this.get(t);return!e||e.spent?null:(e.spent=!0,e)}remove(t){const e=this.get(t);return e?(this.outputs.delete(t),e):null}isEmpty(){return 0===this.outputs.size}fromTX(t,e){r("number"==typeof e);for(let i=0;i<t.outputs.length;i++){if(t.outputs[i].script.isUnspendable())continue;const r=s.fromTX(t,i,e);this.outputs.set(i,r)}return this}static fromTX(t,e){return(new this).fromTX(t,e)}}},function(t,e,i){"use strict";(function(t){
/*!
 * base58.js - base58 for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,2,3,4,5,6,7,8,-1,-1,-1,-1,-1,-1,-1,9,10,11,12,13,14,15,16,-1,17,18,19,20,21,-1,22,23,24,25,26,27,28,29,30,31,32,-1,-1,-1,-1,-1,-1,33,34,35,36,37,38,39,40,41,42,43,-1,44,45,46,47,48,49,50,51,52,53,54,55,56,57,-1,-1,-1,-1,-1];e.encode=function(e){r(t.isBuffer(e));let i=0,s=0;for(;s<e.length&&0===e[s];s++)i+=1;const n=t.allocUnsafe(1+(138*e.length/100|0));n.fill(0);let o=0;for(;s<e.length;s++){let t=e[s],i=0;for(let e=n.length-1;e>=0&&!(0===t&&i>=o);e--,i++)t+=256*n[e],n[e]=t%58,t=t/58|0;r(0===t),o=i}for(s=n.length-o;s<n.length&&0===n[s];)s+=1;let a="";for(let t=0;t<i;t++)a+="1";for(;s<n.length;s++)a+="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"[n[s]];return a},e.decode=function(e){r("string"==typeof e);let i=0,n=0;for(;n<e.length&&"1"===e[n];n++)i+=1;const o=t.allocUnsafe(1+(733*e.length/1e3|0));o.fill(0);let a=0;for(;n<e.length;n++){const t=e.charCodeAt(n),i=65408&t?-1:s[t];if(-1===i)throw new Error("Non-base58 character.");let h=i,c=0;for(let t=o.length-1;t>=0&&!(0===h&&c>=a);t--,c++)h+=58*o[t],o[t]=255&h,h>>>=8;r(0===h),a=c}for(n=0;n<o.length&&0===o[n];)n+=1;const h=t.allocUnsafe(i+(o.length-n));let c;for(c=0;c<i;c++)h[c]=0;for(;n<o.length;)h[c++]=o[n++];return h},e.test=function(t){if("string"!=typeof t)return!1;for(let e=0;e<t.length;e++){const i=t.charCodeAt(e);if(65408&i)return!1;if(-1===s[i])return!1}return!0}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){
/*!
 * bech32.js - bech32 for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 *
 * Parts of this software are based on "bech32".
 * https://github.com/sipa/bech32
 *
 * Copyright (c) 2017 Pieter Wuille
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
const r=i(0),s=t.allocUnsafe(66),n="qpzry9x8gf2tvdw0s3jn54khce6mua7l",o=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,15,-1,10,17,21,20,26,30,7,5,-1,-1,-1,-1,-1,-1,-1,29,-1,24,13,25,9,8,23,-1,18,22,31,27,19,-1,1,0,3,16,11,28,12,14,6,4,2,-1,-1,-1,-1,-1,-1,29,-1,24,13,25,9,8,23,-1,18,22,31,27,19,-1,1,0,3,16,11,28,12,14,6,4,2,-1,-1,-1,-1,-1];function a(t){const e=t>>>25;return(33554431&t)<<5^996825010&-(e>>>0&1)^642813549&-(e>>>1&1)^513874426&-(e>>>2&1)^1027748829&-(e>>>3&1)^705979059&-(e>>>4&1)}function h(e,i){r("string"==typeof e),r(t.isBuffer(i));let s,o=1;for(s=0;s<e.length;s++){const t=e.charCodeAt(s);if(65280&t||t>>>5==0)throw new Error("Invalid bech32 character.");o=a(o)^t>>>5}if(s+7+i.length>90)throw new Error("Invalid bech32 data length.");o=a(o);let h="";for(let t=0;t<e.length;t++){const i=e.charCodeAt(t);o=a(o)^31&i,h+=e[t]}h+="1";for(let t=0;t<i.length;t++){const e=i[t];if(e>>>5!=0)throw new Error("Invalid bech32 value.");o=a(o)^e,h+=n[e]}for(let t=0;t<6;t++)o=a(o);o^=1;for(let t=0;t<6;t++)h+=n[o>>>5*(5-t)&31];return h}function c(e){if(r("string"==typeof e),e.length<8||e.length>90)throw new Error("Invalid bech32 string length.");let i=0;for(;i<e.length&&"1"!==e[e.length-1-i];)i+=1;const s=e.length-(1+i);if(1+i>=e.length||i<6)throw new Error("Invalid bech32 data length.");i-=6;const n=t.allocUnsafe(i);let h,c=1,l=!1,u=!1,f="";for(let t=0;t<s;t++){let i=e.charCodeAt(t);if(i<33||i>126)throw new Error("Invalid bech32 character.");i>=97&&i<=122?l=!0:i>=65&&i<=90&&(u=!0,i=i-65+97),f+=String.fromCharCode(i),c=a(c)^i>>>5}for(c=a(c),h=0;h<s;h++)c=a(c)^31&e.charCodeAt(h);for(h+=1;h<e.length;){const t=e.charCodeAt(h),i=65408&t?-1:o[t];if(-1===i)throw new Error("Invalid bech32 character.");t>=97&&t<=122?l=!0:t>=65&&t<=90&&(u=!0),c=a(c)^i,h+6<e.length&&(n[h-(1+s)]=i),h+=1}if(l&&u)throw new Error("Invalid bech32 casing.");if(1!==c)throw new Error("Invalid bech32 checksum.");return[f,n.slice(0,i)]}function l(e,i,s,n,o,a,h){r(t.isBuffer(e)),r(i>>>0===i),r(t.isBuffer(s)),r(n>>>0===n),r((255&o)===o),r((255&a)===a),r("boolean"==typeof h);const c=(1<<a)-1;let l=0,u=0;for(;i<e.length;i++){const t=e[i];if(t>>>o!=0)throw new Error("Invalid bits.");for(l=l<<o|t,u+=o;u>=a;)u-=a,s[n++]=l>>>u&c}if(h)u&&(s[n++]=l<<a-u&c);else if(u>=o||l<<a-u&c)throw new Error("Invalid bits.");return r(n<=s.length),s.slice(0,n)}e.serialize=h,e.deserialize=c,e.is=function(t){if("string"!=typeof t)return!1;try{c(t)}catch(t){return!1}return!0},e.convertBits=function(e,i,s,n){r(t.isBuffer(e)),r((255&i)===i),r((255&s)===s),r("boolean"==typeof n);const o=function(t,e,i,s){r(t>>>0===t),r((255&e)===e),r((255&i)===i),r("boolean"==typeof s),r(0!==i);let n=(t*e+(i-1))/i;return n>>>=0,s&&(n+=1),n}(e.length,i,s,n);return l(e,0,t.allocUnsafe(o),0,i,s,n)},e.encode=function(e,i,n){if(r("string"==typeof e),r((255&i)===i),r(t.isBuffer(n)),i<0||i>31)throw new Error("Invalid bech32 version.");if(n.length<2||n.length>40)throw new Error("Invalid bech32 data length.");const o=s;return o[0]=i,h(e,l(n,0,o,1,8,5,!0))},e.decode=function(t){r("string"==typeof t);const[e,i]=c(t);if(0===i.length||i.length>65)throw new Error("Invalid bech32 data length.");const s=i[0];if(s>31)throw new Error("Invalid bech32 version.");const n=l(i,1,i,0,5,8,!1);if(n.length<2||n.length>40)throw new Error("Invalid bech32 data length.");return new class{constructor(t,e,i){this.hrp=t,this.version=e,this.hash=i}}(e,s,n)},e.test=function(t){if("string"!=typeof t)return!1;let e;try{[,e]=c(t)}catch(t){return!1}return!(0===e.length||e.length>65||e[0]>31)}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){
/*!
 * cashaddr.js - cashaddr for bcash
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 *
 * Implementation of CashAddr
 * https://github.com/bitcoincashorg/spec/blob/master/cashaddr.md
 *
 * Parts of this software are based on "bitcoin-abc".
 * https://github.com/Bitcoin-ABC/bitcoin-abc
 *
 * Parts of this software are based on "bech32".
 * https://github.com/sipa/bech32
 *
 * Copyright (c) 2017 Pieter Wuille
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
const r=i(0),{U64:s}=i(58),n=t.allocUnsafe(105),o="qpzry9x8gf2tvdw0s3jn54khce6mua7l",a=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,15,-1,10,17,21,20,26,30,7,5,-1,-1,-1,-1,-1,-1,-1,29,-1,24,13,25,9,8,23,-1,18,22,31,27,19,-1,1,0,3,16,11,28,12,14,6,4,2,-1,-1,-1,-1,-1,-1,29,-1,24,13,25,9,8,23,-1,18,22,31,27,19,-1,1,0,3,16,11,28,12,14,6,4,2,-1,-1,-1,-1,-1],h=s.fromNumber(34359738367),c=[s.fromNumber(656907472481),s.fromNumber(522768456162),s.fromNumber(0xf33e5fb3c4),s.fromNumber(748107326120),s.fromNumber(130178868336)];function l(t){const e=t.clone(),i=e.ushrn(35).lo;e.iand(h).ishln(5);for(let t=0;t<c.length;t++)i>>>t&1&&e.ixor(c[t]);return e}function u(e,i,s,n,o,a,h){r(t.isBuffer(e)),r(i>>>0===i),r(t.isBuffer(s)),r(n>>>0===n),r((255&o)===o),r((255&a)===a),r("boolean"==typeof h);const c=(1<<a)-1;let l=0,u=0;for(;i<e.length;i++){const t=e[i];if(t>>>o!=0)throw new Error("Invalid bits.");for(l=l<<o|t,u+=o;u>=a;)u-=a,s[n++]=l>>>u&c}if(h)u&&(s[n++]=l<<a-u&c);else if(u>=o||l<<a-u&c)throw new Error("Invalid bits.");return r(n<=s.length),s.slice(0,n)}function f(e,i="bitcoincash"){r("string"==typeof e),r("string"==typeof i);const[n,o]=function(e,i){if(r("string"==typeof e),e.length<8||e.length>196)throw new Error("Invalid cashaddr data length.");let n=!1,o=!1,h=!1,c=0;for(let t=0;t<e.length;t++){const i=e.charCodeAt(t);if(i>=97&&i<=122)n=!0;else if(i>=65&&i<=90)o=!0;else if(i>=48&&i<=57)h=!0;else{if(58!==i)throw new Error("Invalid cashaddr character.");if(h||0===t||t>83)throw new Error("Invalid cashaddr prefix.");if(0!==c)throw new Error("Invalid cashaddr separators.");c=t}}if(o&&n)throw new Error("Invalid cashaddr casing.");let u,f=s.fromNumber(1);0===c?u=i.toLowerCase():(u=e.substring(0,c).toLowerCase(),c+=1);for(let t=0;t<u.length;t++){const e=u.charCodeAt(t);f=l(f).ixorn(31&(32|e))}f=l(f);const d=e.length-c;if(d<=8||d>112)throw new Error("Invalid cashaddr data length.");const p=t.allocUnsafe(d);for(let t=c;t<e.length;t++){const i=e.charCodeAt(t),r=65408&i?-1:a[i];if(-1===r)throw new Error("Invalid cashaddr character.");f=l(f).ixorn(r),t+8<e.length&&(p[t-c]=r)}if(!f.eqn(1)||u!==i)throw new Error("Invalid cashaddr checksum.");return[u,p.slice(0,-8)]}(e,i),h=5*o.length&7;if(h>=5)throw new Error("Invalid padding in data.");if(o[o.length-1]&(1<<h)-1)throw new Error("Non zero padding.");const c=u(o,0,o,0,5,8,!1),f=c[0]>>>3&31,p=c.slice(1);let g=20+4*(3&c[0]);if(4&c[0]&&(g*=2),g!==p.length)throw new Error("Invalid cashaddr data length.");return new d(n,f,p)}class d{constructor(t,e,i){this.prefix=t,this.type=e,this.hash=i}}e.encode=function(e,i,a){if(r("string"==typeof e),r((15&i)===i,"Invalid cashaddr type."),r(t.isBuffer(a)),0===e.length||e.length>83)throw new Error("Invalid cashaddr prefix.");const h=function(t){switch(r(t>>>0===t),t){case 20:return 0;case 24:return 1;case 28:return 2;case 32:return 3;case 40:return 4;case 48:return 5;case 56:return 6;case 64:return 7;default:throw new Error("Non standard length.")}}(a.length),c=t.allocUnsafe(a.length+1);return c[0]=i<<3|h,a.copy(c,1),function(e,i){r("string"==typeof e),r(t.isBuffer(i));let n=s.fromNumber(1),a="",h=!1,c=!1;for(let t=0;t<e.length;t++){let i=e.charCodeAt(t);if(65280&i||i>>>5==0)throw new Error("Invalid cashaddr character.");if(i>=97&&i<=122)c=!0;else if(i>=65&&i<=90)h=!0,i=i-65+97;else if(i>=48&&i<=57)throw new Error("Invalid cashaddr prefix.");n=l(n).ixorn(31&i),a+=String.fromCharCode(i)}if(c&&h)throw new Error("Invalid cashaddr prefix.");n=l(n),a+=":";for(let t=0;t<i.length;t++){const e=i[t];if(e>>>5!=0)throw new Error("Invalid cashaddr value.");n=l(n).ixorn(e),a+=o[e]}for(let t=0;t<8;t++)n=l(n);n.ixorn(1);for(let t=0;t<8;t++){const e=31&n.shrn(5*(7-t)).lo;a+=o[e]}return a}(e,u(c,0,n,0,8,5,!0))},e.decode=f,e.test=function(t,e="bitcoincash"){try{f(t,e)}catch(t){return!1}return!0}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * hash160.js - Hash160 implementation for bcrypto
 * Copyright (c) 2017-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */
const r=i(0),s=i(30),n=i(59),o=i(14),a=new n;class h{constructor(){this.ctx=new s}init(){return this.ctx.init(),this}update(t){return this.ctx.update(t),this}final(){const t=e.allocUnsafe(32);return this.ctx._final(t),a.init(),a.update(t),a._final(t),t.slice(0,20)}static hash(){return new h}static hmac(){return new o(h,64)}static digest(t){return h.ctx.init().update(t).final()}static root(t,i){return r(e.isBuffer(t)&&20===t.length),r(e.isBuffer(i)&&20===i.length),h.ctx.init().update(t).update(i).final()}static multi(t,e,i){const r=h.ctx;return r.init(),r.update(t),r.update(e),i&&r.update(i),r.final()}static mac(t,e){return h.hmac().init(e).update(t).final()}}h.native=0,h.id="HASH160",h.size=20,h.bits=160,h.blockSize=64,h.zero=e.alloc(20,0),h.ctx=new h,t.exports=h}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * hash256.js - Hash256 implementation for bcrypto
 * Copyright (c) 2017-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */
const r=i(0),s=i(30),n=i(14);class o{constructor(){this.ctx=new s}init(){return this.ctx.init(),this}update(t){return this.ctx.update(t),this}final(){const t=e.allocUnsafe(32);return this.ctx._final(t),this.ctx.init(),this.ctx.update(t),this.ctx._final(t),t}static hash(){return new o}static hmac(){return new n(o,64)}static digest(t){return o.ctx.init().update(t).final()}static root(t,i){return r(e.isBuffer(t)&&32===t.length),r(e.isBuffer(i)&&32===i.length),o.ctx.init().update(t).update(i).final()}static multi(t,e,i){const r=o.ctx;return r.init(),r.update(t),r.update(e),i&&r.update(i),r.final()}static mac(t,e){return o.hmac().init(e).update(t).final()}}o.native=0,o.id="HASH256",o.size=32,o.bits=256,o.blockSize=64,o.zero=e.alloc(32,0),o.ctx=new o,t.exports=o}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * ripemd160.js - ripemd160 for bcrypto
 * Copyright (c) 2017-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */t.exports=i(59)},function(t,e,i){"use strict";
/*!
 * sha1.js - sha1 for bcrypto
 * Copyright (c) 2017-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */t.exports=i(102)},function(t,e,i){"use strict";(function(e){
/*!
 * sha1.js - SHA1 implementation for bcrypto
 * Copyright (c) 2017-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 * Parts of this software based on hash.js.
 */
const r=i(0),s=i(14),n=-1,o=e.alloc(8,0),a=e.alloc(64,0);a[0]=128;const h=new Uint32Array([1518500249,1859775393,2400959708,3395469782]);class c{constructor(){this.state=new Uint32Array(5),this.msg=new Uint32Array(80),this.block=e.allocUnsafe(64),this.size=n}init(){return this.state[0]=1732584193,this.state[1]=4023233417,this.state[2]=2562383102,this.state[3]=271733878,this.state[4]=3285377520,this.size=0,this}update(t){return r(e.isBuffer(t)),this._update(t,t.length),this}final(){return this._final(e.allocUnsafe(20))}_update(t,e){r(this.size!==n,"Context already finalized.");let i=63&this.size,s=0;if(this.size+=e,i>0){let r=64-i;if(r>e&&(r=e),t.copy(this.block,i,s,s+r),e-=r,s+=r,(i+=r)<64)return;this.transform(this.block,0)}for(;e>=64;)this.transform(t,s),s+=64,e-=64;e>0&&t.copy(this.block,0,s,s+e)}_final(t){r(this.size!==n,"Context already finalized.");const e=this.size%64,i=8*this.size;f(o,i*(1/4294967296),0),f(o,i,4),this._update(a,1+(119-e)%64),this._update(o,8);for(let e=0;e<5;e++)f(t,this.state[e],4*e),this.state[e]=0;for(let t=0;t<80;t++)this.msg[t]=0;for(let t=0;t<64;t++)this.block[t]=0;return this.size=n,t}transform(t,e){const i=this.msg;let r=this.state[0],s=this.state[1],n=this.state[2],o=this.state[3],a=this.state[4],c=0;for(;c<16;c++)i[c]=d(t,e+4*c);for(;c<80;c++)i[c]=l(i[c-3]^i[c-8]^i[c-14]^i[c-16],1);for(c=0;c<80;c++){const t=c/20|0;let e=l(r,5);e+=u(t,s,n,o),e+=a,e+=i[c],e+=h[t],a=o,o=n,n=l(s,30),s=r,r=e}this.state[0]+=r,this.state[1]+=s,this.state[2]+=n,this.state[3]+=o,this.state[4]+=a}static hash(){return new c}static hmac(){return new s(c,64)}static digest(t){return c.ctx.init().update(t).final()}static root(t,i){return r(e.isBuffer(t)&&20===t.length),r(e.isBuffer(i)&&20===i.length),c.ctx.init().update(t).update(i).final()}static multi(t,e,i){const r=c.ctx;return r.init(),r.update(t),r.update(e),i&&r.update(i),r.final()}static mac(t,e){return c.hmac().init(e).update(t).final()}}function l(t,e){return t<<e|t>>>32-e}function u(t,e,i,r){return 0===t?function(t,e,i){return t&e^~t&r}(e,i):1===t||3===t?function(t,e,i){return t^e^r}(e,i):2===t?function(t,e,i){return t&e^t&r^e&r}(e,i):0}function f(t,e,i){t[i]=e>>>24,t[i+1]=e>>16&255,t[i+2]=e>>8&255,t[i+3]=255&e}function d(t,e){return 16777216*(255&t[e])+((255&t[e+1])<<16|(255&t[e+2])<<8|255&t[e+3])}c.native=0,c.id="SHA1",c.size=20,c.bits=160,c.blockSize=64,c.zero=e.alloc(20,0),c.ctx=new c,t.exports=c}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * secp256k1.js - secp256k1 for bcrypto
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */const r=i(104);t.exports=new r("SECP256K1")},function(t,e,i){"use strict";(function(e){
/*!
 * ecdsa.js - wrapper for elliptic
 * Copyright (c) 2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */
const r=i(0),s=i(105),n=i(8),o=i(129),a=i(130);function h(t,i){return t.toArrayLike(e,"be",i)}function c(t,i){const r=t.encode("array",i);return e.from(r)}function l(t,i){if(r(e.isBuffer(t)),r(i>>>0===i),t.length<1+i)return!1;switch(t[0]){case 2:case 3:return t.length===1+i;case 4:return t.length===1+2*i;case 6:case 7:return t.length===1+2*i&&(1&t[0])==(1&t[t.length-1]);default:return!1}}t.exports=class{constructor(t){r("string"==typeof t),this.id=t,this.edwards=!1,this._ec=null,this._size=-1,this._bits=-1,this._zero=null,this._order=null,this._half=null,this.native=0}get ec(){return this._ec||(this._ec=s.ec(this.id.toLowerCase())),this._ec}get curve(){return this.ec.curve}get size(){return-1===this._size&&(this._size=this.curve.n.byteLength()),this._size}get bits(){return-1===this._bits&&(this._bits=this.curve.n.bitLength()),this._bits}get zero(){return this._zero||(this._zero=e.alloc(this.size,0)),this._zero}get order(){return this._order||(this._order=h(this.curve.n,this.size)),this._order}get half(){return this._half||(this._half=h(this.ec.nh,this.size)),this._half}privateKeyGenerate(){return h(this.ec.genKeyPair().getPrivate(),this.size)}privateKeyVerify(t){return r(e.isBuffer(t)),t.length===this.size&&!t.equals(this.zero)&&t.compare(this.order)<0}privateKeyExport(t,e){const i=this.publicKeyCreate(t,e);return new a.ECPrivateKey(1,t,this.id,i).encode()}privateKeyImport(t){const e=a.ECPrivateKey.decode(t);return r(1===e.version.toNumber()),r(e.namedCurveOID.getCurveName()===this.id),r(e.privateKey.value.length===this.size),e.privateKey.value}privateKeyTweakAdd(t,i){r(e.isBuffer(t)),r(e.isBuffer(i)),r(t.length===this.size),r(i.length===this.size);const s=new n(t),o=new n(i);s.iadd(o);const a=h(s.mod(this.curve.n),this.size);if(!this.privateKeyVerify(a))throw new Error("Private key is invalid.");return a}publicKeyCreate(t,i){return null==i&&(i=!0),r(e.isBuffer(t)),r("boolean"==typeof i),r(t.length===this.size),c(this.ec.keyFromPrivate(t).getPublic(),i)}publicKeyConvert(t,i){return null==i&&(i=!0),r(e.isBuffer(t)),r("boolean"==typeof i),r(l(t,this.size)),c(this.curve.decodePoint(t),i)}publicKeyVerify(t){if(r(e.isBuffer(t)),!l(t,this.size))return!1;let i;try{i=this.ec.keyFromPublic(t)}catch(t){return!1}return i.validate().result}publicKeyExport(t){return this.publicKeyConvert(t,!1).slice(1)}publicKeyImport(t,i){r(e.isBuffer(t)),r(t.length===2*this.size);const s=e.allocUnsafe(1+t.length);return s[0]=4,t.copy(s,1),this.publicKeyConvert(s,i)}publicKeyTweakAdd(t,i,s){null==s&&(s=!0),r(e.isBuffer(t)),r(e.isBuffer(i)),r("boolean"==typeof s),r(l(t,this.size)),r(i.length===this.size);const o=this.curve.decodePoint(t),a=new n(i),h=c(this.curve.g.mul(a).add(o),s);if(!this.publicKeyVerify(h))throw new Error("Public key is invalid.");return h}signatureExport(t){return o.toDER(t,this.size)}signatureImport(t){return o.toRS(t,this.size)}_sign(t,i){r(e.isBuffer(t)),r(e.isBuffer(i)),r(t.length>=20&&t.length<=128),r(i.length===this.size);const s=this.ec.sign(t,i,{canonical:!0}),n=h(s.r,this.size),a=h(s.s,this.size),c=new o;return c.r=n,c.s=a,c.param=0|s.recoveryParam,c}sign(t,e){return this._sign(t,e).encode(this.size)}signDER(t,e){return this._sign(t,e).toDER(this.size)}verify(t,i,s){if(r(e.isBuffer(t)),r(e.isBuffer(i)),r(e.isBuffer(s)),t.length<20||t.length>128)return!1;if(i.length!==2*this.size)return!1;if(!l(s,this.size))return!1;const n=o.toDER(i,this.size);try{return this.ec.verify(t,n,s)}catch(t){return!1}}verifyDER(t,i,s){if(r(e.isBuffer(t)),r(e.isBuffer(i)),r(e.isBuffer(s)),t.length<20||t.length>128)return!1;if(!l(s,this.size))return!1;let n;try{n=o.normalize(i,this.size)}catch(t){return!1}try{return this.ec.verify(t,n,s)}catch(t){return!1}}recover(t,i,s,n){if(r(e.isBuffer(i)),i.length!==2*this.size)return null;const a=o.toDER(i,this.size);return this.recoverDER(t,a,s,n)}recoverDER(t,i,s,n){if(null==s&&(s=0),null==n&&(n=!0),r(e.isBuffer(t)),r(e.isBuffer(i)),r(s>>>0===s),r("boolean"==typeof n),t.length<20||t.length>128)return null;let o;try{o=this.ec.recoverPubKey(t,i,s)}catch(t){return null}return c(o,n)}derive(t,i,s){null==s&&(s=!0),r(e.isBuffer(t)),r(e.isBuffer(i)),r("boolean"==typeof s),r(l(t,this.size)),r(i.length===this.size);const n=this.ec.keyFromPublic(t),o=this.ec.keyFromPrivate(i);return c(n.getPublic().mul(o.priv),s)}isLowS(t){return o.isLowS(t,this.size,this.half)}isLowDER(t){return o.isLowDER(t,this.size,this.half)}generatePrivateKey(){return this.privateKeyGenerate()}fromDER(t){return this.signatureImport(t)}toDER(t){return this.signatureExport(t)}ecdh(t,e,i){return this.derive(t,e,i)}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";t.exports=i(6)},function(t,e,i){"use strict";var r=e,s=i(8),n=i(107),o=i(108);r.assert=n,r.toArray=o.toArray,r.zero2=o.zero2,r.toHex=o.toHex,r.encode=o.encode,r.getNAF=function(t,e){for(var i=[],r=1<<e+1,s=t.clone();s.cmpn(1)>=0;){var n;if(s.isOdd()){var o=s.andln(r-1);n=o>(r>>1)-1?(r>>1)-o:o,s.isubn(n)}else n=0;i.push(n);for(var a=0!==s.cmpn(0)&&0===s.andln(r-1)?e+1:1,h=1;h<a;h++)i.push(0);s.iushrn(a)}return i},r.getJSF=function(t,e){var i=[[],[]];t=t.clone(),e=e.clone();for(var r=0,s=0;t.cmpn(-r)>0||e.cmpn(-s)>0;){var n,o,a,h=t.andln(3)+r&3,c=e.andln(3)+s&3;3===h&&(h=-1),3===c&&(c=-1),n=0==(1&h)?0:3!=(a=t.andln(7)+r&7)&&5!==a||2!==c?h:-h,i[0].push(n),o=0==(1&c)?0:3!=(a=e.andln(7)+s&7)&&5!==a||2!==h?c:-c,i[1].push(o),2*r===n+1&&(r=1-r),2*s===o+1&&(s=1-s),t.iushrn(1),e.iushrn(1)}return i},r.cachedProperty=function(t,e,i){var r="_"+e;t.prototype[e]=function(){return void 0!==this[r]?this[r]:this[r]=i.call(this)}},r.parseBytes=function(t){return"string"==typeof t?r.toArray(t,"hex"):t},r.intFromLE=function(t){return new s(t,"hex","le")}},function(t,e,i){"use strict";t.exports=i(0)},function(t,e,i){"use strict";var r=e;function s(t){return 1===t.length?"0"+t:t}function n(t){for(var e="",i=0;i<t.length;i++)e+=s(t[i].toString(16));return e}r.toArray=function(t,e){if(Array.isArray(t))return t.slice();if(!t)return[];var i=[];if("string"!=typeof t){for(var r=0;r<t.length;r++)i[r]=0|t[r];return i}if("hex"===e)for((t=t.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(t="0"+t),r=0;r<t.length;r+=2)i.push(parseInt(t[r]+t[r+1],16));else for(r=0;r<t.length;r++){var s=t.charCodeAt(r),n=s>>8,o=255&s;n?i.push(n,o):i.push(o)}return i},r.zero2=s,r.toHex=n,r.encode=function(t,e){return"hex"===e?n(t):t}},function(t,e,i){"use strict";t.exports=i(37).randomBytes},function(t,e,i){"use strict";(function(t,r,s){
/*!
 * random.js - randomness for bcrypto
 * Copyright (c) 2014-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */
const n=i(0);e.native=0,e.randomBytes=function(i){n(i>>>0===i);const r=t.alloc(i);return e.randomFill(r,0,r.length),r},e.randomFill=function(e,i,o){return n(t.isBuffer(e)),n(e.buffer instanceof ArrayBuffer),n(e.byteOffset>>>0===e.byteOffset),null==i&&(i=0),n(i>>>0===i),null==o&&(o=e.length-i),n(o>>>0===o),n(i+o<=e.length),function(t){if(n(t instanceof Uint8Array),t.length>2**31-1)throw new RangeError('The value "size" is out of range.');const e=s.crypto||s.msCrypto;if(e&&"function"==typeof e.getRandomValues){const i=65536;if(0===t.length)return;if(t.length>i)for(let r=0;r<t.length;r+=i){let s=r+i;s>t.length&&(s=t.length),e.getRandomValues(t.subarray(r,s))}else e.getRandomValues(t)}else{if("object"!=typeof r||!r||!r.env||"1"!==r.env.BCRYPTO_TEST)throw new Error("Entropy source not available.");for(let e=0;e<t.length;e++)t[e]=Math.floor(256*Math.random())}}(new Uint8Array(e.buffer,e.byteOffset+i,o)),e},e.randomBytesAsync=async function(t){return e.randomBytes(t)},e.randomFillAsync=async function(t,i,r){return e.randomFill(t,i,r)},e.randomInt=function(){return e.randomBytes(4).readUInt32LE(0)},e.randomRange=function(t,i){n(t>>>0===t),n(i>>>0===i),n(i>=t);const r=e.randomInt();return Math.floor(r/4294967296*(i-t)+t)}}).call(this,i(1).Buffer,i(21),i(11))},function(t,e,i){"use strict";var r=i(8),s=i(6).utils,n=s.getNAF,o=s.getJSF,a=s.assert;function h(t,e){this.type=t,this.p=new r(e.p,16),this.red=e.prime?r.red(e.prime):r.mont(this.p),this.zero=new r(0).toRed(this.red),this.one=new r(1).toRed(this.red),this.two=new r(2).toRed(this.red),this.n=e.n&&new r(e.n,16),this.g=e.g&&this.pointFromJSON(e.g,e.gRed),this._wnafT1=new Array(4),this._wnafT2=new Array(4),this._wnafT3=new Array(4),this._wnafT4=new Array(4);var i=this.n&&this.p.div(this.n);!i||i.cmpn(100)>0?this.redN=null:(this._maxwellTrick=!0,this.redN=this.n.toRed(this.red))}function c(t,e){this.curve=t,this.type=e,this.precomputed=null}t.exports=h,h.prototype.point=function(){throw new Error("Not implemented")},h.prototype.validate=function(){throw new Error("Not implemented")},h.prototype._fixedNafMul=function(t,e){a(t.precomputed);var i=t._getDoubles(),r=n(e,1),s=(1<<i.step+1)-(i.step%2==0?2:1);s/=3;for(var o=[],h=0;h<r.length;h+=i.step){var c=0;for(e=h+i.step-1;e>=h;e--)c=(c<<1)+r[e];o.push(c)}for(var l=this.jpoint(null,null,null),u=this.jpoint(null,null,null),f=s;f>0;f--){for(h=0;h<o.length;h++)(c=o[h])===f?u=u.mixedAdd(i.points[h]):c===-f&&(u=u.mixedAdd(i.points[h].neg()));l=l.add(u)}return l.toP()},h.prototype._wnafMul=function(t,e){var i=4,r=t._getNAFPoints(i);i=r.wnd;for(var s=r.points,o=n(e,i),h=this.jpoint(null,null,null),c=o.length-1;c>=0;c--){for(e=0;c>=0&&0===o[c];c--)e++;if(c>=0&&e++,h=h.dblp(e),c<0)break;var l=o[c];a(0!==l),h="affine"===t.type?l>0?h.mixedAdd(s[l-1>>1]):h.mixedAdd(s[-l-1>>1].neg()):l>0?h.add(s[l-1>>1]):h.add(s[-l-1>>1].neg())}return"affine"===t.type?h.toP():h},h.prototype._wnafMulAdd=function(t,e,i,r,s){for(var a=this._wnafT1,h=this._wnafT2,c=this._wnafT3,l=0,u=0;u<r;u++){var f=(I=e[u])._getNAFPoints(t);a[u]=f.wnd,h[u]=f.points}for(u=r-1;u>=1;u-=2){var d=u-1,p=u;if(1===a[d]&&1===a[p]){var g=[e[d],null,null,e[p]];0===e[d].y.cmp(e[p].y)?(g[1]=e[d].add(e[p]),g[2]=e[d].toJ().mixedAdd(e[p].neg())):0===e[d].y.cmp(e[p].y.redNeg())?(g[1]=e[d].toJ().mixedAdd(e[p]),g[2]=e[d].add(e[p].neg())):(g[1]=e[d].toJ().mixedAdd(e[p]),g[2]=e[d].toJ().mixedAdd(e[p].neg()));var m=[-3,-1,-5,-7,0,7,5,1,3],b=o(i[d],i[p]);l=Math.max(b[0].length,l),c[d]=new Array(l),c[p]=new Array(l);for(var w=0;w<l;w++){var y=0|b[0][w],v=0|b[1][w];c[d][w]=m[3*(y+1)+(v+1)],c[p][w]=0,h[d]=g}}else c[d]=n(i[d],a[d]),c[p]=n(i[p],a[p]),l=Math.max(c[d].length,l),l=Math.max(c[p].length,l)}var k=this.jpoint(null,null,null),E=this._wnafT4;for(u=l;u>=0;u--){for(var S=0;u>=0;){var R=!0;for(w=0;w<r;w++)E[w]=0|c[w][u],0!==E[w]&&(R=!1);if(!R)break;S++,u--}if(u>=0&&S++,k=k.dblp(S),u<0)break;for(w=0;w<r;w++){var I,A=E[w];0!==A&&(A>0?I=h[w][A-1>>1]:A<0&&(I=h[w][-A-1>>1].neg()),k="affine"===I.type?k.mixedAdd(I):k.add(I))}}for(u=0;u<r;u++)h[u]=null;return s?k:k.toP()},h.BasePoint=c,c.prototype.eq=function(){throw new Error("Not implemented")},c.prototype.validate=function(){return this.curve.validate(this)},h.prototype.decodePoint=function(t,e){t=s.toArray(t,e);var i=this.p.byteLength();if((4===t[0]||6===t[0]||7===t[0])&&t.length-1==2*i)return 6===t[0]?a(t[t.length-1]%2==0):7===t[0]&&a(t[t.length-1]%2==1),this.point(t.slice(1,1+i),t.slice(1+i,1+2*i));if((2===t[0]||3===t[0])&&t.length-1===i)return this.pointFromX(t.slice(1,1+i),3===t[0]);throw new Error("Unknown point format")},c.prototype.encodeCompressed=function(t){return this.encode(t,!0)},c.prototype._encode=function(t){var e=this.curve.p.byteLength(),i=this.getX().toArray("be",e);return t?[this.getY().isEven()?2:3].concat(i):[4].concat(i,this.getY().toArray("be",e))},c.prototype.encode=function(t,e){return s.encode(this._encode(e),t)},c.prototype.precompute=function(t){if(this.precomputed)return this;var e={doubles:null,naf:null,beta:null};return e.naf=this._getNAFPoints(8),e.doubles=this._getDoubles(4,t),e.beta=this._getBeta(),this.precomputed=e,this},c.prototype._hasDoubles=function(t){if(!this.precomputed)return!1;var e=this.precomputed.doubles;return!!e&&e.points.length>=Math.ceil((t.bitLength()+1)/e.step)},c.prototype._getDoubles=function(t,e){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;for(var i=[this],r=this,s=0;s<e;s+=t){for(var n=0;n<t;n++)r=r.dbl();i.push(r)}return{step:t,points:i}},c.prototype._getNAFPoints=function(t){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;for(var e=[this],i=(1<<t)-1,r=1===i?null:this.dbl(),s=1;s<i;s++)e[s]=e[s-1].add(r);return{wnd:t,points:e}},c.prototype._getBeta=function(){return null},c.prototype.dblp=function(t){for(var e=this,i=0;i<t;i++)e=e.dbl();return e}},function(t,e,i){"use strict";var r=i(31),s=i(6),n=i(8),o=i(39),a=r.base,h=s.utils.assert;function c(t){a.call(this,"short",t),this.a=new n(t.a,16).toRed(this.red),this.b=new n(t.b,16).toRed(this.red),this.tinv=this.two.redInvm(),this.zeroA=0===this.a.fromRed().cmpn(0),this.threeA=0===this.a.fromRed().sub(this.p).cmpn(-3),this.endo=this._getEndomorphism(t),this._endoWnafT1=new Array(4),this._endoWnafT2=new Array(4)}function l(t,e,i,r){a.BasePoint.call(this,t,"affine"),null===e&&null===i?(this.x=null,this.y=null,this.inf=!0):(this.x=new n(e,16),this.y=new n(i,16),r&&(this.x.forceRed(this.curve.red),this.y.forceRed(this.curve.red)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.inf=!1)}function u(t,e,i,r){a.BasePoint.call(this,t,"jacobian"),null===e&&null===i&&null===r?(this.x=this.curve.one,this.y=this.curve.one,this.z=new n(0)):(this.x=new n(e,16),this.y=new n(i,16),this.z=new n(r,16)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.zOne=this.z===this.curve.one}o(c,a),t.exports=c,c.prototype._getEndomorphism=function(t){if(this.zeroA&&this.g&&this.n&&1===this.p.modn(3)){var e,i;if(t.beta)e=new n(t.beta,16).toRed(this.red);else{var r=this._getEndoRoots(this.p);e=(e=r[0].cmp(r[1])<0?r[0]:r[1]).toRed(this.red)}if(t.lambda)i=new n(t.lambda,16);else{var s=this._getEndoRoots(this.n);0===this.g.mul(s[0]).x.cmp(this.g.x.redMul(e))?i=s[0]:(i=s[1],h(0===this.g.mul(i).x.cmp(this.g.x.redMul(e))))}return{beta:e,lambda:i,basis:t.basis?t.basis.map(function(t){return{a:new n(t.a,16),b:new n(t.b,16)}}):this._getEndoBasis(i)}}},c.prototype._getEndoRoots=function(t){var e=t===this.p?this.red:n.mont(t),i=new n(2).toRed(e).redInvm(),r=i.redNeg(),s=new n(3).toRed(e).redNeg().redSqrt().redMul(i);return[r.redAdd(s).fromRed(),r.redSub(s).fromRed()]},c.prototype._getEndoBasis=function(t){for(var e,i,r,s,o,a,h,c,l,u=this.n.ushrn(Math.floor(this.n.bitLength()/2)),f=t,d=this.n.clone(),p=new n(1),g=new n(0),m=new n(0),b=new n(1),w=0;0!==f.cmpn(0);){var y=d.div(f);c=d.sub(y.mul(f)),l=m.sub(y.mul(p));var v=b.sub(y.mul(g));if(!r&&c.cmp(u)<0)e=h.neg(),i=p,r=c.neg(),s=l;else if(r&&2==++w)break;h=c,d=f,f=c,m=p,p=l,b=g,g=v}o=c.neg(),a=l;var k=r.sqr().add(s.sqr());return o.sqr().add(a.sqr()).cmp(k)>=0&&(o=e,a=i),r.negative&&(r=r.neg(),s=s.neg()),o.negative&&(o=o.neg(),a=a.neg()),[{a:r,b:s},{a:o,b:a}]},c.prototype._endoSplit=function(t){var e=this.endo.basis,i=e[0],r=e[1],s=r.b.mul(t).divRound(this.n),n=i.b.neg().mul(t).divRound(this.n),o=s.mul(i.a),a=n.mul(r.a),h=s.mul(i.b),c=n.mul(r.b);return{k1:t.sub(o).sub(a),k2:h.add(c).neg()}},c.prototype.pointFromX=function(t,e){(t=new n(t,16)).red||(t=t.toRed(this.red));var i=t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b),r=i.redSqrt();if(0!==r.redSqr().redSub(i).cmp(this.zero))throw new Error("invalid point");var s=r.fromRed().isOdd();return(e&&!s||!e&&s)&&(r=r.redNeg()),this.point(t,r)},c.prototype.validate=function(t){if(t.inf)return!0;var e=t.x,i=t.y,r=this.a.redMul(e),s=e.redSqr().redMul(e).redIAdd(r).redIAdd(this.b);return 0===i.redSqr().redISub(s).cmpn(0)},c.prototype._endoWnafMulAdd=function(t,e,i){for(var r=this._endoWnafT1,s=this._endoWnafT2,n=0;n<t.length;n++){var o=this._endoSplit(e[n]),a=t[n],h=a._getBeta();o.k1.negative&&(o.k1.ineg(),a=a.neg(!0)),o.k2.negative&&(o.k2.ineg(),h=h.neg(!0)),r[2*n]=a,r[2*n+1]=h,s[2*n]=o.k1,s[2*n+1]=o.k2}for(var c=this._wnafMulAdd(1,r,s,2*n,i),l=0;l<2*n;l++)r[l]=null,s[l]=null;return c},o(l,a.BasePoint),c.prototype.point=function(t,e,i){return new l(this,t,e,i)},c.prototype.pointFromJSON=function(t,e){return l.fromJSON(this,t,e)},l.prototype._getBeta=function(){if(this.curve.endo){var t=this.precomputed;if(t&&t.beta)return t.beta;var e=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(t){var i=this.curve,r=function(t){return i.point(t.x.redMul(i.endo.beta),t.y)};t.beta=e,e.precomputed={beta:null,naf:t.naf&&{wnd:t.naf.wnd,points:t.naf.points.map(r)},doubles:t.doubles&&{step:t.doubles.step,points:t.doubles.points.map(r)}}}return e}},l.prototype.toJSON=function(){return this.precomputed?[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]:[this.x,this.y]},l.fromJSON=function(t,e,i){"string"==typeof e&&(e=JSON.parse(e));var r=t.point(e[0],e[1],i);if(!e[2])return r;function s(e){return t.point(e[0],e[1],i)}var n=e[2];return r.precomputed={beta:null,doubles:n.doubles&&{step:n.doubles.step,points:[r].concat(n.doubles.points.map(s))},naf:n.naf&&{wnd:n.naf.wnd,points:[r].concat(n.naf.points.map(s))}},r},l.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+">"},l.prototype.isInfinity=function(){return this.inf},l.prototype.add=function(t){if(this.inf)return t;if(t.inf)return this;if(this.eq(t))return this.dbl();if(this.neg().eq(t))return this.curve.point(null,null);if(0===this.x.cmp(t.x))return this.curve.point(null,null);var e=this.y.redSub(t.y);0!==e.cmpn(0)&&(e=e.redMul(this.x.redSub(t.x).redInvm()));var i=e.redSqr().redISub(this.x).redISub(t.x),r=e.redMul(this.x.redSub(i)).redISub(this.y);return this.curve.point(i,r)},l.prototype.dbl=function(){if(this.inf)return this;var t=this.y.redAdd(this.y);if(0===t.cmpn(0))return this.curve.point(null,null);var e=this.curve.a,i=this.x.redSqr(),r=t.redInvm(),s=i.redAdd(i).redIAdd(i).redIAdd(e).redMul(r),n=s.redSqr().redISub(this.x.redAdd(this.x)),o=s.redMul(this.x.redSub(n)).redISub(this.y);return this.curve.point(n,o)},l.prototype.getX=function(){return this.x.fromRed()},l.prototype.getY=function(){return this.y.fromRed()},l.prototype.mul=function(t){return t=new n(t,16),this._hasDoubles(t)?this.curve._fixedNafMul(this,t):this.curve.endo?this.curve._endoWnafMulAdd([this],[t]):this.curve._wnafMul(this,t)},l.prototype.mulAdd=function(t,e,i){var r=[this,e],s=[t,i];return this.curve.endo?this.curve._endoWnafMulAdd(r,s):this.curve._wnafMulAdd(1,r,s,2)},l.prototype.jmulAdd=function(t,e,i){var r=[this,e],s=[t,i];return this.curve.endo?this.curve._endoWnafMulAdd(r,s,!0):this.curve._wnafMulAdd(1,r,s,2,!0)},l.prototype.eq=function(t){return this===t||this.inf===t.inf&&(this.inf||0===this.x.cmp(t.x)&&0===this.y.cmp(t.y))},l.prototype.neg=function(t){if(this.inf)return this;var e=this.curve.point(this.x,this.y.redNeg());if(t&&this.precomputed){var i=this.precomputed,r=function(t){return t.neg()};e.precomputed={naf:i.naf&&{wnd:i.naf.wnd,points:i.naf.points.map(r)},doubles:i.doubles&&{step:i.doubles.step,points:i.doubles.points.map(r)}}}return e},l.prototype.toJ=function(){return this.inf?this.curve.jpoint(null,null,null):this.curve.jpoint(this.x,this.y,this.curve.one)},o(u,a.BasePoint),c.prototype.jpoint=function(t,e,i){return new u(this,t,e,i)},u.prototype.toP=function(){if(this.isInfinity())return this.curve.point(null,null);var t=this.z.redInvm(),e=t.redSqr(),i=this.x.redMul(e),r=this.y.redMul(e).redMul(t);return this.curve.point(i,r)},u.prototype.neg=function(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)},u.prototype.add=function(t){if(this.isInfinity())return t;if(t.isInfinity())return this;var e=t.z.redSqr(),i=this.z.redSqr(),r=this.x.redMul(e),s=t.x.redMul(i),n=this.y.redMul(e.redMul(t.z)),o=t.y.redMul(i.redMul(this.z)),a=r.redSub(s),h=n.redSub(o);if(0===a.cmpn(0))return 0!==h.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var c=a.redSqr(),l=c.redMul(a),u=r.redMul(c),f=h.redSqr().redIAdd(l).redISub(u).redISub(u),d=h.redMul(u.redISub(f)).redISub(n.redMul(l)),p=this.z.redMul(t.z).redMul(a);return this.curve.jpoint(f,d,p)},u.prototype.mixedAdd=function(t){if(this.isInfinity())return t.toJ();if(t.isInfinity())return this;var e=this.z.redSqr(),i=this.x,r=t.x.redMul(e),s=this.y,n=t.y.redMul(e).redMul(this.z),o=i.redSub(r),a=s.redSub(n);if(0===o.cmpn(0))return 0!==a.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var h=o.redSqr(),c=h.redMul(o),l=i.redMul(h),u=a.redSqr().redIAdd(c).redISub(l).redISub(l),f=a.redMul(l.redISub(u)).redISub(s.redMul(c)),d=this.z.redMul(o);return this.curve.jpoint(u,f,d)},u.prototype.dblp=function(t){if(0===t)return this;if(this.isInfinity())return this;if(!t)return this.dbl();if(this.curve.zeroA||this.curve.threeA){for(var e=this,i=0;i<t;i++)e=e.dbl();return e}var r=this.curve.a,s=this.curve.tinv,n=this.x,o=this.y,a=this.z,h=a.redSqr().redSqr(),c=o.redAdd(o);for(i=0;i<t;i++){var l=n.redSqr(),u=c.redSqr(),f=u.redSqr(),d=l.redAdd(l).redIAdd(l).redIAdd(r.redMul(h)),p=n.redMul(u),g=d.redSqr().redISub(p.redAdd(p)),m=p.redISub(g),b=d.redMul(m);b=b.redIAdd(b).redISub(f);var w=c.redMul(a);i+1<t&&(h=h.redMul(f)),n=g,a=w,c=b}return this.curve.jpoint(n,c.redMul(s),a)},u.prototype.dbl=function(){return this.isInfinity()?this:this.curve.zeroA?this._zeroDbl():this.curve.threeA?this._threeDbl():this._dbl()},u.prototype._zeroDbl=function(){var t,e,i;if(this.zOne){var r=this.x.redSqr(),s=this.y.redSqr(),n=s.redSqr(),o=this.x.redAdd(s).redSqr().redISub(r).redISub(n);o=o.redIAdd(o);var a=r.redAdd(r).redIAdd(r),h=a.redSqr().redISub(o).redISub(o),c=n.redIAdd(n);c=(c=c.redIAdd(c)).redIAdd(c),t=h,e=a.redMul(o.redISub(h)).redISub(c),i=this.y.redAdd(this.y)}else{var l=this.x.redSqr(),u=this.y.redSqr(),f=u.redSqr(),d=this.x.redAdd(u).redSqr().redISub(l).redISub(f);d=d.redIAdd(d);var p=l.redAdd(l).redIAdd(l),g=p.redSqr(),m=f.redIAdd(f);m=(m=m.redIAdd(m)).redIAdd(m),t=g.redISub(d).redISub(d),e=p.redMul(d.redISub(t)).redISub(m),i=(i=this.y.redMul(this.z)).redIAdd(i)}return this.curve.jpoint(t,e,i)},u.prototype._threeDbl=function(){var t,e,i;if(this.zOne){var r=this.x.redSqr(),s=this.y.redSqr(),n=s.redSqr(),o=this.x.redAdd(s).redSqr().redISub(r).redISub(n);o=o.redIAdd(o);var a=r.redAdd(r).redIAdd(r).redIAdd(this.curve.a),h=a.redSqr().redISub(o).redISub(o);t=h;var c=n.redIAdd(n);c=(c=c.redIAdd(c)).redIAdd(c),e=a.redMul(o.redISub(h)).redISub(c),i=this.y.redAdd(this.y)}else{var l=this.z.redSqr(),u=this.y.redSqr(),f=this.x.redMul(u),d=this.x.redSub(l).redMul(this.x.redAdd(l));d=d.redAdd(d).redIAdd(d);var p=f.redIAdd(f),g=(p=p.redIAdd(p)).redAdd(p);t=d.redSqr().redISub(g),i=this.y.redAdd(this.z).redSqr().redISub(u).redISub(l);var m=u.redSqr();m=(m=(m=m.redIAdd(m)).redIAdd(m)).redIAdd(m),e=d.redMul(p.redISub(t)).redISub(m)}return this.curve.jpoint(t,e,i)},u.prototype._dbl=function(){var t=this.curve.a,e=this.x,i=this.y,r=this.z,s=r.redSqr().redSqr(),n=e.redSqr(),o=i.redSqr(),a=n.redAdd(n).redIAdd(n).redIAdd(t.redMul(s)),h=e.redAdd(e),c=(h=h.redIAdd(h)).redMul(o),l=a.redSqr().redISub(c.redAdd(c)),u=c.redISub(l),f=o.redSqr();f=(f=(f=f.redIAdd(f)).redIAdd(f)).redIAdd(f);var d=a.redMul(u).redISub(f),p=i.redAdd(i).redMul(r);return this.curve.jpoint(l,d,p)},u.prototype.trpl=function(){if(!this.curve.zeroA)return this.dbl().add(this);var t=this.x.redSqr(),e=this.y.redSqr(),i=this.z.redSqr(),r=e.redSqr(),s=t.redAdd(t).redIAdd(t),n=s.redSqr(),o=this.x.redAdd(e).redSqr().redISub(t).redISub(r),a=(o=(o=(o=o.redIAdd(o)).redAdd(o).redIAdd(o)).redISub(n)).redSqr(),h=r.redIAdd(r);h=(h=(h=h.redIAdd(h)).redIAdd(h)).redIAdd(h);var c=s.redIAdd(o).redSqr().redISub(n).redISub(a).redISub(h),l=e.redMul(c);l=(l=l.redIAdd(l)).redIAdd(l);var u=this.x.redMul(a).redISub(l);u=(u=u.redIAdd(u)).redIAdd(u);var f=this.y.redMul(c.redMul(h.redISub(c)).redISub(o.redMul(a)));f=(f=(f=f.redIAdd(f)).redIAdd(f)).redIAdd(f);var d=this.z.redAdd(o).redSqr().redISub(i).redISub(a);return this.curve.jpoint(u,f,d)},u.prototype.mul=function(t,e){return t=new n(t,e),this.curve._wnafMul(this,t)},u.prototype.eq=function(t){if("affine"===t.type)return this.eq(t.toJ());if(this===t)return!0;var e=this.z.redSqr(),i=t.z.redSqr();if(0!==this.x.redMul(i).redISub(t.x.redMul(e)).cmpn(0))return!1;var r=e.redMul(this.z),s=i.redMul(t.z);return 0===this.y.redMul(s).redISub(t.y.redMul(r)).cmpn(0)},u.prototype.eqXToP=function(t){var e=this.z.redSqr(),i=t.toRed(this.curve.red).redMul(e);if(0===this.x.cmp(i))return!0;for(var r=t.clone(),s=this.curve.redN.redMul(e);;){if(r.iadd(this.curve.n),r.cmp(this.curve.p)>=0)return!1;if(i.redIAdd(s),0===this.x.cmp(i))return!0}},u.prototype.inspect=function(){return this.isInfinity()?"<EC JPoint Infinity>":"<EC JPoint x: "+this.x.toString(16,2)+" y: "+this.y.toString(16,2)+" z: "+this.z.toString(16,2)+">"},u.prototype.isInfinity=function(){return 0===this.z.cmpn(0)}},function(t,e,i){"use strict";var r=i(31),s=i(8),n=i(39),o=r.base,a=i(6).utils;function h(t){o.call(this,"mont",t),this.a=new s(t.a,16).toRed(this.red),this.b=new s(t.b,16).toRed(this.red),this.i4=new s(4).toRed(this.red).redInvm(),this.two=new s(2).toRed(this.red),this.a24=this.i4.redMul(this.a.redAdd(this.two))}function c(t,e,i){o.BasePoint.call(this,t,"projective"),null===e&&null===i?(this.x=this.curve.one,this.z=this.curve.zero):(this.x=new s(e,16),this.z=new s(i,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)))}n(h,o),t.exports=h,h.prototype.validate=function(t){var e=t.normalize().x,i=e.redSqr(),r=i.redMul(e).redAdd(i.redMul(this.a)).redAdd(e);return 0===r.redSqrt().redSqr().cmp(r)},n(c,o.BasePoint),h.prototype.decodePoint=function(t,e){return this.point(a.toArray(t,e),1)},h.prototype.point=function(t,e){return new c(this,t,e)},h.prototype.pointFromJSON=function(t){return c.fromJSON(this,t)},c.prototype.precompute=function(){},c.prototype._encode=function(){return this.getX().toArray("be",this.curve.p.byteLength())},c.fromJSON=function(t,e){return new c(t,e[0],e[1]||t.one)},c.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},c.prototype.isInfinity=function(){return 0===this.z.cmpn(0)},c.prototype.dbl=function(){var t=this.x.redAdd(this.z).redSqr(),e=this.x.redSub(this.z).redSqr(),i=t.redSub(e),r=t.redMul(e),s=i.redMul(e.redAdd(this.curve.a24.redMul(i)));return this.curve.point(r,s)},c.prototype.add=function(){throw new Error("Not supported on Montgomery curve")},c.prototype.diffAdd=function(t,e){var i=this.x.redAdd(this.z),r=this.x.redSub(this.z),s=t.x.redAdd(t.z),n=t.x.redSub(t.z).redMul(i),o=s.redMul(r),a=e.z.redMul(n.redAdd(o).redSqr()),h=e.x.redMul(n.redISub(o).redSqr());return this.curve.point(a,h)},c.prototype.mul=function(t){for(var e=t.clone(),i=this,r=this.curve.point(null,null),s=[];0!==e.cmpn(0);e.iushrn(1))s.push(e.andln(1));for(var n=s.length-1;n>=0;n--)0===s[n]?(i=i.diffAdd(r,this),r=r.dbl()):(r=i.diffAdd(r,this),i=i.dbl());return r},c.prototype.mulAdd=function(){throw new Error("Not supported on Montgomery curve")},c.prototype.jumlAdd=function(){throw new Error("Not supported on Montgomery curve")},c.prototype.eq=function(t){return 0===this.getX().cmp(t.getX())},c.prototype.normalize=function(){return this.x=this.x.redMul(this.z.redInvm()),this.z=this.curve.one,this},c.prototype.getX=function(){return this.normalize(),this.x.fromRed()}},function(t,e,i){"use strict";var r=i(31),s=i(6),n=i(8),o=i(39),a=r.base,h=s.utils.assert;function c(t){this.twisted=1!=(0|t.a),this.mOneA=this.twisted&&-1==(0|t.a),this.extended=this.mOneA,a.call(this,"edwards",t),this.a=new n(t.a,16).umod(this.red.m),this.a=this.a.toRed(this.red),this.c=new n(t.c,16).toRed(this.red),this.c2=this.c.redSqr(),this.d=new n(t.d,16).toRed(this.red),this.dd=this.d.redAdd(this.d),h(!this.twisted||0===this.c.fromRed().cmpn(1)),this.oneC=1==(0|t.c)}function l(t,e,i,r,s){a.BasePoint.call(this,t,"projective"),null===e&&null===i&&null===r?(this.x=this.curve.zero,this.y=this.curve.one,this.z=this.curve.one,this.t=this.curve.zero,this.zOne=!0):(this.x=new n(e,16),this.y=new n(i,16),this.z=r?new n(r,16):this.curve.one,this.t=s&&new n(s,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.t&&!this.t.red&&(this.t=this.t.toRed(this.curve.red)),this.zOne=this.z===this.curve.one,this.curve.extended&&!this.t&&(this.t=this.x.redMul(this.y),this.zOne||(this.t=this.t.redMul(this.z.redInvm()))))}o(c,a),t.exports=c,c.prototype._mulA=function(t){return this.mOneA?t.redNeg():this.a.redMul(t)},c.prototype._mulC=function(t){return this.oneC?t:this.c.redMul(t)},c.prototype.jpoint=function(t,e,i,r){return this.point(t,e,i,r)},c.prototype.pointFromX=function(t,e){(t=new n(t,16)).red||(t=t.toRed(this.red));var i=t.redSqr(),r=this.c2.redSub(this.a.redMul(i)),s=this.one.redSub(this.c2.redMul(this.d).redMul(i)),o=r.redMul(s.redInvm()),a=o.redSqrt();if(0!==a.redSqr().redSub(o).cmp(this.zero))throw new Error("invalid point");var h=a.fromRed().isOdd();return(e&&!h||!e&&h)&&(a=a.redNeg()),this.point(t,a)},c.prototype.pointFromY=function(t,e){(t=new n(t,16)).red||(t=t.toRed(this.red));var i=t.redSqr(),r=i.redSub(this.c2),s=i.redMul(this.d).redMul(this.c2).redSub(this.a),o=r.redMul(s.redInvm());if(0===o.cmp(this.zero)){if(e)throw new Error("invalid point");return this.point(this.zero,t)}var a=o.redSqrt();if(0!==a.redSqr().redSub(o).cmp(this.zero))throw new Error("invalid point");return a.fromRed().isOdd()!==e&&(a=a.redNeg()),this.point(a,t)},c.prototype.validate=function(t){if(t.isInfinity())return!0;t.normalize();var e=t.x.redSqr(),i=t.y.redSqr(),r=e.redMul(this.a).redAdd(i),s=this.c2.redMul(this.one.redAdd(this.d.redMul(e).redMul(i)));return 0===r.cmp(s)},o(l,a.BasePoint),c.prototype.pointFromJSON=function(t){return l.fromJSON(this,t)},c.prototype.point=function(t,e,i,r){return new l(this,t,e,i,r)},l.fromJSON=function(t,e){return new l(t,e[0],e[1],e[2])},l.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},l.prototype.isInfinity=function(){return 0===this.x.cmpn(0)&&(0===this.y.cmp(this.z)||this.zOne&&0===this.y.cmp(this.curve.c))},l.prototype._extDbl=function(){var t=this.x.redSqr(),e=this.y.redSqr(),i=this.z.redSqr();i=i.redIAdd(i);var r=this.curve._mulA(t),s=this.x.redAdd(this.y).redSqr().redISub(t).redISub(e),n=r.redAdd(e),o=n.redSub(i),a=r.redSub(e),h=s.redMul(o),c=n.redMul(a),l=s.redMul(a),u=o.redMul(n);return this.curve.point(h,c,u,l)},l.prototype._projDbl=function(){var t,e,i,r=this.x.redAdd(this.y).redSqr(),s=this.x.redSqr(),n=this.y.redSqr();if(this.curve.twisted){var o=(c=this.curve._mulA(s)).redAdd(n);if(this.zOne)t=r.redSub(s).redSub(n).redMul(o.redSub(this.curve.two)),e=o.redMul(c.redSub(n)),i=o.redSqr().redSub(o).redSub(o);else{var a=this.z.redSqr(),h=o.redSub(a).redISub(a);t=r.redSub(s).redISub(n).redMul(h),e=o.redMul(c.redSub(n)),i=o.redMul(h)}}else{var c=s.redAdd(n);a=this.curve._mulC(this.z).redSqr(),h=c.redSub(a).redSub(a),t=this.curve._mulC(r.redISub(c)).redMul(h),e=this.curve._mulC(c).redMul(s.redISub(n)),i=c.redMul(h)}return this.curve.point(t,e,i)},l.prototype.dbl=function(){return this.isInfinity()?this:this.curve.extended?this._extDbl():this._projDbl()},l.prototype._extAdd=function(t){var e=this.y.redSub(this.x).redMul(t.y.redSub(t.x)),i=this.y.redAdd(this.x).redMul(t.y.redAdd(t.x)),r=this.t.redMul(this.curve.dd).redMul(t.t),s=this.z.redMul(t.z.redAdd(t.z)),n=i.redSub(e),o=s.redSub(r),a=s.redAdd(r),h=i.redAdd(e),c=n.redMul(o),l=a.redMul(h),u=n.redMul(h),f=o.redMul(a);return this.curve.point(c,l,f,u)},l.prototype._projAdd=function(t){var e,i,r=this.z.redMul(t.z),s=r.redSqr(),n=this.x.redMul(t.x),o=this.y.redMul(t.y),a=this.curve.d.redMul(n).redMul(o),h=s.redSub(a),c=s.redAdd(a),l=this.x.redAdd(this.y).redMul(t.x.redAdd(t.y)).redISub(n).redISub(o),u=r.redMul(h).redMul(l);return this.curve.twisted?(e=r.redMul(c).redMul(o.redSub(this.curve._mulA(n))),i=h.redMul(c)):(e=r.redMul(c).redMul(o.redSub(n)),i=this.curve._mulC(h).redMul(c)),this.curve.point(u,e,i)},l.prototype.add=function(t){return this.isInfinity()?t:t.isInfinity()?this:this.curve.extended?this._extAdd(t):this._projAdd(t)},l.prototype.mul=function(t){return this._hasDoubles(t)?this.curve._fixedNafMul(this,t):this.curve._wnafMul(this,t)},l.prototype.mulAdd=function(t,e,i){return this.curve._wnafMulAdd(1,[this,e],[t,i],2,!1)},l.prototype.jmulAdd=function(t,e,i){return this.curve._wnafMulAdd(1,[this,e],[t,i],2,!0)},l.prototype.normalize=function(){if(this.zOne)return this;var t=this.z.redInvm();return this.x=this.x.redMul(t),this.y=this.y.redMul(t),this.t&&(this.t=this.t.redMul(t)),this.z=this.curve.one,this.zOne=!0,this},l.prototype.neg=function(){return this.curve.point(this.x.redNeg(),this.y,this.z,this.t&&this.t.redNeg())},l.prototype.getX=function(){return this.normalize(),this.x.fromRed()},l.prototype.getY=function(){return this.normalize(),this.y.fromRed()},l.prototype.eq=function(t){return this===t||0===this.getX().cmp(t.getX())&&0===this.getY().cmp(t.getY())},l.prototype.eqXToP=function(t){var e=t.toRed(this.curve.red).redMul(this.z);if(0===this.x.cmp(e))return!0;for(var i=t.clone(),r=this.curve.redN.redMul(this.z);;){if(i.iadd(this.curve.n),i.cmp(this.curve.p)>=0)return!1;if(e.redIAdd(r),0===this.x.cmp(e))return!0}},l.prototype.toP=l.prototype.normalize,l.prototype.mixedAdd=l.prototype.add},function(t,e,i){"use strict";var r,s=e,n=i(60),o=i(6),a=o.utils.assert;function h(t){"short"===t.type?this.curve=new o.curve.short(t):"edwards"===t.type?this.curve=new o.curve.edwards(t):this.curve=new o.curve.mont(t),this.g=this.curve.g,this.n=this.curve.n,this.hash=t.hash,a(this.g.validate(),"Invalid curve"),a(this.g.mul(this.n).isInfinity(),"Invalid curve, G*N != O")}function c(t,e){Object.defineProperty(s,t,{configurable:!0,enumerable:!0,get:function(){var i=new h(e);return Object.defineProperty(s,t,{configurable:!0,enumerable:!0,value:i}),i}})}s.PresetCurve=h,c("p192",{type:"short",prime:"p192",p:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",a:"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",b:"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",n:"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",hash:n.sha256,gRed:!1,g:["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012","07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]}),c("p224",{type:"short",prime:"p224",p:"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",a:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",b:"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",n:"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",hash:n.sha256,gRed:!1,g:["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21","bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]}),c("p256",{type:"short",prime:null,p:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",a:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",b:"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",n:"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",hash:n.sha256,gRed:!1,g:["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296","4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]}),c("p384",{type:"short",prime:null,p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",a:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",b:"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",n:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",hash:n.sha384,gRed:!1,g:["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7","3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]}),c("p521",{type:"short",prime:null,p:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",a:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",b:"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",n:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",hash:n.sha512,gRed:!1,g:["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66","00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]}),c("curve25519",{type:"mont",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"76d06",b:"1",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:n.sha256,gRed:!1,g:["9"]}),c("ed25519",{type:"edwards",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"-1",c:"1",d:"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:n.sha256,gRed:!1,g:["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a","6666666666666666666666666666666666666666666666666666666666666658"]});try{r=i(120)}catch(t){r=void 0}c("secp256k1",{type:"short",prime:"k256",p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",a:"0",b:"7",n:"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",h:"1",hash:n.sha256,beta:"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",lambda:"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",basis:[{a:"3086d221a7d46bcde86c90e49284eb15",b:"-e4437ed6010e88286f547fa90abfe4c3"},{a:"114ca50f7a8e2f3f657c1108d9d44cfd8",b:"3086d221a7d46bcde86c90e49284eb15"}],gRed:!1,g:["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798","483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",r]})},function(t,e,i){"use strict";
/*!
 * sha224.js - SHA224 for bcrypto
 * Copyright (c) 2017-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */t.exports=i(117)},function(t,e,i){"use strict";(function(e){
/*!
 * sha224.js - SHA224 implementation for bcrypto
 * Copyright (c) 2016-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 * Parts of this software based on hash.js.
 */
const r=i(0),s=i(30),n=i(14);class o extends s{constructor(){super()}init(){return this.state[0]=3238371032,this.state[1]=914150663,this.state[2]=812702999,this.state[3]=4144912697,this.state[4]=4290775857,this.state[5]=1750603025,this.state[6]=1694076839,this.state[7]=3204075428,this.size=0,this}final(){return super.final().slice(0,28)}static hash(){return new o}static hmac(){return new n(o,64)}static digest(t){return o.ctx.init().update(t).final()}static root(t,i){return r(e.isBuffer(t)&&28===t.length),r(e.isBuffer(i)&&28===i.length),o.ctx.init().update(t).update(i).final()}static multi(t,e,i){const r=o.ctx;return r.init(),r.update(t),r.update(e),i&&r.update(i),r.final()}static mac(t,e){return o.hmac().init(e).update(t).final()}}o.native=0,o.id="SHA224",o.size=28,o.bits=224,o.blockSize=64,o.zero=e.alloc(28,0),o.ctx=new o,t.exports=o}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * sha384.js - SHA384 for bcrypto
 * Copyright (c) 2017-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */t.exports=i(119)},function(t,e,i){"use strict";(function(e){
/*!
 * sha384.js - SHA384 implementation for bcrypto
 * Copyright (c) 2017-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 * Parts of this software based on hash.js.
 */
const r=i(0),s=i(61),n=i(14);class o extends s{constructor(){super()}init(){return this.state[0]=3418070365,this.state[1]=3238371032,this.state[2]=1654270250,this.state[3]=914150663,this.state[4]=2438529370,this.state[5]=812702999,this.state[6]=355462360,this.state[7]=4144912697,this.state[8]=1731405415,this.state[9]=4290775857,this.state[10]=2394180231,this.state[11]=1750603025,this.state[12]=3675008525,this.state[13]=1694076839,this.state[14]=1203062813,this.state[15]=3204075428,this.size=0,this}final(){return super.final().slice(0,48)}static hash(){return new o}static hmac(){return new n(o,128)}static digest(t){return o.ctx.init().update(t).final()}static root(t,i){return r(e.isBuffer(t)&&48===t.length),r(e.isBuffer(i)&&48===i.length),o.ctx.init().update(t).update(i).final()}static multi(t,e,i){const r=o.ctx;return r.init(),r.update(t),r.update(e),i&&r.update(i),r.final()}static mac(t,e){return o.hmac().init(e).update(t).final()}}o.native=0,o.id="SHA384",o.size=48,o.bits=384,o.blockSize=128,o.zero=e.alloc(48,0),o.ctx=new o,t.exports=o}).call(this,i(1).Buffer)},function(t,e){t.exports={doubles:{step:4,points:[["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a","f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"],["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508","11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"],["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739","d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"],["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640","4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"],["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c","4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"],["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda","96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"],["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa","5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"],["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0","cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"],["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d","9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"],["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d","e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"],["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1","9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"],["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0","5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"],["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047","10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"],["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862","283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"],["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7","7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"],["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd","56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"],["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83","7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"],["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a","53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"],["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8","bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"],["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d","4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"],["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725","7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"],["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754","4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"],["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c","17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"],["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6","6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"],["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39","c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"],["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891","893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"],["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b","febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"],["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03","2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"],["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d","eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"],["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070","7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"],["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4","e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"],["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da","662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"],["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11","1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"],["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e","efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"],["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41","2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"],["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef","67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"],["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8","db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"],["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d","648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"],["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96","35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"],["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd","ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"],["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5","9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"],["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266","40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"],["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71","34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"],["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac","c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"],["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751","1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"],["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e","493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"],["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241","c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"],["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3","be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"],["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f","4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"],["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19","aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"],["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be","b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"],["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9","6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"],["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2","8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"],["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13","7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"],["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c","ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"],["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba","2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"],["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151","e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"],["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073","d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"],["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458","38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"],["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b","69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"],["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366","d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"],["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa","40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"],["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0","620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"],["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787","7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"],["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e","ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]]},naf:{wnd:7,points:[["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9","388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"],["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4","d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"],["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc","6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"],["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe","cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"],["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb","d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"],["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8","ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"],["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e","581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"],["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34","4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"],["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c","85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"],["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5","321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"],["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f","2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"],["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714","73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"],["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729","a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"],["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db","2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"],["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4","e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"],["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5","b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"],["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479","2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"],["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d","80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"],["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f","1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"],["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb","d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"],["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9","eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"],["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963","758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"],["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74","958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"],["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530","e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"],["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b","5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"],["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247","cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"],["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1","cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"],["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120","4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"],["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435","91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"],["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18","673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"],["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8","59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"],["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb","3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"],["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f","55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"],["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143","efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"],["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba","e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"],["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45","f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"],["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a","744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"],["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e","c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"],["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8","e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"],["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c","30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"],["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519","e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"],["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab","100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"],["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca","ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"],["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf","8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"],["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610","68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"],["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4","f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"],["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c","d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"],["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940","edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"],["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980","a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"],["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3","66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"],["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf","9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"],["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63","4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"],["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448","fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"],["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf","5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"],["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5","8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"],["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6","8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"],["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5","5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"],["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99","f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"],["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51","f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"],["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5","42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"],["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5","204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"],["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997","4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"],["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881","73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"],["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5","39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"],["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66","d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"],["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726","ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"],["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede","6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"],["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94","60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"],["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31","3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"],["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51","b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"],["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252","ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"],["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5","cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"],["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b","6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"],["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4","322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"],["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f","6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"],["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889","2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"],["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246","b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"],["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984","998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"],["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a","b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"],["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030","bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"],["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197","6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"],["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593","c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"],["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef","21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"],["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38","60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"],["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a","49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"],["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111","5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"],["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502","7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"],["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea","be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"],["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26","8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"],["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986","39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"],["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e","62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"],["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4","25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"],["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda","ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"],["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859","cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"],["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f","f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"],["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c","6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"],["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942","fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"],["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a","1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"],["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80","5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"],["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d","438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"],["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1","cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"],["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63","c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"],["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352","6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"],["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193","ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"],["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00","9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"],["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58","ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"],["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7","d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"],["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8","c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"],["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e","67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"],["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d","cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"],["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b","299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"],["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f","f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"],["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6","462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"],["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297","62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"],["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a","7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"],["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c","ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"],["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52","4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"],["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb","bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"],["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065","bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"],["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917","603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"],["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9","cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"],["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3","553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"],["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57","712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"],["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66","ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"],["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8","9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"],["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721","9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"],["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180","4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]]}}},function(t,e,i){"use strict";var r=i(8),s=i(122),n=i(6),o=n.utils.assert,a=i(124),h=i(125);function c(t){if(!(this instanceof c))return new c(t);"string"==typeof t&&(o(n.curves.hasOwnProperty(t),"Unknown curve "+t),t=n.curves[t]),t instanceof n.curves.PresetCurve&&(t={curve:t}),this.curve=t.curve.curve,this.n=this.curve.n,this.nh=this.n.ushrn(1),this.g=this.curve.g,this.g=t.curve.g,this.g.precompute(t.curve.n.bitLength()+1),this.hash=t.hash||t.curve.hash}t.exports=c,c.prototype.keyPair=function(t){return new a(this,t)},c.prototype.keyFromPrivate=function(t,e){return a.fromPrivate(this,t,e)},c.prototype.keyFromPublic=function(t,e){return a.fromPublic(this,t,e)},c.prototype.genKeyPair=function(t){t||(t={});for(var e=new s({hash:this.hash,pers:t.pers,persEnc:t.persEnc||"utf8",entropy:t.entropy||n.rand(this.hash.hmacStrength),entropyEnc:t.entropy&&t.entropyEnc||"utf8",nonce:this.n.toArray()}),i=this.n.byteLength(),o=this.n.sub(new r(2));;){var a=new r(e.generate(i));if(!(a.cmp(o)>0))return a.iaddn(1),this.keyFromPrivate(a)}},c.prototype._truncateToN=function(t,e){var i=8*t.byteLength()-this.n.bitLength();return i>0&&(t=t.ushrn(i)),!e&&t.cmp(this.n)>=0?t.sub(this.n):t},c.prototype.sign=function(t,e,i,n){"object"==typeof i&&(n=i,i=null),n||(n={}),e=this.keyFromPrivate(e,i),t=this._truncateToN(new r(t,16));for(var o=this.n.byteLength(),a=e.getPrivate().toArray("be",o),c=t.toArray("be",o),l=new s({hash:this.hash,entropy:a,nonce:c,pers:n.pers,persEnc:n.persEnc||"utf8"}),u=this.n.sub(new r(1)),f=0;;f++){var d=n.k?n.k(f):new r(l.generate(this.n.byteLength()));if(!((d=this._truncateToN(d,!0)).cmpn(1)<=0||d.cmp(u)>=0)){var p=this.g.mul(d);if(!p.isInfinity()){var g=p.getX(),m=g.umod(this.n);if(0!==m.cmpn(0)){var b=d.invm(this.n).mul(m.mul(e.getPrivate()).iadd(t));if(0!==(b=b.umod(this.n)).cmpn(0)){var w=(p.getY().isOdd()?1:0)|(0!==g.cmp(m)?2:0);return n.canonical&&b.cmp(this.nh)>0&&(b=this.n.sub(b),w^=1),new h({r:m,s:b,recoveryParam:w})}}}}}},c.prototype.verify=function(t,e,i,s){t=this._truncateToN(new r(t,16)),i=this.keyFromPublic(i,s);var n=(e=new h(e,"hex")).r,o=e.s;if(n.cmpn(1)<0||n.cmp(this.n)>=0)return!1;if(o.cmpn(1)<0||o.cmp(this.n)>=0)return!1;var a,c=o.invm(this.n),l=c.mul(t).umod(this.n),u=c.mul(n).umod(this.n);return this.curve._maxwellTrick?!(a=this.g.jmulAdd(l,i.getPublic(),u)).isInfinity()&&a.eqXToP(n):!(a=this.g.mulAdd(l,i.getPublic(),u)).isInfinity()&&0===a.getX().umod(this.n).cmp(n)},c.prototype.recoverPubKey=function(t,e,i,s){o((3&i)===i,"The recovery param is more than two bits"),e=new h(e,s);var n=this.n,a=new r(t),c=e.r,l=e.s,u=1&i,f=i>>1;if(c.cmp(this.curve.p.umod(this.curve.n))>=0&&f)throw new Error("Unable to find sencond key candinate");c=f?this.curve.pointFromX(c.add(this.curve.n),u):this.curve.pointFromX(c,u);var d=e.r.invm(n),p=n.sub(a).mul(d).umod(n),g=l.mul(d).umod(n);return this.g.mulAdd(p,c,g)},c.prototype.getKeyRecoveryParam=function(t,e,i,r){if(null!==(e=new h(e,r)).recoveryParam)return e.recoveryParam;for(var s=0;s<4;s++){var n;try{n=this.recoverPubKey(t,e,s)}catch(t){continue}if(n.eq(i))return s}throw new Error("Unable to find valid recovery factor")}},function(t,e,i){"use strict";(function(e){const r=i(123);function s(t){if(!(this instanceof s))return new s(t);const e=t.hash,i=n(t.entropy,t.entropyEnc||"hex"),o=n(t.nonce,t.nonceEnc||"hex"),a=n(t.pers,t.persEnc||"hex");this.hash=e,this.predResist=Boolean(t.predResist),this.outLen=e.outSize,this.minEntropy=t.minEntropy||e.hmacStrength,this.reseedInterval=281474976710656,this.ctx=new r(e.bcrypto),this.ctx.init(i,o,a)}function n(t,i){return t?"string"==typeof t?e.from(t,i||"ascii"):Array.isArray(t)?e.from(t):t:e.alloc(0)}s.prototype.reseed=function(t,e,i,r){return"string"!=typeof e&&(r=i,i=e,e=null),t=n(t,e),i=n(i,r),this.ctx.reseed(t,i),this},s.prototype.generate=function(t,e,i,r){"string"!=typeof e&&(r=i,i=e,e=null),i&&(i=n(i,r||"hex"));const s=this.ctx.generate(t,i);return"hex"===e?s.toString("hex"):Array.prototype.slice.call(s)},t.exports=s}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * drbg.js - hmac-drbg implementation for bcrypto
 * Copyright (c) 2017-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 *
 * Parts of this software are based on indutny/hmac-drbg:
 *   Copyright Fedor Indutny, 2017.
 *   https://github.com/indutny/hmac-drbg
 */
const r=i(0),s=281474976710656,n=e.from([0]),o=e.from([1]);class a{constructor(t,i,s,n){r(t&&"string"==typeof t.id),this.alg=t,this.minEntropy="SHA1"===t.id?10:24,this.K=e.allocUnsafe(t.size),this.V=e.allocUnsafe(t.size),this.rounds=0,i&&this.init(i,s,n)}mac(t){return this.alg.mac(t,this.K)}hmac(){return this.alg.hmac().init(this.K)}init(t,i,s=null){if(r(e.isBuffer(t)),r(e.isBuffer(i)),r(!s||e.isBuffer(s)),t.length<this.minEntropy)throw new Error("Not enough entropy.");for(let t=0;t<this.V.length;t++)this.K[t]=0,this.V[t]=1;const n=h(t,i,s);return this.update(n),this.rounds=1,this}update(t=null){r(!t||e.isBuffer(t));const i=this.hmac();if(i.update(this.V),i.update(n),t&&i.update(t),this.K=i.final(),this.V=this.mac(this.V),t){const e=this.hmac();e.update(this.V),e.update(o),e.update(t),this.K=e.final(),this.V=this.mac(this.V)}return this}reseed(t,i=null){if(r(e.isBuffer(t)),r(!i||e.isBuffer(i)),t.length<this.minEntropy)throw new Error("Not enough entropy.");return i&&(t=h(t,i)),this.update(t),this.rounds=1,this}generate(t,i=null){if(r(t>>>0===t),r(!i||e.isBuffer(i)),this.rounds>s)throw new Error("Reseed is required.");i&&this.update(i);const n=e.allocUnsafe(t);let o=0;for(;o<t;)this.V=this.mac(this.V),this.V.copy(n,o),o+=this.alg.size;return this.update(i),this.rounds+=1,n}}function h(t,i,r=null){let s=t.length+i.length,n=0;r&&(s+=r.length);const o=e.allocUnsafe(s);return n+=t.copy(o,n),n+=i.copy(o,n),r&&r.copy(o,n),o}a.native=0,t.exports=a}).call(this,i(1).Buffer)},function(t,e,i){"use strict";var r=i(8),s=i(6).utils.assert;function n(t,e){this.ec=t,this.priv=null,this.pub=null,e.priv&&this._importPrivate(e.priv,e.privEnc),e.pub&&this._importPublic(e.pub,e.pubEnc)}t.exports=n,n.fromPublic=function(t,e,i){return e instanceof n?e:new n(t,{pub:e,pubEnc:i})},n.fromPrivate=function(t,e,i){return e instanceof n?e:new n(t,{priv:e,privEnc:i})},n.prototype.validate=function(){var t=this.getPublic();return t.isInfinity()?{result:!1,reason:"Invalid public key"}:t.validate()?t.mul(this.ec.curve.n).isInfinity()?{result:!0,reason:null}:{result:!1,reason:"Public key * N != O"}:{result:!1,reason:"Public key is not a point"}},n.prototype.getPublic=function(t,e){return"string"==typeof t&&(e=t,t=null),this.pub||(this.pub=this.ec.g.mul(this.priv)),e?this.pub.encode(e,t):this.pub},n.prototype.getPrivate=function(t){return"hex"===t?this.priv.toString(16,2):this.priv},n.prototype._importPrivate=function(t,e){this.priv=new r(t,e||16),this.priv=this.priv.umod(this.ec.curve.n)},n.prototype._importPublic=function(t,e){if(t.x||t.y)return"mont"===this.ec.curve.type?s(t.x,"Need x coordinate"):"short"!==this.ec.curve.type&&"edwards"!==this.ec.curve.type||s(t.x&&t.y,"Need both x and y coordinate"),void(this.pub=this.ec.curve.point(t.x,t.y));this.pub=this.ec.curve.decodePoint(t,e)},n.prototype.derive=function(t){return t.mul(this.priv).getX()},n.prototype.sign=function(t,e,i){return this.ec.sign(t,this,e,i)},n.prototype.verify=function(t,e){return this.ec.verify(t,e,this)},n.prototype.inspect=function(){return"<Key priv: "+(this.priv&&this.priv.toString(16,2))+" pub: "+(this.pub&&this.pub.inspect())+" >"}},function(t,e,i){"use strict";var r=i(8),s=i(6).utils,n=s.assert;function o(t,e){if(t instanceof o)return t;this._importDER(t,e)||(n(t.r&&t.s,"Signature without r or s"),this.r=new r(t.r,16),this.s=new r(t.s,16),void 0===t.recoveryParam?this.recoveryParam=null:this.recoveryParam=t.recoveryParam)}function a(t,e){var i=t[e.place++];if(!(128&i))return i;for(var r=15&i,s=0,n=0,o=e.place;n<r;n++,o++)s<<=8,s|=t[o];return e.place=o,s}function h(t){for(var e=0,i=t.length-1;!t[e]&&!(128&t[e+1])&&e<i;)e++;return 0===e?t:t.slice(e)}function c(t,e){if(e<128)t.push(e);else{var i=1+(Math.log(e)/Math.LN2>>>3);for(t.push(128|i);--i;)t.push(e>>>(i<<3)&255);t.push(e)}}t.exports=o,o.prototype._importDER=function(t,e){t=s.toArray(t,e);var i=new function(){this.place=0};if(48!==t[i.place++])return!1;if(a(t,i)+i.place!==t.length)return!1;if(2!==t[i.place++])return!1;var n=a(t,i),o=t.slice(i.place,n+i.place);if(i.place+=n,2!==t[i.place++])return!1;var h=a(t,i);if(t.length!==h+i.place)return!1;var c=t.slice(i.place,h+i.place);return 0===o[0]&&128&o[1]&&(o=o.slice(1)),0===c[0]&&128&c[1]&&(c=c.slice(1)),this.r=new r(o),this.s=new r(c),this.recoveryParam=null,!0},o.prototype.toDER=function(t){var e=this.r.toArray(),i=this.s.toArray();for(128&e[0]&&(e=[0].concat(e)),128&i[0]&&(i=[0].concat(i)),e=h(e),i=h(i);!(i[0]||128&i[1]);)i=i.slice(1);var r=[2];c(r,e.length),(r=r.concat(e)).push(2),c(r,i.length);var n=r.concat(i),o=[48];return c(o,n.length),o=o.concat(n),s.encode(o,t)}},function(t,e,i){"use strict";var r=i(60),s=i(6),n=s.utils,o=n.assert,a=(n.parseBytes,i(127)),h=i(128);function c(t){if(o("ed25519"===t,"only tested with ed25519 so far"),!(this instanceof c))return new c(t);t=s.curves[t].curve,this.curve=t,this.g=t.g,this.g.precompute(t.n.bitLength()+1),this.pointClass=t.point().constructor,this.encodingLength=Math.ceil(t.n.bitLength()/8),this.hash=r.sha512}t.exports=c,c.prototype.sign=function(t,e){var i=this.keyFromSecret(e),r=this.hashInt(i.messagePrefix(),t),s=this.g.mul(r),n=this.encodePoint(s),o=this.hashInt(n,i.pubBytes(),t).mul(i.priv()),a=r.add(o).umod(this.curve.n);return this.makeSignature({R:s,S:a,Rencoded:n})},c.prototype.verify=function(t,e,i){e=this.makeSignature(e);var r=this.keyFromPublic(i),s=this.hashInt(e.Rencoded(),r.pubBytes(),t),n=this.g.mul(e.S());return e.R().add(r.pub().mul(s)).eq(n)},c.prototype.hashInt=function(){for(var t=this.hash(),e=0;e<arguments.length;e++)t.update(arguments[e]);return n.intFromLE(t.digest()).umod(this.curve.n)},c.prototype.keyFromPublic=function(t){return a.fromPublic(this,t)},c.prototype.keyFromSecret=function(t){return a.fromSecret(this,t)},c.prototype.makeSignature=function(t){return t instanceof h?t:new h(this,t)},c.prototype.encodePoint=function(t){var e=t.getY().toArray("le",this.encodingLength);return e[this.encodingLength-1]|=t.getX().isOdd()?128:0,e},c.prototype.decodePoint=function(t){var e=(t=n.parseBytes(t)).length-1,i=t.slice(0,e).concat(-129&t[e]),r=0!=(128&t[e]),s=n.intFromLE(i);return this.curve.pointFromY(s,r)},c.prototype.encodeInt=function(t){return t.toArray("le",this.encodingLength)},c.prototype.decodeInt=function(t){return n.intFromLE(t)},c.prototype.isPoint=function(t){return t instanceof this.pointClass}},function(t,e,i){"use strict";var r=i(6).utils,s=r.assert,n=r.parseBytes,o=r.cachedProperty;function a(t,e){this.eddsa=t,this._secret=n(e.secret),t.isPoint(e.pub)?this._pub=e.pub:this._pubBytes=n(e.pub)}a.fromPublic=function(t,e){return e instanceof a?e:new a(t,{pub:e})},a.fromSecret=function(t,e){return e instanceof a?e:new a(t,{secret:e})},a.prototype.secret=function(){return this._secret},o(a,"pubBytes",function(){return this.eddsa.encodePoint(this.pub())}),o(a,"pub",function(){return this._pubBytes?this.eddsa.decodePoint(this._pubBytes):this.eddsa.g.mul(this.priv())}),o(a,"privBytes",function(){var t=this.eddsa,e=this.hash(),i=t.encodingLength-1,r=e.slice(0,t.encodingLength);return r[0]&=248,r[i]&=127,r[i]|=64,r}),o(a,"priv",function(){return this.eddsa.decodeInt(this.privBytes())}),o(a,"hash",function(){return this.eddsa.hash().update(this.secret()).digest()}),o(a,"messagePrefix",function(){return this.hash().slice(this.eddsa.encodingLength)}),a.prototype.sign=function(t){return s(this._secret,"KeyPair can only verify"),this.eddsa.sign(t,this)},a.prototype.verify=function(t,e){return this.eddsa.verify(t,e,this)},a.prototype.getSecret=function(t){return s(this._secret,"KeyPair is public only"),r.encode(this.secret(),t)},a.prototype.getPublic=function(t){return r.encode(this.pubBytes(),t)},t.exports=a},function(t,e,i){"use strict";var r=i(8),s=i(6).utils,n=s.assert,o=s.cachedProperty,a=s.parseBytes;function h(t,e){this.eddsa=t,"object"!=typeof e&&(e=a(e)),Array.isArray(e)&&(e={R:e.slice(0,t.encodingLength),S:e.slice(t.encodingLength)}),n(e.R&&e.S,"Signature without R or S"),t.isPoint(e.R)&&(this._R=e.R),e.S instanceof r&&(this._S=e.S),this._Rencoded=Array.isArray(e.R)?e.R:e.Rencoded,this._Sencoded=Array.isArray(e.S)?e.S:e.Sencoded}o(h,"S",function(){return this.eddsa.decodeInt(this.Sencoded())}),o(h,"R",function(){return this.eddsa.decodePoint(this.Rencoded())}),o(h,"Rencoded",function(){return this.eddsa.encodePoint(this.R())}),o(h,"Sencoded",function(){return this.eddsa.encodeInt(this.S())}),h.prototype.toBytes=function(){return this.Rencoded().concat(this.Sencoded())},h.prototype.toHex=function(){return s.encode(this.toBytes(),"hex").toUpperCase()},t.exports=h},function(t,e,i){"use strict";(function(e){
/*!
 * signature.js - signatures for javascript
 * Copyright (c) 2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */
const r=i(0),{trimZeroes:s,countBits:n,leftPad:o}=i(62);class a{constructor(t=0,e,i){this.r=o(e,t),this.s=o(i,t),this.param=0}setR(t,e){return this.r=o(t,e),this}setS(t,e){return this.s=o(t,e),this}isLowS(t,i){return r(t>>>0===t),r(e.isBuffer(i)),r(i.length===t),this.s.length===t&&0!==n(this.s)&&this.s.compare(i)<=0}encode(t){r(t>>>0===t),r(t<125),r(this.r.length===t),r(this.s.length===t);const i=e.allocUnsafe(2*t);return this.r.copy(i,0),this.s.copy(i,t),i}decode(t,i){return r(e.isBuffer(t)),r(i>>>0===i),r(t.length===2*i),this.r=t.slice(0,i),this.s=t.slice(i,2*i),this}toDER(t){r(t>>>0===t),r(t<125),r(this.r.length===t),r(this.s.length===t);const i=h(this.r),s=h(this.s),n=2+i.length+2+s.length,o=n>=128?1:0,a=2+o+n,c=e.allocUnsafe(a);let l=0;return c[l++]=48,o&&(c[l++]=129),c[l++]=n,c[l++]=2,c[l++]=i.length,l+=i.copy(c,l),c[l++]=2,c[l++]=s.length,l+=s.copy(c,l),r(l===a),c}fromDER(t,i){r(e.isBuffer(t)),r(i>>>0===i);let s=0,n=0,a=0,h=0,c=null,l=null;if(r(n+1<=t.length),r(48===t[n]),r((n+=1)+1<=t.length),s=t[n],n+=1,128&s&&(r(n+(s-=128)<=t.length),n+=s),r(n+1<=t.length),r(2===t[n]),r((n+=1)+1<=t.length),s=t[n],n+=1,128&s){for(r(n+(s-=128)<=t.length);s>0&&0===t[n];)s-=1,n+=1;for(r(s<=6);s>0;)a*=256,a+=t[n],s-=1,n+=1}else a=s;for(r(n+a<=t.length);a>0&&0===t[n];)a-=1,n+=1;if(c=a>i?e.alloc(i,0):t.slice(n,n+a),r((n+=a)+1<=t.length),r(2===t[n]),r((n+=1)+1<=t.length),s=t[n],n+=1,128&s){for(r(n+(s-=128)<=t.length);s>0&&0===t[n];)s-=1,n+=1;for(r(s<=6);s>0;)h*=256,h+=t[n],s-=1,n+=1}else h=s;for(r(n+h<=t.length);h>0&&0===t[n];)h-=1,n+=1;return l=h>i?e.alloc(i,0):t.slice(n,n+h),n+=h,this.r=o(c,i),this.s=o(l,i),this}static decode(t,e){return(new this).decode(t,e)}static fromDER(t,e){return(new this).fromDER(t,e)}static toRS(t,e){return a.fromDER(t,e).encode(e)}static toDER(t,e){return a.decode(t,e).toDER(e)}static normalize(t,e){return a.fromDER(t,e).toDER(e)}static isLowDER(t,i,s){let n;r(e.isBuffer(t)),r(i>>>0===i),r(e.isBuffer(s));try{n=a.fromDER(t,i)}catch(t){return!1}return n.isLowS(i,s)}static isLowS(t,i,s){let n;r(e.isBuffer(t)),r(i>>>0===i),r(e.isBuffer(s));try{n=a.decode(t,i)}catch(t){return!1}return n.isLowS(i,s)}}function h(t){const i=s(t);if(128&i[0]){const t=e.allocUnsafe(1+i.length);return t[0]=0,i.copy(t,1),t}return i}t.exports=a}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * sec1.js - SEC1 encoding for javascript
 * Copyright (c) 2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 *
 * Parts of this software are based on golang/go:
 *   Copyright (c) 2009 The Go Authors. All rights reserved.
 *   https://github.com/golang/go
 *
 * Resources:
 *   https://github.com/golang/go/blob/master/src/crypto/x509/sec1.go
 *   http://www.secg.org/sec1-v2.pdf
 *   https://github.com/openssl/openssl/blob/master/crypto/ec/ec_asn1.c
 */const r=i(131),s=i(133);e.ECPrivateKey=class extends r.Sequence{constructor(t,e,i,s){super(),this.version=new r.Integer(t),this.privateKey=new r.OctString(e),this.namedCurveOID=new r.OID(i).explicit(0).optional(),this.publicKey=new r.BitString(s).explicit(1).optional()}getBodySize(){let t=0;return t+=this.version.getSize(),t+=this.privateKey.getSize(),(t+=this.namedCurveOID.getSize())+this.publicKey.getSize()}writeBody(t){return this.version.write(t),this.privateKey.write(t),this.namedCurveOID.write(t),this.publicKey.write(t),t}readBody(t){return this.version.read(t),this.privateKey.read(t),this.namedCurveOID.read(t),this.publicKey.read(t),this}clean(){return this.version.clean()&&this.privateKey.clean()&&this.namedCurveOID.clean()&&this.publicKey.clean()}toPEM(){return s.toPEM(this.encode(),"EC PRIVATE KEY")}fromPEM(t){const e=s.fromPEM(t,"EC PRIVATE KEY");return this.decode(e)}format(){return{type:this.constructor.name,version:this.version,privateKey:this.privateKey,namedCurveOID:this.namedCurveOID,publicKey:this.publicKey}}},e.ECDSASignature=class extends r.Sequence{constructor(t,e){super(),this.r=new r.Integer(t),this.s=new r.Integer(e)}getBodySize(){let t=0;return(t+=this.r.getSize())+this.s.getSize()}writeBody(t){return this.r.write(t),this.s.write(t),t}readBody(t){return this.r.read(t),this.s.read(t),this}clean(){return this.r.clean()&&this.s.clean()}toPEM(){return s.toPEM(this.encode(),"EC SIGNATURE")}fromPEM(t){const e=s.fromPEM(t,"EC SIGNATURE");return this.decode(e)}format(){return{type:this.constructor.name,r:this.r,s:this.s}}}},function(t,e,i){"use strict";(function(t){
/*!
 * asn1.js - ASN1 encoding for javascript
 * Copyright (c) 2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 *
 * Parts of this software are based on indutny/asn1.js:
 *   Copyright Fedor Indutny, 2013.
 *   https://github.com/indutny/asn1.js
 *
 * Parts of this software are based on golang/go:
 *   Copyright (c) 2009 The Go Authors. All rights reserved.
 *   https://github.com/golang/go
 *
 * Resources:
 *   https://github.com/indutny/asn1.js/blob/master/rfc/2560/index.js
 *   https://github.com/indutny/asn1.js/blob/master/rfc/5280/index.js
 *   https://github.com/indutny/asn1.js/blob/master/lib/asn1/base/node.js
 *   https://github.com/indutny/asn1.js/blob/master/lib/asn1/encoders/der.js
 *   https://github.com/indutny/asn1.js/blob/master/lib/asn1/decoders/der.js
 *   https://github.com/openssl/openssl/blob/master/include/openssl/asn1.h
 *   https://github.com/golang/go/blob/master/src/encoding/asn1/asn1.go
 *   https://github.com/golang/go/blob/master/src/encoding/asn1/marshal.go
 */
const r=i(0),s=i(2),n=i(132),o=t.alloc(0),a=t.alloc(1,0),h=new Uint32Array(2),c=-62167219200,l=253402300799,u=-43200,f=50400,d={BOOLEAN:1,INTEGER:2,BITSTRING:3,OCTSTRING:4,NULL:5,OID:6,ENUM:10,UTF8STRING:12,SEQUENCE:16,SET:17,NUMSTRING:18,PRINTSTRING:19,T61STRING:20,IA5STRING:22,UTCTIME:23,GENTIME:24,GENSTRING:27},p={UNIVERSAL:0,APPLICATION:1,CONTEXT:2,PRIVATE:3},g=255,m=256,b=130560,w=0,y=512,v=1024;class k extends s.Struct{constructor(){super(),this.flags=0}get mode(){return this.flags&b}set mode(t){this.flags&=~b,this.flags|=t}get opt(){return 0!=(this.flags&m)}set opt(t){t?this.flags|=m:this.flags&=~m}get target(){return this.flags&g}set target(t){this.flags&=~g,this.flags|=t}get isRaw(){return!1}explicit(t){return r(t>>>0===t),this.mode=y,this.target=t,this}implicit(t){return r(t>>>0===t),this.mode=v,this.target=t,this}optional(t=!0){return r("boolean"==typeof t),this.opt=t,this}clean(){return!1}getBodySize(t){return 0}writeBody(t,e){return t}readBody(t,e){return this}encodeBody(t){const e=this.getBodySize(),i=s.write(e);return this.writeBody(i,t),i.render()}decodeBody(t,e){const i=s.read(t);return this.readBody(i,e)}set(){return this}from(t,...e){return null==t?this:this.set(t,...e)}error(t){if(this.opt)return this;const e=new Error(t);throw Error.captureStackTrace&&Error.captureStackTrace(e,this.error),e}getSize(t){if(this.opt&&this.clean())return 0;const e=this.getBodySize(t);let i=0;return i+=K(e),i+=e,this.mode===y&&(i+=K(i)),i}write(t,e){if(this.opt&&this.clean())return t;const i=this.getBodySize();switch(this.mode){case y:{const e=K(i)+i;j(t,this.target,p.CONTEXT,!1,e)}case w:{const e=this.type!==d.SEQUENCE&&this.type!==d.SET;j(t,this.type,p.UNIVERSAL,e,i);break}case v:{const e=this.type!==d.SEQUENCE&&this.type!==d.SET;j(t,this.target,p.CONTEXT,e,i);break}default:throw new r.AssertionError("Invalid mode.")}return this.writeBody(t,e)}read(t,e){switch(this.mode){case y:{const e=q(t,this.opt);if(!e)return this;if(e.cls!==p.CONTEXT)return this.error(`Unexpected class: ${e.cls}.`);if(e.primitive)return this.error("Unexpected primitive flag.");if(e.type!==this.target)return this.error(`Unexpected type: ${e.type}.`);t.seek(e.len),t=t.readChild(e.size)}case w:{const i=q(t,this.opt);if(!i)return this;if(i.cls!==p.UNIVERSAL)return this.error(`Unexpected class: ${i.cls}.`);const r=this.type!==d.SEQUENCE&&this.type!==d.SET;if(i.primitive!==r)return this.error("Unexpected primitive flag.");if(i.type!==this.type)return this.error(`Unexpected type: ${i.type}.`);if(this.isRaw){const e=i.len+i.size;this.raw=t.readBytes(e),t.seek(-e)}t.seek(i.len);const s=t.readChild(i.size);return this.readBody(s,e)}case v:{const i=q(t,this.opt);if(!i)return this;if(i.cls!==p.CONTEXT)return this.error(`Unexpected class: ${i.cls}.`);const r=this.type!==d.SEQUENCE&&this.type!==d.SET;if(i.primitive!==r)return this.error("Unexpected primitive flag.");if(i.type!==this.target)return this.error(`Unexpected type: ${i.type}.`);t.seek(i.len);const s=t.readChild(i.size);return this.readBody(s,e)}default:throw new r.AssertionError("Invalid mode.")}}fromArray(t){return this}fromNumber(t){return this}fromPEM(t){return this}static decodeBody(t){return(new this).decodeBody(t)}static fromArray(t){return(new this).fromArray(t)}static fromNumber(t){return(new this).fromNumber(t)}static fromPEM(t){return(new this).fromPEM(t)}}class E extends k{constructor(...t){super(),this.node=new O,this.from(...t)}explicit(t){throw new Error("Cannot set explicit on any.")}implicit(t){throw new Error("Cannot set implicit on any.")}get type(){return this.node.type}getSize(t){return this.node.getSize(t)}write(t,e){return r(t),r(this.mode===w),this.node.flags=this.flags,this.node.write(t,e),t}read(t,e){r(t),r(this.mode===w);const i=q(t,this.opt);if(!i)return this.node.flags=this.flags,this;const s=V(i.type);return this.node=new s,this.node.flags=this.flags,this.node.read(t,e),this}getBodySize(t){return this.node.getBodySize(t)}writeBody(t,e){return this.node.writeBody(t,e)}readBody(t,e){return this.node.readBody(t,e),this}set(t){return null==t&&(t=new O),r(t instanceof k),this.node=t,this.node.flags=this.flags,this}clean(){return this.node.type===d.NULL}format(){return{type:this.constructor.name,node:this.node}}}const S=class extends k{constructor(...t){super(),this.value="",this.from(...t)}get encoding(){return"binary"}getBodySize(){return t.byteLength(this.value,this.encoding)}writeBody(t){return t.writeString(this.value,this.encoding),t}readBody(t){const e=t.readString(t.left(),this.encoding);switch(this.type){case d.NUMSTRING:if(!function(t){r("string"==typeof t);for(let e=0;e<t.length;e++){const i=t.charCodeAt(e);if(!(i>=48&&i<=57)&&32!==i)return!1}return!0}(e))throw new Error("Invalid num string.");break;case d.PRINTSTRING:if(!function(t){r("string"==typeof t);for(let e=0;e<t.length;e++){const i=t.charCodeAt(e);if(!(i>=48&&i<=57||i>=65&&i<=90||i>=97&&i<=122)){switch(i){case 32:case 38:case 39:case 40:case 41:case 42:case 43:case 44:case 45:case 46:case 47:case 58:case 61:case 63:continue}return!1}}return!0}(e))throw new Error("Invalid print string.");break;case d.IA5STRING:if(!function(t){r("string"==typeof t);for(let e=0;e<t.length;e++){if(t.charCodeAt(e)>=128)return!1}return!0}(e))throw new Error("Invalid print string.")}return this.value=e,this}set(t){return null==t&&(t=""),r("string"==typeof t),this.value=t,this}clean(){return 0===this.value.length}format(){return`<${this.constructor.name}: ${this.value}>`}},R=class extends k{constructor(...t){super(),this.value=!1,this.from(...t)}get type(){return d.BOOLEAN}getBodySize(){return 1}writeBody(t){return t.writeU8(this.value?255:0),t}readBody(t){if(1!==t.left())throw new Error("Non-minimal boolean.");const e=t.readU8();if(0!==e&&255!==e)throw new Error("Invalid boolean.");return this.value=255===e,this}set(t){return null==t&&(t=!1),r("boolean"==typeof t),this.value=t,this}clean(){return!1===this.value}format(){return`<${this.constructor.name}: ${this.value}>`}};class I extends k{constructor(...t){super(),this.value=a,this.negative=!1,this.from(...t)}get type(){return d.INTEGER}getBodySize(){const t=this.value;if(0===t.length)return 1;let e=0,i=0;if(!this.negative&&t[0]>127)e=1;else if(this.negative)if(t[0]>128)e=1;else if(128===t[0]){e=0;for(let i=1;i<t.length;i++)e|=t[i];e=e?1:0}return(i+=e)+t.length}writeBody(t){const e=this.value;if(0===e.length)return t.writeU8(0),t;let i=0,r=0;if(!this.negative&&e[0]>127)i=1,r=0;else if(this.negative)if(r=255,e[0]>128)i=1;else if(128===e[0]){i=0;for(let t=1;t<e.length;t++)i|=e[t];i=1&(r=0!==i?255:0)}i&&t.writeU8(r);const s=t.offset;return t.writeBytes(e),r&&Q(t.data,s,t.offset),this}readBody(t,e=!1){let i=t.readBytes(t.left());if(0===i.length)throw new Error("Zero length integer.");if(e){if(0===i[0]&&0==(128&i[1]))throw new Error("Non-minimal integer.");if(255===i[0]&&128==(128&i[1]))throw new Error("Non-minimal integer.")}const r=128&i[0];if(1===i.length)return r&&(i[0]=1+(255^i[0])),this.negative=0!==r,this.value=i,this;let s=0;if(0===i[0])s=1;else if(255===i[0]){for(let t=1;t<i.length;t++)s|=i[t];s=0!==s?1:0}if(s&&r===(128&i[1]))throw new Error("Invalid integer padding.");return s&&(i=i.slice(1)),r&&Q(i,0,i.length),this.negative=0!==r,this.value=Z(i),this}set(e,i){return"number"==typeof e?this.fromNumber(e):(null==e&&(e=a),r(t.isBuffer(e)),this.value=Z(e),this.negative=!1,null!=i&&(r("boolean"==typeof i),this.negative=i),this)}clean(){return!this.negative&&this.value.equals(a)}formatValue(){return this.value.toString("hex")}toNumber(){let t=s.readUBE(this.value,0,this.value.length);return this.negative&&(t=-t),t}fromNumber(e){r(Number.isSafeInteger(e));const i=t.allocUnsafe(8);let n=!1;return e<0&&(n=!0,e=-e),s.writeU64BE(i,e,0),this.value=Z(i),this.negative=n,this}format(){const t=this.constructor.name;return this.value.length<=6?`<${t}: ${this.toNumber()}>`:`<${t}: ${this.negative?"-":""}0x${this.value.toString("hex")}>`}}class A extends k{constructor(...t){super(),this.bits=0,this.value=o,this.from(...t)}get type(){return d.BITSTRING}getBodySize(){return 1+this.value.length}writeBody(t){const e=8-(7&this.bits)&7;return t.writeU8(e),t.writeBytes(this.value),t}readBody(t){const e=t.readBytes(t.left());if(0===e.length)throw new Error("Zero length bit string.");const i=e[0];if(i>7||1===e.length&&i>0||0!=(e[e.length-1]&(1<<i)-1))throw new Error("Invalid padding bits.");return this.bits=8*(e.length-1)-i,this.value=e.slice(1),this}rightAlign(){const e=this.value,i=8-(7&this.bits);if(8===i||0===e.length)return e;const r=t.allocUnsafe(e.length);r[0]=e[0]>>>i;for(let t=1;t<e.length;t++)r[t]=e[t-1]<<8-i,r[t]|=e[t]>>>i;return r}getBit(t){if(r(t>>>0===t),t<0||t>this.bits)return 0;const e=t>>>3,i=7-(7&t);return this.value[e]>>>i&1}setBit(t,e){if(r(t>>>0===t),t<0||t>this.bits)return this;const i=t>>>3,s=7-(7&t);return e?this.value[i]|=1<<s:this.value[i]&=~(1<<s),this}set(e){return null==e&&(e=o),e>>>0===e?(this.bits=e,this.value=t.alloc(e+7>>>3)):(r(t.isBuffer(e)),this.bits=8*e.length,this.value=e),this}clean(){return 0===this.bits&&0===this.value.length}format(){let t=this.rightAlign();return t.length>32&&(t=t.slice(0,32)),`<${this.constructor.name}: ${this.bits}:${t.toString("hex")}>`}}class x extends k{constructor(...t){super(),this.value=o,this.from(...t)}get type(){return d.OCTSTRING}getBodySize(){return this.value.length}writeBody(t){return t.writeBytes(this.value),t}readBody(t){return this.value=t.readBytes(t.left()),this}set(e){return null==e&&(e=o),r(t.isBuffer(e)),this.value=e,this}clean(){return 0===this.value.length}format(){let t=this.value;return t.length>32&&(t=t.slice(0,32)),`<${this.constructor.name}: ${t.toString("hex")}>`}}class O extends k{constructor(...t){super(),this.from(...t)}get type(){return d.NULL}getBodySize(){return 0}writeBody(t){return t}readBody(t){if(0!==t.left())throw new Error("Non-minimal NULL.");return this}clean(){return!0}format(){return`<${this.constructor.name}>`}}class _ extends k{constructor(...t){super(),this.value=h,this.from(...t)}get type(){return d.OID}getBodySize(){const t=this.value;if(t.length<2||t[0]>2||t[0]<2&&t[1]>=40)throw new Error("Invalid OID.");let e=W(40*t[0]+t[1]);for(let i=2;i<t.length;i++)e+=W(t[i]);return e}writeBody(t){const e=this.value,i=t.data;if(e.length<2||e[0]>2||e[0]<2&&e[1]>=40)throw new Error("Invalid OID.");let r=t.offset;r=X(i,40*e[0]+e[1],r);for(let t=2;t<e.length;t++)r=X(i,e[t],r);return t.offset=r,t}readBody(t){const e=t.readBytes(t.left(),!0);if(0===e.length)throw new Error("Zero length OID.");const i=new Uint32Array(e.length+1);let[r,s]=Y(e,0);r<80?(i[0]=r/40>>>0,i[1]=r%40):(i[0]=2,i[1]=r-80);let n=2;for(;s<e.length;n++)[r,s]=Y(e,s),i[n]=r;return this.value=i.subarray(0,n),this}equals(t){return r(t instanceof _),$(this.value,t.value)}set(t){return null==t&&(t=h),"string"==typeof t?this.fromString(t):Array.isArray(t)?this.fromArray(t):(r(t instanceof Uint32Array),this.value=t,this)}clean(){return $(this.value,h)}toArray(){const t=[];for(let e=0;e<this.value.length;e++)t.push(this.value[e]);return t}fromArray(t){r(Array.isArray(t));const e=new Uint32Array(t.length);for(let i=0;i<t.length;i++){const s=t[i];r(s>>>0===s),e[i]=s}return this.value=e,this}toString(){let t="";for(let e=0;e<this.value.length;e++)e>0&&(t+="."),t+=this.value[e].toString(10);return t}fromString(t){r("string"==typeof t),n.attrs.hasOwnProperty(t)?t=n.attrs[t]:n.keyAlgs.hasOwnProperty(t)?t=n.keyAlgs[t]:n.hashes.hasOwnProperty(t)?t=n.hashes[t]:n.curves.hasOwnProperty(t)&&(t=n.curves[t]);const e=t.split("."),i=new Uint32Array(e.length);for(let t=0;t<e.length;t++){const r=e[t];i[t]=J(r)}return this.value=i,this}getAttributeName(){return n.attrsByVal[this.toString()]||null}getSignatureAlgorithmName(){return n.sigAlgsByVal[this.toString()]||null}getSignatureHash(){return n.sigToHash[this.toString()]||null}getSignatureHashName(){const t=this.getSignatureHash();return t&&n.hashesByVal[t]||null}getKeyAlgorithmName(){return n.keyAlgsByVal[this.toString()]||null}getHashName(){return n.hashesByVal[this.toString()]||null}getCurveName(){return n.curvesByVal[this.toString()]||null}format(){const t=this.toString(),e=`${t} (${n.attrsByVal[t]||n.sigAlgsByVal[t]||n.keyAlgsByVal[t]||n.hashesByVal[t]||n.curvesByVal[t]||"UNKNOWN"})`;return`<${this.constructor.name}: ${e}>`}}class B extends I{constructor(...t){super(...t)}get type(){return d.ENUM}}class P extends S{constructor(...t){super(...t)}get type(){return d.UTF8STRING}get encoding(){return"utf8"}}class N extends k{constructor(...t){super(),this.value=o,this.from(...t)}get type(){return d.SEQUENCE}getBodySize(){return this.value.length}writeBody(t){return t.writeBytes(this.value),t}readBody(t){return this.value=t.readBytes(t.left()),this}set(e){return null==e&&(e=o),Array.isArray(e)?this.fromArray(e):(r(t.isBuffer(e)),this.value=e,this)}clean(){return 0===this.value.length}*children(){const t=s.read(this.value);for(;t.left();)yield E.read(t).node}toArray(){const t=[];for(const e of this.children())t.push(e);return t}fromArray(t){r(Array.isArray(t));let e=0;for(const i of t)r(i instanceof k),e+=i.getSize();const i=s.write(e);for(const e of t)e.write(i);return this.value=i.render(),this}format(){return this.toArray()}}class T extends N{constructor(...t){super(...t)}get type(){return d.SET}}class C extends S{constructor(...t){super(...t)}get type(){return d.NUMSTRING}}class M extends S{constructor(...t){super(...t)}get type(){return d.PRINTSTRING}}class U extends S{constructor(...t){super(...t)}get type(){return d.T61STRING}}class L extends S{constructor(...t){super(...t)}get type(){return d.IA5STRING}}class z extends k{constructor(...t){super(),this.value=0,this.offset=0,this.from(...t)}set(t,e){return null==t&&(t=0),null==e&&(e=0),"string"==typeof t?this.fromString(t):(r(tt(t)),r(it(e)),this.value=t,this.offset=e,this)}clean(){return 0===this.value&&0===this.offset}unix(){return this.value-this.offset}toString(){return new Date(1e3*this.value).toISOString().slice(0,-5)+rt(this.offset)}fromString(t){r("string"==typeof t);const e=Date.parse(t);if(e!=e)throw new Error("Invalid date string.");const i=Math.floor(e/1e3);if(!tt(i))throw new Error("Invalid time.");return this.value=i,this.offset=0,this}format(){const t=this.constructor.name,e=this.value;let i=this.offset.toString(10);return this.offset>=0&&(i="+"+i),`<${t}: ${e}${i} (${this.toString()})>`}}class D extends z{constructor(...t){super(...t)}get type(){return d.UTCTIME}getBodySize(){return 0===this.offset?13:17}writeBody(t){r(tt(this.value));const e=new Date(1e3*this.value);let i="";return i+=G(e.getUTCFullYear()%100),i+=G(e.getUTCMonth()+1),i+=G(e.getUTCDate()),i+=G(e.getUTCHours()),i+=G(e.getUTCMinutes()),i+=G(e.getUTCSeconds()),i+=rt(this.offset),t.writeString(i,"binary"),t}readBody(t){const e=t.left();if(13!==e&&17!==e)throw new Error("Invalid UTCTIME.");const i=t.readString(e,"binary"),r=J(i.substring(0,2)),s=J(i.substring(2,4)),n=J(i.substring(4,6)),o=J(i.substring(6,8)),a=J(i.substring(8,10)),h=J(i.substring(10,12));return this.value=et(r,s,n,o,a,h,!0),this.offset=st(i.substring(12)),this}}class H extends z{constructor(...t){super(...t)}get type(){return d.GENTIME}getBodySize(){return 0===this.offset?15:19}writeBody(t){r(tt(this.value));const e=new Date(1e3*this.value);let i="";return i+=e.getUTCFullYear().toString(10),i+=G(e.getUTCMonth()+1),i+=G(e.getUTCDate()),i+=G(e.getUTCHours()),i+=G(e.getUTCMinutes()),i+=G(e.getUTCSeconds()),i+=rt(this.offset),t.writeString(i,"binary"),t}readBody(t){const e=t.left();if(15!==e&&19!==e)throw new Error("Invalid GENTIME.");const i=t.readString(e,"binary"),r=J(i.substring(0,4)),s=J(i.substring(4,6)),n=J(i.substring(6,8)),o=J(i.substring(8,10)),a=J(i.substring(10,12)),h=J(i.substring(12,14));return this.value=et(r,s,n,o,a,h,!1),this.offset=st(i.substring(14)),this}}class F extends S{constructor(...t){super(...t)}get type(){return d.GENSTRING}}function V(t){switch(r(t>>>0===t),t){case d.BOOLEAN:return R;case d.INTEGER:return I;case d.BITSTRING:return A;case d.OCTSTRING:return x;case d.NULL:return O;case d.OID:return _;case d.ENUM:return B;case d.UTF8STRING:return P;case d.SEQUENCE:return N;case d.SET:return T;case d.NUMSTRING:return C;case d.PRINTSTRING:return M;case d.T61STRING:return U;case d.IA5STRING:return L;case d.UTCTIME:return D;case d.GENTIME:return H;case d.GENSTRING:return F;default:throw new Error(`Unknown type: ${t}.`)}}function K(t){return r(t>>>0===t),t<=127?2:t<=255?3:t<=65535?4:(r(t<=16777215),5)}function j(t,e,i,s,n){return r(t),r(e>>>0===e),r(i>>>0===i),r("boolean"==typeof s),r(n>>>0===n),s||(e|=32),e|=i<<6,n<=127?(t.writeU8(e),t.writeU8(n),t):n<=255?(t.writeU8(e),t.writeU8(129),t.writeU8(n),t):n<=65535?(t.writeU8(e),t.writeU8(130),t.writeU16BE(n),t):(r(n<=16777215),t.writeU8(e),t.writeU8(131),t.writeU24BE(n),t)}function q(t,e){const i=t.offset;let r=null,s=null;try{r=function(t){const e=t.offset,i=t.readU8(),r=i>>>6,s=0==(32&i);let n=31&i;if(31===n&&([n,t.offset]=Y(t.data,t.offset),n<31))throw new Error("Non-minimal type.");switch(r){case p.UNIVERSAL:case p.CONTEXT:break;default:throw new Error("Unknown class.")}return{type:n,cls:r,primitive:s,size:function(t){const e=t.readU8(),i=127&e;if(0==(128&e))return i;if(0===i)throw new Error("Indefinite length.");let r=0;for(let e=0;e<i;e++){const e=t.readU8();if(r>=1<<23)throw new Error("Length too large.");if(r*=256,0===(r+=e))throw new Error("Unexpected leading zeroes.")}if(r<128)throw new Error("Non-minimal length.");return r}(t),len:t.offset-e}}(t)}catch(t){s=t}if(t.offset=i,!e&&!r)throw s;return r}function W(t){if(r(t>>>0===t),0===t)return 1;let e=0;for(;t>0;)e+=1,t>>>=7;return e}function X(e,i,n){r(t.isBuffer(e)),r(i>>>0===i),r(n>>>0===n);for(let t=W(i)-1;t>=0;t--){let r=i>>>7*t;if(r&=127,0!==t&&(r|=128),n>=e.length)throw new s.EncodingError(n,"Out of bounds write");e[n]=r,n+=1}return n}function Y(e,i){r(t.isBuffer(e)),r(i>>>0===i);let s=0,n=0;for(;i<e.length;s++){if(5===s)throw new Error("Base128 integer too large.");const t=e[i];if(n*=128,n+=127&t,i+=1,0==(128&t)){if(n>4294967295)throw new Error("Base128 integer too large.");return[n,i]}}throw new Error("Base128 integer too short.")}function G(t){return t<10?"0"+t.toString(10):t.toString(10)}function J(t){r("string"==typeof t);let e=0;if(0===t.length||t.length>10)throw new Error("Invalid integer.");for(let i=0;i<t.length;i++){const r=t.charCodeAt(i)-48;if(r<0||r>9)throw new Error("Invalid integer.");if(e*=10,(e+=r)>4294967295)throw new Error("Invalid integer.")}return e}function $(t,e){if(r(t instanceof Uint32Array),r(e instanceof Uint32Array),t.length!==e.length)return!1;for(let i=0;i<t.length;i++)if(t[i]!==e[i])return!1;return!0}function Z(e){if(r(t.isBuffer(e)),0===e.length)return t.from([0]);if(0!==e[0])return e;for(let t=1;t<e.length;t++)if(0!==e[t])return e.slice(t);return e.slice(-1)}function Q(e,i,s){r(t.isBuffer(e)),r(i>>>0===i),r(s>>>0===s),r(i<=s);let n=1;for(let t=s-1;t>=i;t--)n+=255^e[t],e[t]=255&n,n>>>=8;return e}function tt(t){return!!Number.isSafeInteger(t)&&!(t<c||t>l)}function et(t,e,i,s,n,o,a){if(r(t>>>0===t),r(e>>>0===e),r(i>>>0===i),r(s>>>0===s),r(n>>>0===n),r(o>>>0===o),r("boolean"==typeof a),a&&(t=t<70?2e3+t:1900+t),t>275760)throw new Error("Invalid year.");if(e<1||e>12||i<1||i>32)throw new Error("Invalid month or day.");if(s>23||n>59||o>59)throw new Error("Invalid hours, minutes, or seconds.");const h=Date.UTC(t,e-1,i,s,n,o,0);r(h==h);const c=h/1e3;return r(tt(c)),c}function it(t){return!!Number.isSafeInteger(t)&&!(t<u||t>f)}function rt(t){if(r(it(t)),0===t)return"Z";let e="";t<0?(e+="-",t=-t):e+="+";const i=t/60>>>0,s=i%60;return(e+=G(i/60>>>0))+G(s)}function st(t){if(r("string"==typeof t),0===t.length)throw new Error("Invalid time offset.");const e=t[0];switch(e){case"Z":if(1!==t.length)throw new Error("Non-minimal time offset.");return 0;case"+":case"-":{if(5!==t.length)throw new Error("Non-minimal time offset.");let i=60*(60*J(t.substring(1,3))+J(t.substring(3,5)));if("-"===e&&(i=-i),!it(i))throw new Error("Not a time zone.");return i}}throw new Error("Invalid time offset.")}e.EMPTY=o,e.ZERO=a,e.EMPTY_OID=h,e.types=d,e.typesByVal={1:"BOOLEAN",2:"INTEGER",3:"BITSTRING",4:"OCTSTRING",5:"NULL",6:"OID",10:"ENUM",12:"UTF8STRING",16:"SEQUENCE",17:"SET",18:"NUMSTRING",19:"PRINTSTRING",20:"T61STRING",22:"IA5STRING",23:"UTCTIME",24:"GENTIME",27:"GENSTRING"},e.classes=p,e.classesByVal={0:"UNIVERSAL",1:"APPLICATION",2:"CONTEXT",3:"PRIVATE"},e.objects=n,e.TARGET=g,e.OPTIONAL=m,e.MODE=b,e.NORMAL=w,e.EXPLICIT=y,e.IMPLICIT=v,e.Node=k,e.Sequence=class extends k{constructor(...t){super(),this.raw=null,this.from(...t)}get type(){return d.SEQUENCE}},e.Set=class extends k{constructor(...t){super(),this.raw=null,this.from(...t)}get type(){return d.SET}},e.Any=E,e.Choice=class extends k{constructor(t,...e){super(),r(t instanceof k),this.node=t,this.from(...e)}get type(){return this.node.type}choices(){throw new Error("Unimplemented.")}getSize(t){return this.node.getSize(t)}write(t,e){return r(t),this.node.flags=this.flags,this.node.write(t,e),t}read(t,e){r(t);const i=this.choices();r(Array.isArray(i)),r(i.length>=1);const s=q(t,this.opt);if(!s)return this;if(-1===i.indexOf(s.type))throw new Error(`Could not satisfy choice for: ${s.type}.`);const n=new(V(s.type));return n.flags=this.flags,this.node=n.read(t,e),this}getBodySize(t){return this.node.getBodySize(t)}writeBody(t,e){return this.node.writeBody(t,e),t}readBody(t,e){return this.node.readBody(t,e),this}set(...t){return this.node.set(...t)}clean(){return this.node.clean()}format(){return{type:this.constructor.name,node:this.node}}},e.Str=S,e.String=S,e.Bool=R,e.Boolean=R,e.Integer=I,e.BitString=A,e.OctString=x,e.Null=O,e.OID=_,e.Enum=B,e.Utf8String=P,e.RawSequence=N,e.RawSet=T,e.NumString=C,e.PrintString=M,e.T61String=U,e.IA5String=L,e.Time=z,e.UTCTime=D,e.GenTime=H,e.GenString=F,e.typeToClass=V}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * objects.js - OIDs encoding for javascript
 * Copyright (c) 2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 *
 * Resources:
 *   https://www.ietf.org/rfc/rfc2459.txt
 *   https://tools.ietf.org/html/rfc3279
 *   http://oid-info.com/get/1.2.840.10040.4
 *   http://oid-info.com/get/1.2.840.113549.1.1
 *   http://oid-info.com/get/1.2.840.10045.4.3
 *   https://tools.ietf.org/html/draft-jivsov-openpgp-sha3-01
 *   https://github.com/golang/go/blob/master/src/crypto/x509/x509.go
 *   https://github.com/golang/go/blob/master/src/crypto/x509/pkix/pkix.go
 *   https://tools.ietf.org/html/draft-josefsson-pkix-eddsa-01
 *   https://tools.ietf.org/html/rfc5480
 *   https://tools.ietf.org/html/draft-josefsson-pkix-newcurves-00
 *   https://tools.ietf.org/id/draft-ietf-curdle-pkix-06.html
 *   https://tools.ietf.org/html/rfc7693
 */const r={COUNTRY:"2.5.4.6",ORGANIZATION:"2.5.4.10",ORGANIZATIONALUNIT:"2.5.4.11",COMMONNAME:"2.5.4.3",SERIALNUMBER:"2.5.4.5",LOCALITY:"2.5.4.7",PROVINCE:"2.5.4.8",STREETADDRESS:"2.5.4.9",POSTALCODE:"2.5.4.17"},s={[r.COUNTRY]:"COUNTRY",[r.ORGANIZATION]:"ORGANIZATION",[r.ORGANIZATIONALUNIT]:"ORGANIZATIONALUNIT",[r.COMMONNAME]:"COMMONNAME",[r.SERIALNUMBER]:"SERIALNUMBER",[r.LOCALITY]:"LOCALITY",[r.PROVINCE]:"PROVINCE",[r.STREETADDRESS]:"STREETADDRESS",[r.POSTALCODE]:"POSTALCODE"},n={DSA:"1.2.840.10040.4.1",DSA2:"1.2.840.10040.4.2",RSA:"1.2.840.113549.1.1.1",ECDSA:"1.2.840.10045.2.1",EDDSA:"1.3.6.1.4.1.11591.4.12.1"},o={[n.DSA]:"DSA",[n.DSA2]:"DSA",[n.RSA]:"RSA",[n.ECDSA]:"ECDSA",[n.EDDSA]:"EDDSA"},a={MD5:"1.2.840.113549.2.5",SHA1:"1.3.14.3.2.26",RIPEMD160:"1.0.10118.3.0.49",RIPEMD1602:"1.3.36.3.2.1",SHA224:"2.16.840.1.101.3.4.2.4",SHA256:"2.16.840.1.101.3.4.2.1",SHA384:"2.16.840.1.101.3.4.2.2",SHA512:"2.16.840.1.101.3.4.2.3",SHA3_224:"2.16.840.1.101.3.4.2.7",SHA3_256:"2.16.840.1.101.3.4.2.8",SHA3_384:"2.16.840.1.101.3.4.2.9",SHA3_512:"2.16.840.1.101.3.4.2.10",BLAKE2B160:"1.3.6.1.4.1.1722.12.2.1.5",BLAKE2B256:"1.3.6.1.4.1.1722.12.2.1.8",BLAKE2B384:"1.3.6.1.4.1.1722.12.2.1.12",BLAKE2B512:"1.3.6.1.4.1.1722.12.2.1.16",BLAKE2S128:"1.3.6.1.4.1.1722.12.2.2.4",BLAKE2S160:"1.3.6.1.4.1.1722.12.2.2.5",BLAKE2S224:"1.3.6.1.4.1.1722.12.2.2.7",BLAKE2S256:"1.3.6.1.4.1.1722.12.2.2.8"},h={[a.MD5]:"MD5",[a.SHA1]:"SHA1",[a.RIPEMD160]:"RIPEMD160",[a.RIPEMD1602]:"RIPEMD160",[a.SHA224]:"SHA224",[a.SHA256]:"SHA256",[a.SHA384]:"SHA384",[a.SHA512]:"SHA512",[a.SHA3_224]:"SHA3_224",[a.SHA3_256]:"SHA3_256",[a.SHA3_384]:"SHA3_384",[a.SHA3_512]:"SHA3_512",[a.BLAKE2B160]:"BLAKE2B160",[a.BLAKE2B256]:"BLAKE2B256",[a.BLAKE2B384]:"BLAKE2B384",[a.BLAKE2B512]:"BLAKE2B512",[a.BLAKE2S128]:"BLAKE2S128",[a.BLAKE2S160]:"BLAKE2S160",[a.BLAKE2S224]:"BLAKE2S224",[a.BLAKE2S256]:"BLAKE2S256"},c={P192:"1.2.840.10045.3.1.1",P224:"1.3.132.0.33",P256:"1.2.840.10045.3.1.7",P384:"1.3.132.0.34",P521:"1.3.132.0.35",SECP256K1:"1.3.132.0.10",CURVE25519:"1.3.101.110",CURVE255192:"1.3.6.1.4.1.11591.7",CURVE448:"1.3.101.111",CURVE4482:"1.3.6.1.4.1.11591.8",ED25519:"1.3.101.112",ED448:"1.3.101.113"},l={[c.P192]:"P192",[c.P224]:"P224",[c.P256]:"P256",[c.P384]:"P384",[c.P521]:"P521",[c.SECP256K1]:"SECP256K1",[c.CURVE25519]:"CURVE25519",[c.CURVE255192]:"CURVE255192",[c.CURVE448]:"CURVE448",[c.CURVE4482]:"CURVE448",[c.ED25519]:"ED25519",[c.ED448]:"ED448"},u={DSASHA1:"1.2.840.10040.4.3",RSAMD2:"1.2.840.113549.1.1.2",RSAMD4:"1.2.840.113549.1.1.3",RSAMD5:"1.2.840.113549.1.1.4",RSASHA1:"1.2.840.113549.1.1.5",RSAPSS:"1.2.840.113549.1.1.10",RSASHA256:"1.2.840.113549.1.1.11",RSASHA384:"1.2.840.113549.1.1.12",RSASHA512:"1.2.840.113549.1.1.13",RSASHA224:"1.2.840.113549.1.1.14",MGF1:"1.2.840.113549.1.1.8",RSASHA1MS:"1.3.14.3.2.29",RSASHA3_256:"2.16.840.1.101.3.4.2.8",RSASHA3_384:"2.16.840.1.101.3.4.2.9",RSASHA3_512:"2.16.840.1.101.3.4.2.10",ECDSASHA1:"1.2.840.10045.4.1",ECDSASHA224:"1.2.840.10045.4.3.1",ECDSASHA256:"1.2.840.10045.4.3.2",ECDSASHA384:"1.2.840.10045.4.3.3",ECDSASHA512:"1.2.840.10045.4.3.4",EDDSA:"1.3.6.1.4.1.11591.4.12.2"},f={[u.DSASHA1]:"DSASHA1",[u.RSAMD2]:"RSAMD2",[u.RSAMD4]:"RSAMD4",[u.RSAMD5]:"RSAMD5",[u.RSASHA1]:"RSASHA1",[u.RSAPSS]:"RSAPSS",[u.RSASHA256]:"RSASHA256",[u.RSASHA384]:"RSASHA384",[u.RSASHA512]:"RSASHA512",[u.MGF1]:"MGF1",[u.RSASHA1MS]:"RSASHA1",[u.RSASHA3_256]:"RSASHA3_256",[u.RSASHA3_384]:"RSASHA3_384",[u.RSASHA3_512]:"RSASHA3_512",[u.ECDSASHA1]:"ECDSASHA1",[u.ECDSASHA224]:"ECDSASHA224",[u.ECDSASHA384]:"ECDSASHA384",[u.ECDSASHA512]:"ECDSASHA512",[u.EDDSA]:"EDDSA"},d={[u.DSASHA1]:a.SHA1,[u.RSAMD2]:a.MD2,[u.RSAMD4]:a.MD4,[u.RSAMD5]:a.MD5,[u.RSASHA1]:a.SHA1,[u.RSAPSS]:null,[u.RSASHA256]:a.SHA256,[u.RSASHA384]:a.SHA384,[u.RSASHA512]:a.SHA512,[u.MGF1]:null,[u.RSASHA1MS]:a.SHA1,[u.RSASHA3_256]:a.SHA3_256,[u.RSASHA3_384]:a.SHA3_384,[u.RSASHA3_512]:a.SHA3_512,[u.ECDSASHA1]:a.SHA1,[u.ECDSASHA224]:a.SHA224,[u.ECDSASHA384]:a.SHA384,[u.ECDSASHA512]:a.SHA512,[u.EDDSA]:null};e.attrs=r,e.attrsByVal=s,e.keyAlgs=n,e.keyAlgsByVal=o,e.hashes=a,e.hashesByVal=h,e.curves=c,e.curvesByVal=l,e.sigAlgs=u,e.sigAlgsByVal=f,e.sigToHash=d},function(t,e,i){"use strict";(function(t){
/*!
 * pem.js - PEM for javascript
 * Copyright (c) 2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 *
 * Resources:
 *   https://tls.mbed.org/kb/cryptography/asn1-key-structures-in-der-and-pem
 *   https://tools.ietf.org/html/rfc1421
 *   https://tools.ietf.org/html/rfc4880
 *   https://github.com/crypto-browserify/EVP_BytesToKey/blob/master/index.js
 *   https://github.com/openssl/openssl/blob/master/include/openssl/pem.h
 *   https://github.com/openssl/openssl/blob/master/crypto/pem/pem_lib.c
 *   https://github.com/openssl/openssl/blob/master/crypto/evp/evp_key.c
 *   https://github.com/openssl/openssl/blob/master/crypto/pem/pem_pkey.c
 */
const r=i(0),s=i(134),{lines:n}=i(62),o=t.alloc(0);class a{constructor(e,i){null==e&&(e="PRIVACY-ENHANCED MESSAGE"),null==i&&(i=o),r("string"==typeof e),r(t.isBuffer(i)),this.type=e,this.headers=new Map,this.data=i}toString(t){return l(this.type,this.headers,this.data,t)}fromString(t,e){const i=u(t,e).next();if(i.done)throw new Error("No PEM data found.");const r=i.value;return this.type=r.type,this.headers=r.headers,this.data=r.data,this}getProcType(){const t=this.headers.get("Proc-Type");return t?h.fromString(t):null}setProcType(t,e){r(null!=t&&e);const i=new h(t,e);return this.headers.set("Proc-Type",i.toString()),this}unsetProcType(){return this.headers.delete("Proc-Type"),this}getDEKInfo(){const t=this.headers.get("DEK-Info");return t?c.fromString(t):null}setDEKInfo(t,e){r(t);const i=new c(t,e);return this.headers.set("DEK-Info",i.toString()),this}unsetDEKInfo(){return this.headers.delete("DEK-Info"),this}isEncrypted(){let t;try{t=this.getProcType()}catch(t){return!1}return!!t&&4===t.version&&"ENCRYPTED"===t.state}static fromString(t,e){return(new this).fromString(t,e)}}class h{constructor(t,e){null==t&&(t=0),null==e&&(e="NONE"),r(t>>>0===t),r("string"==typeof e),this.version=t,this.state=e.toUpperCase()}toString(){return`${this.version},${this.state}`}fromString(t){r("string"==typeof t);const e=t.split(",",3);if(2!==e.length)throw new Error("Invalid Proc-Type.");return this.version=function(t){if(r("string"==typeof t),t.length<1||t.length>10)throw new Error("Invalid integer.");let e=0;for(let i=0;i<t.length;i++){const r=t.charCodeAt(i);if(r<48||r>57)throw new Error("Invalid integer.");if(e*=10,e+=r-48,i>0&&0===e)throw new Error("Invalid integer.");if(e>4294967295)throw new Error("Invalid integer.")}return e}(e[0]),this.state=e[1].toUpperCase(),this}static fromString(t){return(new this).fromString(t)}}class c{constructor(e,i){null==e&&(e="AES-128-ECB"),null==i&&(i=o),r("string"==typeof e),r(t.isBuffer(i)),this.name=e.toUpperCase(),this.iv=i}toString(){const t=this.name;return 0===this.iv.length?t:`${t},${this.iv.toString("hex").toUpperCase()}`}fromString(e){r("string"==typeof e);const i=e.split(",",3);if(i.length<1||i.length>2)throw new Error("Invalid DEK-Info.");const s=i[0];if(0===s.length)throw new Error("Invalid DEK-Info name.");if(this.name=s.toUpperCase(),this.iv=o,i.length>1){const e=i[1],r=t.from(e,"hex");if(r.length!==e.length>>>1)throw new Error("Invalid DEK-Info IV.");this.iv=r}return this}static fromString(t){return(new this).fromString(t)}}function l(e,i,n,o=!1){r("string"==typeof e),r(i instanceof Map),r(t.isBuffer(n)),r("boolean"==typeof o);let a="";if(a+=`-----BEGIN ${e}-----\n`,i.size>0){for(const[t,e]of i)a+=`${t}: ${e}\n`;a+="\n"}const h=s.encode(n);for(let t=0;t<h.length;t+=64)a+=h.substring(t,t+64)+"\n";if(o){const t=f(n);a+=`=${s.encode(t)}\n`}return a+`-----END ${e}-----\n`}function*u(t,e=!1){r("string"==typeof t),r("boolean"==typeof e);let i="",o=null,h=null;for(const r of n(t)){const t=r.indexOf(":");if(-1===t){if(r.length>=15&&"-----"===r.substring(0,5)){if("-----"!==r.slice(-5))throw new Error("PEM parse error (invalid preamble).");const t=r.slice(5,-5);if("BEGIN "===t.substring(0,6)){if(o)throw new Error("PEM parse error (un-ended block).");const e=t.substring(6).trim();(o=new a).type=e;continue}if("END "===t.substring(0,4)){if(!o)throw new Error("PEM parse error (unexpected end).");const e=t.substring(4).trim();if(o.type!==e)throw new Error("PEM parse error (type mismatch).");if(o.data=s.decode(i),h&&!f(o.data).equals(h))throw new Error("PEM parse error (invalid armor checksum).");yield o,i="",o=null,h=null;continue}throw new Error("PEM parse error (unknown preamble).")}if(!o)throw new Error("PEM parse error (unexpected data).");if(5!==r.length||61!==r.charCodeAt(0)){if(r.length>96)throw new Error("PEM parse error (line too long).");i+=r.replace(/[\t\v ]/g,"")}else{if(!e)continue;if(h)throw new Error("PEM parse error (unexpected armor checksum).");h=s.decode(r.substring(1))}}else{if(!o)throw new Error("PEM parse error (misplaced header).");const e=r.substring(0,t).trim(),i=r.substring(t+1).trim();o.headers.set(e,i)}}if(o||h)throw new Error("PEM parse error (un-ended block).");if(0!==i.length)throw new Error("PEM parse error (trailing data).")}function f(e){r(t.isBuffer(e));let i=11994318;for(let t=0;t<e.length;t++){i^=e[t]<<16;for(let t=0;t<8;t++)16777216&(i<<=1)&&(i^=25578747)}i&=16777215;const s=t.allocUnsafe(3);return s[2]=i,i>>>=8,s[1]=i,i>>>=8,s[0]=i,s}e.PEMBlock=a,e.ProcType=h,e.DEKInfo=c,e.encode=l,e.decode=u,e.toPEM=function(e,i,s){r(t.isBuffer(e)),r("string"==typeof i);const n=new a;return n.type=i,n.data=e,n.toString(s)},e.fromPEM=function(t,e,i){r("string"==typeof t),r("string"==typeof e);const s=a.fromString(t,i);if(s.type!==e)throw new Error("PEM type mismatch.");return s.data}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){
/*!
 * base64.js - base64 for javascript
 * Copyright (c) 2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */
const r=i(0);function s(t){return(4*t/3+3&-4)>>>0}e.encode=function(e){return r(t.isBuffer(e)),e.toString("base64")},e.decode=function(e){r("string"==typeof e);const i=t.from(e,"base64");if(e.length!==s(i.length))throw new Error("Invalid base64 string.");return i},e.encodeURL=function(e){return r(t.isBuffer(e)),e.toString("base64").replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")},e.decodeURL=function(e){r("string"==typeof e);const i=function(t){switch(3&t.length){case 2:t+="==";break;case 3:t+="="}return t}(e).replace(/\-/g,"+").replace(/_/g,"/"),n=t.from(i,"base64");if(i.length!==s(n.length))throw new Error("Invalid base64-url string.");return n}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * program.js - program object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(26),n=s.types;t.exports=class{constructor(t,i){r((255&t)===t),r(t>=0&&t<=16),r(e.isBuffer(i)),r(i.length>=2&&i.length<=40),this.version=t,this.data=i}getType(){return 0===this.version?20===this.data.length?n.WITNESSPUBKEYHASH:32===this.data.length?n.WITNESSSCRIPTHASH:n.WITNESSMALFORMED:n.NONSTANDARD}isUnknown(){const t=this.getType();return t===n.WITNESSMALFORMED||t===n.NONSTANDARD}isMalformed(){return this.getType()===n.WITNESSMALFORMED}inspect(){const t=this.data.toString("hex"),e=s.typesByVal[this.getType()].toLowerCase();return`<Program: version=${this.version} data=${t} type=${e}>`}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * opcode.js - opcode object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(2),n=i(32),o=i(26),a=o.opcodes,h=[];let c=null;class l{constructor(t,e){this.value=t||0,this.data=e||null}isMinimal(){if(!this.data)return!0;if(1===this.data.length){if(129===this.data[0])return!1;if(this.data[0]>=1&&this.data[0]<=16)return!1}return this.data.length<=75?this.value===this.data.length:this.data.length<=255?this.value===a.OP_PUSHDATA1:this.data.length<=65535?this.value===a.OP_PUSHDATA2:(r(this.value===a.OP_PUSHDATA4),!0)}isDisabled(){switch(this.value){case a.OP_CAT:case a.OP_SUBSTR:case a.OP_LEFT:case a.OP_RIGHT:case a.OP_INVERT:case a.OP_AND:case a.OP_OR:case a.OP_XOR:case a.OP_2MUL:case a.OP_2DIV:case a.OP_MUL:case a.OP_DIV:case a.OP_MOD:case a.OP_LSHIFT:case a.OP_RSHIFT:return!0}return!1}isBranch(){return this.value>=a.OP_IF&&this.value<=a.OP_ENDIF}equals(t){return r(l.isOpcode(t)),this.value===t.value&&(this.data?(r(t.data),this.data.equals(t.data)):(r(!t.data),!0))}toOp(){return this.value}toData(){return this.data}toLength(){return this.data?this.data.length:-1}toPush(){return this.value===a.OP_0?o.small[1]:this.value===a.OP_1NEGATE?o.small[0]:this.value>=a.OP_1&&this.value<=a.OP_16?o.small[this.value-80+1]:this.toData()}toString(t){const e=this.toPush();return e?e.toString(t||"utf8"):null}toSmall(){return this.value===a.OP_0?0:this.value>=a.OP_1&&this.value<=a.OP_16?this.value-80:-1}toNum(t,e){return this.value===a.OP_0?n.fromInt(0):this.value===a.OP_1NEGATE?n.fromInt(-1):this.value>=a.OP_1&&this.value<=a.OP_16?n.fromInt(this.value-80):this.data?n.decode(this.data,t,e):null}toInt(t,e){const i=this.toNum(t,e);return i?i.getInt():-1}toBool(){const t=this.toSmall();return-1!==t&&1===t}toSymbol(){if(-1===this.value)return"OP_INVALIDOPCODE";return o.opcodesByVal[this.value]||`0x${u(this.value)}`}getSize(){if(!this.data)return 1;switch(this.value){case a.OP_PUSHDATA1:return 2+this.data.length;case a.OP_PUSHDATA2:return 3+this.data.length;case a.OP_PUSHDATA4:return 5+this.data.length;default:return 1+this.data.length}}toWriter(t){if(-1===this.value)throw new Error("Cannot reserialize a parse error.");if(!this.data)return t.writeU8(this.value),t;switch(this.value){case a.OP_PUSHDATA1:t.writeU8(this.value),t.writeU8(this.data.length),t.writeBytes(this.data);break;case a.OP_PUSHDATA2:t.writeU8(this.value),t.writeU16(this.data.length),t.writeBytes(this.data);break;case a.OP_PUSHDATA4:t.writeU8(this.value),t.writeU32(this.data.length),t.writeBytes(this.data);break;default:r(this.value===this.data.length),t.writeU8(this.value),t.writeBytes(this.data)}return t}toRaw(){const t=this.getSize();return this.toWriter(s.write(t)).render()}toFormat(){if(-1===this.value)return"0x01";if(this.data){if(this.data.length<=4){const t=this.toNum();if(this.equals(l.fromNum(t)))return t.toString(10)}const t=o.opcodesByVal[this.value],e=this.data.toString("hex");if(!t)return`0x${u(this.value)} 0x${e}`;let i=this.data.length.toString(16);for(;i.length%2!=0;)i="0"+i;return`${t} 0x${i} 0x${e}`}return o.opcodesByVal[this.value]||`0x${u(this.value)}`}toASM(t){return-1===this.value?"[error]":this.data?o.toASM(this.data,t):o.opcodesByVal[this.value]||"OP_UNKNOWN"}static fromOp(t){r("number"==typeof t);const e=h[t];return r(e,"Bad opcode."),e}static fromData(t){if(r(e.isBuffer(t)),1===t.length){if(129===t[0])return this.fromOp(a.OP_1NEGATE);if(t[0]>=1&&t[0]<=16)return this.fromOp(t[0]+80)}return this.fromPush(t)}static fromPush(t){if(r(e.isBuffer(t)),0===t.length)return this.fromOp(a.OP_0);if(t.length<=75)return new this(t.length,t);if(t.length<=255)return new this(a.OP_PUSHDATA1,t);if(t.length<=65535)return new this(a.OP_PUSHDATA2,t);if(t.length<=4294967295)return new this(a.OP_PUSHDATA4,t);throw new Error("Pushdata size too large.")}static fromString(t,i){r("string"==typeof t);const s=e.from(t,i||"utf8");return this.fromData(s)}static fromSmall(t){return r((255&t)===t&&t>=0&&t<=16),this.fromOp(0===t?0:t+80)}static fromNum(t){return r(n.isScriptNum(t)),this.fromData(t.encode())}static fromInt(t){return r(Number.isSafeInteger(t)),0===t?this.fromOp(a.OP_0):-1===t?this.fromOp(a.OP_1NEGATE):t>=1&&t<=16?this.fromOp(t+80):this.fromNum(n.fromNumber(t))}static fromBool(t){return r("boolean"==typeof t),this.fromSmall(t?1:0)}static fromSymbol(t){r("string"==typeof t),r(t.length>0),32&t.charCodeAt(0)&&(t=t.toUpperCase()),/^OP_/.test(t)||(t=`OP_${t}`);const e=o.opcodes[t];if(null!=e)return this.fromOp(e);r(/^OP_0X/.test(t),"Unknown opcode."),r(7===t.length,"Unknown opcode.");const i=parseInt(t.substring(5),16);return r((255&i)===i,"Unknown opcode."),this.fromOp(i)}static fromReader(t){const e=t.readU8(),i=h[e];if(i)return i;switch(e){case a.OP_PUSHDATA1:{if(t.left()<1)return c;const i=t.readU8();return t.left()<i?(t.seek(t.left()),c):new this(e,t.readBytes(i))}case a.OP_PUSHDATA2:{if(t.left()<2)return t.seek(t.left()),c;const i=t.readU16();return t.left()<i?(t.seek(t.left()),c):new this(e,t.readBytes(i))}case a.OP_PUSHDATA4:{if(t.left()<4)return t.seek(t.left()),c;const i=t.readU32();return t.left()<i?(t.seek(t.left()),c):new this(e,t.readBytes(i))}default:return t.left()<e?(t.seek(t.left()),c):new this(e,t.readBytes(e))}}static fromRaw(t){return this.fromReader(s.read(t))}static isOpcode(t){return t instanceof l}}function u(t){return t<=15?"0"+t.toString(16):t.toString(16)}c=Object.freeze(new l(-1));for(let t=0;t<=255;t++){if(t>=1&&t<=78){h.push(null);continue}const e=new l(t);h.push(Object.freeze(e))}t.exports=l}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){
/*!
 * compress.js - coin compressor for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),{encoding:s}=i(2),n=i(15),o=i(3),a=6,h=t.alloc(0);function c(t){if(0===t.length)return!1;switch(t[0]){case 2:case 3:return 33===t.length;case 4:return 65===t.length&&n.publicKeyVerify(t);default:return!1}}e.pack=function(t,e){return e.writeVarint(t.value),function(t,e){const i=t.getPubkeyhash(!0);if(i)return e.writeU8(0),e.writeBytes(i),e;const s=t.getScripthash();if(s)return e.writeU8(1),e.writeBytes(s),e;const o=t.getPubkey(!0);if(o&&c(o)){const t=function(t){let e;switch(t[0]){case 2:case 3:e=t;break;case 4:(e=n.publicKeyConvert(t,!0))[0]=4|1&t[64];break;default:throw new Error("Bad point format.")}return r(33===e.length),e}(o);return e.writeBytes(t),e}e.writeVarint(t.raw.length+a),e.writeBytes(t.raw)}(t.script,e),e},e.unpack=function(t,e){return t.value=e.readVarint(),function(t,e){switch(e.readU8()){case 0:{const i=e.readBytes(20,!0);t.fromPubkeyhash(i);break}case 1:{const i=e.readBytes(20,!0);t.fromScripthash(i);break}case 2:case 3:case 4:case 5:{e.offset-=1;const i=function(t){const e=t[0];switch(r(33===t.length),e){case 2:case 3:return t;case 4:t[0]=2;break;case 5:t[0]=3;break;default:throw new Error("Bad point format.")}const i=n.publicKeyConvert(t,!1);return t[0]=e,i}(e.readBytes(33,!0));t.fromPubkey(i);break}default:{e.offset-=1;const i=e.readVarint()-a;if(i>o.MAX_SCRIPT_SIZE)t.fromNulldata(h),e.seek(i);else{const r=e.readBytes(i);t.fromRaw(r)}break}}}(t.script,e),t},e.size=function(t){let e=0;return(e+=s.sizeVarint(t.value))+function(t){if(t.isPubkeyhash(!0))return 21;if(t.isScripthash())return 21;const e=t.getPubkey(!0);if(e&&c(e))return 33;let i=0;return(i+=s.sizeVarint(t.raw.length+a))+t.raw.length}(t.script)}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * common.js - bitcoin constants for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.lockFlags={VERIFY_SEQUENCE:1,MEDIAN_TIME_PAST:2},e.lockFlags.MANDATORY_LOCKTIME_FLAGS=0,e.lockFlags.STANDARD_LOCKTIME_FLAGS=0|e.lockFlags.VERIFY_SEQUENCE|e.lockFlags.MEDIAN_TIME_PAST,e.thresholdStates={DEFINED:0,STARTED:1,LOCKED_IN:2,ACTIVE:3,FAILED:4},e.flags={VERIFY_NONE:0,VERIFY_POW:1,VERIFY_BODY:2},e.flags.DEFAULT_FLAGS=0|e.flags.VERIFY_POW|e.flags.VERIFY_BODY},function(t,e){e.endianness=function(){return"LE"},e.hostname=function(){return"undefined"!=typeof location?location.hostname:""},e.loadavg=function(){return[]},e.uptime=function(){return 0},e.freemem=function(){return Number.MAX_VALUE},e.totalmem=function(){return Number.MAX_VALUE},e.cpus=function(){return[]},e.type=function(){return"Browser"},e.release=function(){return"undefined"!=typeof navigator?navigator.appVersion:""},e.networkInterfaces=e.getNetworkInterfaces=function(){return{}},e.arch=function(){return"javascript"},e.platform=function(){return"browser"},e.tmpdir=e.tmpDir=function(){return"/tmp"},e.EOL="\n",e.homedir=function(){return"/"}},function(t,e,i){"use strict";
/*!
 * bdns.js - dns backend for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */t.exports=i(197)},function(t,e,i){"use strict";
/*!
 * mrmr.js - murmur3 for javascript
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */t.exports=i(205)},function(t,e,i){"use strict";(function(t){
/*!
 * bip152.js - compact block object for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(2),n=i(3),o=i(19),{siphash:a}=i(207),h=i(64),c=i(20),l=i(41),u=i(63),f=i(42),{encoding:d}=s;class p{constructor(t){this.hash=n.ZERO_HASH,this.indexes=[],t&&this.fromOptions(t)}fromOptions(t){return this.hash=t.hash,t.indexes&&(this.indexes=t.indexes),this}static fromOptions(t){return(new this).fromOptions(t)}fromCompact(t){this.hash=t.hash();for(let e=0;e<t.available.length;e++)t.available[e]||this.indexes.push(e);return this}static fromCompact(t){return(new this).fromCompact(t)}fromReader(t){this.hash=t.readHash();const e=t.readVarint();for(let i=0;i<e;i++){const e=t.readVarint();r(e<=65535),this.indexes.push(e)}let i=0;for(let t=0;t<e;t++){let e=this.indexes[t];r((e+=i)<=65535),this.indexes[t]=e,i=e+1}return this}fromRaw(t){return this.fromReader(s.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t){return(new this).fromRaw(t)}getSize(){let t=0;t+=32,t+=d.sizeVarint(this.indexes.length);for(let e=0;e<this.indexes.length;e++){let i=this.indexes[e];e>0&&(i-=this.indexes[e-1]+1),t+=d.sizeVarint(i)}return t}toWriter(t){t.writeHash(this.hash),t.writeVarint(this.indexes.length);for(let e=0;e<this.indexes.length;e++){let i=this.indexes[e];e>0&&(i-=this.indexes[e-1]+1),t.writeVarint(i)}return t}toRaw(){const t=this.getSize();return this.toWriter(s.write(t)).render()}}e.CompactBlock=class extends h{constructor(t){super(),this.keyNonce=null,this.ids=[],this.ptx=[],this.available=[],this.idMap=new Map,this.count=0,this.sipKey=null,this.totalTX=0,this.now=0,t&&this.fromOptions(t)}fromOptions(e){return this.parseOptions(e),r(t.isBuffer(e.keyNonce)),r(Array.isArray(e.ids)),r(Array.isArray(e.ptx)),this.keyNonce=e.keyNonce,this.ids=e.ids,this.ptx=e.ptx,e.available&&(this.available=e.available),e.idMap&&(this.idMap=e.idMap),e.count&&(this.count=e.count),null!=e.totalTX&&(this.totalTX=e.totalTX),this.sipKey=this.getKey(),this}static fromOptions(t){return(new this).fromOptions(t)}verifyBody(){return!0}fromRaw(t){const e=s.read(t);this.readHead(e),this.keyNonce=e.readBytes(8),this.sipKey=this.getKey();const i=e.readVarint();this.totalTX+=i;for(let t=0;t<i;t++){const t=e.readU32(),i=e.readU16();this.ids.push(4294967296*i+t)}const n=e.readVarint();this.totalTX+=n;for(let t=0;t<n;t++){const t=e.readVarint();r(t<=65535),r(t<this.totalTX);const i=c.fromReader(e);this.ptx.push([t,i])}return this}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}toRaw(){return this.frameRaw(!0)}toNormal(){return this.frameRaw(!1)}toWriter(t){return this.writeRaw(t,!0)}toNormalWriter(t){return this.writeRaw(t,!1)}frameRaw(t){const e=this.getSize(t);return this.writeRaw(s.write(e),t).render()}getSize(t){let e=0;e+=80,e+=8,e+=d.sizeVarint(this.ids.length),e+=6*this.ids.length,e+=d.sizeVarint(this.ptx.length);for(const[i,r]of this.ptx)e+=d.sizeVarint(i),e+=t?r.getSize():r.getBaseSize();return e}writeRaw(t,e){this.writeHead(t),t.writeBytes(this.keyNonce),t.writeVarint(this.ids.length);for(const e of this.ids){const i=e%4294967296,s=(e-i)/4294967296;r(s<=65535),t.writeU32(i),t.writeU16(s)}t.writeVarint(this.ptx.length);for(const[i,r]of this.ptx)t.writeVarint(i),e?r.toWriter(t):r.toNormalWriter(t);return t}toRequest(){return p.fromCompact(this)}fillMempool(t,e){if(this.count===this.totalTX)return!0;const i=new Set;for(const{tx:r}of e.map.values()){let e=r.hash();t&&(e=r.witnessHash());const s=this.sid(e),n=this.idMap.get(s);if(null!=n)if(i.has(n))this.available[n]=null,this.count-=1;else if(this.available[n]=r,i.add(n),this.count+=1,this.count===this.totalTX)return!0}return!1}fillMissing(t){let e=0;for(let i=0;i<this.available.length;i++)if(!this.available[i]){if(e>=t.txs.length)return!1;this.available[i]=t.txs[e++]}return e===t.txs.length}sid(t){const[e,i]=a(t,this.sipKey);return 4294967296*(65535&e)+(i>>>0)}hasIndex(t){return null!=this.available[t]}getKey(){const e=t.concat([this.toHead(),this.keyNonce]);return o.digest(e).slice(0,16)}init(){if(0===this.totalTX)throw new Error("Empty vectors.");if(this.totalTX>n.MAX_BLOCK_SIZE/10)throw new Error("Compact block too big.");if(this.totalTX>(n.MAX_BLOCK_SIZE-81)/60)throw new Error("Compact block too big.");for(let t=0;t<this.totalTX;t++)this.available.push(null);let t=-1,e=0;for(let e=0;e<this.ptx.length;e++){const[i,s]=this.ptx[e];r((t+=i+1)<=65535),r(t<=this.ids.length+e),this.available[t]=s,this.count+=1}for(let t=0;t<this.ids.length;t++){const i=this.ids[t];for(;this.available[t+e];)e+=1;if(this.idMap.has(i))return!1;this.idMap.set(i,t+e)}return!0}toBlock(){const t=new u;t.version=this.version,t.prevBlock=this.prevBlock,t.merkleRoot=this.merkleRoot,t.time=this.time,t.bits=this.bits,t.nonce=this.nonce,t._hash=this._hash,t._hhash=this._hhash;for(const e of this.available)r(e,"Compact block is not full."),t.txs.push(e);return t}fromBlock(t,e,i){this.version=t.version,this.prevBlock=t.prevBlock,this.merkleRoot=t.merkleRoot,this.time=t.time,this.bits=t.bits,this.nonce=t.nonce,this.totalTX=t.txs.length,this._hash=t._hash,this._hhash=t._hhash,i||(i=f.nonce()),this.keyNonce=i,this.sipKey=this.getKey();for(let i=1;i<t.txs.length;i++){const r=t.txs[i];let s=r.hash();e&&(s=r.witnessHash());const n=this.sid(s);this.ids.push(n)}return this.ptx.push([0,t.txs[0]]),this}static fromBlock(t,e,i){return(new this).fromBlock(t,e,i)}toHeaders(){return l.fromBlock(this)}},e.TXRequest=p,e.TXResponse=class{constructor(t){this.hash=n.ZERO_HASH,this.txs=[],t&&this.fromOptions(t)}fromOptions(t){return this.hash=t.hash,t.txs&&(this.txs=t.txs),this}static fromOptions(t){return(new this).fromOptions(t)}fromReader(t){this.hash=t.readHash();const e=t.readVarint();for(let i=0;i<e;i++)this.txs.push(c.fromReader(t));return this}fromRaw(t){return this.fromReader(s.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t){return(new this).fromRaw(t)}fromBlock(t,e){this.hash=e.hash;for(const i of e.indexes){if(i>=t.txs.length)break;this.txs.push(t.txs[i])}return this}static fromBlock(t,e){return(new this).fromBlock(t,e)}toRaw(){return this.frameRaw(!0)}toNormal(){return this.frameRaw(!1)}toWriter(t){return this.writeRaw(t,!0)}toNormalWriter(t){return this.writeRaw(t,!1)}getSize(t){let e=0;e+=32,e+=d.sizeVarint(this.txs.length);for(const i of this.txs)e+=t?i.getSize():i.getBaseSize();return e}writeRaw(t,e){t.writeHash(this.hash),t.writeVarint(this.txs.length);for(const i of this.txs)e?i.toWriter(t):i.toNormalWriter(t);return t}frameRaw(t){const e=this.getSize(t);return this.writeRaw(s.write(e),t).render()}}}).call(this,i(1).Buffer)},function(t,e){t.exports=function(t){return t&&"object"==typeof t&&"function"==typeof t.copy&&"function"==typeof t.fill&&"function"==typeof t.readUInt8}},function(t,e){"function"==typeof Object.create?t.exports=function(t,e){t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}})}:t.exports=function(t,e){t.super_=e;var i=function(){};i.prototype=e.prototype,t.prototype=new i,t.prototype.constructor=t}},function(t,e,i){"use strict";(function(t){
/*!
 * packets.js - packets for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(2),{BloomFilter:n}=i(66),o=i(42),a=i(5),h=i(142),c=i(76),l=i(3),u=i(41),f=i(38),d=i(211),p=i(73),g=i(20),{encoding:m}=s,b=t.alloc(0);e.types={VERSION:0,VERACK:1,PING:2,PONG:3,GETADDR:4,ADDR:5,INV:6,GETDATA:7,NOTFOUND:8,GETBLOCKS:9,GETHEADERS:10,HEADERS:11,SENDHEADERS:12,BLOCK:13,TX:14,REJECT:15,MEMPOOL:16,FILTERLOAD:17,FILTERADD:18,FILTERCLEAR:19,MERKLEBLOCK:20,FEEFILTER:21,SENDCMPCT:22,CMPCTBLOCK:23,GETBLOCKTXN:24,BLOCKTXN:25,UNKNOWN:26,INTERNAL:27,DATA:28},e.typesByVal=["VERSION","VERACK","PING","PONG","GETADDR","ADDR","INV","GETDATA","NOTFOUND","GETBLOCKS","GETHEADERS","HEADERS","SENDHEADERS","BLOCK","TX","REJECT","MEMPOOL","FILTERLOAD","FILTERADD","FILTERCLEAR","MERKLEBLOCK","FEEFILTER","SENDCMPCT","CMPCTBLOCK","GETBLOCKTXN","BLOCKTXN","UNKNOWN","INTERNAL","DATA"];class w{constructor(){this.type=-1,this.cmd=""}getSize(){return 0}toWriter(t){return t}toRaw(){return b}fromReader(t){return this}fromRaw(t){return this}}class y extends w{constructor(t){super(),this.cmd="version",this.type=e.types.VERSION,this.version=o.PROTOCOL_VERSION,this.services=o.LOCAL_SERVICES,this.time=a.now(),this.remote=new c,this.local=new c,this.nonce=o.ZERO_NONCE,this.agent=o.USER_AGENT,this.height=0,this.noRelay=!1,t&&this.fromOptions(t)}fromOptions(t){return null!=t.version&&(this.version=t.version),null!=t.services&&(this.services=t.services),null!=t.time&&(this.time=t.time),t.remote&&this.remote.fromOptions(t.remote),t.local&&this.local.fromOptions(t.local),t.nonce&&(this.nonce=t.nonce),t.agent&&(this.agent=t.agent),null!=t.height&&(this.height=t.height),null!=t.noRelay&&(this.noRelay=t.noRelay),this}static fromOptions(t){return(new this).fromOptions(t)}getSize(){let t=0;return t+=20,t+=this.remote.getSize(!1),t+=this.local.getSize(!1),t+=8,(t+=m.sizeVarString(this.agent,"ascii"))+5}toWriter(t){return t.writeI32(this.version),t.writeU32(this.services),t.writeU32(0),t.writeI64(this.time),this.remote.toWriter(t,!1),this.local.toWriter(t,!1),t.writeBytes(this.nonce),t.writeVarString(this.agent,"ascii"),t.writeI32(this.height),t.writeU8(this.noRelay?0:1),t}toRaw(){const t=this.getSize();return this.toWriter(s.write(t)).render()}fromReader(t){return this.version=t.readI32(),this.services=t.readU32(),t.readU32(),this.time=t.readI64(),this.remote.fromReader(t,!1),t.left()>0&&(this.local.fromReader(t,!1),this.nonce=t.readBytes(8)),t.left()>0&&(this.agent=t.readVarString("ascii",256)),t.left()>0&&(this.height=t.readI32()),t.left()>0&&(this.noRelay=0===t.readU8()),10300===this.version&&(this.version=300),r(this.version>=0,"Version is negative."),r(this.time>=0,"Timestamp is negative."),this.height<0&&(this.height=0),this}static fromReader(t){return(new this).fromReader(t)}fromRaw(t){return this.fromReader(s.read(t))}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e,i)}}class v extends w{constructor(){super(),this.cmd="verack",this.type=e.types.VERACK}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class k extends w{constructor(t){super(),this.cmd="ping",this.type=e.types.PING,this.nonce=t||null}getSize(){return this.nonce?8:0}toRaw(){const t=this.getSize();return this.toWriter(s.write(t)).render()}toWriter(t){return this.nonce&&t.writeBytes(this.nonce),t}fromReader(t){return t.left()>=8&&(this.nonce=t.readBytes(8)),this}fromRaw(t){return this.fromReader(s.read(t))}static fromReader(t){return(new this).fromRaw(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class E extends w{constructor(t){super(),this.cmd="pong",this.type=e.types.PONG,this.nonce=t||o.ZERO_NONCE}getSize(){return 8}toWriter(t){return t.writeBytes(this.nonce),t}toRaw(){return this.toWriter(s.write(8)).render()}fromReader(t){return this.nonce=t.readBytes(8),this}fromRaw(t){return this.fromReader(s.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class S extends w{constructor(){super(),this.cmd="getaddr",this.type=e.types.GETADDR}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class R extends w{constructor(t){super(),this.cmd="addr",this.type=e.types.ADDR,this.items=t||[]}getSize(){let t=0;return(t+=m.sizeVarint(this.items.length))+30*this.items.length}toWriter(t){t.writeVarint(this.items.length);for(const e of this.items)e.toWriter(t,!0);return t}toRaw(){const t=this.getSize();return this.toWriter(s.write(t)).render()}fromRaw(t){const e=s.read(t),i=e.readVarint();for(let t=0;t<i;t++)this.items.push(c.fromReader(e,!0));return this}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class I extends w{constructor(t){super(),this.cmd="inv",this.type=e.types.INV,this.items=t||[]}getSize(){let t=0;return(t+=m.sizeVarint(this.items.length))+36*this.items.length}toWriter(t){r(this.items.length<=o.MAX_INV),t.writeVarint(this.items.length);for(const e of this.items)e.toWriter(t);return t}toRaw(){const t=this.getSize();return this.toWriter(s.write(t)).render()}fromReader(t){const e=t.readVarint();r(e<=o.MAX_INV,"Inv item count too high.");for(let i=0;i<e;i++)this.items.push(f.fromReader(t));return this}fromRaw(t){return this.fromReader(s.read(t))}static fromReader(t){return(new this).fromRaw(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class A extends I{constructor(t){super(t),this.cmd="getdata",this.type=e.types.GETDATA}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class x extends I{constructor(t){super(t),this.cmd="notfound",this.type=e.types.NOTFOUND}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class O extends w{constructor(t,i){super(),this.cmd="getblocks",this.type=e.types.GETBLOCKS,this.version=o.PROTOCOL_VERSION,this.locator=t||[],this.stop=i||null}getSize(){let t=0;return t+=4,t+=m.sizeVarint(this.locator.length),(t+=32*this.locator.length)+32}toWriter(t){r(this.locator.length<=o.MAX_INV,"Too many block hashes."),t.writeU32(this.version),t.writeVarint(this.locator.length);for(const e of this.locator)t.writeHash(e);return t.writeHash(this.stop||l.ZERO_HASH),t}toRaw(){const t=this.getSize();return this.toWriter(s.write(t)).render()}fromReader(t){this.version=t.readU32();const e=t.readVarint();r(e<=o.MAX_INV,"Too many block hashes.");for(let i=0;i<e;i++)this.locator.push(t.readHash());return this.stop=t.readHash(),this.stop.equals(l.ZERO_HASH)&&(this.stop=null),this}fromRaw(t){return this.fromReader(s.read(t))}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class _ extends O{constructor(t,i){super(t,i),this.cmd="getheaders",this.type=e.types.GETHEADERS}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class B extends w{constructor(t){super(),this.cmd="headers",this.type=e.types.HEADERS,this.items=t||[]}getSize(){let t=0;t+=m.sizeVarint(this.items.length);for(const e of this.items)t+=e.getSize();return t}toWriter(t){r(this.items.length<=2e3,"Too many headers."),t.writeVarint(this.items.length);for(const e of this.items)e.toWriter(t);return t}toRaw(){const t=this.getSize();return this.toWriter(s.write(t)).render()}fromReader(t){const e=t.readVarint();r(e<=2e3,"Too many headers.");for(let i=0;i<e;i++)this.items.push(u.fromReader(t));return this}fromRaw(t){return this.fromReader(s.read(t))}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class P extends w{constructor(){super(),this.cmd="sendheaders",this.type=e.types.SENDHEADERS}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class N extends w{constructor(t,i){super(),this.cmd="block",this.type=e.types.BLOCK,this.block=t||new d,this.witness=i||!1}getSize(){return this.witness?this.block.getSize():this.block.getBaseSize()}toWriter(t){return this.witness?this.block.toWriter(t):this.block.toNormalWriter(t)}toRaw(){return this.witness?this.block.toRaw():this.block.toNormal()}fromReader(t){return this.block.fromReader(t),this}fromRaw(t){return this.block.fromRaw(t),this}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class T extends w{constructor(t,i){super(),this.cmd="tx",this.type=e.types.TX,this.tx=t||new g,this.witness=i||!1}getSize(){return this.witness?this.tx.getSize():this.tx.getBaseSize()}toWriter(t){return this.witness?this.tx.toWriter(t):this.tx.toNormalWriter(t)}toRaw(){return this.witness?this.tx.toRaw():this.tx.toNormal()}fromReader(t){return this.tx.fromRaw(t),this}fromRaw(t){return this.tx.fromRaw(t),this}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class C extends w{constructor(t){super(),this.cmd="reject",this.type=e.types.REJECT,this.message="",this.code=C.codes.INVALID,this.reason="",this.hash=null,t&&this.fromOptions(t)}fromOptions(t){let e=t.code;return t.message&&(this.message=t.message),null!=e&&("string"==typeof e&&(e=C.codes[e.toUpperCase()]),e>=C.codes.INTERNAL&&(e=C.codes.INVALID),this.code=e),t.reason&&(this.reason=t.reason),t.hash&&(this.hash=t.hash),this}static fromOptions(t){return(new this).fromOptions(t)}rhash(){return this.hash?a.revHex(this.hash):null}getCode(){const t=C.codesByVal[this.code];return t?t.toLowerCase():this.code.toString(10)}getSize(){let t=0;return t+=m.sizeVarString(this.message,"ascii"),t+=1,t+=m.sizeVarString(this.reason,"ascii"),this.hash&&(t+=32),t}toWriter(t){return r(this.message.length<=12),r(this.reason.length<=111),t.writeVarString(this.message,"ascii"),t.writeU8(this.code),t.writeVarString(this.reason,"ascii"),this.hash&&t.writeHash(this.hash),t}toRaw(){const t=this.getSize();return this.toWriter(s.write(t)).render()}fromReader(t){switch(this.message=t.readVarString("ascii",12),this.code=t.readU8(),this.reason=t.readVarString("ascii",111),this.message){case"block":case"tx":this.hash=t.readHash();break;default:this.hash=null}return this}fromRaw(t){return this.fromReader(s.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e,i)}fromReason(t,e,i,s){return"string"==typeof t&&(t=C.codes[t.toUpperCase()]),t||(t=C.codes.INVALID),t>=C.codes.INTERNAL&&(t=C.codes.INVALID),this.message="",this.code=t,this.reason=e,i&&(r(s),this.message=i,this.hash=s),this}static fromReason(t,e,i,r){return(new this).fromReason(t,e,i,r)}static fromError(t,e){return this.fromReason(t.code,t.reason,e)}inspect(){const t=C.codesByVal[this.code]||this.code,e=this.hash?a.revHex(this.hash):null;return"<Reject:"+` msg=${this.message}`+` code=${t}`+` reason=${this.reason}`+` hash=${e}`+">"}}C.codes={MALFORMED:1,INVALID:16,OBSOLETE:17,DUPLICATE:18,NONSTANDARD:64,DUST:65,INSUFFICIENTFEE:66,CHECKPOINT:67,INTERNAL:256,HIGHFEE:257,ALREADYKNOWN:258,CONFLICT:259},C.codesByVal={1:"MALFORMED",16:"INVALID",17:"OBSOLETE",18:"DUPLICATE",64:"NONSTANDARD",65:"DUST",66:"INSUFFICIENTFEE",67:"CHECKPOINT",256:"INTERNAL",257:"HIGHFEE",258:"ALREADYKNOWN",259:"CONFLICT"};class M extends w{constructor(){super(),this.cmd="mempool",this.type=e.types.MEMPOOL}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class U extends w{constructor(t){super(),this.cmd="filterload",this.type=e.types.FILTERLOAD,this.filter=t||new n}getSize(){return this.filter.getSize()}toWriter(t){return this.filter.toWriter(t)}toRaw(){return this.filter.toRaw()}fromReader(t){return this.filter.fromReader(t),this}fromRaw(t){return this.filter.fromRaw(t),this}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}isWithinConstraints(){return this.filter.isWithinConstraints()}}class L extends w{constructor(t){super(),this.cmd="filteradd",this.type=e.types.FILTERADD,this.data=t||b}getSize(){return m.sizeVarBytes(this.data)}toWriter(t){return t.writeVarBytes(this.data),t}toRaw(){const t=this.getSize();return this.toWriter(s.write(t)).render()}fromReader(t){return this.data=t.readVarBytes(),this}fromRaw(t){return this.fromReader(s.read(t))}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class z extends w{constructor(){super(),this.cmd="filterclear",this.type=e.types.FILTERCLEAR}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class D extends w{constructor(t){super(),this.cmd="merkleblock",this.type=e.types.MERKLEBLOCK,this.block=t||new p}getSize(){return this.block.getSize()}toWriter(t){return this.block.toWriter(t)}toRaw(){return this.block.toRaw()}fromReader(t){return this.block.fromReader(t),this}fromRaw(t){return this.block.fromRaw(t),this}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class H extends w{constructor(t){super(),this.cmd="feefilter",this.type=e.types.FEEFILTER,this.rate=t||0}getSize(){return 8}toWriter(t){return t.writeI64(this.rate),t}toRaw(){return this.toWriter(s.write(8)).render()}fromReader(t){return this.rate=t.readI64(),this}fromRaw(t){return this.fromReader(s.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class F extends w{constructor(t,i){super(),this.cmd="sendcmpct",this.type=e.types.SENDCMPCT,this.mode=t||0,this.version=i||1}getSize(){return 9}toWriter(t){return t.writeU8(this.mode),t.writeU64(this.version),t}toRaw(){return this.toWriter(s.write(9)).render()}fromReader(t){return this.mode=t.readU8(),this.version=t.readU64(),this}fromRaw(t){return this.fromReader(s.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class V extends w{constructor(t,i){super(),this.cmd="cmpctblock",this.type=e.types.CMPCTBLOCK,this.block=t||new h.CompactBlock,this.witness=i||!1}getSize(){return this.witness?this.block.getSize(!0):this.block.getSize(!1)}toWriter(t){return this.witness?this.block.toWriter(t):this.block.toNormalWriter(t)}toRaw(){return this.witness?this.block.toRaw():this.block.toNormal()}fromReader(t){return this.block.fromReader(t),this}fromRaw(t){return this.block.fromRaw(t),this}static fromReader(t){return(new this).fromRaw(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class K extends w{constructor(t){super(),this.cmd="getblocktxn",this.type=e.types.GETBLOCKTXN,this.request=t||new h.TXRequest}getSize(){return this.request.getSize()}toWriter(t){return this.request.toWriter(t)}toRaw(){return this.request.toRaw()}fromReader(t){return this.request.fromReader(t),this}fromRaw(t){return this.request.fromRaw(t),this}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class j extends w{constructor(t,i){super(),this.cmd="blocktxn",this.type=e.types.BLOCKTXN,this.response=t||new h.TXResponse,this.witness=i||!1}getSize(){return this.witness?this.response.getSize(!0):this.response.getSize(!1)}toWriter(t){return this.witness?this.response.toWriter(t):this.response.toNormalWriter(t)}toRaw(){return this.witness?this.response.toRaw():this.response.toNormal()}fromReader(t){return this.response.fromReader(t),this}fromRaw(t){return this.response.fromRaw(t),this}static fromReader(t){return(new this).fromReader(t)}static fromRaw(e,i){return"string"==typeof e&&(e=t.from(e,i)),(new this).fromRaw(e)}}class q extends w{constructor(t,i){super(),this.cmd=t,this.type=e.types.UNKNOWN,this.data=i}getSize(){return this.data.length}toWriter(t){return t.writeBytes(this.data),t}toRaw(){return this.data}fromRaw(e,i){return r(t.isBuffer(i)),this.cmd=e,this.data=i,this}static fromRaw(e,i,r){return"string"==typeof i&&(i=t.from(i,r)),(new this).fromRaw(e,i)}}e.fromRaw=function(t,e){switch(t){case"version":return y.fromRaw(e);case"verack":return v.fromRaw(e);case"ping":return k.fromRaw(e);case"pong":return E.fromRaw(e);case"getaddr":return S.fromRaw(e);case"addr":return R.fromRaw(e);case"inv":return I.fromRaw(e);case"getdata":return A.fromRaw(e);case"notfound":return x.fromRaw(e);case"getblocks":return O.fromRaw(e);case"getheaders":return _.fromRaw(e);case"headers":return B.fromRaw(e);case"sendheaders":return P.fromRaw(e);case"block":return N.fromRaw(e);case"tx":return T.fromRaw(e);case"reject":return C.fromRaw(e);case"mempool":return M.fromRaw(e);case"filterload":return U.fromRaw(e);case"filteradd":return L.fromRaw(e);case"filterclear":return z.fromRaw(e);case"merkleblock":return D.fromRaw(e);case"feefilter":return H.fromRaw(e);case"sendcmpct":return F.fromRaw(e);case"cmpctblock":return V.fromRaw(e);case"getblocktxn":return K.fromRaw(e);case"blocktxn":return j.fromRaw(e);default:return q.fromRaw(t,e)}},e.Packet=w,e.VersionPacket=y,e.VerackPacket=v,e.PingPacket=k,e.PongPacket=E,e.GetAddrPacket=S,e.AddrPacket=R,e.InvPacket=I,e.GetDataPacket=A,e.NotFoundPacket=x,e.GetBlocksPacket=O,e.GetHeadersPacket=_,e.HeadersPacket=B,e.SendHeadersPacket=P,e.BlockPacket=N,e.TXPacket=T,e.RejectPacket=C,e.MempoolPacket=M,e.FilterLoadPacket=U,e.FilterAddPacket=L,e.FilterClearPacket=z,e.MerkleBlockPacket=D,e.FeeFilterPacket=H,e.SendCmpctPacket=F,e.CmpctBlockPacket=V,e.GetBlockTxnPacket=K,e.BlockTxnPacket=j,e.UnknownPacket=q}).call(this,i(1).Buffer)},function(t,e,i){"use strict";t.exports=i(214)},function(t,e,i){"use strict";
/*!
 * jobs.js - worker jobs for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(15),{derive:s}=i(77),n=i(150),o=i(43),a=e;a.execute=function(t){try{return a.handle(t)}catch(t){return new o.ErrorResultPacket(t)}},a.handle=function(t){switch(t.cmd){case o.types.CHECK:return a.check(t.tx,t.view,t.flags);case o.types.CHECKINPUT:return a.checkInput(t.tx,t.index,t.coin,t.flags);case o.types.SIGN:return a.sign(t.tx,t.rings,t.type);case o.types.SIGNINPUT:return a.signInput(t.tx,t.index,t.coin,t.ring,t.type);case o.types.ECVERIFY:return a.ecVerify(t.msg,t.sig,t.key);case o.types.ECSIGN:return a.ecSign(t.msg,t.key);case o.types.MINE:return a.mine(t.data,t.target,t.min,t.max);case o.types.SCRYPT:return a.scrypt(t.passwd,t.salt,t.N,t.r,t.p,t.len);default:throw new Error(`Unknown command: "${t.cmd}".`)}},a.check=function(t,e,i){try{t.check(e,i)}catch(t){if("ScriptError"===t.type)return new o.CheckResultPacket(t);throw t}return new o.CheckResultPacket},a.checkInput=function(t,e,i,r){try{t.checkInput(e,i,r)}catch(t){if("ScriptError"===t.type)return new o.CheckInputResultPacket(t);throw t}return new o.CheckInputResultPacket},a.sign=function(t,e,i){const r=t.sign(e,i);return o.SignResultPacket.fromTX(t,r)},a.signInput=function(t,e,i,r,s){const n=t.signInput(t,e,i,r,s);return o.SignInputResultPacket.fromTX(t,e,n)},a.ecVerify=function(t,e,i){const s=r.verifyDER(t,e,i);return new o.ECVerifyResultPacket(s)},a.ecSign=function(t,e){const i=r.signDER(t,e);return new o.ECSignResultPacket(i)},a.mine=function(t,e,i,r){const s=n(t,e,i,r);return new o.MineResultPacket(s)},a.scrypt=function(t,e,i,r,n,a){const h=s(t,e,i,r,n,a);return new o.ScryptResultPacket(h)}},function(t,e,i){"use strict";(function(t,r){
/*!
 * scrypt.js - scrypt for bcrypto
 * Copyright (c) 2016-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 *
 * Ported from:
 * https://github.com/Tarsnap/scrypt/blob/master/lib/crypto/crypto_scrypt-ref.c
 *
 * Copyright 2009 Colin Percival
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */
const s=i(0),n=i(67),o=i(19),a=new Uint32Array(16),h=new Uint32Array(16);function c(t){for(let e=0;e<16;e++)a[e]=w(t,4*e);for(let t=0;t<16;t++)h[t]=a[t];for(let t=0;t<8;t+=2)h[4]^=l(h[0]+h[12],7),h[8]^=l(h[4]+h[0],9),h[12]^=l(h[8]+h[4],13),h[0]^=l(h[12]+h[8],18),h[9]^=l(h[5]+h[1],7),h[13]^=l(h[9]+h[5],9),h[1]^=l(h[13]+h[9],13),h[5]^=l(h[1]+h[13],18),h[14]^=l(h[10]+h[6],7),h[2]^=l(h[14]+h[10],9),h[6]^=l(h[2]+h[14],13),h[10]^=l(h[6]+h[2],18),h[3]^=l(h[15]+h[11],7),h[7]^=l(h[3]+h[15],9),h[11]^=l(h[7]+h[3],13),h[15]^=l(h[11]+h[7],18),h[1]^=l(h[0]+h[3],7),h[2]^=l(h[1]+h[0],9),h[3]^=l(h[2]+h[1],13),h[0]^=l(h[3]+h[2],18),h[6]^=l(h[5]+h[4],7),h[7]^=l(h[6]+h[5],9),h[4]^=l(h[7]+h[6],13),h[5]^=l(h[4]+h[7],18),h[11]^=l(h[10]+h[9],7),h[8]^=l(h[11]+h[10],9),h[9]^=l(h[8]+h[11],13),h[10]^=l(h[9]+h[8],18),h[12]^=l(h[15]+h[14],7),h[13]^=l(h[12]+h[15],9),h[14]^=l(h[13]+h[12],13),h[15]^=l(h[14]+h[13],18);for(let t=0;t<16;t++)a[t]+=h[t];for(let e=0;e<16;e++)y(t,a[e],4*e)}function l(t,e){return t<<e|t>>>32-e}function u(e,i,r,s){const n=t.allocUnsafe(64);g(n,e,0,64*(2*s-1),64);for(let t=0;t<2*s;t++)m(n,e,0,64*t,64),c(n),g(i,n,r+64*t,0,64);for(let t=0;t<s;t++)g(e,i,64*t,r+2*t*64,64);for(let t=0;t<s;t++)g(e,i,64*(t+s),r+64*(2*t+1),64)}function f(t,e){return w(t,64*(2*e-1))}function d(t,e,i,r,s,n){const o=n,a=n;g(o,t,0,e,128*i);for(let t=0;t<r;t++)g(s,o,t*(128*i),0,128*i),u(o,a,128*i,i);for(let t=0;t<r;t++)m(o,s,0,(f(o,i)&r-1)*(128*i),128*i),u(o,a,128*i,i);g(t,o,e,0,128*i)}async function p(t,e,i,r,s,n){const o=n,a=n;g(o,t,0,e,128*i);for(let t=0;t<r;t++)g(s,o,t*(128*i),0,128*i),u(o,a,128*i,i),await b();for(let t=0;t<r;t++)m(o,s,0,(f(o,i)&r-1)*(128*i),128*i),u(o,a,128*i,i),await b();g(t,o,e,0,128*i)}function g(t,e,i,r,s){e.copy(t,i,r,r+s)}function m(t,e,i,r,s){for(let n=0;n<s;n++)t[i+n]^=e[r+n]}function b(){return new Promise(t=>r(t))}function w(t,e){return t[e++]+256*t[e++]+65536*t[e++]+16777216*t[e]}function y(t,e,i){return t[i++]=e,e>>>=8,t[i++]=e,e>>>=8,t[i++]=e,e>>>=8,t[i++]=e,i}e.native=0,e.derive=function(e,i,r,a,h,c){if(s(t.isBuffer(e)),s(t.isBuffer(i)),s(r>>>0===r),s(a>>>0===a),s(h>>>0===h),s(c>>>0===c),a*h>=1<<30)throw new Error("EFBIG");if(0!=(r&r-1)||0===r)throw new Error("EINVAL");if(r>4294967295)throw new Error("EINVAL");const l=t.allocUnsafe(256*a),u=t.allocUnsafe(128*a*r),f=n.derive(o,e,i,1,128*h*a);for(let t=0;t<h;t++)d(f,128*t*a,a,r,u,l);return n.derive(o,e,f,1,c)},e.deriveAsync=async function(e,i,r,a,h,c){if(s(t.isBuffer(e)),s(t.isBuffer(i)),s(r>>>0===r),s(a>>>0===a),s(h>>>0===h),s(c>>>0===c),a*h>=1<<30)throw new Error("EFBIG");if(0!=(r&r-1)||0===r)throw new Error("EINVAL");if(r>4294967295)throw new Error("EINVAL");const l=t.allocUnsafe(256*a),u=t.allocUnsafe(128*a*r),f=await n.deriveAsync(o,e,i,1,128*h*a);for(let t=0;t<h;t++)await p(f,128*t*a,a,r,u,l);return n.deriveAsync(o,e,f,1,c)}}).call(this,i(1).Buffer,i(34).setImmediate)},function(t,e,i){"use strict";(function(t,r){
/*!
 * pbkdf2.js - pbkdf2 for bcrypto
 * Copyright (c) 2014-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */
const s=i(0),n=(t.crypto||t.msCrypto||{}).subtle||{};e.native=0,e.derive=function(t,e,i,n,o){s(t&&"string"==typeof t.id),s(r.isBuffer(e)),s(r.isBuffer(i)),s(n>>>0===n),s(o>>>0===o);const a=t.size,h=Math.ceil(o/a),c=r.allocUnsafe(o),l=r.allocUnsafe(i.length+4),u=r.allocUnsafe(a);let f=0;i.copy(l,0);for(let r=0;r<h;r++){l.writeUInt32BE(r+1,i.length);let s=t.mac(l,e);s.copy(u,0);for(let i=1;i<n;i++){s=t.mac(s,e);for(let t=0;t<a;t++)u[t]^=s[t]}u.copy(c,f),f+=a}return c},e.deriveAsync=async function(t,i,o,a,h){s(t&&"string"==typeof t.id),s(r.isBuffer(i)),s(r.isBuffer(o)),s(a>>>0===a),s(h>>>0===h);const c=function(t){switch(t.id){case"SHA1":return"SHA-1";case"SHA256":return"SHA-256";case"SHA384":return"SHA-384";case"SHA512":return"SHA-512";default:return null}}(t);if(!n.importKey||!n.deriveBits||!c)return e.derive(t,i,o,a,h);const l={name:"PBKDF2",salt:o,iterations:a,hash:c},u=await n.importKey("raw",i,{name:"PBKDF2"},!1,["deriveBits"]),f=await n.deriveBits(l,u,8*h);return r.from(f)}}).call(this,i(11),i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * mine.js - mining function for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(0),s=i(9);function n(t,e){r(t.length===e.length);for(let i=t.length-1;i>=0;i--){if(t[i]<e[i])return-1;if(t[i]>e[i])return 1}return 0}t.exports=function(t,e,i,r){let o=i;for(t.writeUInt32LE(o,76,!0);o<=r;){if(n(s.digest(t),e)<=0)return o;o+=1,t.writeUInt32LE(o,76,!0)}return-1}},function(t,e,i){"use strict";(function(e){
/*!
 * parser.js - worker parser for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(7),n=i(43);t.exports=class extends s{constructor(){super(),this.waiting=9,this.header=null,this.pending=[],this.total=0}feed(t){for(this.total+=t.length,this.pending.push(t);this.total>=this.waiting;){const t=this.read(this.waiting);this.parse(t)}}read(t){if(r(this.total>=t,"Reading too much."),0===t)return e.alloc(0);const i=this.pending[0];if(i.length>t){const e=i.slice(0,t);return this.pending[0]=i.slice(t),this.total-=e.length,e}if(i.length===t){const t=this.pending.shift();return this.total-=t.length,t}const s=e.allocUnsafe(t);let n=0;for(;n<s.length;){const t=this.pending[0],e=t.copy(s,n);e===t.length?this.pending.shift():this.pending[0]=t.slice(e),n+=e}return r.strictEqual(n,s.length),this.total-=s.length,s}parse(t){let e,i=this.header;if(!i){try{i=this.parseHeader(t)}catch(t){return void this.emit("error",t)}return this.header=i,void(this.waiting=i.size+1)}this.waiting=9,this.header=null;try{e=this.parsePacket(i,t)}catch(t){return void this.emit("error",t)}10===t[t.length-1]?(e.id=i.id,this.emit("packet",e)):this.emit("error",new Error("No trailing newline."))}parseHeader(t){return new class{constructor(t,e,i){this.id=t,this.cmd=e,this.size=i}}(t.readUInt32LE(0,!0),t.readUInt8(4,!0),t.readUInt32LE(5,!0))}parsePacket(t,e){switch(t.cmd){case n.types.ENV:return n.EnvPacket.fromRaw(e);case n.types.EVENT:return n.EventPacket.fromRaw(e);case n.types.LOG:return n.LogPacket.fromRaw(e);case n.types.ERROR:return n.ErrorPacket.fromRaw(e);case n.types.ERRORRESULT:return n.ErrorResultPacket.fromRaw(e);case n.types.CHECK:return n.CheckPacket.fromRaw(e);case n.types.CHECKRESULT:return n.CheckResultPacket.fromRaw(e);case n.types.SIGN:return n.SignPacket.fromRaw(e);case n.types.SIGNRESULT:return n.SignResultPacket.fromRaw(e);case n.types.CHECKINPUT:return n.CheckInputPacket.fromRaw(e);case n.types.CHECKINPUTRESULT:return n.CheckInputResultPacket.fromRaw(e);case n.types.SIGNINPUT:return n.SignInputPacket.fromRaw(e);case n.types.SIGNINPUTRESULT:return n.SignInputResultPacket.fromRaw(e);case n.types.ECVERIFY:return n.ECVerifyPacket.fromRaw(e);case n.types.ECVERIFYRESULT:return n.ECVerifyResultPacket.fromRaw(e);case n.types.ECSIGN:return n.ECSignPacket.fromRaw(e);case n.types.ECSIGNRESULT:return n.ECSignResultPacket.fromRaw(e);case n.types.MINE:return n.MinePacket.fromRaw(e);case n.types.MINERESULT:return n.MineResultPacket.fromRaw(e);case n.types.SCRYPT:return n.ScryptPacket.fromRaw(e);case n.types.SCRYPTRESULT:return n.ScryptResultPacket.fromRaw(e);default:throw new Error("Unknown packet.")}}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * workers.js - worker processes for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(2);t.exports=class{constructor(){}packet(t){const e=10+t.getSize(),i=r.write(e);i.writeU32(t.id),i.writeU8(t.cmd),i.seek(4),t.toWriter(i),i.writeU8(10);const s=i.render();return s.writeUInt32LE(s.length-10,5,!0),s}}},function(t,e,i){"use strict";(function(e){
/*!
 * private.js - hd private keys for bcoin
 * Copyright (c) 2015-2016, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(2),{base58:n}=i(27),o=i(51),a=i(24),h=i(9),c=i(69),l=i(37),u=i(15),f=i(4),d=i(3),p=i(82),g=i(83),m=i(154),b=e.from("Bitcoin seed","ascii");class w{constructor(t){this.depth=0,this.parentFingerPrint=0,this.childIndex=0,this.chainCode=d.ZERO_HASH,this.privateKey=d.ZERO_HASH,this.publicKey=p.ZERO_KEY,this.fingerPrint=-1,this._hdPublicKey=null,t&&this.fromOptions(t)}fromOptions(t){return r(t,"No options for HD private key."),r((255&t.depth)===t.depth),r(t.parentFingerPrint>>>0===t.parentFingerPrint),r(t.childIndex>>>0===t.childIndex),r(e.isBuffer(t.chainCode)),r(e.isBuffer(t.privateKey)),this.depth=t.depth,this.parentFingerPrint=t.parentFingerPrint,this.childIndex=t.childIndex,this.chainCode=t.chainCode,this.privateKey=t.privateKey,this.publicKey=u.publicKeyCreate(t.privateKey,!0),this}static fromOptions(t){return(new this).fromOptions(t)}toPublic(){let t=this._hdPublicKey;return t||((t=new m).depth=this.depth,t.parentFingerPrint=this.parentFingerPrint,t.childIndex=this.childIndex,t.chainCode=this.chainCode,t.publicKey=this.publicKey,this._hdPublicKey=t),t}xprivkey(t){return this.toBase58(t)}xpubkey(t){return this.toPublic().xpubkey(t)}destroy(t){this.depth=0,this.childIndex=0,this.parentFingerPrint=0,c(this.chainCode),c(this.privateKey),c(this.publicKey),this.fingerPrint=-1,this._hdPublicKey&&(t&&this._hdPublicKey.destroy(),this._hdPublicKey=null)}derive(t,e){if(r("number"==typeof t),t>>>0!==t)throw new Error("Index out of range.");if(this.depth>=255)throw new Error("Depth too high.");e&&(t|=p.HARDENED,t>>>=0);const i=this.getID(t),n=p.cache.get(i);if(n)return n;const h=s.pool(37);t&p.HARDENED?(h.writeU8(0),h.writeBytes(this.privateKey),h.writeU32BE(t)):(h.writeBytes(this.publicKey),h.writeU32BE(t));const c=h.render(),l=o.mac(c,this.chainCode),f=l.slice(0,32),d=l.slice(32,64);let g;try{g=u.privateKeyTweakAdd(this.privateKey,f)}catch(e){return this.derive(t+1)}if(-1===this.fingerPrint){const t=a.digest(this.publicKey);this.fingerPrint=t.readUInt32BE(0,!0)}const m=new this.constructor;return m.depth=this.depth+1,m.parentFingerPrint=this.fingerPrint,m.childIndex=t,m.chainCode=d,m.privateKey=g,m.publicKey=u.publicKeyCreate(g,!0),p.cache.set(i,m),m}getID(t){return"v"+this.publicKey.toString("hex")+t}deriveAccount(t,e,i){return r(t>>>0===t,"Purpose must be a number."),r(e>>>0===e,"Account index must be a number."),r(i>>>0===i,"Account index must be a number."),r(this.isMaster(),"Cannot derive account index."),this.derive(t,!0).derive(e,!0).derive(i,!0)}isMaster(){return p.isMaster(this)}isAccount(t){return p.isAccount(this,t)}static isBase58(t,e){if("string"!=typeof t)return!1;if(t.length<4)return!1;const i=t.substring(0,4);try{return f.fromPrivate58(i,e),!0}catch(t){return!1}}static isRaw(t,i){if(!e.isBuffer(t))return!1;if(t.length<4)return!1;const r=t.readUInt32BE(0,!0);try{return f.fromPrivate(r,i),!0}catch(t){return!1}}static isValidPath(t){try{return p.parsePath(t,!0),!0}catch(t){return!1}}derivePath(t){const e=p.parsePath(t,!0);let i=this;for(const t of e)i=i.derive(t);return i}equals(t){return r(w.isHDPrivateKey(t)),this.depth===t.depth&&this.parentFingerPrint===t.parentFingerPrint&&this.childIndex===t.childIndex&&this.chainCode.equals(t.chainCode)&&this.privateKey.equals(t.privateKey)}compare(t){r(w.isHDPrivateKey(t));let e=this.depth-t.depth;return 0!==e?e:0!=(e=this.parentFingerPrint-t.parentFingerPrint)?e:0!=(e=this.childIndex-t.childIndex)?e:0!==(e=this.chainCode.compare(t.chainCode))?e:0!==(e=this.privateKey.compare(t.privateKey))?e:0}fromSeed(t){if(r(e.isBuffer(t)),8*t.length<p.MIN_ENTROPY||8*t.length>p.MAX_ENTROPY)throw new Error("Entropy not in range.");const i=o.mac(t,b),s=i.slice(0,32),n=i.slice(32,64);if(!u.privateKeyVerify(s))throw new Error("Master private key is invalid.");return this.depth=0,this.parentFingerPrint=0,this.childIndex=0,this.chainCode=n,this.privateKey=s,this.publicKey=u.publicKeyCreate(s,!0),this}static fromSeed(t){return(new this).fromSeed(t)}fromMnemonic(t,e){return r(t instanceof g),this.fromSeed(t.toSeed(e))}static fromMnemonic(t,e){return(new this).fromMnemonic(t,e)}fromPhrase(t){const e=g.fromPhrase(t);return this.fromMnemonic(e),this}static fromPhrase(t){return(new this).fromPhrase(t)}fromKey(t,i){return r(e.isBuffer(t)&&32===t.length),r(e.isBuffer(i)&&32===i.length),this.depth=0,this.parentFingerPrint=0,this.childIndex=0,this.chainCode=i,this.privateKey=t,this.publicKey=u.publicKeyCreate(t,!0),this}static fromKey(t,e){return(new this).fromKey(t,e)}static generate(){const t=u.privateKeyGenerate(),e=l.randomBytes(32);return w.fromKey(t,e)}fromBase58(t,e){return r("string"==typeof t),this.fromRaw(n.decode(t),e)}fromReader(t,e){const i=t.readU32BE();return f.fromPrivate(i,e),this.depth=t.readU8(),this.parentFingerPrint=t.readU32BE(),this.childIndex=t.readU32BE(),this.chainCode=t.readBytes(32),r(0===t.readU8()),this.privateKey=t.readBytes(32),this.publicKey=u.publicKeyCreate(this.privateKey,!0),t.verifyChecksum(h.digest),this}fromRaw(t,e){return this.fromReader(s.read(t),e)}toBase58(t){return n.encode(this.toRaw(t))}getSize(){return 82}toWriter(t,e){return e=f.get(e),t.writeU32BE(e.keyPrefix.xprivkey),t.writeU8(this.depth),t.writeU32BE(this.parentFingerPrint),t.writeU32BE(this.childIndex),t.writeBytes(this.chainCode),t.writeU8(0),t.writeBytes(this.privateKey),t.writeChecksum(h.digest),t}toRaw(t){return this.toWriter(s.write(82),t).render()}static fromBase58(t,e){return(new this).fromBase58(t,e)}static fromReader(t,e){return(new this).fromReader(t,e)}static fromRaw(t,e){return(new this).fromRaw(t,e)}toJSON(t){return{xprivkey:this.xprivkey(t)}}fromJSON(t,e){return r(t.xprivkey,"Could not handle key JSON."),this.fromBase58(t.xprivkey,e),this}static fromJSON(t,e){return(new this).fromJSON(t,e)}static isHDPrivateKey(t){return t instanceof w}}t.exports=w}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * public.js - hd public keys for bcoin
 * Copyright (c) 2015-2016, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(2),{base58:n}=i(27),o=i(51),a=i(24),h=i(9),c=i(69),l=i(15),u=i(4),f=i(3),d=i(82);class p{constructor(t){this.depth=0,this.parentFingerPrint=0,this.childIndex=0,this.chainCode=f.ZERO_HASH,this.publicKey=d.ZERO_KEY,this.fingerPrint=-1,t&&this.fromOptions(t)}fromOptions(t){return r(t,"No options for HDPublicKey"),r((255&t.depth)===t.depth),r(t.parentFingerPrint>>>0===t.parentFingerPrint),r(t.childIndex>>>0===t.childIndex),r(e.isBuffer(t.chainCode)),r(e.isBuffer(t.publicKey)),this.depth=t.depth,this.parentFingerPrint=t.parentFingerPrint,this.childIndex=t.childIndex,this.chainCode=t.chainCode,this.publicKey=t.publicKey,this}static fromOptions(t){return(new this).fromOptions(t)}toPublic(){return this}xprivkey(t){return null}xpubkey(t){return this.toBase58(t)}destroy(){this.depth=0,this.childIndex=0,this.parentFingerPrint=0,c(this.chainCode),c(this.publicKey),this.fingerPrint=-1}derive(t,e){if(r("number"==typeof t),t>>>0!==t)throw new Error("Index out of range.");if(t&d.HARDENED||e)throw new Error("Cannot derive hardened.");if(this.depth>=255)throw new Error("Depth too high.");const i=this.getID(t),n=d.cache.get(i);if(n)return n;const h=s.pool(37);h.writeBytes(this.publicKey),h.writeU32BE(t);const c=h.render(),u=o.mac(c,this.chainCode),f=u.slice(0,32),p=u.slice(32,64);let g;try{g=l.publicKeyTweakAdd(this.publicKey,f,!0)}catch(e){return this.derive(t+1)}if(-1===this.fingerPrint){const t=a.digest(this.publicKey);this.fingerPrint=t.readUInt32BE(0,!0)}const m=new this.constructor;return m.depth=this.depth+1,m.parentFingerPrint=this.fingerPrint,m.childIndex=t,m.chainCode=p,m.publicKey=g,d.cache.set(i,m),m}getID(t){return"b"+this.publicKey.toString("hex")+t}deriveAccount(t,e,i){return r(t>>>0===t),r(e>>>0===e),r(i>>>0===i),r(this.isAccount(i),"Cannot derive account index."),this}isMaster(){return d.isMaster(this)}isAccount(t){return d.isAccount(this,t)}static isValidPath(t){try{return d.parsePath(t,!1),!0}catch(t){return!1}}derivePath(t){const e=d.parsePath(t,!1);let i=this;for(const t of e)i=i.derive(t);return i}equals(t){return r(p.isHDPublicKey(t)),this.depth===t.depth&&this.parentFingerPrint===t.parentFingerPrint&&this.childIndex===t.childIndex&&this.chainCode.equals(t.chainCode)&&this.publicKey.equals(t.publicKey)}compare(t){r(p.isHDPublicKey(t));let e=this.depth-t.depth;return 0!==e?e:0!=(e=this.parentFingerPrint-t.parentFingerPrint)?e:0!=(e=this.childIndex-t.childIndex)?e:0!==(e=this.chainCode.compare(t.chainCode))?e:0!==(e=this.publicKey.compare(t.publicKey))?e:0}toJSON(t){return{xpubkey:this.xpubkey(t)}}fromJSON(t,e){return r(t.xpubkey,"Could not handle HD key JSON."),this.fromBase58(t.xpubkey,e),this}static fromJSON(t,e){return(new this).fromJSON(t,e)}static isBase58(t,e){if("string"!=typeof t)return!1;if(t.length<4)return!1;const i=t.substring(0,4);try{return u.fromPublic58(i,e),!0}catch(t){return!1}}static isRaw(t,i){if(!e.isBuffer(t))return!1;if(t.length<4)return!1;const r=t.readUInt32BE(0,!0);try{return u.fromPublic(r,i),!0}catch(t){return!1}}fromBase58(t,e){return r("string"==typeof t),this.fromRaw(n.decode(t),e)}fromReader(t,e){const i=t.readU32BE();return u.fromPublic(i,e),this.depth=t.readU8(),this.parentFingerPrint=t.readU32BE(),this.childIndex=t.readU32BE(),this.chainCode=t.readBytes(32),this.publicKey=t.readBytes(33),t.verifyChecksum(h.digest),this}fromRaw(t,e){return this.fromReader(s.read(t),e)}toBase58(t){return n.encode(this.toRaw(t))}toWriter(t,e){return e=u.get(e),t.writeU32BE(e.keyPrefix.xpubkey),t.writeU8(this.depth),t.writeU32BE(this.parentFingerPrint),t.writeU32BE(this.childIndex),t.writeBytes(this.chainCode),t.writeBytes(this.publicKey),t.writeChecksum(h.digest),t}getSize(){return 82}toRaw(t){return this.toWriter(s.write(82),t).render()}static fromBase58(t,e){return(new this).fromBase58(t,e)}static fromReader(t,e){return(new this).fromReader(t,e)}static fromRaw(t,e){return(new this).fromRaw(t,e)}static isHDPublicKey(t){return t instanceof p}}t.exports=p}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * bevent.js - event emitter which resolves promises.
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */t.exports=i(180)},function(t,e,i){"use strict";(function(e){
/*!
 * chainentry.js - chainentry object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(2),n=i(49),o=i(3),a=i(9),h=i(5),c=i(41),l=i(38),u=new n(0);class f{constructor(t){this.hash=o.ZERO_HASH,this.version=1,this.prevBlock=o.ZERO_HASH,this.merkleRoot=o.ZERO_HASH,this.time=0,this.bits=0,this.nonce=0,this.height=0,this.chainwork=u,t&&this.fromOptions(t)}fromOptions(t){return r(t,"Block data is required."),r(e.isBuffer(t.hash)),r(t.version>>>0===t.version),r(e.isBuffer(t.prevBlock)),r(e.isBuffer(t.merkleRoot)),r(t.time>>>0===t.time),r(t.bits>>>0===t.bits),r(t.nonce>>>0===t.nonce),r(t.height>>>0===t.height),r(!t.chainwork||n.isBN(t.chainwork)),this.hash=t.hash,this.version=t.version,this.prevBlock=t.prevBlock,this.merkleRoot=t.merkleRoot,this.time=t.time,this.bits=t.bits,this.nonce=t.nonce,this.height=t.height,this.chainwork=t.chainwork||u,this}static fromOptions(t,e){return(new this).fromOptions(t,e)}getProof(){const t=o.fromCompact(this.bits);return t.isNeg()||t.isZero()?new n(0):f.MAX_CHAINWORK.div(t.iaddn(1))}getChainwork(t){const e=this.getProof();return t?e.iadd(t.chainwork):e}isGenesis(){return 0===this.height}hasUnknown(t){const e=o.VERSION_TOP_MASK,i=o.VERSION_TOP_BITS;return(this.version&e)>>>0===i&&0!=(this.version&t.unknownBits)}hasBit(t){return o.hasBit(this.version,t)}rhash(){return h.revHex(this.hash)}fromBlock(t,e){return this.hash=t.hash(),this.version=t.version,this.prevBlock=t.prevBlock,this.merkleRoot=t.merkleRoot,this.time=t.time,this.bits=t.bits,this.nonce=t.nonce,this.height=e?e.height+1:0,this.chainwork=this.getChainwork(e),this}static fromBlock(t,e){return(new this).fromBlock(t,e)}toRaw(){const t=s.write(116);return t.writeU32(this.version),t.writeHash(this.prevBlock),t.writeHash(this.merkleRoot),t.writeU32(this.time),t.writeU32(this.bits),t.writeU32(this.nonce),t.writeU32(this.height),t.writeBytes(this.chainwork.toArrayLike(e,"le",32)),t.render()}fromRaw(t){const e=s.read(t,!0),i=a.digest(e.readBytes(80));return e.seek(-80),this.hash=i,this.version=e.readU32(),this.prevBlock=e.readHash(),this.merkleRoot=e.readHash(),this.time=e.readU32(),this.bits=e.readU32(),this.nonce=e.readU32(),this.height=e.readU32(),this.chainwork=new n(e.readBytes(32),"le"),this}static fromRaw(t){return(new this).fromRaw(t)}toJSON(){return{hash:h.revHex(this.hash),version:this.version,prevBlock:h.revHex(this.prevBlock),merkleRoot:h.revHex(this.merkleRoot),time:this.time,bits:this.bits,nonce:this.nonce,height:this.height,chainwork:this.chainwork.toString("hex",64)}}fromJSON(t){return r(t,"Block data is required."),r("string"==typeof t.hash),r(t.version>>>0===t.version),r("string"==typeof t.prevBlock),r("string"==typeof t.merkleRoot),r(t.time>>>0===t.time),r(t.bits>>>0===t.bits),r(t.nonce>>>0===t.nonce),r("string"==typeof t.chainwork),this.hash=h.fromRev(t.hash),this.version=t.version,this.prevBlock=h.fromRev(t.prevBlock),this.merkleRoot=h.fromRev(t.merkleRoot),this.time=t.time,this.bits=t.bits,this.nonce=t.nonce,this.height=t.height,this.chainwork=new n(t.chainwork,"hex"),this}static fromJSON(t){return(new this).fromJSON(t)}toHeaders(){return c.fromEntry(this)}toInv(){return new l(l.types.BLOCK,this.hash)}inspect(){const t=this.toJSON();return t.version=t.version.toString(16),t}static isChainEntry(t){return t instanceof f}}f.MAX_CHAINWORK=new n(1).ushln(256),t.exports=f}).call(this,i(1).Buffer)},function(t,e,i){"use strict";t.exports=i(194)},function(t,e,i){"use strict";t.exports=i(198)},function(t,e,i){"use strict";t.exports=i(203)},function(t){t.exports={name:"bcoin",version:"1.0.2",description:"Bitcoin bike-shed",license:"MIT",repository:"git://github.com/bcoin-org/bcoin.git",homepage:"https://github.com/bcoin-org/bcoin",bugs:{url:"https://github.com/bcoin-org/bcoin/issues"},author:"Fedor Indutny <fedor@indutny.com>",contributors:["Christopher Jeffrey <chjjeffrey@gmail.com>"],keywords:["bcoin","bitcoin","blockchain","cryptocurrency","wallet"],engines:{node:">=8.0.0"},dependencies:{bcfg:"~0.1.3",bclient:"~0.1.4",bcrypto:"~2.0.0",bdb:"~1.1.1",bdns:"~0.1.2",bevent:"~0.1.2",bfile:"~0.1.2",bfilter:"~1.0.1",bheep:"~0.1.2",binet:"~0.3.2",blgr:"~0.1.2",blru:"~0.1.3",blst:"~0.1.2",bmutex:"~0.1.3",bsert:"~0.0.4",bsip:"~0.1.2",bsock:"~0.1.3",bsocks:"~0.2.2",bstring:"~0.3.0",btcp:"~0.1.2","buffer-map":"~0.0.3",bufio:"~1.0.2",bupnp:"~0.2.3",bval:"~0.1.3",bweb:"~0.1.4",mrmr:"~0.1.2",n64:"~0.2.2",webpack:"^4.25.1"},devDependencies:{istanbul:"^1.1.0-alpha.1",mocha:"^5.2.0","webpack-cli":"^3.1.2"},main:"./lib/bcoin.js",bin:{bcoin:"./bin/bcoin","bcoin-node":"./bin/node","bcoin-spvnode":"./bin/spvnode",bwallet:"./bin/bwallet"},scripts:{browserify:"browserify -s bcoin lib/bcoin-browser.js | uglifyjs -c > bcoin.js",clean:"rm -f {browser/,}{bcoin.js,bcoin-worker.js,app.js,worker.js}",docs:"jsdoc -c jsdoc.json",lint:"eslint $(cat .eslintfiles) || exit 0","lint-ci":"eslint $(cat .eslintfiles)","lint-file":"eslint",test:"mocha --reporter spec test/*.js","test-browser":"NODE_BACKEND=js mocha --reporter spec test/*.js","test-file":"mocha --reporter spec","test-file-browser":"NODE_BACKEND=js mocha --reporter spec","test-ci":"istanbul cover node_modules/.bin/_mocha --report lcovonly -- --reporter spec test/*.js",webpack:"webpack --mode production --config webpack.browser.js","webpack-browser":"webpack --mode production --config webpack.browser.js","webpack-compat":"webpack --mode production --config webpack.compat.js","webpack-app":"webpack --mode production --config webpack.app.js"},browser:{"./lib/hd/nfkd":"./lib/hd/nfkd-compat.js","./lib/hd/wordlist":"./lib/hd/wordlist-browser.js","./lib/workers/child":"./lib/workers/child-browser.js","./lib/workers/parent":"./lib/workers/parent-browser.js","./lib/bcoin":"./lib/bcoin-browser.js"}}},function(t,e,i){"use strict";
/*!
 * rpc.js - json rpc for bweb.
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(0),s=i(7),n={INVALID_REQUEST:-32600,METHOD_NOT_FOUND:-32601,INVALID_PARAMS:-32602,INTERNAL_ERROR:-32603,PARSE_ERROR:-32700};class o extends s{constructor(){super(),this.calls=Object.create(null),this.mounts=[]}getCode(t){switch(t.type){case"RPCError":return t.code;default:return n.INTERNAL_ERROR}}handleCall(t,e){}handleError(t){}async call(t,e){let i=t,r=[],s=!0;e||(e={}),Array.isArray(i)||(i=[i],s=!1);for(const t of i){if(!t||"object"!=typeof t){r.push({result:null,error:{message:"Invalid request.",code:n.INVALID_REQUEST},id:null});continue}if(t.id&&"object"==typeof t.id){r.push({result:null,error:{message:"Invalid ID.",code:n.INVALID_REQUEST},id:null});continue}if(null==t.id&&(t.id=null),t.params||(t.params=[]),"string"!=typeof t.method){r.push({result:null,error:{message:"Method not found.",code:n.METHOD_NOT_FOUND},id:t.id});continue}if(!Array.isArray(t.params)){r.push({result:null,error:{message:"Invalid params.",code:n.INVALID_PARAMS},id:t.id});continue}let i;this.handleCall(t,e),this.emit("call",t,e);try{i=await this.execute(t)}catch(e){const i=this.getCode(e);i===n.INTERNAL_ERROR&&(this.handleError(e),this.emit("error",e)),r.push({result:null,error:{message:e.message,code:i},id:t.id});continue}void 0===i&&(i=null),r.push({result:i,error:null,id:t.id})}return s||(r=r[0]),r}async execute(t,e){const i=this.calls[t.method];if(!i){for(const i of this.mounts)if(i.calls[t.method])return await i.execute(t,e);throw new a(n.METHOD_NOT_FOUND,`Method not found: ${t.method}.`)}return i.call(this,t.params,e)}add(t,e,i){r("function"==typeof e,"Handler must be a function."),r(!this.calls[t],"Duplicate RPC call."),i&&(e=e.bind(i)),this.calls[t]=e}mount(t){r(t,"RPC must be an object."),r("function"==typeof t.execute,"Execute must be a method."),this.mounts.push(t)}attach(t){r(t,"RPC must be an object."),r("function"==typeof t.execute,"Execute must be a method."),t.mount(this)}}class a extends Error{constructor(t,e){super(),r("number"==typeof t),r("string"==typeof e),this.type="RPCError",this.message=e,this.code=t,Error.captureStackTrace&&Error.captureStackTrace(this,a)}}o.RPC=o,o.errors=n,o.RPCError=a,t.exports=o},function(t,e,i){"use strict";
/*!
 * aes.js - aes for bcoin
 * Copyright (c) 2017-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */t.exports=i(234)},function(t,e,i){"use strict";
/*!
 * records.js - walletdb records
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(0),s=i(2),n=i(5),o=i(20),a=i(3);class h{constructor(){this.startHeight=0,this.startHash=a.ZERO_HASH,this.height=0,this.marked=!1}clone(){const t=new h;return t.startHeight=this.startHeight,t.startHash=this.startHash,t.height=this.height,t.marked=this.marked,t}fromRaw(t){const e=s.read(t);return this.startHeight=e.readU32(),this.startHash=e.readHash(),this.height=e.readU32(),this.marked=1===e.readU8(),this}static fromRaw(t){return(new this).fromRaw(t)}toRaw(){const t=s.write(41);return t.writeU32(this.startHeight),t.writeHash(this.startHash),t.writeU32(this.height),t.writeU8(this.marked?1:0),t.render()}}class c{constructor(t,e,i){this.hash=t||a.ZERO_HASH,this.height=null!=e?e:-1,this.time=i||0}clone(){return new this.constructor(this.hash,this.height,this.time)}toHash(){return this.hash}fromEntry(t){return this.hash=t.hash,this.height=t.height,this.time=t.time,this}fromJSON(t){return this.hash=n.revHex(t.hash),this.height=t.height,this.time=t.time,this}fromRaw(t){const e=s.read(t);return this.hash=e.readHash(),this.height=e.readU32(),this.time=e.readU32(),this}static fromEntry(t){return(new this).fromEntry(t)}static fromJSON(t){return(new this).fromJSON(t)}static fromRaw(t){return(new this).fromRaw(t)}toRaw(){const t=s.write(42);return t.writeHash(this.hash),t.writeU32(this.height),t.writeU32(this.time),t.render()}toJSON(){return{hash:n.revHex(this.hash),height:this.height,time:this.time}}}e.ChainState=h,e.BlockMeta=c,e.TXRecord=class{constructor(t,e){this.tx=null,this.hash=null,this.mtime=n.now(),this.height=-1,this.block=null,this.index=-1,this.time=0,t&&this.fromTX(t,e)}fromTX(t,e){return this.tx=t,this.hash=t.hash(),e&&this.setBlock(e),this}static fromTX(t,e){return(new this).fromTX(t,e)}setBlock(t){this.height=t.height,this.block=t.hash,this.time=t.time}unsetBlock(){this.height=-1,this.block=null,this.time=0}getBlock(){return-1===this.height?null:new c(this.block,this.height,this.time)}getDepth(t){return r("number"==typeof t,"Must pass in height."),-1===this.height?0:t<this.height?0:t-this.height+1}getSize(){let t=0;return t+=this.tx.getSize(),t+=4,this.block?(t+=1,t+=32,t+=12):t+=1,t}toRaw(){const t=this.getSize(),e=s.write(t);let i=this.index;return this.tx.toWriter(e),e.writeU32(this.mtime),this.block?(-1===i&&(i=2147483647),e.writeU8(1),e.writeHash(this.block),e.writeU32(this.height),e.writeU32(this.time),e.writeU32(i)):e.writeU8(0),e.render()}fromRaw(t){const e=s.read(t);return this.tx=new o,this.tx.fromReader(e),this.hash=this.tx.hash(),this.mtime=e.readU32(),1===e.readU8()&&(this.block=e.readHash(),this.height=e.readU32(),this.time=e.readU32(),this.index=e.readU32(),2147483647===this.index&&(this.index=-1)),this}static fromRaw(t){return(new this).fromRaw(t)}},e.MapRecord=class{constructor(){this.wids=new Set}add(t){return!this.wids.has(t)&&(this.wids.add(t),!0)}remove(t){return this.wids.delete(t)}toWriter(t){t.writeU32(this.wids.size);for(const e of this.wids)t.writeU32(e);return t}getSize(){return 4+4*this.wids.size}toRaw(){const t=this.getSize();return this.toWriter(s.write(t)).render()}fromReader(t){const e=t.readU32();for(let i=0;i<e;i++)this.wids.add(t.readU32());return this}fromRaw(t){return this.fromReader(s.read(t))}static fromReader(t){return(new this).fromReader(t)}static fromRaw(t){return(new this).fromRaw(t)}},t.exports=e},function(t,e,i){"use strict";
/*!
 * layout.js - data layout for wallets
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(71);e.wdb={V:r.key("V"),O:r.key("O"),R:r.key("R"),D:r.key("D"),p:r.key("p",["hash"]),P:r.key("P",["uint32","hash"]),r:r.key("r",["uint32","uint32","hash"]),w:r.key("w",["uint32"]),W:r.key("W",["uint32"]),l:r.key("l",["ascii"]),a:r.key("a",["uint32","uint32"]),i:r.key("i",["uint32","ascii"]),n:r.key("n",["uint32","uint32"]),h:r.key("h",["uint32"]),b:r.key("b",["uint32"]),o:r.key("o",["hash256","uint32"]),T:r.key("T",["hash256"]),t:r.key("t",["uint32"])},e.txdb={prefix:r.key("t",["uint32"]),R:r.key("R"),r:r.key("r",["uint32"]),t:r.key("t",["hash256"]),c:r.key("c",["hash256","uint32"]),d:r.key("d",["hash256","uint32"]),s:r.key("s",["hash256","uint32"]),p:r.key("p",["hash256"]),m:r.key("m",["uint32","hash256"]),h:r.key("h",["uint32","hash256"]),T:r.key("T",["uint32","hash256"]),P:r.key("P",["uint32","hash256"]),M:r.key("M",["uint32","uint32","hash256"]),H:r.key("H",["uint32","uint32","hash256"]),C:r.key("C",["uint32","hash256","uint32"]),b:r.key("b",["uint32"])}},function(t,e,i){"use strict";
/*!
 * walletkey.js - walletkey object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(12),s=i(45),n=i(81);class o extends s{constructor(t){super(t),this.keyType=n.types.HD,this.name=null,this.account=-1,this.branch=-1,this.index=-1}toJSON(t){return{name:this.name,account:this.account,branch:this.branch,index:this.index,witness:this.witness,nested:this.nested,publicKey:this.publicKey.toString("hex"),script:this.script?this.script.toRaw().toString("hex"):null,program:this.witness?this.getProgram().toRaw().toString("hex"):null,type:r.typesByVal[this.getType()].toLowerCase(),address:this.getAddress("string",t)}}fromHD(t,e,i,r){return this.keyType=n.types.HD,this.name=t.name,this.account=t.accountIndex,this.branch=i,this.index=r,this.witness=t.witness,this.nested=2===i,e.privateKey?this.fromPrivate(e.privateKey):this.fromPublic(e.publicKey)}static fromHD(t,e,i,r){return(new this).fromHD(t,e,i,r)}fromImport(t,e){return this.keyType=n.types.KEY,this.name=t.name,this.account=t.accountIndex,this.witness=t.witness,this.fromRaw(e)}static fromImport(t,e){return(new this).fromImport(t,e)}fromRing(t,e){return this.keyType=n.types.KEY,this.name=t.name,this.account=t.accountIndex,this.witness=t.witness,this.fromOptions(e)}static fromRing(t,e){return(new this).fromRing(t,e)}toPath(){const t=new n;switch(t.name=this.name,t.account=this.account,this.keyType){case n.types.HD:t.branch=this.branch,t.index=this.index;break;case n.types.KEY:t.data=this.toRaw()}return t.keyType=this.keyType,t.version=this.getVersion(),t.type=this.getType(),t.hash=this.getHash(),t}static isWalletKey(t){return t instanceof o}}t.exports=o},function(t,e,i){"use strict";
/*!
 * hd.js - hd keys for bcoin
 * Copyright (c) 2015-2016, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(0),s=i(82),n=i(83),o=i(153),a=i(154),h=i(167),c=e;c.fromBase58=function(t,e){return o.isBase58(t)?o.fromBase58(t,e):a.fromBase58(t,e)},c.generate=function(){return o.generate()},c.fromSeed=function(t){return o.fromSeed(t)},c.fromMnemonic=function(t){return o.fromMnemonic(t)},c.fromJSON=function(t,e){return t.xprivkey?o.fromJSON(t,e):a.fromJSON(t,e)},c.fromRaw=function(t,e){return o.isRaw(t,e)?o.fromRaw(t,e):a.fromRaw(t,e)},c.from=function(t,e){if(r(t,"Options required."),c.isHD(t))return t;if(c.isBase58(t,e))return c.fromBase58(t,e);if(c.isRaw(t,e))return c.fromRaw(t,e);if(t&&"object"==typeof t)return c.fromMnemonic(t);throw new Error("Cannot create HD key from bad options.")},c.isBase58=function(t,e){return o.isBase58(t,e)||a.isBase58(t,e)},c.isRaw=function(t,e){return o.isRaw(t,e)||a.isRaw(t,e)},c.isHD=function(t){return o.isHDPrivateKey(t)||a.isHDPublicKey(t)},c.isPrivate=function(t){return o.isHDPrivateKey(t)},c.isPublic=function(t){return a.isHDPublicKey(t)},c.common=s,c.HD=c,c.Mnemonic=n,c.PrivateKey=o,c.PublicKey=a,c.HDPrivateKey=o,c.HDPublicKey=a,c.wordlist=h},function(t,e,i){"use strict";
/*!
 * wordlist.js - wordlists for bcoin
 * Copyright (c) 2015-2016, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(240);e.get=function(t){switch(t){case"simplified chinese":return r.chinese.simplified;case"traditional chinese":return r.chinese.traditional;case"english":return r.english;case"french":return r.french;case"italian":return r.italian;case"japanese":return r.japanese;case"spanish":return r.spanish;default:throw new Error(`Unknown language: ${t}.`)}}},function(t,e,i){"use strict";
/*!
 * account.js - account object for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(0),s=i(2),n=i(48),o=i(81),a=i(68),h=i(10),c=i(165),{HDPublicKey:l}=i(166);class u{constructor(t,e){r(t,"Database is required."),this.wdb=t,this.network=t.network,this.wid=0,this.id=null,this.accountIndex=0,this.name=null,this.initialized=!1,this.witness=!0===t.options.witness,this.watchOnly=!1,this.type=u.types.PUBKEYHASH,this.m=1,this.n=1,this.receiveDepth=0,this.changeDepth=0,this.nestedDepth=0,this.lookahead=10,this.accountKey=null,this.keys=[],e&&this.fromOptions(e)}fromOptions(t){if(r(t,"Options are required."),r(t.wid>>>0===t.wid),r(a.isName(t.id),"Bad Wallet ID."),r(l.isHDPublicKey(t.accountKey),"Account key is required."),r(t.accountIndex>>>0===t.accountIndex,"Account index is required."),this.wid=t.wid,this.id=t.id,null!=t.accountIndex&&(r(t.accountIndex>>>0===t.accountIndex),this.accountIndex=t.accountIndex),null!=t.name&&(r(a.isName(t.name),"Bad account name."),this.name=t.name),null!=t.initialized&&(r("boolean"==typeof t.initialized),this.initialized=t.initialized),null!=t.witness&&(r("boolean"==typeof t.witness),this.witness=t.witness),null!=t.watchOnly&&(r("boolean"==typeof t.watchOnly),this.watchOnly=t.watchOnly),null!=t.type&&("string"==typeof t.type?(this.type=u.types[t.type.toUpperCase()],r(null!=this.type)):(r("number"==typeof t.type),this.type=t.type,r(u.typesByVal[this.type]))),null!=t.m&&(r((255&t.m)===t.m),this.m=t.m),null!=t.n&&(r((255&t.n)===t.n),this.n=t.n),null!=t.receiveDepth&&(r(t.receiveDepth>>>0===t.receiveDepth),this.receiveDepth=t.receiveDepth),null!=t.changeDepth&&(r(t.changeDepth>>>0===t.changeDepth),this.changeDepth=t.changeDepth),null!=t.nestedDepth&&(r(t.nestedDepth>>>0===t.nestedDepth),this.nestedDepth=t.nestedDepth),null!=t.lookahead&&(r(t.lookahead>>>0===t.lookahead),r(t.lookahead>=0),r(t.lookahead<=u.MAX_LOOKAHEAD),this.lookahead=t.lookahead),this.accountKey=t.accountKey,this.n>1&&(this.type=u.types.MULTISIG),this.name||(this.name=this.accountIndex.toString(10)),this.m<1||this.m>this.n)throw new Error("m ranges between 1 and n");if(t.keys){r(Array.isArray(t.keys));for(const e of t.keys)this.pushKey(e)}return this}static fromOptions(t,e){return new this(t).fromOptions(e)}async init(t){if(this.keys.length!==this.n-1)return r(!this.initialized),void this.save(t);r(0===this.receiveDepth),r(0===this.changeDepth),r(0===this.nestedDepth),this.initialized=!0,await this.initDepth(t)}pushKey(t){if("string"==typeof t&&(t=l.fromBase58(t,this.network)),!l.isHDPublicKey(t))throw new Error("Must add HD keys to wallet.");if(!t.isAccount())throw new Error("Must add HD account keys to BIP44 wallet.");if(this.type!==u.types.MULTISIG)throw new Error("Cannot add keys to non-multisig wallet.");if(t.equals(this.accountKey))throw new Error("Cannot add own key.");if(-1===n.insert(this.keys,t,f,!0))return!1;if(this.keys.length>this.n-1)throw n.remove(this.keys,t,f),new Error("Cannot add more keys.");return!0}spliceKey(t){if("string"==typeof t&&(t=l.fromBase58(t,this.network)),!l.isHDPublicKey(t))throw new Error("Must add HD keys to wallet.");if(!t.isAccount())throw new Error("Must add HD account keys to BIP44 wallet.");if(this.type!==u.types.MULTISIG)throw new Error("Cannot remove keys from non-multisig wallet.");if(this.keys.length===this.n-1)throw new Error("Cannot remove key.");return n.remove(this.keys,t,f)}async addSharedKey(t,e){const i=this.pushKey(e);if(await this.hasDuplicate())throw this.spliceKey(e),new Error("Cannot add a key from another account.");return await this.init(t),i}async hasDuplicate(){if(this.keys.length!==this.n-1)return!1;const t=this.deriveReceive(0).getScriptHash();return this.wdb.hasPath(this.wid,t)}removeSharedKey(t,e){return!!this.spliceKey(e)&&(this.save(t),!0)}createReceive(t){return this.createKey(t,0)}createChange(t){return this.createKey(t,1)}createNested(t){return this.createKey(t,2)}async createKey(t,e){let i,r;switch(e){case 0:i=this.deriveReceive(this.receiveDepth),r=this.deriveReceive(this.receiveDepth+this.lookahead),await this.saveKey(t,r),this.receiveDepth+=1,this.receive=i;break;case 1:i=this.deriveChange(this.changeDepth),r=this.deriveChange(this.changeDepth+this.lookahead),await this.saveKey(t,r),this.changeDepth+=1,this.change=i;break;case 2:i=this.deriveNested(this.nestedDepth),r=this.deriveNested(this.nestedDepth+this.lookahead),await this.saveKey(t,r),this.nestedDepth+=1,this.nested=i;break;default:throw new Error(`Bad branch: ${e}.`)}return this.save(t),i}deriveReceive(t,e){return this.deriveKey(0,t,e)}deriveChange(t,e){return this.deriveKey(1,t,e)}deriveNested(t,e){if(!this.witness)throw new Error("Cannot derive nested on non-witness account.");return this.deriveKey(2,t,e)}derivePath(t,e){switch(t.keyType){case o.types.HD:return this.deriveKey(t.branch,t.index,e);case o.types.KEY:{r(this.type===u.types.PUBKEYHASH);let i=t.data;return t.encrypted&&!(i=e.decipher(i,t.hash))?null:c.fromImport(this,i)}case o.types.ADDRESS:return null;default:throw new Error("Bad key type.")}}deriveKey(t,e,i){r("number"==typeof t);const s=[];let n;if(i&&i.key&&!this.watchOnly){const r=this.network.keyPrefix.coinType;n=(n=i.key.deriveAccount(44,r,this.accountIndex)).derive(t).derive(e)}else n=this.accountKey.derive(t).derive(e);const o=c.fromHD(this,n,t,e);switch(this.type){case u.types.PUBKEYHASH:break;case u.types.MULTISIG:s.push(n.publicKey);for(const i of this.keys){const r=i.derive(t).derive(e);s.push(r.publicKey)}o.script=h.fromMultisig(this.m,this.n,s)}return o}save(t){return this.wdb.saveAccount(t,this)}saveKey(t,e){return this.wdb.saveKey(t,this.wid,e)}savePath(t,e){return this.wdb.savePath(t,this.wid,e)}async initDepth(t){this.receiveDepth=1;for(let e=0;e<=this.lookahead;e++){const i=this.deriveReceive(e);await this.saveKey(t,i)}this.changeDepth=1;for(let e=0;e<=this.lookahead;e++){const i=this.deriveChange(e);await this.saveKey(t,i)}if(this.witness){this.nestedDepth=1;for(let e=0;e<=this.lookahead;e++){const i=this.deriveNested(e);await this.saveKey(t,i)}}this.save(t)}async syncDepth(t,e,i,s){let n=!1,o=null;if(e>this.receiveDepth){const i=this.receiveDepth+this.lookahead;r(e<=i+1);for(let r=i;r<e+this.lookahead;r++){const e=this.deriveReceive(r);await this.saveKey(t,e),o=e}this.receiveDepth=e,n=!0}if(i>this.changeDepth){const e=this.changeDepth+this.lookahead;r(i<=e+1);for(let r=e;r<i+this.lookahead;r++){const e=this.deriveChange(r);await this.saveKey(t,e)}this.changeDepth=i,n=!0}if(this.witness&&s>this.nestedDepth){const e=this.nestedDepth+this.lookahead;r(s<=e+1);for(let i=e;i<s+this.lookahead;i++){const e=this.deriveNested(i);await this.saveKey(t,e),o=e}this.nestedDepth=s,n=!0,o=this.nested}return n&&this.save(t),o}async setLookahead(t,e){if(e!==this.lookahead){if(e<this.lookahead){const i=this.lookahead-e;return this.receiveDepth+=i,this.changeDepth+=i,this.witness&&(this.nestedDepth+=i),this.lookahead=e,void this.save(t)}{const i=this.receiveDepth+this.lookahead,r=this.receiveDepth+e;for(let e=i;e<r;e++){const i=this.deriveReceive(e);await this.saveKey(t,i)}}{const i=this.changeDepth+this.lookahead,r=this.changeDepth+e;for(let e=i;e<r;e++){const i=this.deriveChange(e);await this.saveKey(t,i)}}if(this.witness){const i=this.nestedDepth+this.lookahead,r=this.nestedDepth+e;for(let e=i;e<r;e++){const i=this.deriveNested(e);await this.saveKey(t,i)}}this.lookahead=e,this.save(t)}}receiveKey(){return this.initialized?this.deriveReceive(this.receiveDepth-1):null}changeKey(){return this.initialized?this.deriveChange(this.changeDepth-1):null}nestedKey(){return this.initialized&&this.witness?this.deriveNested(this.nestedDepth-1):null}receiveAddress(){const t=this.receiveKey();return t?t.getAddress():null}changeAddress(){const t=this.changeKey();return t?t.getAddress():null}nestedAddress(){const t=this.nestedKey();return t?t.getAddress():null}inspect(){const t=this.receiveAddress(),e=this.changeAddress(),i=this.nestedAddress();return{id:this.id,wid:this.wid,name:this.name,network:this.network.type,initialized:this.initialized,witness:this.witness,watchOnly:this.watchOnly,type:u.typesByVal[this.type].toLowerCase(),m:this.m,n:this.n,accountIndex:this.accountIndex,receiveDepth:this.receiveDepth,changeDepth:this.changeDepth,nestedDepth:this.nestedDepth,lookahead:this.lookahead,receiveAddress:t?t.toString(this.network):null,changeAddress:e?e.toString(this.network):null,nestedAddress:i?i.toString(this.network):null,accountKey:this.accountKey.toBase58(this.network),keys:this.keys.map(t=>t.toBase58(this.network))}}toJSON(t){const e=this.receiveAddress(),i=this.changeAddress(),r=this.nestedAddress();return{name:this.name,initialized:this.initialized,witness:this.witness,watchOnly:this.watchOnly,type:u.typesByVal[this.type].toLowerCase(),m:this.m,n:this.n,accountIndex:this.accountIndex,receiveDepth:this.receiveDepth,changeDepth:this.changeDepth,nestedDepth:this.nestedDepth,lookahead:this.lookahead,receiveAddress:e?e.toString(this.network):null,changeAddress:i?i.toString(this.network):null,nestedAddress:r?r.toString(this.network):null,accountKey:this.accountKey.toBase58(this.network),keys:this.keys.map(t=>t.toBase58(this.network)),balance:t?t.toJSON(!0):null}}getSize(){let t=0;return(t+=92)+74*this.keys.length}toRaw(){const t=this.getSize(),e=s.write(t);let i=0;this.initialized&&(i|=1),this.witness&&(i|=2),e.writeU8(i),e.writeU8(this.type),e.writeU8(this.m),e.writeU8(this.n),e.writeU32(this.receiveDepth),e.writeU32(this.changeDepth),e.writeU32(this.nestedDepth),e.writeU8(this.lookahead),d(this.accountKey,e),e.writeU8(this.keys.length);for(const t of this.keys)d(t,e);return e.render()}fromRaw(t){const e=s.read(t),i=e.readU8();this.initialized=0!=(1&i),this.witness=0!=(2&i),this.type=e.readU8(),this.m=e.readU8(),this.n=e.readU8(),this.receiveDepth=e.readU32(),this.changeDepth=e.readU32(),this.nestedDepth=e.readU32(),this.lookahead=e.readU8(),this.accountKey=p(e),r(this.type<u.typesByVal.length);const o=e.readU8();for(let t=0;t<o;t++){const t=p(e);n.insert(this.keys,t,f,!0)}return this}static fromRaw(t,e){return new this(t).fromRaw(e)}static isAccount(t){return t instanceof u}}function f(t,e){return t.compare(e)}function d(t,e){e.writeU8(t.depth),e.writeU32BE(t.parentFingerPrint),e.writeU32BE(t.childIndex),e.writeBytes(t.chainCode),e.writeBytes(t.publicKey)}function p(t){const e=new l;return e.depth=t.readU8(),e.parentFingerPrint=t.readU32BE(),e.childIndex=t.readU32BE(),e.chainCode=t.readBytes(32),e.publicKey=t.readBytes(33),e}u.types={PUBKEYHASH:0,MULTISIG:1},u.typesByVal=["PUBKEYHASH","MULTISIG"],u.MAX_LOOKAHEAD=40,t.exports=u},function(t,e,i){"use strict";t.exports={Client:window.WebSocket||window.MozWebSocket,EventSource:window.EventSource}},function(t,e,i){"use strict";(function(e){const r=i(0),s=e.alloc(0),n={OPEN:0,CLOSE:1,PING:2,PONG:3,MESSAGE:4,UPGRADE:5,NOOP:6};class o{constructor(t,i,o){r("number"==typeof t),r(t>>>0===t),r(t<=n.NOOP),r("boolean"==typeof o),o?(null==i&&(i=s),r(e.isBuffer(i))):(null==i&&(i=""),r("string"==typeof i)),this.type=t,this.data=i,this.binary=o}toString(){let t="";return this.binary?(t+="b",t+=this.type.toString(10),t+=this.data.toString("base64")):(t+=this.type.toString(10),t+=this.data),t}static fromString(t){r("string"==typeof t);let i,s=t.charCodeAt(0),o=!1;return 98===s?(r(t.length>1),s=t.charCodeAt(1),i=e.from(t.substring(2),"base64"),o=!0):i=t.substring(1),r((s-=48)>=0&&s<=9),r(s<=n.NOOP),new this(s,i,o)}size(){let t=1;return this.binary?t+=this.data.length:t+=e.byteLength(this.data,"utf8"),t}toRaw(){const t=e.allocUnsafe(this.size());return t[0]=this.type,this.binary?this.data.copy(t,1):this.data.length>0&&t.write(this.data,1,"utf8"),t}static fromRaw(t){r(e.isBuffer(t)),r(t.length>0);const i=t[0];return r(i<=n.NOOP),new this(i,t.slice(1),!0)}}o.types=n,o.table=["open","close","ping","pong","message","upgrade","noop"],t.exports=o}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){const e=i(46),r=i(176),s=i(18),n=i(232),o=i(5),a=i(256),h=i(272),c=document.getElementsByTagName("body")[0],l=document.getElementById("log"),u=document.getElementById("wallet"),f=document.getElementById("tx"),d=document.getElementById("floating"),p=document.getElementById("send"),g=document.getElementById("newaddr"),m=document.getElementById("state"),b=document.getElementById("rpc"),w=document.getElementById("cmd"),y=[];let v=0;const k=new e({level:"debug",console:!0});k.writeConsole=function(t,i,r){const s=e.levelsByVal[t],n=h(r,!1);++v>1e3&&(l.innerHTML="",v=1);const o=Math.floor(Date.now()/1e3);l.innerHTML+=`<span style="color:blue;">${o}</span> `,"error"===s?(l.innerHTML+=`<span style="color:red;">[${s}] `,i&&(l.innerHTML+=`(${i}) `),l.innerHTML+="</span>"):(l.innerHTML+=`[${s}] `,i&&(l.innerHTML+=`(${i}) `)),l.innerHTML+=A(n)+"\n",l.scrollTop=l.scrollHeight};const E=new r({hash:!0,query:!0,prune:!0,network:"testnet",memory:!1,coinCache:30,logConsole:!0,workers:!0,workerFile:"/worker.js",createSocket:(e,i)=>{const r="https:"===t.location.protocol?"wss":"ws",s=t.location.host;return a.connect(`${r}://${s}`,e,i)},logger:k,plugins:[n]}),{wdb:S}=E.require("walletdb");function R(t){if(t instanceof Error)return d.innerHTML=t.stack,void(d.style.display="block");d.innerHTML=A(JSON.stringify(t,null,2)),d.style.display="block"}function I(t){const e=document.createElement("div");return e.innerHTML=t,e.firstChild}function A(t,e){return t.replace(e?/&/g:/&(?!#?\w+;)/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;")}function x(t,e){const i=e?e.height:-1;if(20===y.length){const t=y.shift();f.removeChild(t),t.onmouseup=null}const r=I(""+`<a style="display:block;" href="#${t.rhash()}">`+`${t.rhash()} (${i} - ${function(t){return(t/=1e3).toFixed(2)+"kb"}(t.getSize())})`+"</a>");f.appendChild(r),O(r,t),y.push(r),m.innerHTML=""+`tx=${E.chain.db.state.tx} `+`coin=${E.chain.db.state.coin} `+`value=${s.btc(E.chain.db.state.value)}`}function O(t,e){t.onmouseup=function(t){return R(e),t.stopPropagation(),!1}}async function _(t){try{await async function(t){const{key:e,mnemonic:i}=t.master.toJSON(E.network,!0),r=await t.getAccount("default"),n=r.receiveAddress(),a=r.nestedAddress(),h=n.toString(E.network),c=a?a.toString(E.network):null;let l="";l+="<b>Wallet</b><br>",c?(l+=`Current Address (p2wpkh): <b>${h}</b><br>`,l+=`Current Address (p2wpkh behind p2sh): <b>${c}</b><br>`):l+=`Current Address: <b>${h}</b><br>`,l+=`Extended Private Key: <b>${e.xprivkey}</b><br>`,l+=`Mnemonic: <b>${i.phrase}</b><br>`;const f=await t.getBalance();l+=`Confirmed Balance: <b>${s.btc(f.confirmed)}</b><br>`,l+=`Unconfirmed Balance: <b>${s.btc(f.unconfirmed)}</b><br>`;const d=await t.getHistory(),p=await t.toDetails(d);l+="TXs:\n",u.innerHTML=l;for(const t of p){const e=o.revHex(t.hash),i=I(`<a style="display:block;" href="#${e}">${e}</a>`);u.appendChild(i),O(i,t.toJSON())}}(t)}catch(t){R(t)}}S.options.witness=!0,window.onunhandledrejection=function(t){throw t.reason},c.onmouseup=function(){d.style.display="none"},d.onmouseup=function(t){return t.stopPropagation(),!1},b.onsubmit=function(t){const e=(w.value||"").trim().split(/\s+/),i=e.shift(),r=[];w.value="";for(const t of e){let e;try{e=JSON.parse(t)}catch(i){e=t}r.push(e)}return(async()=>{try{R(await E.rpc.execute({method:i,params:r}))}catch(t){R(t)}})(),t.preventDefault(),t.stopPropagation(),!1},p.onsubmit=function(t){const e=document.getElementById("amount").value,i={outputs:[{address:document.getElementById("address").value,value:s.value(e)}]};return(async()=>{try{const t=await S.primary.createTX(i);await S.primary.sign(t),await E.relay(t.toTX()),R(t)}catch(t){R(t)}})(),t.preventDefault(),t.stopPropagation(),!1},g.onmouseup=function(){(async()=>{try{await S.primary.createReceive(),_(S.primary)}catch(t){R(t)}})()},E.chain.on("block",x),E.on("tx",x),(async()=>{await E.open(),await E.connect(),E.startSync(),S.primary.on("balance",()=>{_(S.primary)}),_(S.primary)})().catch(t=>{throw t})}).call(this,i(11))},function(t,e,i){"use strict";(function(e,r){
/*!
 * logger.js - basic logger for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),n=i(173),o=i(175);class a{constructor(t){this.level=a.levels.NONE,this.colors=a.HAS_TTY,this.console=!0,this.shrink=!0,this.closed=!0,this.closing=!1,this.filename=null,this.stream=null,this.contexts=Object.create(null),t&&this.set(t)}set(t){s(t),s(this.closed),"string"!=typeof t?(null!=t.level&&(s("string"==typeof t.level),this.setLevel(t.level)),null!=t.colors&&a.HAS_TTY&&(s("boolean"==typeof t.colors),this.colors=t.colors),null!=t.console&&(s("boolean"==typeof t.console),this.console=t.console),null!=t.shrink&&(s("boolean"==typeof t.shrink),this.shrink=t.shrink),null!=t.filename&&(s("string"==typeof t.filename,"Bad file."),this.filename=t.filename)):this.setLevel(t)}async open(){this.filename?this.stream?this.closed=!1:o.unsupported?this.closed=!1:(this.shrink&&await this.truncate(),this.stream=await l(this.filename),this.stream.once("error",this.handleError.bind(this)),this.closed=!1):this.closed=!1}async close(){if(null!=this.timer&&(clearTimeout(this.timer),this.timer=null),o.unsupported)return this.closed=!0,void(this.stream=null);if(this.stream){try{this.closing=!0,await function(t){return new Promise((e,i)=>{const r=()=>{t.removeListener("error",s),t.removeListener("close",n)},s=t=>{r(),i(t)},n=()=>{r(),e(t)};t.removeAllListeners("error"),t.removeAllListeners("close"),t.once("error",s),t.once("close",n),t.close()})}(this.stream)}finally{this.closing=!1}this.stream=null}this.closed=!0}async truncate(){if(!this.filename)return;if(o.unsupported)return;let t;s(!this.stream);try{t=await o.stat(this.filename)}catch(t){if("ENOENT"===t.code)return;throw t}const i=a.MAX_FILE_SIZE;if(t.size<=i+i/10)return;this.debug("Truncating log file to %dmb.",c(i));const r=await o.open(this.filename,"r+"),n=e.allocUnsafe(i);await o.read(r,n,0,i,t.size-i),await o.ftruncate(r,i),await o.write(r,n,0,i,0),await o.close(r)}handleError(t){try{this.stream.close()}catch(t){}this.stream=null,this.retry()}async reopen(){if(!this.stream&&!this.closed&&!o.unsupported){try{this.stream=await l(this.filename)}catch(t){return void this.retry()}this.stream.once("error",t=>this.handleError(t))}}retry(){null==this.timer&&(this.timer=setTimeout(()=>{this.timer=null,this.reopen()},1e4))}setFile(t){s("string"==typeof t),s(!this.stream,"Log stream has already been created."),this.filename=t}setLevel(t){const e=a.levels[t.toUpperCase()];s(null!=e,"Invalid log level."),this.level=e}error(...t){if(this.level<a.levels.ERROR)return;const e=t[0];e instanceof Error?this.logError(a.levels.ERROR,null,e):this.log(a.levels.ERROR,null,t)}warning(...t){if(this.level<a.levels.WARNING)return;const e=t[0];e instanceof Error?this.logError(a.levels.WARNING,null,e):this.log(a.levels.WARNING,null,t)}info(...t){if(this.level<a.levels.INFO)return;const e=t[0];e instanceof Error?this.logError(a.levels.INFO,null,e):this.log(a.levels.INFO,null,t)}debug(...t){if(this.level<a.levels.DEBUG)return;const e=t[0];e instanceof Error?this.logError(a.levels.DEBUG,null,e):this.log(a.levels.DEBUG,null,t)}spam(...t){if(this.level<a.levels.SPAM)return;const e=t[0];e instanceof Error?this.logError(a.levels.SPAM,null,e):this.log(a.levels.SPAM,null,t)}log(t,e,i){this.closed||this.level<t||(this.writeConsole(t,e,i),this.writeStream(t,e,i))}context(t){let e=this.contexts[t];return e||(e=new h(this,t),this.contexts[t]=e),e}writeConsole(t,e,i){const o=a.levelsByVal[t];if(s(o,"Invalid log level."),!this.console)return!1;if(!r.stdout){let r=`[${o}] `;if(e&&(r+=`(${e}) `),i.length>0){const[e]=i;if(e&&"object"==typeof e)return t===a.levels.ERROR?console.error(r,e):console.log(r,e)}return r+=n(i,!1),t===a.levels.ERROR?console.error(r):console.log(r),!0}let h;if(this.colors){const e=a.styles[t];s(e),h=`[${e}m[${o}][m `}else h=`[${o}] `;return e&&(h+=`(${e}) `),h+=n(i,this.colors),h+="\n",t===a.levels.ERROR?r.stderr.write(h):r.stdout.write(h)}writeStream(t,e,i){const r=a.prefixByVal[t];if(s(r,"Invalid log level."),!this.stream)return;if(this.closing)return;let o=`[${r}:${(new Date).toISOString().slice(0,-5)+"Z"}] `;e&&(o+=`(${e}) `),o+=n(i,!1),o+="\n",this.stream.write(o)}logError(t,e,i){if(this.closed)return;o.unsupported&&this.console&&t<=a.levels.WARNING&&console.error(i);let r=String(i.message).replace(/^ *Error: */,"");t!==a.levels.ERROR&&(r=`Error: ${r}`),this.log(t,e,[r]),t<=a.levels.WARNING&&this.stream&&this.stream.write(i.stack+"\n")}memoryUsage(){if(!r.memoryUsage)return{total:0,jsHeap:0,jsHeapTotal:0,nativeHeap:0,external:0};const t=r.memoryUsage();return{total:c(t.rss),jsHeap:c(t.heapUsed),jsHeapTotal:c(t.heapTotal),nativeHeap:c(t.rss-t.heapTotal),external:c(t.external)}}memory(t){const e=this.memoryUsage();this.log(a.levels.DEBUG,t,["Memory: rss=%dmb, js-heap=%d/%dmb native-heap=%dmb",e.total,e.jsHeap,e.jsHeapTotal,e.nativeHeap])}}class h{constructor(t,e){s("string"==typeof e),this.logger=t,this.module=e}open(){return this.logger.open()}close(){return this.logger.close()}setFile(t){this.logger.setFile(t)}setLevel(t){this.logger.setLevel(t)}error(...t){if(this.logger.level<a.levels.ERROR)return;const e=t[0];e instanceof Error?this.logError(a.levels.ERROR,e):this.log(a.levels.ERROR,t)}warning(...t){if(this.logger.level<a.levels.WARNING)return;const e=t[0];e instanceof Error?this.logError(a.levels.WARNING,e):this.log(a.levels.WARNING,t)}info(...t){if(this.logger.level<a.levels.INFO)return;const e=t[0];e instanceof Error?this.logError(a.levels.INFO,e):this.log(a.levels.INFO,t)}debug(...t){if(this.logger.level<a.levels.DEBUG)return;const e=t[0];e instanceof Error?this.logError(a.levels.DEBUG,e):this.log(a.levels.DEBUG,t)}spam(...t){if(this.logger.level<a.levels.SPAM)return;const e=t[0];e instanceof Error?this.logError(a.levels.SPAM,e):this.log(a.levels.SPAM,t)}log(t,e){this.logger.log(t,this.module,e)}context(t){return new h(this.logger,t)}logError(t,e){this.logger.logError(t,this.module,e)}memoryUsage(){return this.logger.memoryUsage()}memory(){this.logger.memory(this.module)}}function c(t){return Math.floor(t/(1<<20))}function l(t){return new Promise((e,i)=>{const r=o.createWriteStream(t,{flags:"a"}),s=()=>{r.removeListener("error",n),r.removeListener("open",a)},n=t=>{try{r.close()}catch(t){}s(),i(t)},a=()=>{s(),e(r)};r.once("error",n),r.once("open",a)})}a.HAS_TTY=Boolean(r.stdout&&r.stdout.isTTY),a.MAX_FILE_SIZE=20<<20,a.levels={NONE:0,ERROR:1,WARNING:2,INFO:3,DEBUG:4,SPAM:5},a.levelsByVal=["none","error","warning","info","debug","spam"],a.prefixByVal=["N","E","W","I","D","S"],a.styles=["0","1;31","1;33","94","90","90"],a.global=new a,t.exports=a}).call(this,i(1).Buffer,i(21))},function(t,e,i){"use strict";(function(e){const r=i(174),s={showHidden:!1,depth:20,colors:!1,customInspect:!0,showProxy:!1,maxArrayLength:1e4,breakLength:60,compact:!0};function n(t){try{return JSON.stringify(t)}catch(t){return"[error]"}}function o(t,i){if(null==t)return"null";if(!e.isBuffer(t))return"[error]";const r=t.toString("hex");return i?function(t){let e="";for(let i=t.length-2;i>=0;i-=2)e+=t[i]+t[i+1];return e}(r):r}t.exports=function(t,e){if(0===t.length)return"";const i=t[0];if(s.colors=e,"string"!=typeof i)return r(i,s);if(1===t.length)return i;let a,h="",c=1,l=0;for(let e=0;e<i.length-1;e++){if(37!==i.charCodeAt(e))continue;const u=i.charCodeAt(++e);if(c!==t.length){switch(u){case 115:a=String(t[c++]);break;case 106:a=n(t[c++]);break;case 100:a=`${Number(t[c++])}`;break;case 79:case 111:a=r(t[c++],s);break;case 105:a=`${parseInt(t[c++])}`;break;case 102:a=`${parseFloat(t[c++])}`;break;case 120:a=o(t[c++],!1);break;case 104:a=o(t[c++],!0);break;case 37:h+=i.slice(l,e),l=e+1;continue;default:continue}l!==e-1&&(h+=i.slice(l,e-1)),h+=a,l=e+1}else 37===u&&(h+=i.slice(l,e),l=e+1)}for(0===l?h=i:l<i.length&&(h+=i.slice(l));c<t.length;){const e=t[c++];h+="object"!=typeof e&&"symbol"!=typeof e||null===e?` ${e}`:` ${r(e,s)}`}return h}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";t.exports=function(t){if(void 0===t)return"undefined";if(t!=t)return"NaN";try{return JSON.stringify(t,null,2)}catch(t){return"{}"}}},function(t,e,i){"use strict";e.unsupported=!0},function(t,e,i){"use strict";
/*!
 * spvnode.js - spv node for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(0),{Lock:s}=i(28),n=i(179),o=i(192),a=i(218),h=i(224),c=i(231);t.exports=class extends a{constructor(t){super("bcoin","bcoin.conf","debug.log",t),this.opened=!1,this.spv=!0,this.chain=new n({network:this.network,logger:this.logger,prefix:this.config.prefix,memory:this.config.bool("memory"),maxFiles:this.config.uint("max-files"),cacheSize:this.config.mb("cache-size"),entryCache:this.config.uint("entry-cache"),forceFlags:this.config.bool("force-flags"),checkpoints:this.config.bool("checkpoints"),bip91:this.config.bool("bip91"),bip148:this.config.bool("bip148"),spv:!0}),this.pool=new o({network:this.network,logger:this.logger,chain:this.chain,prefix:this.config.prefix,proxy:this.config.str("proxy"),onion:this.config.bool("onion"),upnp:this.config.bool("upnp"),seeds:this.config.array("seeds"),nodes:this.config.array("nodes"),only:this.config.array("only"),maxOutbound:this.config.uint("max-outbound"),createSocket:this.config.func("create-socket"),memory:this.config.bool("memory"),selfish:!0,listen:!1}),this.rpc=new c(this),this.http=new h({network:this.network,logger:this.logger,node:this,prefix:this.config.prefix,ssl:this.config.bool("ssl"),keyFile:this.config.path("ssl-key"),certFile:this.config.path("ssl-cert"),host:this.config.str("http-host"),port:this.config.uint("http-port"),apiKey:this.config.str("api-key"),noAuth:this.config.bool("no-auth"),cors:this.config.bool("cors")}),this.rescanJob=null,this.scanLock=new s,this.watchLock=new s,this.init()}init(){this.chain.on("error",t=>this.error(t)),this.pool.on("error",t=>this.error(t)),this.http&&this.http.on("error",t=>this.error(t)),this.pool.on("tx",t=>{this.rescanJob||this.emit("tx",t)}),this.chain.on("block",t=>{this.emit("block",t)}),this.chain.on("connect",async(t,e)=>{if(this.rescanJob)try{await this.watchBlock(t,e)}catch(t){this.error(t)}else this.emit("connect",t,e)}),this.chain.on("disconnect",(t,e)=>{this.emit("disconnect",t,e)}),this.chain.on("reorganize",(t,e)=>{this.emit("reorganize",t,e)}),this.chain.on("reset",t=>{this.emit("reset",t)}),this.loadPlugins()}async open(){r(!this.opened,"SPVNode is already open."),this.opened=!0,await this.handlePreopen(),await this.chain.open(),await this.pool.open(),await this.openPlugins(),await this.http.open(),await this.handleOpen(),this.logger.info("Node is loaded.")}async close(){r(this.opened,"SPVNode is not open."),this.opened=!1,await this.handlePreclose(),await this.http.close(),await this.closePlugins(),await this.pool.close(),await this.chain.close(),await this.handleClose()}async scan(t,e,i){const r=await this.scanLock.lock();this.chain.height;try{await this.chain.replay(t),this.chain.height}finally{r()}}watchUntil(t,e){return new Promise((i,r)=>{this.rescanJob=new class{constructor(t,e,i,r){this.resolve=t,this.reject=e,this.height=i,this.iter=r}}(i,r,t,e)})}async watchBlock(t,e){const i=await this.watchLock.lock();try{if(t.height<this.rescanJob.height)return void await this.rescanJob.iter(t,e.txs);this.rescanJob.resolve(),this.rescanJob=null}catch(t){this.rescanJob.reject(t),this.rescanJob=null}finally{i()}}async broadcast(t){try{await this.pool.broadcast(t)}catch(t){this.emit("error",t)}}sendTX(t){return this.broadcast(t)}relay(t){return this.broadcast(t)}connect(){return this.pool.connect()}disconnect(){return this.pool.disconnect()}startSync(){return this.pool.startSync()}stopSync(){return this.pool.stopSync()}}},function(t,e,i){"use strict";(function(e){
/*!
 * lock.js - lock and queue for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0);class s{constructor(t=!1,e){r("boolean"==typeof t),r(!e||"function"==typeof e),this.named=t,this.jobs=[],this.busy=!1,this.destroyed=!1,this.map=e?new e:new Map,this.current=null,this.unlocker=this.unlock.bind(this)}static create(t,e){const i=new s(t,e);return function(t,e){return i.lock(t,e)}}has(t){if(r(this.named,"Must use named jobs."),this.current)if(e.isBuffer(t)){if(this.current.equals(t))return!0}else if(this.current===t)return!0;return this.pending(t)}pending(t){r(this.named,"Must use named jobs.");const e=this.map.get(t);return null!=e&&e>0}lock(t,e){let i,s;if(this.named?(i=t||null,s=e||!1):(i=null,s=t||!1),this.destroyed)return Promise.reject(new Error("Lock is destroyed."));if(s)return r(this.busy),Promise.resolve(o);if(this.busy){if(i){const t=this.map.get(i)||0;this.map.set(i,t+1)}return new Promise((t,e)=>{this.jobs.push(new n(t,e,i))})}return this.busy=!0,this.current=i,Promise.resolve(this.unlocker)}unlock(){if(r(this.destroyed||this.busy),this.busy=!1,this.current=null,0===this.jobs.length)return;r(!this.destroyed);const t=this.jobs.shift();if(t.name){let e=this.map.get(t.name);r(e>0),0==--e?this.map.delete(t.name):this.map.set(t.name,e)}this.busy=!0,this.current=t.name,t.resolve(this.unlocker)}destroy(){r(!this.destroyed,"Lock is already destroyed."),this.destroyed=!0;const t=this.jobs;this.busy=!1,this.jobs=[],this.map.clear(),this.current=null;for(const e of t)e.reject(new Error("Lock was destroyed."))}}class n{constructor(t,e,i){this.resolve=t,this.reject=e,this.name=i||null}}function o(){}t.exports=s}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * maplock.js - lock and queue for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(0);class s{constructor(t,e){r(!t||"function"==typeof t),r(!e||"function"==typeof e),this.Map=t||Map,this.Set=e||Set,this.jobs=new this.Map,this.busy=new this.Set,this.destroyed=!1}static create(t,e){const i=new s(t,e);return function(t,e){return i.lock(t,e)}}has(t){return this.busy.has(t)}pending(t){return this.jobs.has(t)}lock(t,e=!1){return this.destroyed?Promise.reject(new Error("Lock is destroyed.")):null==t?Promise.resolve(o):e?(r(this.busy.has(t)),Promise.resolve(o)):this.busy.has(t)?new Promise((e,i)=>{this.jobs.has(t)||this.jobs.set(t,[]),this.jobs.get(t).push(new n(e,i))}):(this.busy.add(t),Promise.resolve(this._unlock(t)))}_unlock(t){const e=this;return function i(){e.unlock(t,i)}}unlock(t,e){const i=this.jobs.get(t);if(r(this.destroyed||this.busy.has(t)),this.busy.delete(t),!i)return;r(!this.destroyed);const s=i.shift();r(s),0===i.length&&this.jobs.delete(t),this.busy.add(t),s.resolve(e)}destroy(){r(!this.destroyed,"Lock is already destroyed.");const t=this.jobs;this.destroyed=!0,this.jobs=new this.Map,this.busy=new this.Set;for(const e of t.values())for(const t of e)t.reject(new Error("Lock was destroyed."))}}class n{constructor(t,e){this.resolve=t,this.reject=e}}function o(){}t.exports=s},function(t,e,i){"use strict";(function(e){
/*!
 * chain.js - blockchain management for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(47),n=i(155),o=i(46),{Lock:a}=i(28),h=i(87),{BufferMap:c}=i(13),l=i(4),u=i(182),f=i(138),d=i(3),p=i(5),g=i(156),m=i(35),b=i(10),{VerifyError:w}=i(191),y=f.thresholdStates;class v{constructor(t){this.network=l.primary,this.logger=o.global,this.workers=null,this.prefix=null,this.location=null,this.memory=!0,this.maxFiles=64,this.cacheSize=32<<20,this.compression=!0,this.spv=!1,this.bip91=!1,this.bip148=!1,this.prune=!1,this.indexTX=!1,this.indexAddress=!1,this.forceFlags=!1,this.coinCache=0,this.entryCache=5e3,this.maxOrphans=20,this.checkpoints=!0,t&&this.fromOptions(t)}fromOptions(t){return null!=t.network&&(this.network=l.get(t.network)),null!=t.logger&&(r("object"==typeof t.logger),this.logger=t.logger),null!=t.workers&&(r("object"==typeof t.workers),this.workers=t.workers),null!=t.spv&&(r("boolean"==typeof t.spv),this.spv=t.spv),null!=t.prefix&&(r("string"==typeof t.prefix),this.prefix=t.prefix,this.location=this.spv?s.join(this.prefix,"spvchain"):s.join(this.prefix,"chain")),null!=t.location&&(r("string"==typeof t.location),this.location=t.location),null!=t.memory&&(r("boolean"==typeof t.memory),this.memory=t.memory),null!=t.maxFiles&&(r(t.maxFiles>>>0===t.maxFiles),this.maxFiles=t.maxFiles),null!=t.cacheSize&&(r(Number.isSafeInteger(t.cacheSize)),r(t.cacheSize>=0),this.cacheSize=t.cacheSize),null!=t.compression&&(r("boolean"==typeof t.compression),this.compression=t.compression),null!=t.prune&&(r("boolean"==typeof t.prune),this.prune=t.prune),null!=t.indexTX&&(r("boolean"==typeof t.indexTX),this.indexTX=t.indexTX),null!=t.indexAddress&&(r("boolean"==typeof t.indexAddress),this.indexAddress=t.indexAddress),null!=t.forceFlags&&(r("boolean"==typeof t.forceFlags),this.forceFlags=t.forceFlags),null!=t.bip91&&(r("boolean"==typeof t.bip91),this.bip91=t.bip91),null!=t.bip148&&(r("boolean"==typeof t.bip148),this.bip148=t.bip148),null!=t.coinCache&&(r(t.coinCache>>>0===t.coinCache),this.coinCache=t.coinCache),null!=t.entryCache&&(r(t.entryCache>>>0===t.entryCache),this.entryCache=t.entryCache),null!=t.maxOrphans&&(r(t.maxOrphans>>>0===t.maxOrphans),this.maxOrphans=t.maxOrphans),null!=t.checkpoints&&(r("boolean"==typeof t.checkpoints),this.checkpoints=t.checkpoints),this}static fromOptions(t){return(new v).fromOptions(t)}}class k{constructor(){this.flags=b.flags.MANDATORY_VERIFY_FLAGS,this.flags&=~b.flags.VERIFY_P2SH,this.lockFlags=f.lockFlags.MANDATORY_LOCKTIME_FLAGS,this.bip34=!1,this.bip91=!1,this.bip148=!1}hasP2SH(){return 0!=(this.flags&b.flags.VERIFY_P2SH)}hasBIP34(){return this.bip34}hasBIP66(){return 0!=(this.flags&b.flags.VERIFY_DERSIG)}hasCLTV(){return 0!=(this.flags&b.flags.VERIFY_CHECKLOCKTIMEVERIFY)}hasMTP(){return 0!=(this.lockFlags&f.lockFlags.MEDIAN_TIME_PAST)}hasCSV(){return 0!=(this.flags&b.flags.VERIFY_CHECKSEQUENCEVERIFY)}hasWitness(){return 0!=(this.flags&b.flags.VERIFY_WITNESS)}hasBIP91(){return this.bip91}hasBIP148(){return this.bip148}}function E(t,e){return t-e}t.exports=class extends n{constructor(t){super(),this.opened=!1,this.options=new v(t),this.network=this.options.network,this.logger=this.options.logger.context("chain"),this.workers=this.options.workers,this.db=new u(this.options),this.locker=new a(!0,c),this.invalid=new h(100,null,c),this.state=new k,this.tip=new g,this.height=-1,this.synced=!1,this.orphanMap=new c,this.orphanPrev=new c}async open(){r(!this.opened,"Chain is already open."),this.opened=!0,this.logger.info("Chain is loading."),this.options.checkpoints&&this.logger.info("Checkpoints are enabled."),this.options.coinCache&&this.logger.info("Coin cache is enabled."),this.options.bip91&&this.logger.warning("BIP91 enabled. Segsignal will be enforced."),this.options.bip148&&this.logger.warning("BIP148 enabled. UASF will be enforced."),await this.db.open();const t=await this.db.getTip();r(t),this.tip=t,this.height=t.height,this.logger.info("Chain Height: %d",t.height),this.logger.memory();const e=await this.getDeploymentState();this.setDeploymentState(e),this.logger.memory(),this.emit("tip",t),this.maybeSync()}async close(){return r(this.opened,"Chain is not open."),this.opened=!1,this.db.close()}async verifyContext(t,e,i){const r=await this.verify(t,e,i);return this.options.spv?[new m,r]:this.isHistorical(e)?[await this.updateInputs(t,e),r]:(r.hasBIP34()||await this.verifyDuplicates(t,e),[await this.verifyInputs(t,e,r),r])}async verifyBlock(t){const e=await this.locker.lock();try{return await this._verifyBlock(t)}finally{e()}}async _verifyBlock(t){const e=f.flags.DEFAULT_FLAGS&~f.flags.VERIFY_POW;return this.verifyContext(t,this.tip,e)}isMainHash(t){return this.db.isMainHash(t)}isMainChain(t){return this.db.isMainChain(t)}getAncestor(t,e){return this.db.getAncestor(t,e)}getPrevious(t){return this.db.getPrevious(t)}getPrevCache(t){return this.db.getPrevCache(t)}getNext(t){return this.db.getNext(t)}getNextEntry(t){return this.db.getNextEntry(t)}async getMedianTime(t,e){let i=d.MEDIAN_TIMESPAN;const r=[];null!=e&&(r.push(e),i-=1);let s=t;for(let t=0;t<i&&s;t++){r.push(s.time),s=this.getPrevCache(s)||await this.getPrevious(s)}return r.sort(E),r[r.length>>>1]}isHistorical(t){return!!(this.options.checkpoints&&t.height+1<=this.network.lastCheckpoint)}async verify(t,e,i){if(r("number"==typeof i),!t.prevBlock.equals(e.hash))throw new w(t,"invalid","bad-prevblk",0);const s=t.hash();if(!this.verifyCheckpoint(e,s))throw new w(t,"checkpoint","checkpoint mismatch",100);if(this.isHistorical(e)){if(this.options.spv)return this.state;if(i&f.flags.VERIFY_BODY){r("function"==typeof t.createMerkleRoot);const e=t.createMerkleRoot();if(!e||!t.merkleRoot.equals(e))throw new w(t,"invalid","bad-txnmrklroot",100,!0);i&=~f.flags.VERIFY_BODY}if(!t.hasWitness()&&!t.getCommitmentHash())return new k}if(i&f.flags.VERIFY_BODY){const[e,i,r]=t.checkBody();if(!e)throw new w(t,"invalid",i,r,!0)}const n=await this.getTarget(t.time,e);if(t.bits!==n)throw new w(t,"invalid","bad-diffbits",100);if(this.options.spv)return this.state;const o=await this.getMedianTime(e);if(t.time<=o)throw new w(t,"invalid","time-too-old",0);if(t.time>this.network.now()+7200)throw new w(t,"invalid","time-too-new",0,!0);const a=e.height+1;if(t.version<2&&a>=this.network.block.bip34height)throw new w(t,"obsolete","bad-version",0);if(t.version<3&&a>=this.network.block.bip66height)throw new w(t,"obsolete","bad-version",0);if(t.version<4&&a>=this.network.block.bip65height)throw new w(t,"obsolete","bad-version",0);const h=await this.getDeployments(t.time,e);if(h.hasBIP91()||h.hasBIP148()){const{segwit:e}=this.network.deployments;if(!d.hasBit(t.version,e.bit))throw new w(t,"invalid","bad-no-segwit",0)}const c=h.hasMTP()?o:t.time;for(const e of t.txs)if(!e.isFinal(a,c))throw new w(t,"invalid","bad-txns-nonfinal",10);if(h.hasBIP34()&&t.getCoinbaseHeight()!==a)throw new w(t,"invalid","bad-cb-height",100);let l=null;if(h.hasWitness()&&(l=t.getCommitmentHash())){if(!t.getWitnessNonce())throw new w(t,"invalid","bad-witness-nonce-size",100,!0);if(!l.equals(t.createCommitmentHash()))throw new w(t,"invalid","bad-witness-merkle-match",100,!0)}if(!l&&t.hasWitness())throw new w(t,"invalid","unexpected-witness",100,!0);if(t.getWeight()>d.MAX_BLOCK_WEIGHT)throw new w(t,"invalid","bad-blk-weight",100);return h}async getDeployments(t,e){const i=this.network.deployments,r=e.height+1,s=new k;t>=d.BIP16_TIME&&(s.flags|=b.flags.VERIFY_P2SH),r>=this.network.block.bip34height&&(s.bip34=!0),r>=this.network.block.bip66height&&(s.flags|=b.flags.VERIFY_DERSIG),r>=this.network.block.bip65height&&(s.flags|=b.flags.VERIFY_CHECKLOCKTIMEVERIFY),await this.isActive(e,i.csv)&&(s.flags|=b.flags.VERIFY_CHECKSEQUENCEVERIFY,s.lockFlags|=f.lockFlags.VERIFY_SEQUENCE,s.lockFlags|=f.lockFlags.MEDIAN_TIME_PAST);const n=await this.getState(e,i.segwit);if(n===y.ACTIVE&&(s.flags|=b.flags.VERIFY_WITNESS,s.flags|=b.flags.VERIFY_NULLDUMMY),this.options.bip91&&n===y.STARTED&&await this.isActive(e,i.segsignal)&&(s.bip91=!0),this.options.bip148&&this.network===l.main&&n!==y.LOCKED_IN&&n!==y.ACTIVE){const i=await this.getMedianTime(e,t);i>=1501545600&&i<=1510704e3&&(s.bip148=!0)}return s}setDeploymentState(t){this.options.checkpoints&&this.height<this.network.lastCheckpoint?this.state=t:(!this.state.hasP2SH()&&t.hasP2SH()&&this.logger.warning("P2SH has been activated."),!this.state.hasBIP34()&&t.hasBIP34()&&this.logger.warning("BIP34 has been activated."),!this.state.hasBIP66()&&t.hasBIP66()&&this.logger.warning("BIP66 has been activated."),!this.state.hasCLTV()&&t.hasCLTV()&&this.logger.warning("BIP65 has been activated."),!this.state.hasCSV()&&t.hasCSV()&&this.logger.warning("CSV has been activated."),!this.state.hasWitness()&&t.hasWitness()&&this.logger.warning("Segwit has been activated."),!this.state.hasBIP91()&&t.hasBIP91()&&this.logger.warning("BIP91 has been activated."),!this.state.hasBIP148()&&t.hasBIP148()&&this.logger.warning("BIP148 has been activated."),this.state=t)}async verifyDuplicates(t,e){for(const i of t.txs){if(!await this.hasCoins(i))continue;const r=e.height+1,s=this.network.bip30[r];if(!s||!t.hash().equals(s))throw new w(t,"invalid","bad-txns-BIP30",100)}}async updateInputs(t,e){const i=new m,s=e.height+1,n=t.txs[0];i.addTX(n,s);for(let e=1;e<t.txs.length;e++){const n=t.txs[e];r(await i.spendInputs(this.db,n),"BUG: Spent inputs in historical data!"),i.addTX(n,s)}return i}async verifyInputs(t,e,i){const r=new m,s=e.height+1,n=this.network.halvingInterval;let o=0,a=0;for(let n=0;n<t.txs.length;n++){const h=t.txs[n];if(n>0&&!await r.spendInputs(this.db,h))throw new w(t,"invalid","bad-txns-inputs-missingorspent",100);if(n>0&&h.version>=2&&!await this.verifyLocks(e,h,r,i.lockFlags))throw new w(t,"invalid","bad-txns-nonfinal",100);if((o+=h.getSigopsCost(r,i.flags))>d.MAX_BLOCK_SIGOPS_COST)throw new w(t,"invalid","bad-blk-sigops",100);if(n>0){const[e,i,n]=h.checkInputs(r,s);if(-1===e)throw new w(t,"invalid",i,n);if((a+=e)>d.MAX_MONEY)throw new w(t,"invalid","bad-cb-amount",100)}r.addTX(h,s)}if(a+=d.getReward(s,n),t.getClaimed()>a)throw new w(t,"invalid","bad-cb-amount",100);const h=[];for(let e=1;e<t.txs.length;e++){const s=t.txs[e];h.push(s.verifyAsync(r,i.flags,this.workers))}const c=await Promise.all(h);for(const e of c)if(!e)throw new w(t,"invalid","mandatory-script-verify-flag-failed",100);return r}async findFork(t,e){for(;!t.hash.equals(e.hash);){for(;e.height>t.height;)if(!(e=await this.getPrevious(e)))throw new Error("No previous entry for new tip.");if(t.hash.equals(e.hash))return t;if(!(t=await this.getPrevious(t)))throw new Error("No previous entry for old tip.")}return t}async reorganize(t){const e=this.tip,i=await this.findFork(e,t);r(i,"No free space or data corruption.");const s=[];let n=e;for(;!n.hash.equals(i.hash);)s.push(n),n=await this.getPrevious(n),r(n);const o=[];for(n=t;!n.hash.equals(i.hash);)o.push(n),n=await this.getPrevious(n),r(n);for(let t=0;t<s.length;t++){const e=s[t];await this.disconnect(e)}for(let t=o.length-1;t>=1;t--){const e=o[t];await this.reconnect(e)}this.logger.warning("Chain reorganization: old=%h(%d) new=%h(%d)",e.hash,e.height,t.hash,t.height),await this.emitAsync("reorganize",e,t)}async reorganizeSPV(t){const e=this.tip,i=await this.findFork(e,t);r(i,"No free space or data corruption.");const s=[];let n=e;for(;!n.hash.equals(i.hash);)s.push(n),n=await this.getPrevious(n),r(n);await this._reset(i.hash,!0);for(const t of s){const e=t.toHeaders(),i=new m;await this.emitAsync("disconnect",t,e,i)}return this.logger.warning("SPV reorganization: old=%h(%d) new=%h(%d)",e.hash,e.height,t.hash,t.height),this.logger.warning("Chain replay from height %d necessary.",i.height),this.emitAsync("reorganize",e,t)}async disconnect(t){let e=await this.getBlock(t.hash);if(!e){if(!this.options.spv)throw new Error("Block not found.");e=t.toHeaders()}const i=await this.getPrevious(t),s=await this.db.disconnect(t,e);return r(i),this.tip=i,this.height=i.height,this.emit("tip",i),this.emitAsync("disconnect",t,e,s)}async reconnect(t){const e=f.flags.VERIFY_NONE;let i=await this.getBlock(t.hash);if(!i){if(!this.options.spv)throw new Error("Block not found.");i=t.toHeaders()}const s=await this.getPrevious(t);let n,o;r(s);try{[n,o]=await this.verifyContext(i,s,e)}catch(e){throw"VerifyError"===e.type&&(e.malleated||this.setInvalid(t.hash),this.logger.warning("Tried to reconnect invalid block: %h (%d).",t.hash,t.height)),e}return await this.db.reconnect(t,i,n),this.tip=t,this.height=t.height,this.setDeploymentState(o),this.emit("tip",t),this.emit("reconnect",t,i),this.emitAsync("connect",t,i,n)}async setBestChain(t,e,i,r){if(!t.prevBlock.equals(this.tip.hash)){if(this.logger.warning("WARNING: Reorganizing chain."),this.options.spv)return this.reorganizeSPV(t);await this.reorganize(t)}let s,n;t.hasUnknown(this.network)&&this.logger.warning("Unknown version bits in block %d: %s.",t.height,t.version.toString(16));try{[s,n]=await this.verifyContext(e,i,r)}catch(e){throw"VerifyError"===e.type&&(e.malleated||this.setInvalid(t.hash),this.logger.warning("Tried to connect invalid block: %h (%d).",t.hash,t.height)),e}return await this.db.save(t,e,s),this.tip=t,this.height=t.height,this.setDeploymentState(n),this.emit("tip",t),this.emit("block",e,t),this.emitAsync("connect",t,e,s)}async saveAlternate(t,e,i,r){try{await this.verify(e,i,r)}catch(e){throw"VerifyError"===e.type&&(e.malleated||this.setInvalid(t.hash),this.logger.warning("Invalid block on alternate chain: %h (%d).",t.hash,t.height)),e}t.hasUnknown(this.network)&&this.logger.warning("Unknown version bits in block %d: %s.",t.height,t.version.toString(16)),await this.db.save(t,e),this.logger.warning("Heads up: Competing chain at height %d: tip-height=%d competitor-height=%d tip-hash=%h competitor-hash=%h tip-chainwork=%s competitor-chainwork=%s chainwork-diff=%s",t.height,this.tip.height,t.height,this.tip.hash,t.hash,this.tip.chainwork.toString(),t.chainwork.toString(),this.tip.chainwork.sub(t.chainwork).toString()),this.emit("competitor",e,t)}async reset(t){const e=await this.locker.lock();try{return await this._reset(t,!1)}finally{e()}}async _reset(t,e){const i=await this.db.reset(t);this.tip=i,this.height=i.height,this.synced=!1;const r=await this.getDeploymentState();this.setDeploymentState(r),this.emit("tip",i),e||await this.emitAsync("reset",i),this.purgeOrphans(),this.maybeSync()}async replay(t){const e=await this.locker.lock();try{return await this._replay(t,!0)}finally{e()}}async _replay(t,e){const i=await this.getEntry(t);if(!i)throw new Error("Block not found.");if(!await this.isMainChain(i))throw new Error("Cannot reset on alternate chain.");i.isGenesis()?await this._reset(i.hash,e):await this._reset(i.prevBlock,e)}async invalidate(t){const e=await this.locker.lock();try{return await this._invalidate(t)}finally{e()}}async _invalidate(t){await this._replay(t,!1),this.setInvalid(t)}async prune(){const t=await this.locker.lock();try{return await this.db.prune()}finally{t()}}async scan(t,e,i){const r=await this.locker.lock();try{return await this.db.scan(t,e,i)}finally{r()}}async add(t,e,i){const r=t.hash(),s=await this.locker.lock(r);try{return await this._add(t,e,i)}finally{s()}}async _add(t,e,i){const r=t.hash();if(null==e&&(e=f.flags.DEFAULT_FLAGS),null==i&&(i=-1),r.equals(this.network.genesis.hash))throw this.logger.debug("Saw genesis block: %h.",t.hash()),new w(t,"duplicate","duplicate",0);if(this.hasPending(r))throw this.logger.debug("Already have pending block: %h.",t.hash()),new w(t,"duplicate","duplicate",0);if(this.hasOrphan(r))throw this.logger.debug("Already have orphan block: %h.",t.hash()),new w(t,"duplicate","duplicate",0);if(this.hasInvalid(t))throw this.logger.debug("Invalid ancestors for block: %h.",t.hash()),new w(t,"duplicate","duplicate",100);if(e&f.flags.VERIFY_POW&&!t.verifyPOW())throw new w(t,"invalid","high-hash",50);if(await this.hasEntry(r))throw this.logger.debug("Already have block: %h.",t.hash()),new w(t,"duplicate","duplicate",0);const s=await this.getEntry(t.prevBlock);if(!s)return this.storeOrphan(t,e,i),null;const n=await this.connect(s,t,e);return this.hasNextOrphan(r)&&await this.handleOrphans(n),n}async connect(t,e,i){const s=p.bench();if(r(e.prevBlock.equals(t.hash)),e.isMemory())try{e=e.toBlock()}catch(t){throw this.logger.error(t),new w(e,"malformed","error parsing message",10,!0)}const n=g.fromBlock(e,t);return n.chainwork.lte(this.tip.chainwork)?await this.saveAlternate(n,e,t,i):await this.setBestChain(n,e,t,i),this.logStatus(s,e,n),this.maybeSync(),n}async handleOrphans(t){let e=this.resolveOrphan(t.hash);for(;e;){const{block:i,flags:r,id:s}=e;try{t=await this.connect(t,i,r)}catch(t){if("VerifyError"===t.type){this.logger.warning("Could not resolve orphan block %h: %s.",i.hash(),t.message),this.emit("bad orphan",t,s);break}throw t}this.logger.debug("Orphan block was resolved: %h (%d).",i.hash(),t.height),this.emit("resolved",i,t),e=this.resolveOrphan(t.hash)}}isSlow(){return!this.options.spv&&(!!this.synced||1===this.height||this.height%20==0||this.height>=this.network.block.slowHeight)}logStatus(t,e,i){if(!this.isSlow())return;this.logger.memory();const r=p.bench(t);this.logger.info("Block %h (%d) added to chain (size=%d txs=%d time=%d).",i.hash,i.height,e.getSize(),e.txs.length,r),this.db.coinCache.capacity>0&&this.logger.debug("Coin Cache: size=%dmb, items=%d.",this.db.coinCache.size/(1<<20),this.db.coinCache.items)}verifyCheckpoint(t,e){if(!this.options.checkpoints)return!0;const i=t.height+1,r=this.network.checkpointMap[i];return!r||(e.equals(r)?(this.logger.debug("Hit checkpoint block %h (%d).",e,i),this.emit("checkpoint",e,i),!0):(this.logger.warning("Checkpoint mismatch at height %d: expected=%h received=%h",i,r,e),this.purgeOrphans(),!1))}storeOrphan(t,e,i){const s=t.getCoinbaseHeight(),n=this.orphanPrev.get(t.prevBlock);n&&(r(!n.block.hash().equals(t.hash())),r(n.block.prevBlock.equals(t.prevBlock)),this.logger.warning("Removing forked orphan block: %h (%d).",n.block.hash(),s),this.removeOrphan(n)),this.limitOrphans(),this.addOrphan(new class{constructor(t,e,i){this.block=t,this.flags=e,this.id=i,this.time=p.now()}}(t,e,i)),this.logger.debug("Storing orphan block: %h (%d).",t.hash(),s),this.emit("orphan",t)}addOrphan(t){const e=t.block,i=e.hash();return r(!this.orphanMap.has(i)),r(!this.orphanPrev.has(e.prevBlock)),r(this.orphanMap.size>=0),this.orphanMap.set(i,t),this.orphanPrev.set(e.prevBlock,t),t}removeOrphan(t){const e=t.block,i=e.hash();return r(this.orphanMap.has(i)),r(this.orphanPrev.has(e.prevBlock)),r(this.orphanMap.size>0),this.orphanMap.delete(i),this.orphanPrev.delete(e.prevBlock),t}hasNextOrphan(t){return this.orphanPrev.has(t)}resolveOrphan(t){const e=this.orphanPrev.get(t);return e?this.removeOrphan(e):null}purgeOrphans(){const t=this.orphanMap.size;0!==t&&(this.orphanMap.clear(),this.orphanPrev.clear(),this.logger.debug("Purged %d orphans.",t))}limitOrphans(){const t=p.now();let e=null;for(const i of this.orphanMap.values())t<i.time+3600?(!e||i.time<e.time)&&(e=i):this.removeOrphan(i);this.orphanMap.size<this.options.maxOrphans||e&&this.removeOrphan(e)}hasInvalid(t){const e=t.hash();return!!this.invalid.has(e)||!!this.invalid.has(t.prevBlock)&&(this.setInvalid(e),!0)}setInvalid(t){this.invalid.set(t,!0)}removeInvalid(t){this.invalid.remove(t)}async has(t){return!!this.hasOrphan(t)||!!this.locker.has(t)||!!this.invalid.has(t)||this.hasEntry(t)}getEntry(t){return this.db.getEntry(t)}getEntryByHeight(t){return this.db.getEntryByHeight(t)}getEntryByHash(t){return this.db.getEntryByHash(t)}getHash(t){return this.db.getHash(t)}getHeight(t){return this.db.getHeight(t)}hasEntry(t){return this.db.hasEntry(t)}getNextHash(t){return this.db.getNextHash(t)}hasCoins(t){return this.db.hasCoins(t)}getTips(){return this.db.getTips()}getHashes(t=-1,e=-1){return this.db.getHashes(t,e)}readCoin(t){return this.db.readCoin(t)}getCoin(t,e){return this.db.getCoin(t,e)}getBlock(t){return this.db.getBlock(t)}getRawBlock(t){return this.db.getRawBlock(t)}getBlockView(t){return this.db.getBlockView(t)}getMeta(t){return this.db.getMeta(t)}getTX(t){return this.db.getTX(t)}hasTX(t){return this.db.hasTX(t)}getCoinsByAddress(t){return this.db.getCoinsByAddress(t)}getHashesByAddress(t){return this.db.getHashesByAddress(t)}getTXByAddress(t){return this.db.getTXByAddress(t)}getMetaByAddress(t){return this.db.getMetaByAddress(t)}getOrphan(t){return this.orphanMap.get(t)||null}hasOrphan(t){return this.orphanMap.has(t)}hasPending(t){return this.locker.pending(t)}getCoinView(t){return this.db.getCoinView(t)}async getSpentView(t){const e=await this.locker.lock();try{return await this.db.getSpentView(t)}finally{e()}}isFull(){return this.synced}maybeSync(){this.synced||this.options.checkpoints&&this.height<this.network.lastCheckpoint||this.tip.time<p.now()-this.network.block.maxTipAge||this.hasChainwork()&&(this.synced=!0,this.emit("full"))}hasChainwork(){return this.tip.chainwork.gte(this.network.pow.chainwork)}getProgress(){const t=this.network.genesis.time,e=this.tip.time-t,i=p.now()-t-2400;return Math.min(1,e/i)}async getLocator(t){const e=await this.locker.lock();try{return await this._getLocator(t)}finally{e()}}async _getLocator(t){null==t&&(t=this.tip.hash),r(e.isBuffer(t));let i=await this.getEntry(t);const s=[];i||(i=this.tip,s.push(t));let n=await this.isMainChain(i),o=i.hash,a=i.height,h=1;for(s.push(o);a>0;){if((a-=h)<0&&(a=0),s.length>10&&(h*=2),n)o=await this.getHash(a),r(o);else{const t=await this.getAncestor(i,a);r(t),n=await this.isMainChain(t),o=t.hash}s.push(o)}return s}getOrphanRoot(t){let e=null;for(r(t);;){const i=this.orphanMap.get(t);if(!i)break;e=t,t=i.block.prevBlock}return e}getProofTime(t,e){const i=this.network.pow;let r,s;return t.chainwork.gt(e.chainwork)?(s=t.chainwork.sub(e.chainwork),r=1):(s=e.chainwork.sub(t.chainwork),r=-1),(s=(s=s.imuln(i.targetSpacing)).div(this.tip.getProof())).bitLength()>53?r*Number.MAX_SAFE_INTEGER:r*s.toNumber()}async getCurrentTarget(){return this.getTarget(this.network.now(),this.tip)}async getTarget(t,e){const i=this.network.pow;if(!e)return r(t===this.network.genesis.time),i.bits;if((e.height+1)%i.retargetInterval!=0){if(i.targetReset){if(t>e.time+2*i.targetSpacing)return i.bits;for(;0!==e.height&&e.height%i.retargetInterval!=0&&e.bits===i.bits;){e=this.getPrevCache(e)||await this.getPrevious(e),r(e)}}return e.bits}const s=e.height-(i.retargetInterval-1);r(s>=0);const n=await this.getAncestor(e,s);return r(n),this.retarget(e,n)}retarget(t,e){const i=this.network.pow,r=i.targetTimespan;if(i.noRetargeting)return t.bits;const s=d.fromCompact(t.bits);let n=t.time-e.time;return n<r/4|0&&(n=r/4|0),n>4*r&&(n=4*r),s.imuln(n),s.idivn(r),s.gt(i.limit)?i.bits:d.toCompact(s)}async findLocator(t){for(const e of t)if(await this.isMainHash(e))return e;return this.network.genesis.hash}async isActive(t,e){return await this.getState(t,e)===y.ACTIVE}async getState(t,e){const i=e.bit;let s=this.network.minerWindow,n=this.network.activationThreshold;if(-1!==e.threshold&&(n=e.threshold),-1!==e.window&&(s=e.window),(t.height+1)%s!=0){const e=t.height-(t.height+1)%s;if(!(t=await this.getAncestor(t,e)))return y.DEFINED;r(t.height===e),r((t.height+1)%s==0)}let o=t,a=y.DEFINED;const h=[];for(;o;){const t=this.db.stateCache.get(i,o);if(-1!==t){a=t;break}if(await this.getMedianTime(o)<e.startTime){a=y.DEFINED,this.db.stateCache.set(i,o,a);break}h.push(o);const r=o.height-s;o=await this.getAncestor(o,r)}for(;h.length;){const t=h.pop();switch(a){case y.DEFINED:{const i=await this.getMedianTime(t);if(i>=e.timeout){a=y.FAILED;break}if(i>=e.startTime){a=y.STARTED;break}break}case y.STARTED:{if(await this.getMedianTime(t)>=e.timeout){a=y.FAILED;break}let o=t,h=0;for(let t=0;t<s;t++){if(o.hasBit(i)&&h++,h>=n){a=y.LOCKED_IN;break}o=await this.getPrevious(o),r(o)}break}case y.LOCKED_IN:a=y.ACTIVE;break;case y.FAILED:case y.ACTIVE:break;default:r(!1,"Bad state.")}this.db.stateCache.set(i,t,a)}return a}async computeBlockVersion(t){let e=0;for(const i of this.network.deploys){const r=await this.getState(t,i);r!==y.LOCKED_IN&&r!==y.STARTED||(e|=1<<i.bit)}return(e|=d.VERSION_TOP_BITS)>>>0}async getDeploymentState(){const t=await this.getPrevious(this.tip);return t?this.options.spv?this.state:this.getDeployments(this.tip.time,t):(r(this.tip.isGenesis()),this.state)}async verifyFinal(t,e,i){const r=t.height+1;if(e.locktime<d.LOCKTIME_THRESHOLD)return e.isFinal(r,-1);if(i&f.lockFlags.MEDIAN_TIME_PAST){const i=await this.getMedianTime(t);return e.isFinal(r,i)}return e.isFinal(r,this.network.now())}async getLocks(t,e,i,s){const n=d.SEQUENCE_GRANULARITY,o=d.SEQUENCE_DISABLE_FLAG,a=d.SEQUENCE_TYPE_FLAG,h=d.SEQUENCE_MASK;if(!(s&f.lockFlags.VERIFY_SEQUENCE))return[-1,-1];if(e.isCoinbase()||e.version<2)return[-1,-1];let c=-1,l=-1;for(const{prevout:s,sequence:u}of e.inputs){if(u&o)continue;let e=i.getHeight(s);if(-1===e&&(e=this.height+1),!(u&a)){e+=(u&h)-1,c=Math.max(c,e);continue}e=Math.max(e-1,0);const f=await this.getAncestor(t,e);r(f,"Database is corrupt.");let d=await this.getMedianTime(f);d+=((u&h)<<n)-1,l=Math.max(l,d)}return[c,l]}async verifyLocks(t,e,i,r){const[s,n]=await this.getLocks(t,e,i,r);return!(-1!==s&&s>=t.height+1||-1!==n&&n>=await this.getMedianTime(t))}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * asyncemitter.js - event emitter which resolves promises.
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(0);class s{constructor(t,e){r("function"==typeof t,"`handler` must be a function."),r("boolean"==typeof e,"`once` must be a function."),this.handler=t,this.once=e}}function n(t,e){if(0===e)return void t.shift();let i=e+1;for(;i<t.length;)t[e++]=t[i++];t.pop()}t.exports=class{constructor(){this._events=Object.create(null)}addListener(t,e){return this._push(t,e,!1)}on(t,e){return this.addListener(t,e)}once(t,e){return this._push(t,e,!0)}prependListener(t,e){return this._unshift(t,e,!1)}prependOnceListener(t,e){return this._unshift(t,e,!0)}_push(t,e,i){r("string"==typeof t,"`type` must be a string."),this._events[t]||(this._events[t]=[]),this.emit("newListener",t,e),this._events[t].push(new s(e,i))}_unshift(t,e,i){r("string"==typeof t,"`type` must be a string."),this._events[t]||(this._events[t]=[]),this.emit("newListener",t,e),this._events[t].unshift(new s(e,i))}removeListener(t,e){r("string"==typeof t,"`type` must be a string.");const i=this._events[t];if(!i)return;let s=-1;for(let t=0;t<i.length;t++)if(i[t].handler===e){s=t;break}-1!==s&&(n(i,s),0===i.length&&delete this._events[t],this.emit("removeListener",t,e))}setMaxListeners(t){r("number"==typeof t,"`max` must be a number."),r(t>=0,"`max` must be non-negative."),r(Number.isSafeInteger(t),"`max` must be an integer.")}removeAllListeners(t){0!==arguments.length?(r("string"==typeof t,"`type` must be a string."),delete this._events[t]):this._events=Object.create(null)}listeners(t){r("string"==typeof t,"`type` must be a string.");const e=this._events[t];if(!e)return[];const i=[];for(const{handler:t}of e)i.push(t);return i}listenerCount(t){r("string"==typeof t,"`type` must be a string.");const e=this._events[t];return e?e.length:0}eventNames(){return Object.keys(this._events)}emit(t){try{this._emit.apply(this,arguments)}catch(e){if("error"===t)throw e;this._emit("error",e)}}_emit(t){r("string"==typeof t,"`type` must be a string.");const e=this._events[t];if(!e){if("error"===t){const t=arguments[1];if(t instanceof Error)throw t;const e=new Error(`Uncaught, unspecified "error" event. (${t})`);throw e.context=t,e}return}r(e.length>0);let i=null;for(let r=0;r<e.length;r++){const s=e[r],o=s.handler;switch(s.once&&(n(e,r),0===e.length&&delete this._events[t],r-=1),arguments.length){case 1:o();break;case 2:o(arguments[1]);break;case 3:o(arguments[1],arguments[2]);break;case 4:o(arguments[1],arguments[2],arguments[3]);break;default:if(!i){i=new Array(arguments.length-1);for(let t=1;t<arguments.length;t++)i[t-1]=arguments[t]}o.apply(null,i)}}}async emitAsync(t){try{await this._emitAsync.apply(this,arguments)}catch(e){if("error"===t)throw e;await this._emitAsync("error",e)}}async _emitAsync(t){r("string"==typeof t,"`type` must be a string.");const e=this._events[t];if(!e){if("error"===t){const t=arguments[1];if(t instanceof Error)throw t;const e=new Error(`Uncaught, unspecified "error" event. (${t})`);throw e.context=t,e}return}r(e.length>0);let i=null;for(let r=0;r<e.length;r++){const s=e[r],o=s.handler;switch(s.once&&(n(e,r),0===e.length&&delete this._events[t],r-=1),arguments.length){case 1:await o();break;case 2:await o(arguments[1]);break;case 3:await o(arguments[1],arguments[2]);break;case 4:await o(arguments[1],arguments[2],arguments[3]);break;default:if(!i){i=new Array(arguments.length-1);for(let t=1;t<arguments.length;t++)i[t-1]=arguments[t]}await o.apply(null,i)}}}}},function(t,e,i){"use strict";
/*!
 * lru.js - LRU cache for bcoin
 * Copyright (c) 2014-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(0);class s{constructor(t,e,i){this.remove=t,this.key=e,this.value=i}}t.exports=class{constructor(t,e,i){r("number"==typeof t,"Capacity must be a number."),r(t>=0,"Capacity cannot be negative."),r(!e||"function"==typeof e,"Bad size callback."),r(!i||"function"==typeof i),this.map=i?new i:new Map,this.size=0,this.items=0,this.head=null,this.tail=null,this.pending=null,this.capacity=t,this.getSize=e}_getSize(t){return this.getSize?120+this.getSize(t.value,t.key):1}_compact(){if(this.size<=this.capacity)return;let t=null,e=null;for(t=this.head;t&&!(this.size<=this.capacity);t=e)this.size-=this._getSize(t),this.items-=1,this.map.delete(t.key),e=t.next,t.prev=null,t.next=null;if(!t)return this.head=null,void(this.tail=null);this.head=t,t.prev=null}reset(){let t,e;for(t=this.head;t;t=e)this.map.delete(t.key),this.items-=1,e=t.next,t.prev=null,t.next=null;r(!t),this.size=0,this.head=null,this.tail=null}set(t,e){if(0===this.capacity)return;let i=this.map.get(t);if(i)return this.size-=this._getSize(i),i.value=e,this.size+=this._getSize(i),this._removeList(i),this._appendList(i),void this._compact();i=new class{constructor(t,e){this.key=t,this.value=e,this.next=null,this.prev=null}}(t,e),this.map.set(t,i),this._appendList(i),this.size+=this._getSize(i),this.items+=1,this._compact()}get(t){if(0===this.capacity)return null;const e=this.map.get(t);return e?(this._removeList(e),this._appendList(e),e.value):null}has(t){return 0!==this.capacity&&this.map.has(t)}remove(t){if(0===this.capacity)return!1;const e=this.map.get(t);return!!e&&(this.size-=this._getSize(e),this.items-=1,this.map.delete(t),this._removeList(e),!0)}_prependList(t){this._insertList(null,t)}_appendList(t){this._insertList(this.tail,t)}_insertList(t,e){r(!e.next),r(!e.prev),null!=t?(e.next=t.next,e.prev=t,t.next=e,e.next&&(e.next.prev=e),t===this.tail&&(this.tail=e)):this.head?(this.head.prev=e,e.next=this.head,this.head=e):(this.head=e,this.tail=e)}_removeList(t){t.prev&&(t.prev.next=t.next),t.next&&(t.next.prev=t.prev),t===this.head&&(this.head=t.next),t===this.tail&&(this.tail=t.prev||this.head),this.head||r(!this.tail),this.tail||r(!this.head),t.prev=null,t.next=null}keys(){const t=[];for(let e=this.head;e;e=e.next)e===this.head&&r(!e.prev),e.prev||r(e===this.head),e.next||r(e===this.tail),t.push(e.key);return t}values(){const t=[];for(let e=this.head;e;e=e.next)t.push(e.value);return t}toArray(){const t=[];for(let e=this.head;e;e=e.next)t.push(e);return t}batch(){return new class{constructor(t){this.lru=t,this.ops=[]}set(t,e){this.ops.push(new s(!1,t,e))}remove(t){this.ops.push(new s(!0,t,null))}clear(){this.ops.length=0}commit(){for(const t of this.ops)t.remove?this.lru.remove(t.key):this.lru.set(t.key,t.value);this.ops.length=0}}(this)}start(){r(!this.pending),this.pending=this.batch()}clear(){r(this.pending),this.pending.clear()}drop(){r(this.pending),this.pending=null}commit(){r(this.pending),this.pending.commit(),this.pending=null}push(t,e){r(this.pending),0!==this.capacity&&this.pending.set(t,e)}unpush(t){r(this.pending),0!==this.capacity&&this.pending.remove(t)}}},function(t,e,i){"use strict";(function(e){
/*!
 * chaindb.js - blockchain data management for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(71),n=i(2),o=i(87),{BufferMap:a,BufferSet:h}=i(13),c=i(18),l=i(4),u=i(35),f=i(72),d=i(188),p=i(3),g=i(63),m=i(17),b=i(12),w=i(156),y=i(190),v=i(36);class k{constructor(t){this.network=l.primary,this.spv=!1,this.witness=!0,this.bip91=!1,this.bip148=!1,this.prune=!1,this.indexTX=!1,this.indexAddress=!1,t&&this.fromOptions(t)}fromOptions(t){return this.network=l.get(t.network),null!=t.spv&&(r("boolean"==typeof t.spv),this.spv=t.spv),null!=t.bip91&&(r("boolean"==typeof t.bip91),this.bip91=t.bip91),null!=t.bip148&&(r("boolean"==typeof t.bip148),this.bip148=t.bip148),null!=t.prune&&(r("boolean"==typeof t.prune),this.prune=t.prune),null!=t.indexTX&&(r("boolean"==typeof t.indexTX),this.indexTX=t.indexTX),null!=t.indexAddress&&(r("boolean"==typeof t.indexAddress),this.indexAddress=t.indexAddress),this}static fromOptions(t){return(new k).fromOptions(t)}toRaw(){const t=n.write(12);let e=0;return this.spv&&(e|=1),this.witness&&(e|=2),this.prune&&(e|=4),this.indexTX&&(e|=8),this.indexAddress&&(e|=16),this.bip91&&(e|=32),this.bip148&&(e|=64),t.writeU32(this.network.magic),t.writeU32(e),t.writeU32(0),t.render()}fromRaw(t){const e=n.read(t);this.network=l.fromMagic(e.readU32());const i=e.readU32();return this.spv=0!=(1&i),this.witness=0!=(2&i),this.prune=0!=(4&i),this.indexTX=0!=(8&i),this.indexAddress=0!=(16&i),this.bip91=0!=(32&i),this.bip148=0!=(64&i),this}static fromRaw(t){return(new k).fromRaw(t)}}class E{constructor(){this.tip=p.ZERO_HASH,this.tx=0,this.coin=0,this.value=0,this.committed=!1}clone(){const t=new E;return t.tip=this.tip,t.tx=this.tx,t.coin=this.coin,t.value=this.value,t}connect(t){this.tx+=t.txs.length}disconnect(t){this.tx-=t.txs.length}add(t){this.coin+=1,this.value+=t.value}spend(t){this.coin-=1,this.value-=t.value}commit(t){return this.tip=t,this.committed=!0,this.toRaw()}toRaw(){const t=n.write(56);return t.writeHash(this.tip),t.writeU64(this.tx),t.writeU64(this.coin),t.writeU64(this.value),t.render()}static fromRaw(t){const e=new E,i=n.read(t);return e.tip=i.readHash(),e.tx=i.readU64(),e.coin=i.readU64(),e.value=i.readU64(),e}}class S{constructor(t){this.network=t,this.bits=[],this.updates=[],this.init()}init(){for(let t=0;t<32;t++)this.bits.push(null);for(const{bit:t}of this.network.deploys)r(!this.bits[t]),this.bits[t]=new a}set(t,e,i){const s=this.bits[t];r(s),s.get(e.hash)!==i&&(s.set(e.hash,i),this.updates.push(new R(t,e.hash,i)))}get(t,e){const i=this.bits[t];r(i);const s=i.get(e.hash);return null==s?-1:s}commit(){this.updates.length=0}drop(){for(const{bit:t,hash:e}of this.updates){const i=this.bits[t];r(i),i.delete(e)}this.updates.length=0}insert(t,e,i){const s=this.bits[t];r(s),s.set(e,i)}}class R{constructor(t,e,i){this.bit=t,this.hash=e,this.state=i}toRaw(){const t=e.allocUnsafe(1);return t[0]=this.state,t}}function I(t){return t.length+80}t.exports=class{constructor(t){this.options=t,this.network=this.options.network,this.logger=this.options.logger.context("chaindb"),this.db=s.create(this.options),this.stateCache=new S(this.network),this.state=new E,this.pending=null,this.current=null,this.coinCache=new o(this.options.coinCache,I,a),this.cacheHash=new o(this.options.entryCache,null,a),this.cacheHeight=new o(this.options.entryCache)}async open(){this.logger.info("Opening ChainDB..."),await this.db.open(),await this.db.verify(d.V.encode(),"chain",4);const t=await this.getState();t?(await this.verifyFlags(t),await this.verifyDeployments(),this.stateCache=await this.getStateCache(),this.state=t,this.logger.info("ChainDB successfully loaded.")):(await this.saveFlags(),await this.saveDeployments(),await this.saveGenesis(),this.logger.info("ChainDB successfully initialized.")),this.logger.info("Chain State: hash=%h tx=%d coin=%d value=%s.",this.state.tip,this.state.tx,this.state.coin,c.btc(this.state.value))}close(){return this.db.close()}start(){return r(!this.current),r(!this.pending),this.current=this.db.batch(),this.pending=this.state.clone(),this.coinCache.start(),this.cacheHash.start(),this.cacheHeight.start(),this.current}put(t,e){r(this.current),this.current.put(t,e)}del(t){r(this.current),this.current.del(t)}batch(){return r(this.current),this.current}drop(){const t=this.current;r(this.current),r(this.pending),this.current=null,this.pending=null,this.coinCache.drop(),this.cacheHash.drop(),this.cacheHeight.drop(),this.stateCache.drop(),t.clear()}async commit(){r(this.current),r(this.pending);try{await this.current.write()}catch(t){throw this.current=null,this.pending=null,this.coinCache.drop(),this.cacheHash.drop(),this.cacheHeight.drop(),t}this.pending.committed&&(this.state=this.pending),this.current=null,this.pending=null,this.coinCache.commit(),this.cacheHash.commit(),this.cacheHeight.commit(),this.stateCache.commit()}hasCache(t){return"number"==typeof t?this.cacheHeight.has(t):(r(e.isBuffer(t)),this.cacheHash.has(t))}getCache(t){return"number"==typeof t?this.cacheHeight.get(t):(r(e.isBuffer(t)),this.cacheHash.get(t))}async getHeight(t){if("number"==typeof t)return t;if(r(e.isBuffer(t)),t.equals(p.ZERO_HASH))return-1;const i=this.cacheHash.get(t);if(i)return i.height;const s=await this.db.get(d.h.encode(t));return s?s.readUInt32LE(0,!0):-1}async getHash(t){if(e.isBuffer(t))return t;if(r("number"==typeof t),t<0)return null;const i=this.cacheHeight.get(t);return i?i.hash:this.db.get(d.H.encode(t))}async getEntryByHeight(t){if(r("number"==typeof t),t<0)return null;const e=this.cacheHeight.get(t);if(e)return e;const i=await this.db.get(d.H.encode(t));if(!i)return null;const s=this.state,n=await this.getEntryByHash(i);return n?(this.state===s&&this.cacheHeight.set(n.height,n),n):null}async getEntryByHash(t){if(r(e.isBuffer(t)),t.equals(p.ZERO_HASH))return null;const i=this.cacheHash.get(t);if(i)return i;const s=await this.db.get(d.e.encode(t));if(!s)return null;const n=w.fromRaw(s);return this.cacheHash.set(n.hash,n),n}getEntry(t){return"number"==typeof t?this.getEntryByHeight(t):this.getEntryByHash(t)}async hasEntry(t){return-1!==await this.getHeight(t)}async getAncestor(t,e){if(e<0)return null;if(r(e>=0),r(e<=t.height),await this.isMainChain(t))return this.getEntryByHeight(e);for(;t.height!==e;){t=this.getPrevCache(t)||await this.getPrevious(t),r(t)}return t}getPrevious(t){return this.getEntryByHash(t.prevBlock)}getPrevCache(t){return this.cacheHash.get(t.prevBlock)||null}async getNext(t){const e=await this.getNextHash(t.hash);return e?this.getEntryByHash(e):null}async getNextEntry(t){const e=await this.getEntryByHeight(t.height+1);return e&&e.prevBlock.equals(t.hash)?e:null}getTip(){return this.getEntryByHash(this.state.tip)}async getState(){const t=await this.db.get(d.R.encode());return t?E.fromRaw(t):null}async saveGenesis(){const t=this.network.genesisBlock,e=g.fromRaw(t,"hex"),i=w.fromBlock(e);return this.logger.info("Writing genesis block to ChainDB."),this.save(i,e,new u)}async getFlags(){const t=await this.db.get(d.O.encode());return t?k.fromRaw(t):null}async verifyFlags(t){const e=this.options,i=await this.getFlags();let r=!1,s=!1;if(!i)throw new Error("No flags found.");if(e.network!==i.network)throw new Error("Network mismatch for chain.");if(e.spv&&!i.spv)throw new Error("Cannot retroactively enable SPV.");if(!e.spv&&i.spv)throw new Error("Cannot retroactively disable SPV.");if(!i.witness){if(!e.forceFlags)throw new Error("Cannot retroactively enable witness.");r=!0}if(e.bip91!==i.bip91){if(!e.forceFlags)throw new Error("Cannot retroactively alter BIP91 flag.");r=!0}if(e.bip148!==i.bip148){if(!e.forceFlags)throw new Error("Cannot retroactively alter BIP148 flag.");r=!0}if(e.prune&&!i.prune){if(!e.forceFlags)throw new Error("Cannot retroactively prune.");s=!0}if(!e.prune&&i.prune)throw new Error("Cannot retroactively unprune.");if(e.indexTX&&!i.indexTX)throw new Error("Cannot retroactively enable TX indexing.");if(!e.indexTX&&i.indexTX)throw new Error("Cannot retroactively disable TX indexing.");if(e.indexAddress&&!i.indexAddress)throw new Error("Cannot retroactively enable address indexing.");if(!e.indexAddress&&i.indexAddress)throw new Error("Cannot retroactively disable address indexing.");r&&(await this.logger.info("Rewriting chain flags."),await this.saveFlags()),s&&(await this.logger.info("Retroactively pruning chain."),await this.prune(t.tip))}async getStateCache(){const t=new S(this.network),e=await this.db.range({gte:d.v.min(),lte:d.v.max(),values:!0});for(const i of e){const[e,r]=d.v.decode(i.key),s=i.value[0];t.insert(e,r,s)}return t}saveDeployments(){const t=this.db.batch();return this.writeDeployments(t),t.write()}writeDeployments(t){const e=n.write(1+17*this.network.deploys.length);e.writeU8(this.network.deploys.length);for(const t of this.network.deploys)e.writeU8(t.bit),e.writeU32(t.startTime),e.writeU32(t.timeout),e.writeI32(t.threshold),e.writeI32(t.window);t.put(d.D.encode(),e.render())}async checkDeployments(){const t=await this.db.get(d.D.encode());r(t,"No deployment table found.");const e=n.read(t),i=e.readU8(),s=[];for(let t=0;t<i;t++){const t=e.readU8(),i=e.readU32(),r=e.readU32(),n=e.readI32(),o=e.readI32(),a=this.network.byBit(t);a&&i===a.startTime&&r===a.timeout&&n===a.threshold&&o===a.window||s.push(t)}return s}async verifyDeployments(){let t;try{t=await this.checkDeployments()}catch(e){if("EncodingError"!==e.type)throw e;t=[];for(let e=0;e<32;e++)t.push(e)}if(0===t.length)return!0;const e=this.db.batch();for(const i of t)this.logger.warning("Versionbit deployment params modified."),this.logger.warning("Invalidating cache for bit %d.",i),await this.invalidateCache(i,e);return this.writeDeployments(e),await e.write(),!1}async invalidateCache(t,e){const i=await this.db.keys({gte:d.v.min(t),lte:d.v.max(t)});for(const t of i)e.del(t)}async prune(){const t=this.options,e=this.network.block.keepBlocks,i=this.network.block.pruneAfterHeight;if((await this.getFlags()).prune)throw new Error("Chain is already pruned.");const s=await this.getHeight(this.state.tip);if(s<=i+e)return!1;const n=i+1,o=s-e,a=this.db.batch();for(let t=n;t<=o;t++){const e=await this.getHash(t);if(!e)throw new Error(`Cannot find hash for ${t}.`);a.del(d.b.encode(e)),a.del(d.u.encode(e))}try{t.prune=!0;const i=k.fromOptions(t);r(i.prune),a.put(d.O.encode(),i.toRaw()),await a.write()}catch(e){throw t.prune=!1,e}return await this.db.compactRange(),!0}async getNextHash(t){return this.db.get(d.n.encode(t))}async isMainHash(t){if(r(e.isBuffer(t)),t.equals(p.ZERO_HASH))return!1;if(t.equals(this.network.genesis.hash))return!0;if(t.equals(this.state.tip))return!0;const i=this.cacheHash.get(t);if(i){const e=this.cacheHeight.get(i.height);if(e)return e.hash.equals(t)}return!!await this.getNextHash(t)}async isMainChain(t){if(t.isGenesis())return!0;if(t.hash.equals(this.state.tip))return!0;const e=this.getCache(t.height);return e?t.hash.equals(e.hash):!!await this.getNextHash(t.hash)}async getHashes(t=-1,e=-1){return-1===t&&(t=0),-1===e&&(e>>>=0),r(t>>>0===t),r(e>>>0===e),this.db.values({gte:d.H.min(t),lte:d.H.max(e)})}async getEntries(){return this.db.values({gte:d.e.min(),lte:d.e.max(),parse:t=>w.fromRaw(t)})}async getTips(){return this.db.keys({gte:d.p.min(),lte:d.p.max(),parse:t=>d.p.decode(t)[0]})}async readCoin(t){if(this.options.spv)return null;const{hash:e,index:i}=t,r=t.toKey(),s=this.state,n=this.coinCache.get(r);if(n)return v.fromRaw(n);const o=await this.db.get(d.c.encode(e,i));return o?(s===this.state&&this.coinCache.set(r,o),v.fromRaw(o)):null}async getCoin(t,e){const i=new m(t,e),r=await this.readCoin(i);return r?r.toCoin(i):null}async hasCoins(t){for(let e=0;e<t.outputs.length;e++){const i=d.c.encode(t.hash(),e);if(await this.db.has(i))return!0}return!1}async getCoinView(t){const e=new u;for(const{prevout:i}of t.inputs){const t=await this.readCoin(i);t&&e.addEntry(i,t)}return e}async getSpentView(t){const e=await this.getCoinView(t);for(const{prevout:i}of t.inputs){if(e.hasEntry(i))continue;const{hash:t,index:r}=i,s=await this.getMeta(t);if(!s)continue;const{tx:n,height:o}=s;r<n.outputs.length&&e.addIndex(n,r,o)}return e}async getUndoCoins(t){const e=await this.db.get(d.u.encode(t));return e?f.fromRaw(e):new f}async getBlock(t){const e=await this.getRawBlock(t);return e?g.fromRaw(e):null}async getRawBlock(t){if(this.options.spv)return null;const e=await this.getHash(t);return e?this.db.get(d.b.encode(e)):null}async getBlockView(t){const e=new u,i=await this.getUndoCoins(t.hash());if(i.isEmpty())return e;for(let r=t.txs.length-1;r>0;r--){const s=t.txs[r];for(let t=s.inputs.length-1;t>=0;t--){const r=s.inputs[t];i.apply(e,r.prevout)}}return r(i.isEmpty(),"Undo coins data inconsistency."),e}async getMeta(t){if(!this.options.indexTX)return null;const e=await this.db.get(d.t.encode(t));return e?y.fromRaw(e):null}async getTX(t){const e=await this.getMeta(t);return e?e.tx:null}async hasTX(t){return!!this.options.indexTX&&this.db.has(d.t.encode(t))}async getCoinsByAddress(t){if(!this.options.indexAddress)return[];Array.isArray(t)||(t=[t]);const e=[];for(const i of t){const t=b.getHash(i),s=await this.db.keys({gte:d.C.min(t),lte:d.C.max(t),parse:t=>{const[,e,i]=d.C.decode(t);return[e,i]}});for(const[t,i]of s){const s=await this.getCoin(t,i);r(s),e.push(s)}}return e}async getHashesByAddress(t){if(!this.options.indexTX||!this.options.indexAddress)return[];const e=new h;for(const i of t){const t=b.getHash(i);await this.db.keys({gte:d.T.min(t),lte:d.T.max(t),parse:t=>{const[,i]=d.T.decode(t);e.add(i)}})}return e.toArray()}async getTXByAddress(t){const e=await this.getMetaByAddress(t),i=[];for(const t of e)i.push(t.tx);return i}async getMetaByAddress(t){if(!this.options.indexTX||!this.options.indexAddress)return[];Array.isArray(t)||(t=[t]);const e=await this.getHashesByAddress(t),i=[];for(const t of e){const e=await this.getMeta(t);r(e),i.push(e)}return i}async scan(t,e,i){null==t&&(t=this.network.genesis.hash),"number"==typeof t?this.logger.info("Scanning from height %d.",t):this.logger.info("Scanning from block %h.",t);let r=await this.getEntry(t);if(!r)return;if(!await this.isMainChain(r))throw new Error("Cannot rescan an alternate chain.");let s=0;for(;r;){const t=await this.getBlock(r.hash),n=[];if(s+=1,t){this.logger.info("Scanning block %h (%d).",r.hash,r.height);for(let i=0;i<t.txs.length;i++){const r=t.txs[i];let s=!1;for(let t=0;t<r.outputs.length;t++){const i=r.outputs[t].getHash();if(i&&e.test(i)){const i=m.fromTX(r,t);e.add(i.toRaw()),s=!0}}if(s)n.push(r);else if(0!==i)for(const{prevout:t}of r.inputs)if(e.test(t.toRaw())){n.push(r);break}}await i(r,n),r=await this.getNext(r)}else{if(!this.options.spv&&!this.options.prune)throw new Error("Block not found.");await i(r,n),r=await this.getNext(r)}}this.logger.info("Finished scanning %d blocks.",s)}async save(t,e,i){this.start();try{await this._save(t,e,i)}catch(t){throw this.drop(),t}await this.commit()}async _save(t,i,r){const s=i.hash();this.put(d.h.encode(s),function(t){const i=e.allocUnsafe(4);return i.writeUInt32LE(t,0,!0),i}(t.height)),this.put(d.e.encode(s),t.toRaw()),this.cacheHash.push(t.hash,t),this.del(d.p.encode(t.prevBlock)),this.put(d.p.encode(s),null),this.saveUpdates(),r?(t.isGenesis()||this.put(d.n.encode(t.prevBlock),s),this.put(d.H.encode(t.height),s),this.cacheHeight.push(t.height,t),await this.saveBlock(t,i,r),this.put(d.R.encode(),this.pending.commit(s))):await this.saveBlock(t,i)}async reconnect(t,e,i){this.start();try{await this._reconnect(t,e,i)}catch(t){throw this.drop(),t}await this.commit()}async _reconnect(t,e,i){const s=e.hash();r(!t.isGenesis()),this.put(d.n.encode(t.prevBlock),s),this.put(d.H.encode(t.height),s),this.cacheHeight.push(t.height,t),this.cacheHash.push(t.hash,t),this.saveUpdates(),await this.connectBlock(t,e,i),this.put(d.R.encode(),this.pending.commit(s))}async disconnect(t,e){let i;this.start();try{i=await this._disconnect(t,e)}catch(t){throw this.drop(),t}return await this.commit(),i}async _disconnect(t,e){this.del(d.n.encode(t.prevBlock)),this.del(d.H.encode(t.height)),this.cacheHeight.unpush(t.height),this.saveUpdates();const i=await this.disconnectBlock(t,e);return this.put(d.R.encode(),this.pending.commit(t.prevBlock)),i}saveUpdates(){const t=this.stateCache.updates;if(0!==t.length){this.logger.info("Saving %d state cache updates.",t.length);for(const e of t){const{bit:t,hash:i}=e;this.put(d.v.encode(t,i),e.toRaw())}}}async reset(t){const e=await this.getEntry(t);if(!e)throw new Error("Block not found.");if(!await this.isMainChain(e))throw new Error("Cannot reset on alternate chain.");if(this.options.prune)throw new Error("Cannot reset when pruned.");await this.removeChains();let i=await this.getTip();for(r(i),this.logger.debug("Resetting main chain to: %h",e.hash);;){if(this.start(),i.hash.equals(e.hash)){this.put(d.R.encode(),this.pending.commit(i.hash)),await this.commit();break}r(!i.isGenesis()),this.del(d.p.encode(i.hash)),this.put(d.p.encode(i.prevBlock),null),this.del(d.H.encode(i.height)),this.del(d.h.encode(i.hash)),this.del(d.e.encode(i.hash)),this.del(d.n.encode(i.prevBlock));try{await this.removeBlock(i)}catch(t){throw this.drop(),t}this.put(d.R.encode(),this.pending.commit(i.prevBlock)),await this.commit(),this.cacheHeight.remove(i.height),this.cacheHash.remove(i.hash),i=await this.getPrevious(i),r(i)}return i}async removeChains(){const t=await this.getTips();this.start();try{for(const e of t)await this._removeChain(e)}catch(t){throw this.drop(),t}await this.commit()}async _removeChain(t){let e=await this.getEntryByHash(t);if(!e)throw new Error("Alternate chain tip not found.");for(this.logger.debug("Removing alternate chain: %h.",e.hash);!await this.isMainChain(e);)r(!e.isGenesis()),this.del(d.p.encode(e.hash)),this.del(d.h.encode(e.hash)),this.del(d.e.encode(e.hash)),this.del(d.b.encode(e.hash)),this.cacheHash.unpush(e.hash),e=await this.getPrevious(e),r(e)}async saveBlock(t,e,i){const r=e.hash();this.options.spv||(this.put(d.b.encode(r),e.toRaw()),i&&await this.connectBlock(t,e,i))}async removeBlock(t){if(this.options.spv)return new u;const e=await this.getBlock(t.hash);if(!e)throw new Error("Block not found.");return this.del(d.b.encode(e.hash())),this.disconnectBlock(t,e)}saveView(t){for(const[e,i]of t.map)for(const[t,r]of i.outputs){if(r.spent){this.del(d.c.encode(e,t)),this.coinCache.capacity>0&&this.coinCache.unpush(m.toKey(e,t));continue}const i=r.toRaw();this.put(d.c.encode(e,t),i),this.coinCache.capacity>0&&this.coinCache.push(m.toKey(e,t),i)}}async connectBlock(t,e,i){if(this.options.spv)return;const r=e.hash();if(this.pending.connect(e),!t.isGenesis()){for(let r=0;r<e.txs.length;r++){const s=e.txs[r];if(r>0)for(const{prevout:t}of s.inputs)this.pending.spend(i.getOutput(t));for(const t of s.outputs)t.script.isUnspendable()||this.pending.add(t);this.indexTX(s,i,t,r)}return this.saveView(i),i.undo.isEmpty()||this.put(d.u.encode(r),i.undo.commit()),this.pruneBlock(t)}}async disconnectBlock(t,e){const i=new u;if(this.options.spv)return i;const s=e.hash(),n=await this.getUndoCoins(s);this.pending.disconnect(e);for(let r=e.txs.length-1;r>=0;r--){const s=e.txs[r];if(r>0)for(let t=s.inputs.length-1;t>=0;t--){const{prevout:e}=s.inputs[t];n.apply(i,e),this.pending.add(i.getOutput(e))}i.removeTX(s,t.height);for(let t=s.outputs.length-1;t>=0;t--){const e=s.outputs[t];e.script.isUnspendable()||this.pending.spend(e)}this.unindexTX(s,i)}return r(n.isEmpty(),"Undo coins data inconsistency."),this.saveView(i),this.del(d.u.encode(s)),i}async pruneBlock(t){if(this.options.spv)return;if(!this.options.prune)return;const e=t.height-this.network.block.keepBlocks;if(e<=this.network.block.pruneAfterHeight)return;const i=await this.getHash(e);i&&(this.del(d.b.encode(i)),this.del(d.u.encode(i)))}saveFlags(){const t=k.fromOptions(this.options),e=this.db.batch();return e.put(d.O.encode(),t.toRaw()),e.write()}indexTX(t,e,i,s){const n=t.hash();if(this.options.indexTX){const r=y.fromTX(t,i,s);if(this.put(d.t.encode(n),r.toRaw()),this.options.indexAddress)for(const i of t.getHashes(e))this.put(d.T.encode(i,n),null)}if(this.options.indexAddress){if(!t.isCoinbase())for(const{prevout:i}of t.inputs){const{hash:t,index:s}=i,n=e.getOutput(i);r(n);const o=n.getHash();o&&this.del(d.C.encode(o,t,s))}for(let e=0;e<t.outputs.length;e++){const i=t.outputs[e].getHash();i&&this.put(d.C.encode(i,n,e),null)}}}unindexTX(t,e){const i=t.hash();if(this.options.indexTX&&(this.del(d.t.encode(i)),this.options.indexAddress))for(const r of t.getHashes(e))this.del(d.T.encode(r,i));if(this.options.indexAddress){if(!t.isCoinbase())for(const{prevout:i}of t.inputs){const{hash:t,index:s}=i,n=e.getOutput(i);r(n);const o=n.getHash();o&&this.put(d.C.encode(o,t,s),null)}for(let e=0;e<t.outputs.length;e++){const r=t.outputs[e].getHash();r&&this.del(d.C.encode(r,i,e))}}}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * db.js - LevelUP module for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=e.alloc(1,0),n=e.alloc(255,255);class o{constructor(t,e,i){r("function"==typeof t,"Backend is required."),r("string"==typeof e,"Filename is required."),this.options=new u(i),this.backend=t,this.location=e,this.loading=!1,this.closing=!1,this.loaded=!1,this.binding=null,this.leveldown=!1,this.init()}init(){const t=this.backend;t.leveldown?(this.binding=new t(this.location),this.leveldown=!0):this.binding=new t(this.location)}async open(){if(this.loaded)throw new Error("Database is already open.");r(!this.loading),r(!this.closing);try{this.loading=!0,await this.load()}finally{this.loading=!1}this.loaded=!0}async close(){if(!this.loaded)throw new Error("Database is already closed.");r(!this.loading),r(!this.closing);try{this.loaded=!1,this.closing=!0,await this.unload()}catch(t){throw this.loaded=!0,t}finally{this.closing=!1}}load(){return new Promise((t,e)=>{this.binding.open(this.options,d(t,e))})}unload(){return new Promise((t,e)=>{this.binding.close(d(t,e))})}destroy(){return new Promise((t,e)=>{this.loaded||this.closing?e(new Error("Cannot destroy open database.")):this.backend.destroy?this.backend.destroy(this.location,d(t,e)):e(new Error("Cannot destroy (method not available)."))})}repair(){return new Promise((t,e)=>{this.loaded||this.closing?e(new Error("Cannot repair open database.")):this.backend.repair?this.backend.repair(this.location,d(t,e)):e(new Error("Cannot repair (method not available)."))})}backup(t){return this.binding.backup?new Promise((e,i)=>{this.loaded?this.binding.backup(t,d(e,i)):i(new Error("Database is closed."))}):this.clone(t)}bucket(t){return new h(this,t)}root(){return this}child(t){return this.bucket(t)}wrap(t){return t.root()}get(t){return new Promise((i,r)=>{this.loaded?e.isBuffer(t)?this.binding.get(t,(t,e)=>{if(t)return function(t){return!!t&&(t.notFound||"NotFoundError"===t.type||/not\s*found/i.test(t.message))}(t)?void i(null):void r(t);i(e)}):r(new Error("Key must be a buffer.")):r(new Error("Database is closed."))})}put(t,i){return null==i&&(i=s),new Promise((r,s)=>{this.loaded?e.isBuffer(t)&&e.isBuffer(i)?this.binding.put(t,i,d(r,s)):s(new Error("Key and value must be buffers.")):s(new Error("Database is closed."))})}del(t){return new Promise((i,r)=>{this.loaded?e.isBuffer(t)?this.binding.del(t,d(i,r)):r(new Error("Key must be a buffer.")):r(new Error("Database is closed."))})}batch(){if(!this.loaded)throw new Error("Database is closed.");return new a(this.binding.batch())}iterator(t){if(!this.loaded)throw new Error("Database is closed.");return new c(this,t)}getProperty(t){if(!this.loaded)throw new Error("Database is closed.");return this.binding.getProperty?this.binding.getProperty(t):""}approximateSize(t,i){return null==t&&(t=s),null==i&&(i=n),new Promise((r,s)=>{this.loaded?this.binding.approximateSize?e.isBuffer(t)&&e.isBuffer(i)?this.binding.approximateSize(t,i,d(r,s)):s(new Error("Start and end must be buffers.")):s(new Error("Cannot get size.")):s(new Error("Database is closed."))})}compactRange(t,i){return null==t&&(t=s),null==i&&(i=n),new Promise((r,s)=>{this.loaded?this.binding.compactRange?e.isBuffer(t)&&e.isBuffer(i)?this.binding.compactRange(t,i,d(r,s)):s(new Error("Start and end must be buffers.")):r():s(new Error("Database is closed."))})}async has(t){return null!=await this.get(t)}async range(t){return null==t&&(t={}),this.iterator({gt:t.gt,lt:t.lt,gte:t.gte,lte:t.lte,limit:t.limit,keys:!0,values:!0}).range(t.parse)}async keys(t){return null==t&&(t={}),this.iterator({gt:t.gt,lt:t.lt,gte:t.gte,lte:t.lte,limit:t.limit,keys:!0,values:!1}).keys(t.parse)}async values(t){return null==t&&(t={}),this.iterator({gt:t.gt,lt:t.lt,gte:t.gte,lte:t.lte,limit:t.limit,keys:!1,values:!0}).values(t.parse)}async dump(){const t=Object.create(null),e=await this.range();for(const i of e){const e=i.key.toString("hex"),r=i.value.toString("hex");t[e]=r}return t}async verify(t,i,s){r("string"==typeof i),r(s>>>0===s);const n=await this.get(t);if(!n){const r=e.allocUnsafe(i.length+4);r.write(i,0,"ascii"),r.writeUInt32LE(s,i.length);const n=this.batch();return n.put(t,r),void await n.write()}if(n.length!==i.length+4)throw new Error(m(i));if(n.toString("ascii",0,i.length)!==i)throw new Error(m(i));if(n.readUInt32LE(i.length)!==s)throw new Error(m(i))}async clone(t){if(!this.loaded)throw new Error("Database is closed.");const e=new u(this.options);e.createIfMissing=!0,e.errorIfExists=!0;const i=new o(this.backend,t,e);await i.open();try{await this.cloneTo(i)}finally{await i.close()}}async cloneTo(t){const e=this.iterator({keys:!0,values:!0});let i=t.batch(),r=0;return await e.each(async(e,s)=>{i.put(e,s),r+=e.length+80,(r+=s.length+80)>=256<<20&&(r=0,await i.write(),i=t.batch())}),i.write()}}class a{constructor(t,e){this.binding=t,this.prefix=e||null}bucket(t){return new a(this.binding,t)}root(){return this.bucket(null)}child(t){return this.bucket(g(this.prefix,t))}wrap(t){return t.bucket(this.prefix)}put(t,i){return null==i&&(i=s),r(e.isBuffer(i),"Value must be a buffer."),this.binding.put(g(this.prefix,t),i),this}del(t){return this.binding.del(g(this.prefix,t)),this}write(){return new Promise((t,e)=>{this.binding.write(d(t,e))})}clear(){return this.binding.clear(),this}}class h{constructor(t,i){this.db=t,r(null==i||e.isBuffer(i),"Prefix must be a buffer."),this.prefix=i||null}bucket(t){return new h(this.db,t)}root(){return this.bucket(null)}child(t){return this.bucket(g(this.prefix,t))}wrap(t){return t.bucket(this.prefix)}batch(){return new a(this.db.binding.batch(),this.prefix)}has(t){return this.db.has(g(this.prefix,t))}get(t){return this.db.get(g(this.prefix,t))}iterator(t){return new c(this.db,t,this.prefix)}async range(t){return null==t&&(t={}),this.iterator({gt:t.gt,lt:t.lt,gte:t.gte,lte:t.lte,limit:t.limit,keys:!0,values:!0}).range(t.parse)}async keys(t){return null==t&&(t={}),this.iterator({gt:t.gt,lt:t.lt,gte:t.gte,lte:t.lte,limit:t.limit,keys:!0,values:!1}).keys(t.parse)}async values(t){return null==t&&(t={}),this.iterator({gt:t.gt,lt:t.lt,gte:t.gte,lte:t.lte,limit:t.limit,keys:!1,values:!0}).values(t.parse)}}class c{constructor(t,e,i){this.db=t,this.options=e||null,this.prefix=i||null,this.binding=null,this.cache=[],this.finished=!1,this.key=null,this.value=null}start(){if(this.binding)return;const t=new f(this.options);null!=this.prefix&&(r(e.isBuffer(this.prefix)),null!=t.gte&&(t.gte=g(this.prefix,t.gte)),null!=t.lte&&(t.lte=g(this.prefix,t.lte)),null!=t.gt&&(t.gt=g(this.prefix,t.gt)),null!=t.lt&&(t.lt=g(this.prefix,t.lt)),null==t.gt&&null==t.gte&&(t.gt=this.prefix),null==t.lt&&null==t.lte&&(t.lt=function(t){if(0===t.length)return null;const i=e.from(t);let r=i.length-1;for(;r>=0;r--){if(255!==i[r]){i[r]+=1;break}i[r]=0}return-1===r?null:i}(this.prefix))),this.binding=this.db.binding.iterator(t)}bucket(t){return r(!this.binding),new c(this.db,this.options,t)}root(){return this.bucket(null)}child(t){return this.bucket(g(this.prefix,t))}wrap(t){return t.bucket(this.prefix)}cleanup(){this.cache=[],this.finished=!0,this.key=null,this.value=null}async each(t){for(r("function"==typeof t);!this.finished;)for(await this.read();this.cache.length>0;){const e=p(this.prefix,this.cache.pop()),i=this.cache.pop();let r=null;try{(r=t(e,i))instanceof Promise&&(r=await r)}catch(t){throw await this.end(),t}if(!1===r)return this.end()}return this.end()}async next(){return this.finished||0===this.cache.length&&await this.read(),this.cache.length>0?(this.key=p(this.prefix,this.cache.pop()),this.value=this.cache.pop(),!0):(r(this.finished),this.cleanup(),!1)}_read(t){this.db.leveldown?this.binding.next(t):this.binding.next((e,i,r)=>{e?t(e):void 0!==i||void 0!==r?t(null,[r,i],!1):t(null,[],!0)})}read(){return new Promise((t,e)=>{if(!this.binding)try{this.start()}catch(t){return void e(t)}this._read((i,r,s)=>{if(i)return this.cleanup(),void this.binding.end(()=>e(i));this.cache=r,this.finished=s,t()})})}seek(t){return r(e.isBuffer(t),"Key must be a buffer."),this.start(),this.binding.seek(t),this}end(){return new Promise((t,e)=>{if(!this.binding)try{this.start()}catch(t){return void e(t)}this.cleanup(),this.binding.end(d(t,e))})}async range(t){r(!t||"function"==typeof t);const e=[];return await this.each((i,r)=>{if(t){const s=t(i,r);null!=s&&e.push(s)}else e.push(new l(i,r))}),e}async keys(t){r(!t||"function"==typeof t);const e=[];return await this.each((i,r)=>{t&&(i=t(i)),null!=i&&e.push(i)}),e}async values(t){r(!t||"function"==typeof t);const e=[];return await this.each((i,r)=>{t&&(r=t(r)),null!=r&&e.push(r)}),e}}class l{constructor(t,e){this.key=t,this.value=e}}class u{constructor(t){this.createIfMissing=!0,this.errorIfExists=!1,this.compression=!0,this.cacheSize=8<<20,this.writeBufferSize=4<<20,this.maxOpenFiles=64,this.maxFileSize=2<<20,this.paranoidChecks=!1,this.memory=!1,t&&this.fromOptions(t)}fromOptions(t){return r(t,"Options are required."),null!=t.createIfMissing&&(r("boolean"==typeof t.createIfMissing,"`createIfMissing` must be a boolean."),this.createIfMissing=t.createIfMissing),null!=t.errorIfExists&&(r("boolean"==typeof t.errorIfExists,"`errorIfExists` must be a boolean."),this.errorIfExists=t.errorIfExists),null!=t.compression&&(r("boolean"==typeof t.compression,"`compression` must be a boolean."),this.compression=t.compression),null!=t.cacheSize&&(r("number"==typeof t.cacheSize,"`cacheSize` must be a number."),r(t.cacheSize>=0),this.cacheSize=Math.floor(t.cacheSize/2),this.writeBufferSize=Math.floor(t.cacheSize/4)),null!=t.maxFiles&&(r("number"==typeof t.maxFiles,"`maxFiles` must be a number."),r(t.maxFiles>=0),this.maxOpenFiles=t.maxFiles),null!=t.maxFileSize&&(r("number"==typeof t.maxFileSize,"`maxFileSize` must be a number."),r(t.maxFileSize>=0),this.maxFileSize=t.maxFileSize),null!=t.paranoidChecks&&(r("boolean"==typeof t.paranoidChecks,"`paranoidChecks` must be a boolean."),this.paranoidChecks=t.paranoidChecks),null!=t.memory&&(r("boolean"==typeof t.memory,"`memory` must be a boolean."),this.memory=t.memory),this}}class f{constructor(t){this.gte=null,this.lte=null,this.gt=null,this.lt=null,this.keys=!0,this.values=!1,this.fillCache=!1,this.keyAsBuffer=!0,this.valueAsBuffer=!0,this.reverse=!1,this.highWaterMark=16384,t&&this.fromOptions(t)}fromOptions(t){if(r(t,"Options are required."),null!=t.gte&&(r(e.isBuffer(t.gte),"`gte` must be a buffer."),this.gte=t.gte),null!=t.lte&&(r(e.isBuffer(t.lte),"`lte` must be a buffer."),this.lte=t.lte),null!=t.gt&&(r(e.isBuffer(t.gt),"`gt` must be a buffer."),this.gt=t.gt),null!=t.lt&&(r(e.isBuffer(t.lt),"`lt` must be a buffer."),this.lt=t.lt),null!=t.keys&&(r("boolean"==typeof t.keys),this.keys=t.keys),null!=t.values&&(r("boolean"==typeof t.values),this.values=t.values),null!=t.fillCache&&(r("boolean"==typeof t.fillCache),this.fillCache=t.fillCache),null!=t.reverse&&(r("boolean"==typeof t.reverse),this.reverse=t.reverse),null!=t.limit&&(r("number"==typeof t.limit),r(t.limit>=0),this.limit=t.limit),!this.keys&&!this.values)throw new Error("Keys and/or values must be chosen.");return this}}function d(t,e){return function(i,r){i?e(i):t(r)}}function p(t,i){return null==i?i:(r(e.isBuffer(i),"Key must be a buffer."),0===i.length?i:null==t?i:(r(e.isBuffer(t)),r(i.length>=t.length),i.slice(t.length)))}function g(t,i){if(r(e.isBuffer(i),"Key must be a buffer."),null==t)return i;r(e.isBuffer(t));const s=e.allocUnsafe(t.length+i.length);return t.copy(s,0),i.copy(s,t.length),s}function m(t){return`Database version mismatch for database: "${t}".`+" Please run a data migration before opening."}t.exports=o}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){const r=i(0),s=Object.create(null),n=e.alloc(0),o=e.alloc(255,255),a={char:{min:"\0",max:"ÿ",dynamic:!1,size:t=>1,read:(t,e)=>(p(e+1<=t.length),String.fromCharCode(t[e])),write:(t,e,i)=>(g("string"==typeof e),g(1===e.length),p(i+1<=t.length),t[i]=e.charCodeAt(0),1)},uint8:{min:0,max:255,dynamic:!1,size:t=>1,read:(t,e)=>(p(e+1<=t.length),t[e]),write:(t,e,i)=>(g((255&e)===e),p(i+1<=t.length),t[i]=e,1)},uint16:{min:0,max:65535,dynamic:!1,size:t=>2,read:(t,e)=>(p(e+2<=t.length),function(t,e){return 256*t[e++]+t[e]}(t,e)),write:(t,e,i)=>(g((65535&e)===e),p(i+2<=t.length),function(t,e,i){t[i++]=e>>>8,t[i++]=e}(t,e,i),2)},uint32:{min:0,max:4294967295,dynamic:!1,size:t=>4,read:(t,e)=>(p(e+4<=t.length),function(t,e){return 16777216*t[e++]+65536*t[e++]+256*t[e++]+t[e]}(t,e)),write:(t,e,i)=>(g(e>>>0===e),p(i+4<=t.length),function(t,e,i){t[i+3]=e,e>>>=8,t[i+2]=e,e>>>=8,t[i+1]=e,e>>>=8,t[i]=e}(t,e,i),4)},buffer:{min:n,max:o,dynamic:!0,size:t=>(function(t){return g(e.isBuffer(t)),1+t.length})(t),read:(t,e)=>(function(t,e){return p(e+1<=t.length),p(e+1+t[e]<=t.length),t.slice(e+1,e+1+t[e])})(t,e),write:(t,i,r)=>(function(t,i,r,s){return g(e.isBuffer(i)),p(i.length<=255),p(r+1<=t.length),t[r]=i.length,p(i.copy(t,r+1)===i.length),1+i.length})(t,i,r)},hex:{min:n.toString("hex"),max:o.toString("hex"),dynamic:!0,size:t=>c(t,"hex"),read:(t,e)=>l(t,e,"hex"),write:(t,e,i)=>u(t,e,i,"hex")},ascii:{min:n.toString("binary"),max:o.toString("binary"),dynamic:!0,size:t=>c(t,"binary"),read:(t,e)=>l(t,e,"binary"),write:(t,e,i)=>u(t,e,i,"binary")},utf8:{min:n.toString("utf8"),max:o.toString("utf8"),dynamic:!0,size:t=>c(t,"utf8"),read:(t,e)=>l(t,e,"utf8"),write:(t,e,i)=>u(t,e,i,"utf8")},hash160:{min:e.alloc(20,0),max:e.alloc(20,255),dynamic:!1,size:t=>20,read:(t,e)=>(p(e+20<=t.length),t.slice(e,e+20)),write:(t,i,r)=>(g(e.isBuffer(i)),g(20===i.copy(t,r)),20)},hash256:{min:e.alloc(32,0),max:e.alloc(32,255),dynamic:!1,size:t=>32,read:(t,e)=>(p(e+32<=t.length),t.slice(e,e+32)),write:(t,i,r)=>(g(e.isBuffer(i)),g(32===i.copy(t,r)),32)},hash:{min:e.alloc(1,0),max:e.alloc(64,255),dynamic:!0,size:t=>(g(e.isBuffer(t)),1+t.length),read:(t,e)=>(p(e+1<=t.length),p(t[e]>=1&&t[e]<=64),p(e+1+t[e]<=t.length),t.slice(e+1,e+1+t[e])),write:(t,i,r)=>(g(e.isBuffer(i)),g(i.length>=1&&i.length<=64),p(r+1<=t.length),t[r]=i.length,g(i.copy(t,r+1)===i.length),1+i.length)},hhash160:{min:e.alloc(20,0),max:e.alloc(20,255),dynamic:!1,size:t=>20,read:(t,e)=>(p(e+20<=t.length),t.toString("hex",e,e+20)),write:(t,e,i)=>(g(20===d(t,e,i)),20)},hhash256:{min:e.alloc(32,0),max:e.alloc(32,255),dynamic:!1,size:t=>32,read:(t,e)=>(p(e+32<=t.length),t.toString("hex",e,e+32)),write:(t,e,i)=>(g(32===d(t,e,i)),32)},hhash:{min:e.alloc(1,0),max:e.alloc(64,255),dynamic:!0,size:t=>1+f(t),read:(t,e)=>(p(e+1<=t.length),p(t[e]>=1&&t[e]<=64),p(e+1+t[e]<=t.length),t.toString("hex",e+1,e+1+t[e])),write(t,e,i){const r=f(e);return g(r>=1&&r<=64),p(i+1<=t.length),t[i]=r,g(d(t,e,i+1)===r),1+r}}};class h{constructor(t=[]){r(Array.isArray(t)),this.ops=[],this.size=0,this.index=-1,this.init(t)}static create(t){const e=t?t.join(":"):"",i=s[e];if(i)return i;const r=new h(t);return s[e]=r,r}init(t){for(let e=0;e<t.length;e++){const i=t[e];if(r("string"==typeof i),!a.hasOwnProperty(i))throw new Error(`Invalid type name: ${i}.`);const s=a[i];s.dynamic?-1===this.index&&(this.index=e):this.size+=s.size(),this.ops.push(s)}}getSize(t){r(t.length===this.ops.length);let e=1+this.size;if(-1===this.index)return e;for(let i=this.index;i<t.length;i++){const r=this.ops[i],s=t[i];r.dynamic&&(e+=r.size(s))}return e}encode(t,i){if(r(Array.isArray(i)),i.length!==this.ops.length)throw new Error("Wrong number of arguments passed to key.");const s=this.getSize(i),n=e.allocUnsafe(s);n[0]=t;let o=1;for(let t=0;t<this.ops.length;t++){const e=this.ops[t],r=i[t];o+=e.write(n,r,o)}return n}decode(t,i){if(r(e.isBuffer(i)),0===this.ops.length)return i;if(0===i.length||i[0]!==t)throw new Error("Key prefix mismatch.");const s=[];let n=1;for(const t of this.ops){const e=t.read(i,n);n+=t.size(e),s.push(e)}return s}min(t,e){for(let t=e.length;t<this.ops.length;t++){const i=this.ops[t];e.push(i.min)}return this.encode(t,e)}max(t,e){for(let t=e.length;t<this.ops.length;t++){const i=this.ops[t];e.push(i.max)}return this.encode(t,e)}root(t){const i=e.allocUnsafe(1);return i[0]=t,i}}function c(t,i){return g("string"==typeof t),1+e.byteLength(t,i)}function l(t,e,i){return p(e+1<=t.length),p(e+1+t[e]<=t.length),t.toString(i,e+1,e+1+t[e])}function u(t,i,r,s){g("string"==typeof i);const n=e.byteLength(i,s);return g(n<=255),p(r+1<=t.length),t[r]=n,n>0&&g(t.write(i,r+1,s)===n),1+n}function f(t){return e.isBuffer(t)?t.length:(g("string"==typeof t),t.length>>>1)}function d(t,i,r){return e.isBuffer(i)?i.copy(t,r):(g("string"==typeof i),t.write(i,r,"hex"))}function p(t){if(!t){const t=new RangeError("Invalid length for database key.");throw Error.captureStackTrace&&Error.captureStackTrace(t,p),t}}function g(t){if(!t){const t=new TypeError("Invalid type for database key.");throw Error.captureStackTrace&&Error.captureStackTrace(t,g),t}}t.exports=class{constructor(t,e=[]){r(Array.isArray(e)),this.id=function(t){return"string"==typeof t&&(r(1===t.length),t=t.charCodeAt(0)),r((255&t)===t),r(255!==t),t}(t),this.base=h.create(e)}encode(...t){return this.base.encode(this.id,t)}decode(t){return this.base.decode(this.id,t)}min(...t){return this.base.min(this.id,t)}max(...t){return this.base.max(this.id,t)}root(){return this.base.root(this.id)}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e,r){
/*!
 * memdb.js - in-memory database for bcoin
 * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),n=i(186),o=e.alloc(0);class a{constructor(t,e){this.options=e||{},this.ops=[],this.db=t,this.written=!1}put(t,e){return s(!this.written,"Already written."),this.ops.push(new h("put",t,e)),this}del(t){return s(!this.written,"Already written."),this.ops.push(new h("del",t)),this}write(t){if(this.written)return r(()=>t(new Error("Already written."))),this;for(const e of this.ops)switch(e.type){case"put":this.db.insert(e.key,e.value);break;case"del":this.db.remove(e.key);break;default:return r(()=>t(new Error("Bad op."))),this}return this.ops=[],this.written=!0,r(t),this}clear(){return s(!this.written,"Already written."),this.ops=[],this}}class h{constructor(t,e,i){this.type=t,this.key=e,this.value=i}}class c{constructor(t){this.keys=!0,this.values=!0,this.start=null,this.end=null,this.gt=!1,this.lt=!1,this.keyAsBuffer=!0,this.valueAsBuffer=!0,this.reverse=!1,this.limit=-1,t&&this.fromOptions(t)}fromOptions(t){return null!=t.keys&&(s("boolean"==typeof t.keys),this.keys=t.keys),null!=t.values&&(s("boolean"==typeof t.values),this.values=t.values),null!=t.start&&(this.start=t.start),null!=t.end&&(this.end=t.end),null!=t.gte&&(this.start=t.gte),null!=t.lte&&(this.end=t.lte),null!=t.gt&&(this.gt=!0,this.start=t.gt),null!=t.lt&&(this.lt=!0,this.end=t.lt),null!=this.start&&("string"==typeof this.start&&(this.start=e.from(this.start,"utf8")),s(e.isBuffer(this.start),"`start` must be a Buffer.")),null!=this.end&&("string"==typeof this.end&&(this.end=e.from(this.end,"utf8")),s(e.isBuffer(this.end),"`end` must be a Buffer.")),null!=t.keyAsBuffer&&(s("boolean"==typeof t.keyAsBuffer),this.keyAsBuffer=t.keyAsBuffer),null!=t.valueAsBuffer&&(s("boolean"==typeof t.valueAsBuffer),this.valueAsBuffer=t.valueAsBuffer),null!=t.reverse&&(s("boolean"==typeof t.reverse),this.reverse=t.reverse),null!=t.limit&&(s("number"==typeof t.limit),this.limit=t.limit),this}}function l(t,e){return t.compare(e)}t.exports=class{constructor(t){this.location=t||"memory",this.options={},this.tree=new n(l,!0)}search(t){"string"==typeof t&&(t=e.from(t,"utf8")),s(e.isBuffer(t),"Key must be a Buffer.");const i=this.tree.search(t);if(i)return i.value}insert(t,i){return"string"==typeof t&&(t=e.from(t,"utf8")),"string"==typeof i&&(i=e.from(i,"utf8")),null==i&&(i=o),s(e.isBuffer(t),"Key must be a Buffer."),s(e.isBuffer(i),"Value must be a Buffer."),null!=this.tree.insert(t,i)}remove(t){return"string"==typeof t&&(t=e.from(t,"utf8")),s(e.isBuffer(t),"Key must be a Buffer."),null!=this.tree.remove(t)}range(t,i){return"string"==typeof t&&(t=e.from(t,"utf8")),"string"==typeof i&&(i=e.from(i,"utf8")),s(!t||e.isBuffer(t),"Key must be a Buffer."),s(!i||e.isBuffer(i),"Key must be a Buffer."),this.tree.range(t,i)}open(t,e){e||(e=t,t=null),t||(t={}),this.options=t,r(e)}close(t){r(t)}get(t,e,i){i||(i=e,e=null),e||(e={});let s=this.search(t);if(!s){const t=new Error("MEMDB_NOTFOUND: Key not found.");return t.notFound=!0,t.type="NotFoundError",void r(()=>i(t))}!1===e.asBuffer&&(s=s.toString("utf8")),r(()=>i(null,s))}put(t,e,i,s){s||(s=i,i=null),this.insert(t,e),r(s)}del(t,e,i){i||(i=e,e=null),this.remove(t),r(i)}batch(t,e,i){i||(i=e,e=null);const r=new a(this,e);return t?(r.ops=t,void r.write(i)):r}iterator(t){return new class{constructor(t,e){this.db=t,this.options=new c(e),this.iter=null,this.ended=!1,this.total=0,this.init()}init(){const t=this.db.tree.snapshot(),e=this.db.tree.iterator(t);this.options.reverse?this.options.end?(e.seekMax(this.options.end),this.options.lt&&e.valid()&&0===e.compare(this.options.end)&&e.prev()):e.seekLast():this.options.start?(e.seekMin(this.options.start),this.options.gt&&e.valid()&&0===e.compare(this.options.start)&&e.next()):e.seekFirst(),this.iter=e}next(t){const e=this.options,i=this.iter;if(!this.iter)return void r(()=>t(new Error("Cannot call next.")));let s;if(e.reverse?(s=i.prev())&&e.start&&(e.gt?i.compare(e.start)<=0&&(s=!1):i.compare(e.start)<0&&(s=!1)):(s=i.next())&&e.end&&(e.lt?i.compare(e.end)>=0&&(s=!1):i.compare(e.end)>0&&(s=!1)),!s)return this.iter=null,void r(t);if(-1!==e.limit){if(this.total>=e.limit)return this.iter=null,void r(t);this.total+=1}let n=i.key,a=i.value;e.keys||(n=o),e.values||(a=o),e.keyAsBuffer||(n=n.toString("utf8")),e.valueAsBuffer||(a=a.toString("utf8")),r(()=>t(null,n,a))}seek(t){s(this.iter,"Already ended."),"string"==typeof t&&(t=e.from(t,"utf8")),s(e.isBuffer(t),"Key must be a Buffer."),this.options.reverse?this.iter.seekMax(t):this.iter.seekMin(t)}end(t){this.ended?r(()=>t(new Error("Already ended."))):(this.ended=!0,this.iter=null,r(t))}}(this,t)}getProperty(t){return""}approximateSize(t,e,i){const s=this.range(t,e);let n=0;for(const t of s)n+=t.key.length,n+=t.value.length;r(()=>i(null,n))}static destroy(t,e){r(e)}static repair(t,e){r(e)}}}).call(this,i(1).Buffer,i(34).setImmediate)},function(t,e,i){"use strict";
/*!
 * rbt.js - red black tree for bcoin
 * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(0),s=0;let n=null;class o{constructor(t,e){this.key=t,this.value=e,this.color=s,this.parent=n,this.left=n,this.right=n}clone(){const t=new o(this.key,this.value);return t.color=this.color,t.parent=this.parent,t.left=this.left,t.right=this.right,t}copy(){return new a(this.key,this.value)}inspect(){return{key:this.key,value:this.value,color:this.color===s?"red":"black",left:this.left,right:this.right}}isNull(){return!1}}class a{constructor(t,e){this.key=t,this.value=e}}function h(t,e){e.isNull()||(t.left=e.clone(),t.left.parent=t,h(t.left,e.left),c(t.left,e.right))}function c(t,e){e.isNull()||(t.right=e.clone(),t.right.parent=t,h(t.right,e.left),c(t.right,e.right))}n=new class{constructor(){this.key=null,this.value=null,this.color=1,this.parent=null,this.left=null,this.right=null}inspect(){return"NIL"}isNull(){return!0}},t.exports=class{constructor(t,e){r("function"==typeof t),this.root=n,this.compare=t,this.unique=e||!1}reset(){this.root=n}search(t){let e=this.root;for(;!e.isNull();){const i=this.compare(t,e.key);if(0===i)return e;e=i<0?e.left:e.right}return null}insert(t,e){let i,r=this.root,s=!1;for(;!r.isNull();){const n=this.compare(t,r.key);if(this.unique&&0===n)return r.key=t,r.value=e,r;i=r,n<0?(s=!0,r=r.left):(s=!1,r=r.right)}const n=new o(t,e);return i?(n.parent=i,s?i.left=n:i.right=n,this.insertFixup(n),n):(this.root=n,this.insertFixup(n),n)}insertFixup(t){for(t.color=s;t!==this.root&&t.parent.color===s;)if(t.parent===t.parent.parent.left){const e=t.parent.parent.right;e.isNull()||e.color!==s?(t===t.parent.right&&(t=t.parent,this.rotl(t)),t.parent.color=1,t.parent.parent.color=s,this.rotr(t.parent.parent)):(t.parent.color=1,e.color=1,t.parent.parent.color=s,t=t.parent.parent)}else{const e=t.parent.parent.left;e.isNull()||e.color!==s?(t===t.parent.left&&(t=t.parent,this.rotr(t)),t.parent.color=1,t.parent.parent.color=s,this.rotl(t.parent.parent)):(t.parent.color=1,e.color=1,t.parent.parent.color=s,t=t.parent.parent)}this.root.color=1}remove(t){let e=this.root;for(;!e.isNull();){const i=this.compare(t,e.key);if(0===i)return this.removeNode(e),e;e=i<0?e.left:e.right}return null}removeNode(t){let e=t;t.left.isNull()||t.right.isNull()||(e=this.successor(t));const i=e.left.isNull()?e.right:e.left;i.parent=e.parent,e.parent.isNull()?this.root=i:e===e.parent.left?e.parent.left=i:e.parent.right=i,e!==t&&(t.key=e.key,t.value=e.value),1===e.color&&this.removeFixup(i)}removeFixup(t){for(;t!==this.root&&1===t.color;)if(t===t.parent.left){let e=t.parent.right;e.color===s&&(e.color=1,t.parent.color=s,this.rotl(t.parent),e=t.parent.right),1===e.left.color&&1===e.right.color?(e.color=s,t=t.parent):(1===e.right.color&&(e.left.color=1,e.color=s,this.rotr(e),e=t.parent.right),e.color=t.parent.color,t.parent.color=1,e.right.color=1,this.rotl(t.parent),t=this.root)}else{let e=t.parent.left;e.color===s&&(e.color=1,t.parent.color=s,this.rotr(t.parent),e=t.parent.left),1===e.right.color&&1===e.left.color?(e.color=s,t=t.parent):(1===e.left.color&&(e.right.color=1,e.color=s,this.rotl(e),e=t.parent.left),e.color=t.parent.color,t.parent.color=1,e.left.color=1,this.rotr(t.parent),t=this.root)}t.color=1}rotl(t){const e=t.right;t.right=e.left,e.left.isNull()||(e.left.parent=t),e.parent=t.parent,t.parent.isNull()?this.root=e:t===t.parent.left?t.parent.left=e:t.parent.right=e,e.left=t,t.parent=e}rotr(t){const e=t.left;t.left=e.right,e.right.isNull()||(e.right.parent=t),e.parent=t.parent,t.parent.isNull()?this.root=e:t===t.parent.right?t.parent.right=e:t.parent.left=e,e.right=t,t.parent=e}min(t){if(t.isNull())return t;for(;!t.left.isNull();)t=t.left;return t}max(t){if(t.isNull())return t;for(;!t.right.isNull();)t=t.right;return t}successor(t){if(!t.right.isNull()){for(t=t.right;!t.left.isNull();)t=t.left;return t}let e=t.parent;for(;!e.isNull()&&t===e.right;)t=e,e=e.parent;return e}predecessor(t){if(!t.left.isNull()){for(t=t.left;!t.right.isNull();)t=t.right;return t}let e=t.parent;for(;!e.isNull()&&t===e.left;)t=e,e=e.parent;return e}clone(){if(this.root.isNull())return n;const t=[];let e,i,s=this.root,o=!0;for(;;)if(s.isNull()){if(0===t.length)break;e=s=t.pop(),o=!1,s=s.right}else{const r=s.clone();e&&(r.parent=e),o?e?e.left=r:i=r:e?e.right=r:i=r,t.push(r),e=r,o=!0,s=s.left}return r(i),i}snapshot(){if(this.root.isNull())return n;const t=this.root.clone();return h(t,t.left),c(t,t.right),t}iterator(t){return new class{constructor(t,e){this.tree=t,this.root=e,this.current=e,this.key=null,this.value=null}compare(t){return r(null!=this.key,"No key."),this.tree.compare(this.key,t)}valid(){return!this.current.isNull()}reset(){this.current=this.root,this.key=null,this.value=null}seekFirst(){this.current=this.tree.min(this.root),this.key=this.current.key,this.value=this.current.value}seekLast(){this.current=this.tree.max(this.root),this.key=this.current.key,this.value=this.current.value}seek(t){return this.seekMin(t)}seekMin(t){r(null!=t,"No key passed to seek.");let e=this.current,i=n;for(;!e.isNull();){const r=this.tree.compare(e.key,t);if(0===r){i=e;break}r>0?(i=e,e=e.left):e=e.right}this.current=i,this.key=i.key,this.value=i.value}seekMax(t){r(null!=t,"No key passed to seek.");let e=this.current,i=n;for(;!e.isNull();){const r=this.tree.compare(e.key,t);if(0===r){i=e;break}r<0?(i=e,e=e.right):e=e.left}this.current=i,this.key=i.key,this.value=i.value}prev(){return this.current.isNull()?(this.key=null,this.value=null,!1):(this.key=this.current.key,this.value=this.current.value,this.current=this.tree.predecessor(this.current),!0)}next(){return this.current.isNull()?(this.key=null,this.value=null,!1):(this.key=this.current.key,this.value=this.current.value,this.current=this.tree.successor(this.current),!0)}data(){return r(null!=this.key,"No data available."),new a(this.key,this.value)}}(this,t||this.root)}range(t,e){const i=this.iterator(),r=[];for(t?i.seekMin(t):i.seekFirst();i.next()&&!(e&&i.compare(e)>0);)r.push(i.data());return r}}},function(t,e,i){"use strict";(function(e,r){
/*!
 * level-browser.js - IDB wrapper for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 *
 * Parts of this software are based on IDBWrapper.
 * @license IDBWrapper - A cross-browser wrapper for IndexedDB
 * Version 1.7.2
 * Copyright (c) 2011 - 2017 Jens Arps
 * http://jensarps.de/
 *
 * Licensed under the MIT license
 */
const s=i(0),n=e.indexedDB||e.webkitIndexedDB||e.mozIndexedDB||e.shimIndexedDB,o=e.IDBKeyRange||e.webkitIDBKeyRange||e.mozIDBKeyRange,a={READ_ONLY:"readonly",READ_WRITE:"readwrite",VERSION_CHANGE:"versionchange",NEXT:"next",NEXT_UNIQUE:"nextunique",PREV:"prev",PREV_UNIQUE:"prevunique"};class h{constructor(t,e,i){this.type=t,this.key=e,this.value=i}}class c{constructor(t){this.keys=!0,this.values=!0,this.start=null,this.end=null,this.gt=!1,this.lt=!1,this.keyAsBuffer=!0,this.valueAsBuffer=!0,this.reverse=!1,this.limit=-1,t&&this.fromOptions(t)}fromOptions(t){return null!=t.keys&&(s("boolean"==typeof t.keys),this.keys=t.keys),null!=t.values&&(s("boolean"==typeof t.values),this.values=t.values),null!=t.start&&(this.start=t.start),null!=t.end&&(this.end=t.end),null!=t.gte&&(this.start=t.gte),null!=t.lte&&(this.end=t.lte),null!=t.gt&&(this.gt=!0,this.start=t.gt),null!=t.lt&&(this.lt=!0,this.end=t.lt),null!=this.start&&("string"==typeof this.start&&(this.start=r.from(this.start,"utf8")),s(r.isBuffer(this.start),"`start` must be a Buffer.")),null!=this.end&&("string"==typeof this.end&&(this.end=r.from(this.end,"utf8")),s(r.isBuffer(this.end),"`end` must be a Buffer.")),null!=t.keyAsBuffer&&(s("boolean"==typeof t.keyAsBuffer),this.keyAsBuffer=t.keyAsBuffer),null!=t.valueAsBuffer&&(s("boolean"==typeof t.valueAsBuffer),this.valueAsBuffer=t.valueAsBuffer),null!=t.reverse&&(s("boolean"==typeof t.reverse),this.reverse=t.reverse),null!=t.limit&&(s("number"==typeof t.limit),this.limit=t.limit),this}}function l(t){return null==t?t:("string"==typeof t&&(t=r.from(t,"utf8")),s(r.isBuffer(t)),t.toString("hex"))}function u(t){if(!t)return new Error("Unknown IndexedDB error (no event).");if(t instanceof Error)return t;const{target:e}=t;if(!e)return new Error("Unknown IndexedDB error (no target).");if(e.error){const{error:t}=e;return t instanceof Error?t:"VersionError"===t.name?new Error("IndexedDB version error."):new Error(String(t))}return null!=e.errorCode?12===e.errorCode?new Error("IndexedDB version error."):new Error(`IndexedDB error: ${e.errorCode}.`):new Error("Unknown IndexedDB error (no error).")}function f(t){return e=>t(u(e))}t.exports=class{constructor(t){s("string"==typeof t),this.options={},this.version=1,this.name=`bdb-${t}`,this.location=t,this.db=null,this.store=null}transaction(t){return this.db.transaction([this.location],t)}open(t,e){e||(e=t,t=null),t||(t={}),this.options=t;const i=n.open(this.name,this.version);return i.onerror=f(e),i.onsuccess=(t=>{if(this.db)return void e();if(this.db=t.target.result,"string"==typeof this.db.version)return void e(new Error("IndexedDB is out of date."));if(!this.db.objectStoreNames.contains(this.location))return void e(new Error("Could not create object store."));const i=this.transaction(a.READ_ONLY);this.store=i.objectStore(this.location),e()}),i.onupgradeneeded=(t=>{this.db=t.target.result,this.db.objectStoreNames.contains(this.location)?this.store=t.target.transaction.objectStore(this.location):this.store=this.db.createObjectStore(this.location,{autoIncrement:!1})}),this}close(t){return this.db.close(),t(),this}put(t,e,i){const r=f(i),s=this.transaction(a.READ_WRITE);let n=!1;s.oncomplete=(()=>{n?i():i(new Error("Operation failed."))}),s.onabort=r,s.onerror=r;const o=s.objectStore(this.location).put(e,l(t));return o.onsuccess=(t=>{n=!0}),o.onerror=r,this}get(t,e,i){i||(i=e,e=null),e||(e={});const s=f(i),n=this.transaction(a.READ_ONLY);let o=!1,h=null;n.oncomplete=(()=>{if(o){if(void 0===h){const t=new Error("IDB_NOTFOUND: Key not found.");return t.notFound=!0,t.type="NotFoundError",void i(t)}h&&!r.isBuffer(h)&&h.buffer&&(h=r.from(h.buffer)),!1===e.asBuffer&&(h=h.toString("utf8")),i(null,h)}else i(new Error("Operation failed."))}),n.onabort=s,n.onerror=s;const c=n.objectStore(this.location).get(l(t));return c.onsuccess=function(t){o=!0,h=t.target.result},c.onerror=s,this}del(t,e){const i=f(e),r=this.transaction(a.READ_WRITE);let s=!1;r.oncomplete=(()=>{s?e():e(new Error("Operation failed."))}),r.onabort=i,r.onerror=i;const n=r.objectStore(this.location).delete(l(t));return n.onsuccess=(t=>{s=!0}),n.onerror=i,this}batch(t,e,i){i||(i=e,e=null);const r=new class{constructor(t,e){this.db=t,this.options=e||{},this.ops=[],this.written=!1}put(t,e){return s(!this.written,"Already written."),this.ops.push(new h("put",t,e)),this}del(t){return s(!this.written,"Already written."),this.ops.push(new h("del",t)),this}write(t){if(this.written)return t(new Error("Already written.")),this;const e=f(t),i=this.db.transaction(a.READ_WRITE);let r=this.ops.length,s=!1,n=!1;i.oncomplete=(()=>{n?t():t(new Error("Operation failed."))}),i.onabort=e,i.onerror=e;const o=()=>{0!=(r-=1)||s||(s=!0,n=!0)},h=t=>{i.abort(),s||(s=!0,e(t))};for(const{type:e,key:r,value:s}of this.ops){const n=i.objectStore(this.db.location);switch(e){case"put":{const t=n.put(s,l(r));t.onsuccess=o,t.onerror=h;break}case"del":{const t=n.delete(l(r));t.onsuccess=o,t.onerror=h;break}default:return t(new Error("Bad op type.")),this}}return this}clear(){return s(!this.written,"Already written."),this.ops=[],this}}(this,e);return t?(r.ops=t,void r.write(i)):r}iterator(t){return new class{constructor(t,e){this.db=t,this.options=new c(e),this.cursor=null,this.error=null,this.started=!1,this.ended=!1,this.callback=null}seek(t){throw new Error("Not implemented.")}next(t){if(this.ended)t(new Error("Iterator already ended."));else if(this.callback)t(new Error("Callback already pending."));else if(this.error)t(this.error);else{if(!this.started)return this.callback=t,void this.start();s(this.cursor),this.callback=t,this.cursor.continue(),this.cursor=null}}end(t){this.ended?t(new Error("Iterator already ended.")):(this.ended=!0,t())}start(){if(this.started)return;const t=this.options,e=this.db.transaction(a.READ_ONLY),i=e.objectStore(this.db.location);let s=!1,n=0;e.oncomplete=(()=>{s||this.error||(this.error=new Error("Iterator ended early.")),this.error?this.respond(this.error):this.respond(null,void 0,void 0)});const h=t=>{this.error=u(t),this.respond(this.error)};e.onabort=h,e.onerror=h;const c=l(t.start),f=l(t.end);let d=null;d=c&&f?o.bound(c,f,t.gt,t.lt):c?o.lowerBound(c,t.gt):f?o.upperBound(f,t.lt):o.lowerBound("\0",!0);const p=t.reverse?a.PREV:a.NEXT,g=i.openCursor(d,p);g.onerror=h,g.onsuccess=(e=>{const i=e.target.result;if(this.error)return void this.respond(this.error);if(!i)return void(s=!0);if(-1!==t.limit){if(n>=t.limit)return void(s=!0);n+=1}let o=r.from(i.key,"hex"),a=i.value;a&&!r.isBuffer(a)&&a.buffer&&(a=r.from(a.buffer)),t.keyAsBuffer||(o=o.toString("utf8")),t.valueAsBuffer||(a=a.toString("utf8")),this.cursor=i,this.respond(null,o,a)}),this.started=!0}respond(t,e,i){if(!this.callback)return;const r=this.callback;this.callback=null,r(t,e,i)}}(this,t)}static destroy(t,e){if(!n.deleteDatabase)return void e(new Error("Destroy not supported."));const i=n.deleteDatabase(`bdb-${t}`);i.onsuccess=(()=>e()),i.onerror=f(e)}}}).call(this,i(11),i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * layout.js - blockchain data layout for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(71),s={V:r.key("V"),O:r.key("O"),R:r.key("R"),D:r.key("D"),e:r.key("e",["hash256"]),h:r.key("h",["hash256"]),H:r.key("H",["uint32"]),n:r.key("n",["hash256"]),p:r.key("p",["hash256"]),b:r.key("b",["hash256"]),t:r.key("t",["hash256"]),c:r.key("c",["hash256","uint32"]),u:r.key("u",["hash256"]),v:r.key("v",["uint8","hash256"]),T:r.key("T",["hash","hash256"]),C:r.key("C",["hash","hash256","uint32"])};t.exports=s},function(t,e,i){"use strict";(function(t){
/*!
 * merkle.js - merkle trees for bcrypto
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */
const r=i(0);e.createTree=function(t,e){r(t&&"function"==typeof t.root),r(Array.isArray(e));const i=e;let s=e.length,n=!1,o=0;if(0===s)return i.push(t.zero),[i,n];for(;s>1;){for(let e=0;e<s;e+=2){const r=Math.min(e+1,s-1),a=i[o+e],h=i[o+r];r===e+1&&r+1===s&&a.equals(h)&&(n=!0);const c=t.root(a,h);i.push(c)}o+=s,s+=1,s>>>=1}return[i,n]},e.createRoot=function(t,i){r(t&&"function"==typeof t.root),r(Array.isArray(i));const[s,n]=e.createTree(t,i);return[s[s.length-1],n]},e.createBranch=function(t,i,s){r(t&&"function"==typeof t.root),r(i>>>0===i),r(Array.isArray(s)),r(i<s.length);let n=s.length;const[o]=e.createTree(t,s),a=[];let h=0;for(;n>1;){const t=Math.min(1^i,n-1);a.push(o[h+t]),i>>>=1,h+=n,n+=1,n>>>=1}return a},e.deriveRoot=function(e,i,s,n){r(e&&"function"==typeof e.root),r(t.isBuffer(i)),r(Array.isArray(s)),r(n>>>0===n);let o=i;for(const t of s)o=1&n?e.root(t,o):e.root(o,t),n>>>=1;return o}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * txmeta.js - extended transaction object for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(2),n=i(5),o=i(20);class a{constructor(t){this.tx=new o,this.mtime=n.now(),this.height=-1,this.block=null,this.time=0,this.index=-1,t&&this.fromOptions(t)}fromOptions(t){return t.tx&&(r(t.tx instanceof o),this.tx=t.tx),null!=t.mtime&&(r(t.mtime>>>0===t.mtime),this.mtime=t.mtime),null!=t.height&&(r(Number.isSafeInteger(t.height)),this.height=t.height),void 0!==t.block&&(r(null==t.block||e.isBuffer(t.block)),this.block=t.block),null!=t.time&&(r(t.time>>>0===t.time),this.time=t.time),null!=t.index&&(r(Number.isSafeInteger(t.index)),this.index=t.index),this}static fromOptions(t){return(new this).fromOptions(t)}fromTX(t,e,i){return this.tx=t,e&&(this.height=e.height,this.block=e.hash,this.time=e.time,this.index=i),this}static fromTX(t,e,i){return(new this).fromTX(t,e,i)}inspect(){return this.format()}format(t){const e=this.tx.format(t,null,this.index);return e.mtime=this.mtime,e.height=this.height,e.block=this.block?n.revHex(this.block):null,e.time=this.time,e}toJSON(){return this.getJSON()}getJSON(t,e,i){const r=this.tx.getJSON(t,e,null,this.index);return r.mtime=this.mtime,r.height=this.height,r.block=this.block?n.revHex(this.block):null,r.time=this.time,r.confirmations=0,null!=i&&-1!==this.height&&(r.confirmations=i-this.height+1),r}fromJSON(t){return this.tx.fromJSON(t),r(t.mtime>>>0===t.mtime),r(Number.isSafeInteger(t.height)),r(!t.block||"string"==typeof t.block),r(t.time>>>0===t.time),r(Number.isSafeInteger(t.index)),this.mtime=t.mtime,this.height=t.height,this.block=n.fromRev(t.block),this.index=t.index,this}static fromJSON(t){return(new this).fromJSON(t)}getSize(){let t=0;return t+=this.tx.getSize(),t+=4,this.block?(t+=1,t+=32,t+=12):t+=1,t}toRaw(){const t=this.getSize(),e=s.write(t);return this.tx.toWriter(e),e.writeU32(this.mtime),this.block?(e.writeU8(1),e.writeHash(this.block),e.writeU32(this.height),e.writeU32(this.time),e.writeU32(this.index)):e.writeU8(0),e.render()}fromRaw(t){const e=s.read(t);return this.tx.fromReader(e),this.mtime=e.readU32(),1===e.readU8()&&(this.block=e.readHash(),this.height=e.readU32(),this.time=e.readU32(),this.index=e.readU32(),2147483647===this.index&&(this.index=-1)),this}static fromRaw(t,i){return"string"==typeof t&&(t=e.from(t,i)),(new this).fromRaw(t)}static isTXMeta(t){return t instanceof a}}t.exports=a}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * errors.js - error objects for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(0);class s extends Error{constructor(t,e,i,n,o){super(),r("string"==typeof e),r("string"==typeof i),r(n>=0),this.type="VerifyError",this.message="",this.code=e,this.reason=i,this.score=n,this.hash=t.hash(),this.malleated=o||!1,this.message=`Verification failure: ${i}`+` (code=${e} score=${n} hash=${t.rhash()})`,Error.captureStackTrace&&Error.captureStackTrace(this,s)}}e.VerifyError=s},function(t,e,i){"use strict";
/*!
 * pool.js - peer management for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(0),s=i(7),{Lock:n}=i(28),o=i(74),a=i(140),h=i(158),c=i(199),l=i(201),u=i(159),{BloomFilter:f,RollingFilter:d}=i(66),{BufferMap:p,BufferSet:g}=i(13),m=i(5),b=i(42),w=i(138),y=i(12),v=i(142),k=i(4),E=i(209),S=i(213),R=i(38),I=i(145),A=b.services,x=R.types,O=I.types,_=S.scores;class B extends s{constructor(t){super(),this.opened=!1,this.options=new P(t),this.network=this.options.network,this.logger=this.options.logger.context("net"),this.chain=this.options.chain,this.mempool=this.options.mempool,this.server=this.options.createServer(),this.nonces=this.options.nonces,this.locker=new n(!0,p),this.connected=!1,this.disconnecting=!1,this.syncing=!1,this.discovering=!1,this.spvFilter=null,this.txFilter=null,this.blockMap=new g,this.txMap=new g,this.compactBlocks=new g,this.invMap=new p,this.pendingFilter=null,this.pendingRefill=null,this.checkpoints=!1,this.headerChain=new u,this.headerNext=null,this.headerTip=null,this.peers=new N,this.hosts=new S(this.options),this.id=0,this.options.spv&&(this.spvFilter=f.fromRate(2e4,.001,f.flags.ALL)),this.options.mempool||(this.txFilter=new d(5e4,1e-6)),this.init()}init(){this.server.on("error",t=>{this.emit("error",t)}),this.server.on("connection",t=>{this.handleSocket(t),this.emit("connection",t)}),this.server.on("listening",()=>{const t=this.server.address();this.logger.info("Pool server listening on %s (port=%d).",t.address,t.port),this.emit("listening",t)}),this.chain.on("block",(t,e)=>{this.emit("block",t,e)}),this.chain.on("reset",()=>{this.checkpoints&&this.resetChain(),this.forceSync()}),this.chain.on("full",()=>{this.sync(),this.emit("full"),this.logger.info("Chain is fully synced (height=%d).",this.chain.height)}),this.chain.on("bad orphan",(t,e)=>{this.handleBadOrphan("block",t,e)}),this.mempool&&(this.mempool.on("tx",t=>{this.emit("tx",t)}),this.mempool.on("bad orphan",(t,e)=>{this.handleBadOrphan("tx",t,e)})),this.options.selfish||this.options.spv||(this.mempool&&this.mempool.on("tx",t=>{this.announceTX(t)}),this.chain.on("block",t=>{this.chain.synced&&this.announceBlock(t)}))}async open(){r(!this.opened,"Pool is already open."),this.opened=!0,this.logger.info("Pool loaded (maxpeers=%d).",this.options.maxOutbound),this.resetChain()}async close(){return r(this.opened,"Pool is not open."),this.opened=!1,this.disconnect()}resetChain(){if(!this.options.checkpoints)return;this.checkpoints=!1,this.headerTip=null,this.headerChain.reset(),this.headerNext=null;const t=this.chain.tip;t.height<this.network.lastCheckpoint&&(this.checkpoints=!0,this.headerTip=this.getNextTip(t.height),this.headerChain.push(new M(t.hash,t.height)),this.logger.info("Initialized header chain to height %d (checkpoint=%h).",t.height,this.headerTip.hash))}async connect(){const t=await this.locker.lock();try{return await this._connect()}finally{t()}}async _connect(){r(this.opened,"Pool is not opened."),this.connected||(await this.hosts.open(),await this.discoverGateway(),await this.discoverExternal(),await this.discoverSeeds(),this.fillOutbound(),await this.listen(),this.startTimer(),this.connected=!0)}async disconnect(){const t=await this.locker.lock();try{return await this._disconnect()}finally{t()}}async _disconnect(){for(const t of this.invMap.values())t.resolve();this.connected&&(this.disconnecting=!0,this.peers.destroy(),this.blockMap.clear(),this.txMap.clear(),null!=this.pendingFilter&&(clearTimeout(this.pendingFilter),this.pendingFilter=null),null!=this.pendingRefill&&(clearTimeout(this.pendingRefill),this.pendingRefill=null),this.checkpoints=!1,this.headerTip=null,this.headerChain.reset(),this.headerNext=null,this.stopTimer(),await this.hosts.close(),await this.unlisten(),this.disconnecting=!1,this.syncing=!1,this.connected=!1)}async listen(){r(this.server),r(!this.connected,"Already listening."),this.options.listen&&(this.server.maxConnections=this.options.maxInbound,await this.server.listen(this.options.port,this.options.host))}async unlisten(){r(this.server),r(this.connected,"Not listening."),this.options.listen&&await this.server.close()}startTimer(){r(null==this.timer,"Timer already started."),this.timer=setInterval(()=>this.discover(),B.DISCOVERY_INTERVAL)}stopTimer(){r(null!=this.timer,"Timer already stopped."),clearInterval(this.timer),this.timer=null}async discover(){if(!this.discovering)try{this.discovering=!0,await this.discoverGateway(),await this.discoverSeeds(!0)}finally{this.discovering=!1}}async discoverGateway(){const t=this.options.publicPort,e=this.options.port;if(!this.options.listen)return!1;if(!this.options.upnp)return!1;let i,r;try{this.logger.debug("Discovering internet gateway (upnp)."),i=await c.discover()}catch(t){return this.logger.debug("Could not discover internet gateway (upnp)."),this.logger.debug(t),!1}try{r=await i.getExternalIP()}catch(t){return this.logger.debug("Could not find external IP (upnp)."),this.logger.debug(t),!1}this.hosts.addLocal(r,t,_.UPNP)&&this.logger.info("External IP found (upnp): %s.",r),this.logger.debug("Adding port mapping %d->%d.",t,e);try{await i.addPortMapping(r,t,e)}catch(t){return this.logger.debug("Could not add port mapping (upnp)."),this.logger.debug(t),!1}return!0}async discoverSeeds(t){if(0===this.hosts.dnsSeeds.length)return;const e=Math.min(2,this.options.maxOutbound),i=this.hosts.size();let r=0;for(let t=this.peers.head();t&&!(t.outbound&&t.connected&&++r>e);t=t.next);(0===i||t&&r<e)&&(this.logger.warning("Could not find enough peers."),this.logger.warning("Hitting DNS seeds..."),await this.hosts.discoverSeeds(),this.logger.info("Resolved %d hosts from DNS seeds.",this.hosts.size()-i),this.refill())}async discoverExternal(){const t=this.options.publicPort;if(!this.options.listen)return;if(this.options.proxy)return;if(this.hosts.local.size>0)return;let e=null;try{e=await a.getIPv4(2e3)}catch(t){this.logger.debug("Could not find external IPv4 (dns)."),this.logger.debug(t)}e&&this.hosts.addLocal(e,t,_.DNS)&&this.logger.info("External IPv4 found (dns): %s.",e);let i=null;try{i=await a.getIPv6(2e3)}catch(t){this.logger.debug("Could not find external IPv6 (dns)."),this.logger.debug(t)}i&&this.hosts.addLocal(i,t,_.DNS)&&this.logger.info("External IPv6 found (dns): %s.",i)}handleSocket(t){if(!t.remoteAddress)return this.logger.debug("Ignoring disconnected peer."),void t.destroy();const e=o.normalize(t.remoteAddress);if(this.peers.inbound>=this.options.maxInbound)return this.logger.debug("Ignoring peer: too many inbound (%s).",e),void t.destroy();if(this.hosts.isBanned(e))return this.logger.debug("Ignoring banned peer (%s).",e),void t.destroy();const i=o.toHostname(e,t.remotePort);r(!this.peers.map.has(i),"Port collision."),this.addInbound(t)}addLoader(){if(!this.opened)return;r(!this.peers.load);for(let t=this.peers.head();t;t=t.next)if(t.outbound)return this.logger.info("Repurposing peer for loader (%s).",t.hostname()),void this.setLoader(t);const t=this.getHost();if(!t)return;const e=this.createOutbound(t);this.logger.info("Adding loader peer (%s).",e.hostname()),this.peers.add(e),this.setLoader(e)}setLoader(t){this.opened&&(r(t.outbound),r(!this.peers.load),r(!t.loader),t.loader=!0,this.peers.load=t,this.sendSync(t),this.emit("loader",t))}startSync(){this.opened&&(r(this.connected,"Pool is not connected!"),this.syncing=!0,this.resync(!1))}forceSync(){this.opened&&(r(this.connected,"Pool is not connected!"),this.resync(!0))}sync(t){this.resync(!1)}stopSync(){if(this.syncing){this.syncing=!1;for(let t=this.peers.head();t;t=t.next)t.outbound&&t.syncing&&(t.syncing=!1,t.merkleBlock=null,t.merkleTime=-1,t.merkleMatches=0,t.merkleMap=null,t.blockTime=-1,t.blockMap.clear(),t.compactBlocks.clear());this.blockMap.clear(),this.compactBlocks.clear()}}async resync(t){if(!this.syncing)return;let e;try{e=await this.chain.getLocator()}catch(t){return void this.emit("error",t)}for(let i=this.peers.head();i;i=i.next)i.outbound&&(!t&&i.syncing||this.sendLocator(e,i))}isSyncable(t){return!(!this.syncing||t.destroyed||!t.handshake||!(t.services&A.NETWORK)||this.options.hasWitness()&&!t.hasWitness()||!t.loader&&!this.chain.synced)}async sendSync(t){if(t.syncing)return!1;if(!this.isSyncable(t))return!1;let e;t.syncing=!0,t.blockTime=Date.now();try{e=await this.chain.getLocator()}catch(e){return t.syncing=!1,t.blockTime=-1,this.emit("error",e),!1}return this.sendLocator(e,t)}sendLocator(t,e){return!!this.isSyncable(e)&&(this.network.requestMempool&&e.loader&&this.chain.synced&&e.sendMempool(),e.syncing=!0,e.blockTime=Date.now(),this.checkpoints?(e.sendGetHeaders(t,this.headerTip.hash),!0):(e.sendGetBlocks(t),!0))}sendMempool(){for(let t=this.peers.head();t;t=t.next)t.sendMempool()}sendGetAddr(){for(let t=this.peers.head();t;t=t.next)t.sendGetAddr()}resolveHeaders(t){const e=[];for(let t=this.headerNext;t&&(this.headerNext=t.next,e.push(t.hash),e.length!==b.MAX_INV);t=t.next);this.getBlock(t,e)}resolveHeight(t,e){let i=0;for(let r=this.peers.head();r;r=r.next)r.bestHash&&r.bestHash.equals(t)&&r.bestHeight!==e&&(r.bestHeight=e,i+=1);i>0&&this.logger.debug("Resolved height for %d peers.",i)}getNextTip(t){for(const e of this.network.checkpoints)if(e.height>t)return new M(e.hash,e.height);throw new Error("Next checkpoint not found.")}announceList(t){const e=[],i=[];for(const t of this.invMap.values())switch(t.type){case x.BLOCK:e.push(t.msg);break;case x.TX:i.push(t.msg);break;default:r(!1,"Bad item type.")}e.length>0&&t.announceBlock(e),i.length>0&&t.announceTX(i)}getBroadcasted(t,e){const i=e.isTX()?x.TX:x.BLOCK,r=this.invMap.get(e.hash);return r?i!==r.type?(this.logger.debug("Peer requested item with the wrong type (%s).",t.hostname()),null):(this.logger.debug("Peer requested %s %h as a %s packet (%s).",e.isTX()?"tx":"block",e.hash,e.hasWitness()?"witness":"normal",t.hostname()),r.handleAck(t),r.msg):null}async getItem(t,e){return this.getBroadcasted(t,e)||(this.options.selfish?null:e.isTX()?this.mempool?this.mempool.getTX(e.hash):null:this.chain.options.spv?null:this.chain.options.prune?null:this.chain.getBlock(e.hash))}async sendBlock(t,e,i){const r=this.getBroadcasted(t,e);if(r)return t.send(new I.BlockPacket(r,i)),!0;if(this.options.selfish||this.chain.options.spv||this.chain.options.prune)return!1;if(i||!this.options.hasWitness()){const i=await this.chain.getRawBlock(e.hash);return!!i&&(t.sendRaw("block",i),!0)}const s=await this.chain.getBlock(e.hash);return!!s&&(t.send(new I.BlockPacket(s,i)),!0)}createOutbound(t){const e=E.fromOutbound(this.options,t);return this.hosts.markAttempt(t.hostname),this.bindPeer(e),this.logger.debug("Connecting to %s.",e.hostname()),e.tryOpen(),e}createInbound(t){const e=E.fromInbound(this.options,t);return this.bindPeer(e),e.tryOpen(),e}uid(){const t=Number.MAX_SAFE_INTEGER;this.id>=t-this.peers.size()-1&&(this.id=0);do{this.id+=1}while(this.peers.find(this.id));return this.id}bindPeer(t){t.id=this.uid(),t.onPacket=(e=>this.handlePacket(t,e)),t.on("error",t=>{this.logger.debug(t)}),t.once("connect",()=>{this.handleConnect(t)}),t.once("open",()=>{this.handleOpen(t)}),t.once("close",e=>{this.handleClose(t,e)}),t.once("ban",()=>{this.handleBan(t)})}async handlePacket(t,e){switch(e.type){case O.VERSION:await this.handleVersion(t,e);break;case O.VERACK:await this.handleVerack(t,e);break;case O.PING:await this.handlePing(t,e);break;case O.PONG:await this.handlePong(t,e);break;case O.GETADDR:await this.handleGetAddr(t,e);break;case O.ADDR:await this.handleAddr(t,e);break;case O.INV:await this.handleInv(t,e);break;case O.GETDATA:await this.handleGetData(t,e);break;case O.NOTFOUND:await this.handleNotFound(t,e);break;case O.GETBLOCKS:await this.handleGetBlocks(t,e);break;case O.GETHEADERS:await this.handleGetHeaders(t,e);break;case O.HEADERS:await this.handleHeaders(t,e);break;case O.SENDHEADERS:await this.handleSendHeaders(t,e);break;case O.BLOCK:await this.handleBlock(t,e);break;case O.TX:await this.handleTX(t,e);break;case O.REJECT:await this.handleReject(t,e);break;case O.MEMPOOL:await this.handleMempool(t,e);break;case O.FILTERLOAD:await this.handleFilterLoad(t,e);break;case O.FILTERADD:await this.handleFilterAdd(t,e);break;case O.FILTERCLEAR:await this.handleFilterClear(t,e);break;case O.MERKLEBLOCK:await this.handleMerkleBlock(t,e);break;case O.FEEFILTER:await this.handleFeeFilter(t,e);break;case O.SENDCMPCT:await this.handleSendCmpct(t,e);break;case O.CMPCTBLOCK:await this.handleCmpctBlock(t,e);break;case O.GETBLOCKTXN:await this.handleGetBlockTxn(t,e);break;case O.BLOCKTXN:await this.handleBlockTxn(t,e);break;case O.UNKNOWN:await this.handleUnknown(t,e);break;default:r(!1,"Bad packet type.")}this.emit("packet",e,t)}async handleConnect(t){this.logger.info("Connected to %s.",t.hostname()),t.outbound&&this.hosts.markSuccess(t.hostname()),this.emit("peer connect",t)}async handleOpen(t){if(!this.options.selfish&&this.options.listen){const e=this.hosts.getLocal(t.address);e&&t.send(new I.AddrPacket([e]))}this.options.compact&&t.sendCompact(this.options.blockMode),this.hosts.isFull()||t.sendGetAddr(),this.spvFilter&&t.sendFilterLoad(this.spvFilter),this.announceList(t),-1!==this.options.feeRate&&t.sendFeeRate(this.options.feeRate),t.outbound&&this.sendSync(t),t.outbound&&(this.hosts.markAck(t.hostname(),t.services),t.loader||this.peers.load&&!this.peers.load.handshake&&(r(this.peers.load.loader),this.peers.load.loader=!1,this.peers.load=null),this.peers.load||this.setLoader(t)),this.emit("peer open",t)}async handleClose(t,e){const i=t.outbound,r=t.loader,s=t.blockMap.size;this.removePeer(t),r&&(this.logger.info("Removed loader peer (%s).",t.hostname()),this.checkpoints&&this.resetChain()),this.nonces.remove(t.hostname()),this.emit("peer close",t,e),this.opened&&(this.disconnecting||(this.chain.synced&&s>0&&(this.logger.warning("Peer disconnected with requested blocks."),this.logger.warning("Resending sync..."),this.forceSync()),i&&this.refill()))}async handleBan(t){this.ban(t.address),this.emit("ban",t)}async handleVersion(t,e){this.logger.info("Received version (%s): version=%d height=%d services=%s agent=%s",t.hostname(),e.version,e.height,e.services.toString(2),e.agent),this.network.time.add(t.hostname(),e.time),this.nonces.remove(t.hostname()),!t.outbound&&e.remote.isRoutable()&&this.hosts.markLocal(e.remote)}async handleVerack(t,e){}async handlePing(t,e){}async handlePong(t,e){}async handleGetAddr(t,e){if(this.options.selfish)return;if(t.sentAddr)return void this.logger.debug("Ignoring repeated getaddr (%s).",t.hostname());t.sentAddr=!0;const i=this.hosts.toArray(),r=[];for(const e of i)if(t.addrFilter.added(e.hostname,"ascii")&&(r.push(e),1e3===r.length))break;0!==r.length&&(this.logger.debug("Sending %d addrs to peer (%s)",r.length,t.hostname()),t.send(new I.AddrPacket(r)))}async handleAddr(t,e){const i=e.items,r=this.network.now(),s=this.options.getRequiredServices();for(const e of i)t.addrFilter.add(e.hostname,"ascii"),e.isRoutable()&&e.hasServices(s)&&((e.time<=1e8||e.time>r+600)&&(e.time=r-432e3),0!==e.port&&this.hosts.add(e,t.address));this.logger.info("Received %d addrs (hosts=%d, peers=%d) (%s).",i.length,this.hosts.size(),this.peers.size(),t.hostname()),this.fillOutbound()}async handleInv(t,e){const i=await this.locker.lock();try{return await this._handleInv(t,e)}finally{i()}}async _handleInv(t,e){const i=e.items;if(i.length>b.MAX_INV)return void t.increaseBan(100);const r=[],s=[];let n=-1;for(const e of i){switch(e.type){case x.BLOCK:r.push(e.hash);break;case x.TX:s.push(e.hash);break;default:n=e.type;continue}t.invFilter.add(e.hash)}this.logger.spam("Received inv packet with %d items: blocks=%d txs=%d (%s).",i.length,r.length,s.length,t.hostname()),-1!==n&&this.logger.warning("Peer sent an unknown inv type: %d (%s).",n,t.hostname()),r.length>0&&await this.handleBlockInv(t,r),s.length>0&&await this.handleTXInv(t,s)}async handleBlockInv(t,e){if(r(e.length>0),!this.syncing)return;if(!t.loader||this.chain.synced){const i=e[e.length-1];t.bestHash=i}if(!this.chain.synced&&!t.loader)return;if(this.options.hasWitness()&&!t.hasWitness())return;if(this.checkpoints)return;this.logger.debug("Received %d block hashes from peer (%s).",e.length,t.hostname());const i=[];let s=null;for(let r=0;r<e.length;r++){const n=e[r];this.chain.hasOrphan(n)?(this.logger.debug("Received known orphan hash (%s).",t.hostname()),await this.resolveOrphan(t,n)):await this.hasBlock(n)?(s=n,r===e.length-1&&(this.logger.debug("Received existing hash (%s).",t.hostname()),await this.getBlocks(t,n))):i.push(n)}if(s&&this.chain.synced){const e=await this.chain.getHeight(s);-1!==e&&(t.bestHeight=e)}this.getBlock(t,i)}async handleTXInv(t,e){r(e.length>0),this.syncing&&!this.chain.synced||this.ensureTX(t,e)}async handleGetData(t,e){const i=e.items;if(i.length>b.MAX_INV)return this.logger.warning("Peer sent inv with >50k items (%s).",t.hostname()),t.increaseBan(100),void t.destroy();const r=[];let s=0,n=0,o=0,a=-1;for(const e of i)if(e.isTX()){const i=await this.getItem(t,e);if(!i){r.push(e);continue}if(i.isCoinbase()){r.push(e),this.logger.warning("Failsafe: tried to relay a coinbase.");continue}t.send(new I.TXPacket(i,e.hasWitness())),s+=1}else{switch(e.type){case x.BLOCK:case x.WITNESS_BLOCK:if(!await this.sendBlock(t,e,e.hasWitness())){r.push(e);continue}n+=1;break;case x.FILTERED_BLOCK:case x.WITNESS_FILTERED_BLOCK:{if(!this.options.bip37)return this.logger.debug("Peer requested a merkleblock without bip37 enabled (%s).",t.hostname()),void t.destroy();if(!t.spvFilter){r.push(e);continue}const i=await this.getItem(t,e);if(!i){r.push(e);continue}const o=i.toMerkle(t.spvFilter);t.send(new I.MerkleBlockPacket(o));for(const i of o.txs)t.send(new I.TXPacket(i,e.hasWitness())),s+=1;n+=1;break}case x.CMPCT_BLOCK:{if(await this.chain.getHeight(e.hash)<this.chain.tip.height-10){if(!await this.sendBlock(t,e,t.compactWitness)){r.push(e);continue}n+=1;break}const i=await this.getItem(t,e);if(!i){r.push(e);continue}t.sendCompactBlock(i),n+=1,o+=1;break}default:a=e.type,r.push(e);continue}t.hashContinue&&e.hash.equals(t.hashContinue)&&(t.sendInv([new R(x.BLOCK,this.chain.tip.hash)]),t.hashContinue=null),await t.drain()}r.length>0&&t.send(new I.NotFoundPacket(r)),s>0&&this.logger.debug("Served %d txs with getdata (notfound=%d) (%s).",s,r.length,t.hostname()),n>0&&this.logger.debug("Served %d blocks with getdata (notfound=%d, cmpct=%d) (%s).",n,r.length,o,t.hostname()),-1!==a&&this.logger.warning("Peer sent an unknown getdata type: %d (%s).",a,t.hostname())}async handleNotFound(t,e){const i=e.items;for(const e of i)if(!this.resolveItem(t,e))return this.logger.warning("Peer sent notfound for unrequested item: %h (%s).",e.hash,t.hostname()),void t.destroy()}async handleGetBlocks(t,e){if(!this.chain.synced)return;if(this.options.selfish)return;if(this.chain.options.spv)return;if(this.chain.options.prune)return;let i=await this.chain.findLocator(e.locator);i&&(i=await this.chain.getNextHash(i));const r=[];for(;i&&(!e.stop||!i.equals(e.stop));){if(r.push(new R(x.BLOCK,i)),500===r.length){t.hashContinue=i;break}i=await this.chain.getNextHash(i)}t.sendInv(r)}async handleGetHeaders(t,e){if(!this.chain.synced)return;if(this.options.selfish)return;if(this.chain.options.spv)return;if(this.chain.options.prune)return;let i,r;e.locator.length>0?(i=await this.chain.findLocator(e.locator))&&(i=await this.chain.getNextHash(i)):i=e.stop,i&&(r=await this.chain.getEntry(i));const s=[];for(;r&&(s.push(r.toHeaders()),!e.stop||!r.hash.equals(e.stop))&&2e3!==s.length;)r=await this.chain.getNext(r);t.sendHeaders(s)}async handleHeaders(t,e){const i=await this.locker.lock();try{return await this._handleHeaders(t,e)}finally{i()}}async _handleHeaders(t,e){const i=e.items;if(!this.checkpoints)return;if(!this.syncing)return;if(!t.loader)return;if(0===i.length)return;if(i.length>2e3)return void t.increaseBan(100);r(this.headerChain.size>0);let s=!1,n=null;for(const e of i){const i=this.headerChain.tail,r=e.hash(),o=i.height+1;if(!e.verify())return this.logger.warning("Peer sent an invalid header (%s).",t.hostname()),t.increaseBan(100),void t.destroy();if(!e.prevBlock.equals(i.hash))return this.logger.warning("Peer sent a bad header chain (%s).",t.hostname()),void t.destroy();if((n=new M(r,o)).height===this.headerTip.height){if(!n.hash.equals(this.headerTip.hash))return this.logger.warning("Peer sent an invalid checkpoint (%s).",t.hostname()),void t.destroy();s=!0}this.headerNext||(this.headerNext=n),this.headerChain.push(n)}if(this.logger.debug("Received %d headers from peer (%s).",i.length,t.hostname()),t.blockTime=Date.now(),s)return this.headerChain.shift(),void this.resolveHeaders(t);t.sendGetHeaders([n.hash],this.headerTip.hash)}async handleSendHeaders(t,e){}async handleBlock(t,e){const i=w.flags.DEFAULT_FLAGS;this.options.spv?this.logger.warning("Peer sent unsolicited block (%s).",t.hostname()):await this.addBlock(t,e.block,i)}async addBlock(t,e,i){const r=e.hash(),s=await this.locker.lock(r);try{return await this._addBlock(t,e,i)}finally{s()}}async _addBlock(t,e,i){if(!this.syncing)return;const r=e.hash();if(!this.resolveBlock(t,r))return this.logger.warning("Received unrequested block: %h (%s).",e.hash(),t.hostname()),void t.destroy();let s;t.blockTime=Date.now();try{s=await this.chain.add(e,i,t.id)}catch(e){if("VerifyError"===e.type)return t.reject("block",e),void this.logger.warning(e);throw e}if(!s){if(this.checkpoints)return void this.logger.warning("Peer sent orphan block with getheaders (%s).",t.hostname());const i=e.getCoinbaseHeight();return-1!==i&&(t.bestHash=r,t.bestHeight=i,this.resolveHeight(r,i)),this.logger.debug("Peer sent an orphan block. Resolving."),void await this.resolveOrphan(t,r)}this.chain.synced&&(t.bestHash=s.hash,t.bestHeight=s.height,this.resolveHeight(s.hash,s.height)),this.logStatus(e),await this.resolveChain(t,r)}async resolveChain(t,e){if(!this.checkpoints)return;if(!t.loader)return;if(t.destroyed)throw new Error("Peer was destroyed (header chain resolution).");const i=this.headerChain.head;return r(i),e.equals(i.hash)?i.height<this.network.lastCheckpoint?i.height===this.headerTip.height?(this.logger.info("Received checkpoint %h (%d).",i.hash,i.height),this.headerTip=this.getNextTip(i.height),void t.sendGetHeaders([e],this.headerTip.hash)):(this.headerChain.shift(),void this.resolveHeaders(t)):(this.logger.info("Switching to getblocks (%s).",t.hostname()),void await this.switchSync(t,e)):(this.logger.warning("Header hash mismatch %h != %h (%s).",e,i.hash,t.hostname()),void t.destroy())}async switchSync(t,e){r(this.checkpoints),this.checkpoints=!1,this.headerTip=null,this.headerChain.reset(),this.headerNext=null,await this.getBlocks(t,e)}handleBadOrphan(t,e,i){const r=this.peers.find(i);r?(this.logger.debug("Punishing peer for sending a bad orphan (%s).",r.hostname()),r.reject(t,e)):this.logger.warning("Could not find offending peer for orphan: %h (%d).",e.hash,i)}logStatus(t){this.chain.height%20==0&&this.logger.debug("Status: time=%s height=%d progress=%s orphans=%d active=%d target=%s peers=%d",m.date(t.time),this.chain.height,(100*this.chain.getProgress()).toFixed(2)+"%",this.chain.orphanMap.size,this.blockMap.size,t.bits,this.peers.size()),this.chain.height%2e3==0&&this.logger.info("Received 2000 more blocks (height=%d, hash=%h).",this.chain.height,t.hash())}async handleTX(t,e){const i=e.tx.hash(),r=await this.locker.lock(i);try{return await this._handleTX(t,e)}finally{r()}}async _handleTX(t,e){const i=e.tx,s=i.hash(),n=w.flags.VERIFY_NONE,o=t.merkleBlock;if(o&&(r(t.merkleMatches>0),r(t.merkleMap),o.hasTX(s)))return t.merkleMap.has(s)?(this.logger.warning("Peer sent duplicate merkle tx: %h (%s).",i.hash(),t.hostname()),void t.increaseBan(100)):(t.merkleMap.add(s),o.txs.push(i),void(0==--t.merkleMatches&&(t.merkleBlock=null,t.merkleTime=-1,t.merkleMatches=0,t.merkleMap=null,await this._addBlock(t,o,n))));if(!this.resolveTX(t,s))return this.logger.warning("Peer sent unrequested tx: %h (%s).",i.hash(),t.hostname()),void t.destroy();if(!this.mempool)return void this.emit("tx",i);let a;try{a=await this.mempool.addTX(i,t.id)}catch(e){if("VerifyError"===e.type)return t.reject("tx",e),void this.logger.info(e);throw e}a&&a.length>0&&(this.logger.debug("Requesting %d missing transactions (%s).",a.length,t.hostname()),this.ensureTX(t,a))}async handleReject(t,e){if(this.logger.warning("Received reject (%s): msg=%s code=%s reason=%s hash=%h.",t.hostname(),e.message,e.getCode(),e.reason,e.hash),!e.hash)return;const i=this.invMap.get(e.hash);i&&i.handleReject(t)}async handleMempool(t,e){if(!this.mempool)return;if(!this.chain.synced)return;if(this.options.selfish)return;if(!this.options.bip37)return this.logger.debug("Peer requested mempool without bip37 enabled (%s).",t.hostname()),void t.destroy();const i=[];for(const t of this.mempool.map.keys())i.push(new R(x.TX,t));this.logger.debug("Sending mempool snapshot (%s).",t.hostname()),t.queueInv(i)}async handleFilterLoad(t,e){}async handleFilterAdd(t,e){}async handleFilterClear(t,e){}async handleMerkleBlock(t,e){const i=e.block.hash(),r=await this.locker.lock(i);try{return await this._handleMerkleBlock(t,e)}finally{r()}}async _handleMerkleBlock(t,e){if(!this.syncing)return;if(!this.options.spv)return this.logger.warning("Peer sent unsolicited merkleblock (%s).",t.hostname()),void t.increaseBan(100);const i=e.block,r=i.hash();if(!t.blockMap.has(r))return this.logger.warning("Peer sent an unrequested merkleblock (%s).",t.hostname()),void t.destroy();if(t.merkleBlock)return this.logger.warning("Peer sent a merkleblock prematurely (%s).",t.hostname()),void t.increaseBan(100);if(!i.verify())return this.logger.warning("Peer sent an invalid merkleblock (%s).",t.hostname()),void t.increaseBan(100);const s=i.getTree();if(0!==s.matches.length)t.merkleBlock=i,t.merkleTime=Date.now(),t.merkleMatches=s.matches.length,t.merkleMap=new g;else{const e=w.flags.VERIFY_NONE;await this._addBlock(t,i,e)}}async handleFeeFilter(t,e){}async handleSendCmpct(t,e){}async handleCmpctBlock(t,e){const i=e.block,s=i.hash(),n=t.compactWitness;if(!this.syncing)return;if(!this.options.compact)return this.logger.info("Peer sent unsolicited cmpctblock (%s).",t.hostname()),void this.destroy();if(!t.hasCompactSupport()||!t.hasCompact())return this.logger.info("Peer sent unsolicited cmpctblock (%s).",t.hostname()),void this.destroy();if(t.compactBlocks.has(s))return void this.logger.debug("Peer sent us a duplicate compact block (%s).",t.hostname());if(this.compactBlocks.has(s))return void this.logger.debug("Already waiting for compact block %h (%s).",s,t.hostname());if(!t.blockMap.has(s)){if(1!==this.options.blockMode)return this.logger.warning("Peer sent us an unrequested compact block (%s).",t.hostname()),void t.destroy();t.blockMap.set(s,Date.now()),r(!this.blockMap.has(s)),this.blockMap.add(s)}if(!this.mempool)return void this.logger.warning("Requesting compact blocks without a mempool!");if(!i.verify())return this.logger.debug("Peer sent an invalid compact block (%s).",t.hostname()),void t.increaseBan(100);let o;try{o=i.init()}catch(e){return this.logger.debug("Peer sent an invalid compact block (%s).",t.hostname()),void t.increaseBan(100)}if(!o)return this.logger.warning("Siphash collision for %h. Requesting full block (%s).",i.hash(),t.hostname()),t.getFullBlock(s),void t.increaseBan(10);if(i.fillMempool(n,this.mempool)){this.logger.debug("Received full compact block %h (%s).",i.hash(),t.hostname());const e=w.flags.VERIFY_BODY;await this.addBlock(t,i.toBlock(),e)}else{if(t.compactBlocks.size>=15)return this.logger.warning("Compact block DoS attempt (%s).",t.hostname()),void t.destroy();i.now=Date.now(),r(!t.compactBlocks.has(s)),t.compactBlocks.set(s,i),this.compactBlocks.add(s),this.logger.debug("Received non-full compact block %h tx=%d/%d (%s).",i.hash(),i.count,i.totalTX,t.hostname()),t.send(new I.GetBlockTxnPacket(i.toRequest()))}}async handleGetBlockTxn(t,e){const i=e.request;if(this.chain.options.spv)return;if(this.chain.options.prune)return;if(this.options.selfish)return;const r=new R(x.BLOCK,i.hash),s=await this.getItem(t,r);if(!s)return this.logger.debug("Peer sent getblocktxn for non-existent block (%s).",t.hostname()),void t.increaseBan(100);if(await this.chain.getHeight(i.hash)<this.chain.tip.height-15)return void this.logger.debug("Peer sent a getblocktxn for a block > 15 deep (%s)",t.hostname());this.logger.debug("Sending blocktxn for %h to peer (%s).",s.hash(),t.hostname());const n=v.TXResponse.fromBlock(s,i);t.send(new I.BlockTxnPacket(n,t.compactWitness))}async handleBlockTxn(t,e){const i=e.response,s=t.compactBlocks.get(i.hash),n=w.flags.VERIFY_BODY;if(s){if(t.compactBlocks.delete(i.hash),r(this.compactBlocks.has(i.hash)),this.compactBlocks.delete(i.hash),!s.fillMissing(i))return this.logger.warning("Peer sent non-full blocktxn for %h. Requesting full block (%s).",s.hash(),t.hostname()),t.getFullBlock(i.hash),void t.increaseBan(10);this.logger.debug("Filled compact block %h (%s).",s.hash(),t.hostname()),await this.addBlock(t,s.toBlock(),n)}else this.logger.debug("Peer sent unsolicited blocktxn (%s).",t.hostname())}async handleUnknown(t,e){this.logger.warning("Unknown packet: %s (%s).",e.cmd,t.hostname())}addInbound(t){if(!this.opened)return void t.destroy();const e=this.createInbound(t);this.logger.info("Added inbound peer (%s).",e.hostname()),this.peers.add(e)}getHost(){for(const t of this.hosts.nodes)if(!this.peers.has(t.hostname))return t;const t=this.options.getRequiredServices(),e=this.network.now();for(let i=0;i<100;i++){const r=this.hosts.getHost();if(!r)break;const s=r.addr;if(!this.peers.has(s.hostname)&&s.isValid()&&s.hasServices(t)&&(this.options.onion||!s.isOnion())&&!(i<30&&e-r.lastAttempt<600||i<50&&s.port!==this.network.port||i<95&&this.hosts.isBanned(s.host)))return r.addr}return null}addOutbound(){if(!this.opened)return;if(this.peers.outbound>=this.options.maxOutbound)return;if(!this.peers.load)return;const t=this.getHost();if(!t)return;const e=this.createOutbound(t);this.peers.add(e),this.emit("peer",e)}fillOutbound(){const t=this.options.maxOutbound-this.peers.outbound;if(this.peers.load||this.addLoader(),!(t<=0)){this.logger.debug("Refilling peers (%d/%d).",this.peers.outbound,this.options.maxOutbound);for(let e=0;e<t;e++)this.addOutbound()}}refill(){null==this.pendingRefill&&(this.pendingRefill=setTimeout(()=>{this.pendingRefill=null,this.fillOutbound()},3e3))}removePeer(t){this.peers.remove(t);for(const e of t.blockMap.keys())this.resolveBlock(t,e);for(const e of t.txMap.keys())this.resolveTX(t,e);for(const e of t.compactBlocks.keys())r(this.compactBlocks.has(e)),this.compactBlocks.delete(e);t.compactBlocks.clear()}ban(t){const e=this.peers.get(t.hostname);this.logger.debug("Banning peer (%s).",t.hostname),this.hosts.ban(t.host),this.hosts.remove(t.hostname),e&&e.destroy()}unban(t){this.hosts.unban(t.host)}setFilter(t){this.options.spv&&(this.spvFilter=t,this.queueFilterLoad())}watch(t,e){this.options.spv&&(this.spvFilter.add(t,e),this.queueFilterLoad())}unwatch(){this.options.spv&&(this.spvFilter.reset(),this.queueFilterLoad())}queueFilterLoad(){this.options.spv&&null==this.pendingFilter&&(this.pendingFilter=setTimeout(()=>{this.pendingFilter=null,this.sendFilterLoad()},100))}sendFilterLoad(){if(this.options.spv){r(this.spvFilter);for(let t=this.peers.head();t;t=t.next)t.sendFilterLoad(this.spvFilter)}}watchAddress(t){"string"==typeof t&&(t=y.fromString(t));const e=y.getHash(t);this.watch(e)}watchOutpoint(t){this.watch(t.toRaw())}async resolveOrphan(t,e){const i=await this.chain.getLocator(),s=this.chain.getOrphanRoot(e);r(s),t.sendGetBlocks(i,s)}async getHeaders(t,e,i){const r=await this.chain.getLocator(e);t.sendGetHeaders(r,i)}async getBlocks(t,e,i){const r=await this.chain.getLocator(e);t.sendGetBlocks(r,i)}getBlock(t,e){if(!this.opened)return;if(!t.handshake)throw new Error("Peer handshake not complete (getdata).");if(t.destroyed)throw new Error("Peer is destroyed (getdata).");let i=Date.now();const r=[];for(const s of e)this.blockMap.has(s)||(this.blockMap.add(s),t.blockMap.set(s,i),this.chain.synced&&(i+=100),r.push(s));if(0!==r.length){if(t.blockMap.size>=b.MAX_BLOCK_REQUEST)return this.logger.warning("Peer advertised too many blocks (%s).",t.hostname()),void t.destroy();this.logger.debug("Requesting %d/%d blocks from peer with getdata (%s).",r.length,this.blockMap.size,t.hostname()),t.getBlock(r)}}getTX(t,e){if(!this.opened)return;if(!t.handshake)throw new Error("Peer handshake not complete (getdata).");if(t.destroyed)throw new Error("Peer is destroyed (getdata).");let i=Date.now();const r=[];for(const s of e)this.txMap.has(s)||(this.txMap.add(s),t.txMap.set(s,i),i+=50,r.push(s));if(0!==r.length){if(t.txMap.size>=b.MAX_TX_REQUEST)return this.logger.warning("Peer advertised too many txs (%s).",t.hostname()),void t.destroy();this.logger.debug("Requesting %d/%d txs from peer with getdata (%s).",r.length,this.txMap.size,t.hostname()),t.getTX(r)}}async hasBlock(t){return!!this.locker.has(t)||!!await this.chain.has(t)}hasTX(t){if(this.locker.has(t))return!0;if(this.mempool){if(this.mempool.has(t))return!0;if(this.mempool.hasReject(t))return this.logger.spam("Saw known reject of %h.",t),!0}else if(!this.txFilter.added(t))return!0;return!1}ensureTX(t,e){const i=[];for(const t of e)this.hasTX(t)||i.push(t);this.getTX(t,i)}resolveTX(t,e){return!!t.txMap.has(e)&&(t.txMap.delete(e),r(this.txMap.has(e)),this.txMap.delete(e),!0)}resolveBlock(t,e){return!!t.blockMap.has(e)&&(t.blockMap.delete(e),r(this.blockMap.has(e)),this.blockMap.delete(e),!0)}resolveItem(t,e){return e.isBlock()?this.resolveBlock(t,e.hash):!!e.isTX()&&this.resolveTX(t,e.hash)}broadcast(t){const e=t.hash();let i=this.invMap.get(e);return i?(i.refresh(),i.announce()):((i=new T(this,t)).start(),i.announce()),new Promise((t,e)=>{i.addJob(t,e)})}announceBlock(t){for(let e=this.peers.head();e;e=e.next)e.announceBlock(t)}announceTX(t){for(let e=this.peers.head();e;e=e.next)e.announceTX(t)}}B.DISCOVERY_INTERVAL=12e4;class P{constructor(t){this.network=k.primary,this.logger=null,this.chain=null,this.mempool=null,this.nonces=new C,this.prefix=null,this.checkpoints=!0,this.spv=!1,this.bip37=!1,this.listen=!1,this.compact=!0,this.noRelay=!1,this.host="0.0.0.0",this.port=this.network.port,this.publicHost="0.0.0.0",this.publicPort=this.network.port,this.maxOutbound=8,this.maxInbound=8,this.createSocket=this._createSocket.bind(this),this.createServer=h.createServer,this.resolve=this._resolve.bind(this),this.proxy=null,this.onion=!1,this.upnp=!1,this.selfish=!1,this.version=b.PROTOCOL_VERSION,this.agent=b.USER_AGENT,this.banScore=b.BAN_SCORE,this.banTime=b.BAN_TIME,this.feeRate=-1,this.seeds=this.network.seeds,this.nodes=[],this.invTimeout=6e4,this.blockMode=0,this.services=b.LOCAL_SERVICES,this.requiredServices=b.REQUIRED_SERVICES,this.memory=!0,this.fromOptions(t)}fromOptions(t){if(r(t,"Pool requires options."),r(t.chain&&"object"==typeof t.chain,"Pool options require a blockchain."),this.chain=t.chain,this.network=t.chain.network,this.logger=t.chain.logger,this.port=this.network.port,this.seeds=this.network.seeds,this.port=this.network.port,this.publicPort=this.network.port,null!=t.logger&&(r("object"==typeof t.logger),this.logger=t.logger),null!=t.mempool&&(r("object"==typeof t.mempool),this.mempool=t.mempool),null!=t.prefix&&(r("string"==typeof t.prefix),this.prefix=t.prefix),null!=t.checkpoints?(r("boolean"==typeof t.checkpoints),r(t.checkpoints===this.chain.options.checkpoints),this.checkpoints=t.checkpoints):this.checkpoints=this.chain.options.checkpoints,null!=t.spv?(r("boolean"==typeof t.spv),r(t.spv===this.chain.options.spv),this.spv=t.spv):this.spv=this.chain.options.spv,null!=t.bip37&&(r("boolean"==typeof t.bip37),this.bip37=t.bip37),null!=t.listen&&(r("boolean"==typeof t.listen),this.listen=t.listen),null!=t.compact&&(r("boolean"==typeof t.compact),this.compact=t.compact),null!=t.noRelay&&(r("boolean"==typeof t.noRelay),this.noRelay=t.noRelay),null!=t.host){r("string"==typeof t.host);const e=o.toBuffer(t.host);this.host=o.toString(e),o.isRoutable(e)&&(this.publicHost=this.host)}return null!=t.port&&(r((65535&t.port)===t.port),this.port=t.port,this.publicPort=t.port),null!=t.publicHost&&(r("string"==typeof t.publicHost),this.publicHost=o.normalize(t.publicHost)),null!=t.publicPort&&(r((65535&t.publicPort)===t.publicPort),this.publicPort=t.publicPort),null!=t.maxOutbound&&(r("number"==typeof t.maxOutbound),r(t.maxOutbound>0),this.maxOutbound=t.maxOutbound),null!=t.maxInbound&&(r("number"==typeof t.maxInbound),this.maxInbound=t.maxInbound),t.createSocket&&(r("function"==typeof t.createSocket),this.createSocket=t.createSocket),t.createServer&&(r("function"==typeof t.createServer),this.createServer=t.createServer),t.resolve&&(r("function"==typeof t.resolve),this.resolve=t.resolve),t.proxy&&(r("string"==typeof t.proxy),this.proxy=t.proxy),null!=t.onion&&(r("boolean"==typeof t.onion),this.onion=t.onion),null!=t.upnp&&(r("boolean"==typeof t.upnp),this.upnp=t.upnp),t.selfish&&(r("boolean"==typeof t.selfish),this.selfish=t.selfish),t.version&&(r("number"==typeof t.version),this.version=t.version),t.agent&&(r("string"==typeof t.agent),r(t.agent.length<=255),this.agent=t.agent),null!=t.banScore&&(r("number"==typeof this.options.banScore),this.banScore=this.options.banScore),null!=t.banTime&&(r("number"==typeof this.options.banTime),this.banTime=this.options.banTime),null!=t.feeRate&&(r("number"==typeof this.options.feeRate),this.feeRate=this.options.feeRate),t.seeds&&(r(Array.isArray(t.seeds)),this.seeds=t.seeds),t.nodes&&(r(Array.isArray(t.nodes)),this.nodes=t.nodes),null!=t.only&&(r(Array.isArray(t.only)),t.only.length>0&&(this.nodes=t.only,this.maxOutbound=t.only.length)),null!=t.invTimeout&&(r("number"==typeof t.invTimeout),this.invTimeout=t.invTimeout),null!=t.blockMode&&(r("number"==typeof t.blockMode),this.blockMode=t.blockMode),null!=t.memory&&(r("boolean"==typeof t.memory),this.memory=t.memory),this.spv&&(this.requiredServices|=b.services.BLOOM,this.services&=~b.services.NETWORK,this.noRelay=!0,this.checkpoints=!0,this.compact=!1,this.bip37=!1,this.listen=!1),this.selfish&&(this.services&=~b.services.NETWORK,this.bip37=!1),this.bip37&&(this.services|=b.services.BLOOM),this.proxy&&(this.listen=!1),null!=t.services&&(r(t.services>>>0===t.services),this.services=t.services),null!=t.requiredServices&&(r(t.requiredServices>>>0===t.requiredServices),this.requiredServices=t.requiredServices),this}static fromOptions(t){return(new P).fromOptions(t)}getHeight(){return this.chain.height}isFull(){return this.chain.synced}getRequiredServices(){let t=this.requiredServices;return this.hasWitness()&&(t|=b.services.WITNESS),t}hasWitness(){return this.chain.state.hasWitness()}createNonce(t){return this.nonces.alloc(t)}hasNonce(t){return this.nonces.has(t)}getRate(t){if(!this.mempool)return-1;const e=this.mempool.getEntry(t);return e?e.getRate():-1}_createSocket(t,e){return this.proxy?l.connect(this.proxy,t,e):h.createSocket(t,e)}_resolve(t){return this.onion?l.resolve(this.proxy,t):a.lookup(t)}}class N{constructor(){this.map=new Map,this.ids=new Map,this.list=new u,this.load=null,this.inbound=0,this.outbound=0}head(){return this.list.head}tail(){return this.list.tail}size(){return this.list.size}add(t){r(this.list.push(t)),r(!this.map.has(t.hostname())),this.map.set(t.hostname(),t),r(!this.ids.has(t.id)),this.ids.set(t.id,t),t.outbound?this.outbound+=1:this.inbound+=1}remove(t){r(this.list.remove(t)),r(this.ids.has(t.id)),this.ids.delete(t.id),r(this.map.has(t.hostname())),this.map.delete(t.hostname()),t===this.load&&(r(t.loader),t.loader=!1,this.load=null),t.outbound?this.outbound-=1:this.inbound-=1}get(t){return this.map.get(t)}has(t){return this.map.has(t)}find(t){return this.ids.get(t)}destroy(){let t;for(let e=this.list.head;e;e=t)t=e.next,e.destroy()}}class T extends s{constructor(t,e){super(),r(!e.mutable,"Cannot broadcast mutable item.");const i=e.toInv();this.pool=t,this.hash=i.hash,this.type=i.type,this.msg=e,this.jobs=[]}addJob(t,e){this.jobs.push({resolve:t,reject:e})}start(){return r(!this.timeout,"Already started."),r(!this.pool.invMap.has(this.hash),"Already started."),this.pool.invMap.set(this.hash,this),this.refresh(),this}refresh(){null!=this.timeout&&(clearTimeout(this.timeout),this.timeout=null),this.timeout=setTimeout(()=>{this.emit("timeout"),this.reject(new Error("Timed out."))},this.pool.options.invTimeout)}announce(){switch(this.type){case x.TX:this.pool.announceTX(this.msg);break;case x.BLOCK:this.pool.announceBlock(this.msg);break;default:r(!1,"Bad type.")}}cleanup(){r(null!=this.timeout,"Already finished."),r(this.pool.invMap.has(this.hash),"Already finished."),clearTimeout(this.timeout),this.timeout=null,this.pool.invMap.delete(this.hash)}reject(t){this.cleanup();for(const e of this.jobs)e.reject(t);this.jobs.length=0}resolve(){this.cleanup();for(const t of this.jobs)t.resolve(!1);this.jobs.length=0}handleAck(t){setTimeout(()=>{this.emit("ack",t);for(const t of this.jobs)t.resolve(!0);this.jobs.length=0},1e3)}handleReject(t){this.emit("reject",t);for(const t of this.jobs)t.resolve(!1);this.jobs.length=0}inspect(){return`<BroadcastItem: type=${this.type===x.TX?"tx":"block"} hash=${m.revHex(this.hash)}>`}}class C{constructor(){this.map=new p,this.hosts=new Map}alloc(t){for(;;){const e=b.nonce();if(!this.map.has(e))return this.map.set(e,t),r(!this.hosts.has(t)),this.hosts.set(t,e),e}}has(t){return this.map.has(t)}remove(t){const e=this.hosts.get(t);return!!e&&(this.hosts.delete(t),r(this.map.has(e)),this.map.delete(e),!0)}}class M{constructor(t,e){this.hash=t,this.height=e,this.prev=null,this.next=null}}t.exports=B},function(t,e,i){"use strict";(function(t){
/*!
 * ip.js - ip utils for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License).
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 *
 * Parts of this software are based on node-ip.
 * https://github.com/indutny/node-ip
 * Copyright (c) 2012, Fedor Indutny (MIT License).
 */
const r=i(0),s=i(139),n=i(157),o=i(195),a=i(196),h=e,c=t.from("00000000000000000000000000000000","hex"),l=t.from("00000000000000000000000000000001","hex"),u=t.from("0064ff9b0000000000000000","hex"),f=t.from("fe80000000000000","hex"),d=t.from("0000000000000000ffff0000","hex"),p=t.from("00000000000000ffff","hex"),g=t.from("fd87d87eeb43","hex"),m=t.alloc(33,0),b=t.alloc(16,0),w=t.alloc(16,0),y=t.alloc(16,0),v={NONE:0,INET4:4,INET6:6,ONION:10},k={NONE:0,INET4:1,INET6:2,ONION:3,TEREDO:4};function E(e,i){r(t.isBuffer(e)),r(t.isBuffer(i)),r(e.length>=i.length);for(let t=0;t<i.length;t++)if(e[t]!==i[t])return!1;return!0}function S(t){if(null==t)return v.NONE;if(t>>>0===t)return t;switch(r("string"==typeof t),r(t.length<=4),t.toLowerCase()){case"all":return v.NONE;case"ipv4":return v.INET4;case"ipv6":return v.INET6}throw new Error(`Invalid address family: ${t}.`)}h.encode=function(e){return r(t.isBuffer(e)),h.read(e,0,e.length)},h.decode=function(e){const i=t.allocUnsafe(16);return h.write(i,e,0,16),i},h.read=function(e,i,s){if(null==i&&(i=0),null==s&&(s=16),r(t.isBuffer(e)),r(i>>>0===i),r(s>>>0===s),i+s>e.length)throw new Error("Out of bounds read.");if(4===s){const t=o.ntop4(e,i);if(!t)throw new Error("Invalid IPv4 address.");return t}if(16===s){if(o.onion(e,i)){const t=e.slice(i+6,i+16);return a.encodeLegacy(t)}let t;if(!(t=o.mapped(e,i)?o.ntop4(e,i+12):o.ntop6(e,i)))throw new Error("Invalid IPv6 address.");return t}throw new Error("Invalid IP address.")},h.write=function(e,i,s,n){if(null==s&&(s=0),null==n&&(n=16),r(t.isBuffer(e)),r("string"==typeof i),r(s>>>0===s),r(n>>>0===n),s+n>e.length)throw new Error("Out of bounds write.");if(4===n){if(o.pton4(i,e,s)>=0)return s+4;const t=b;if(o.pton6(i,t,0)<0)throw new Error("Invalid IPv4 address.");if(!o.mapped(t,0))throw new Error("Out of bounds write.");return s+t.copy(e,s,12,16)}if(16===n){if(a.isLegacyString(i)){const t=g,r=a.decodeLegacy(i);return(s+=t.copy(e,s))+r.copy(e,s)}if(o.pton4(i,e,s+12)>=0)return e.fill(0,s,s+10),s+=10,e[s++]=255,e[s++]=255,s;if(o.pton6(i,e,s)>=0)return s+16;throw new Error("Invalid IPv6 address.")}throw new Error("Invalid IP address.")},h.writeBW=function(t,e,i){return r(t&&"object"==typeof t),t.offset=h.write(t.data,e,t.offset,i),t},h.readBR=function(t,e){null==e&&(e=16),r(t&&"object"==typeof t);const i=h.read(t.data,t.offset,e);return t.offset+=e,i},h.normalize=function(t){if(a.isLegacyString(t))return a.normalizeLegacy(t);const e=b;if(o.pton4(t,e,0)>=0)return o.ntop4(e,0);if(o.pton6(t,e,0)>=0)return h.isMapped(e)?o.ntop4(e,12):o.ntop6(e,0);throw new Error("Invalid IP address.")},h.map=function(e){if(r(t.isBuffer(e)),16===e.length)return e;if(4!==e.length)throw new Error("Not an IPv4 address.");const i=t.allocUnsafe(16);return i.fill(0,0,10),i[10]=255,i[11]=255,e.copy(i,12),i},h.unmap=function(e){if(r(t.isBuffer(e)),4===e.length)return e;if(16!==e.length)throw new Error("Not an IPv6 address.");if(!h.isMapped(e))throw new Error("Not an IPv4 mapped address.");return e.slice(12,16)},h.toHost=function(e,i,s){if(null==s&&(s=null),r("string"==typeof e),r((65535&i)===i),r(null===s||t.isBuffer(s)),r(!s||33===s.length),0===e.length)throw new Error("Invalid host (zero length).");if(e.length>261)throw new Error("Invalid host (too large).");let a=!1;for(let t=0;t<e.length;t++){const i=e.charCodeAt(t);switch(i){case 58:a=!0;break;case 64:case 91:case 93:throw new Error("Bad host.");default:if(i<32||i>126)throw new Error("Bad host.")}}if(a&&o.pton6(e,null,0)<0)throw new Error("Unexpected colon.");const c=h.getTypeString(e);c!==v.NONE&&(e=h.normalize(e));let l="";return s&&!s.equals(m)&&(l=`${n.encode(s)}@`),c===v.INET6?`${l}[${e}]:${i}`:`${l}${e}:${i}`},h.fromHost=function(e,i,s){if(null==i&&(i=0),null==s&&(s=null),r("string"==typeof e),r((65535&i)===i),r(null===s||t.isBuffer(s)),0===e.length)throw new Error("Invalid host (zero length).");if(e.length>315)throw new Error("Invalid host (too large).");if(s&&33!==s.length)throw new Error("Invalid fallback key (bad size).");let a=s,c="",l=null,u=!1;const f=e.indexOf("@");if(-1!==f){const t=e.substring(0,f),i=e.substring(f+1);if(t.length>53)throw new Error("Invalid identity key (too large).");if(33!==(a=n.decode(t)).length)throw new Error("Invalid identity key (bad size).");e=i}if("["===e[0])if("]"===e[e.length-1])c=e.slice(1,-1),l=null,u=!0;else{const t=e.indexOf("]:");if(-1===t)throw new Error("IPv6 bracket mismatch.");c=e.substring(1,t),l=e.substring(t+2),u=!0}else{const t=e.indexOf(":");if(-1!==t){const i=e.substring(0,t),r=e.substring(t+1);-1!==r.indexOf(":")?(c=e,l=null,u=!0):(c=i,l=r)}else c=e,l=null}if(0===c.length)throw new Error("Invalid host (zero length).");if(null!=l){let t=0,e=0;for(let i=0;i<l.length;i++){const r=l.charCodeAt(i);if(r<48||r>57)throw new Error("Invalid port (bad character).");if(e>0&&0===t)throw new Error("Invalid port (leading zero).");if(t*=10,t+=r-48,(e+=1)>5||t>65535)throw new Error("Invalid port (overflow).")}if(0===e)throw new Error("Invalid port (bad size).");l=t}else l=i;if(u&&o.pton6(c,null,0)<0)throw new Error("Invalid IPv6 address.");let d,p=null,g=v.NONE;try{p=h.decode(c)}catch(t){}return p&&(c=h.encode(p),g=h.getType(p)),{host:c,port:l,type:g,hostname:d=g===v.INET6?`[${c}]:${l}`:`${c}:${l}`,raw:p,key:a}},h.getTypeString=function(t){if(r("string"==typeof t),0===t.length)return v.NONE;if(t.length>255)return v.NONE;if(a.isLegacyString(t))return v.ONION;if(o.pton4(t,null,0)>=0)return v.INET4;const e=b;return o.pton6(t,e,0)>=0?h.getType(e):v.NONE},h.isMappedString=function(t){const e=b;return!!(o.pton6(t,e,0)>=0&&h.isMapped(e))},h.isIPv4String=function(t){return h.getTypeString(t)===v.INET4},h.isIPv6String=function(t){return h.getTypeString(t)===v.INET6},h.isOnionString=function(t){return h.getTypeString(t)===v.ONION},h.isUnknownString=function(t){return h.getTypeString(t)===v.NONE},h.isIPString=function(t){const e=h.getTypeString(t);switch(e){case v.INET4:case v.INET6:return e;default:return v.NONE}},h.isEqualString=function(t,e){const i=w,r=y;return h.write(i,t,0,16),h.write(r,e,0,16),i.equals(r)},h.maskString=function(t,e){const i=w,r=y;return h.write(i,t,0,16),h.write(r,e,0,16),h.mask(i,r,i),h.encode(i)},h.cidrString=function(t,e){const i=w;return h.write(i,t,0,16),h.cidr(i,e,i),h.encode(i)},h.getType=function(t){return h.isMapped(t)?v.INET4:h.isOnion(t)?v.ONION:v.INET6},h.isMapped=function(e){return r(t.isBuffer(e)),r(16===e.length),o.mapped(e,0)},h.isIPv4=function(t){return h.isMapped(t)},h.isIPv6=function(t){return!h.isMapped(t)&&!h.isOnion(t)},h.isOnion=function(e){return r(t.isBuffer(e)),r(16===e.length),o.onion(e,0)},h.isIP=function(t){return h.isIPv4(t)?v.INET4:h.isIPv6(t)?v.INET6:v.NONE},h.isEqual=function(e,i){return r(t.isBuffer(e)),r(t.isBuffer(i)),r(16===e.length),r(16===i.length),e.equals(i)},h.mask=function(e,i,s){null==s&&(s=t.allocUnsafe(16)),r(t.isBuffer(e)),r(t.isBuffer(i)),r(t.isBuffer(s)),r(16===e.length),r(16===i.length),r(16===s.length);const n=h.isMapped(e)?12:0;e!==s&&e.copy(s,0,0,16);for(let t=n;t<16;t++)s[t]=e[t]&i[t];return s},h.cidr=function(e,i,s){r(t.isBuffer(e)),r(16===e.length),r((255&i)===i);const n=b;let o=0,a=128;if(h.isMapped(e)&&(o=12,a=32,n.fill(0,0,10),n[10]=255,n[11]=255),i>a)throw new Error("Too many CIDR bits.");for(let t=o;t<16;t++){let e=8;i<8&&(e=i),i-=e,n[t]=255&~(255>>e)}return h.mask(e,n,s)},h.isNull=function(t){return h.isIPv4(t)?0===t[12]&&0===t[13]&&0===t[14]&&0===t[15]:h.isEqual(t,c)},h.isBroadcast=function(t){return!!h.isIPv4(t)&&255===t[12]&&255===t[13]&&255===t[14]&&255===t[15]},h.isRFC1918=function(t){return!!h.isIPv4(t)&&(10===t[12]||192===t[12]&&168===t[13]||172===t[12]&&t[13]>=16&&t[13]<=31)},h.isRFC2544=function(t){return!!h.isIPv4(t)&&(198===t[12]&&(18===t[13]||19===t[13])||169===t[12]&&254===t[13])},h.isRFC3927=function(t){return!!h.isIPv4(t)&&169===t[12]&&254===t[13]},h.isRFC6598=function(t){return!!h.isIPv4(t)&&100===t[12]&&t[13]>=64&&t[13]<=127},h.isRFC5737=function(t){return!!h.isIPv4(t)&&(192===t[12]&&0===t[13]&&2===t[14]||198===t[12]&&51===t[13]&&100===t[14]||203===t[12]&&0===t[13]&&113===t[14])},h.isRFC3849=function(e){return r(t.isBuffer(e)),r(16===e.length),32===e[0]&&1===e[1]&&13===e[2]&&184===e[3]},h.isRFC3964=function(e){return r(t.isBuffer(e)),r(16===e.length),32===e[0]&&2===e[1]},h.isRFC6052=function(t){return E(t,u)},h.isRFC4380=function(e){return r(t.isBuffer(e)),r(16===e.length),32===e[0]&&1===e[1]&&0===e[2]&&0===e[3]},h.isRFC4862=function(t){return E(t,f)},h.isRFC4193=function(e){return r(t.isBuffer(e)),r(16===e.length),252==(254&e[0])},h.isRFC6145=function(t){return E(t,d)},h.isRFC4843=function(e){return r(t.isBuffer(e)),r(16===e.length),32===e[0]&&1===e[1]&&0===e[2]&&16==(240&e[3])},h.isLocal=function(t){return h.isIPv4(t)?127===t[12]&&0===t[13]:!!h.isEqual(t,l)},h.isMulticast=function(t){return h.isIPv4(t)?224==(240&t[12]):255===t[0]},h.isValid=function(t){return!(E(t,p)||h.isNull(t)||h.isBroadcast(t)||h.isRFC3849(t))},h.isRoutable=function(t){return!(!h.isValid(t)||h.isRFC1918(t)||h.isRFC2544(t)||h.isRFC3927(t)||h.isRFC4862(t)||h.isRFC6598(t)||h.isRFC5737(t)||h.isRFC4193(t)&&!h.isOnion(t)||h.isRFC4843(t)||h.isLocal(t))},h.getNetwork=function(t){return h.isIPv4(t)?k.INET4:h.isRFC4380(t)?k.TEREDO:h.isOnion(t)?k.ONION:k.INET6},h.getReachability=function(t,e){if(!h.isRoutable(t))return 0;const i=h.getNetwork(t);switch(h.getNetwork(e)){case k.IPV4:switch(i){case k.IPV4:return 4;default:return 1}break;case k.INET6:switch(i){case k.TEREDO:return 2;case k.IPV4:return 4;case k.INET6:return h.isRFC3964(t)||h.isRFC6052(t)||h.isRFC6145(t)?3:5;default:return 1}break;case k.ONION:switch(i){case k.IPV4:return 4;case k.ONION:return 6;default:return 1}break;case k.TEREDO:switch(i){case k.TEREDO:return 2;case k.INET6:return 3;case k.IPV4:return 4;default:return 1}break;default:switch(i){case k.TEREDO:return 2;case k.INET6:return 3;case k.IPV4:return 4;case k.ONION:return 6;default:return 1}}},h._interfaces=function(t,e){if("function"!=typeof s.networkInterfaces)return[];r(t>>>0===t);const i=function(t){switch(r(t>>>0===t),t){case v.NONE:return null;case v.INET4:return"IPv4";case v.INET6:return"IPv6"}throw new Error(`Invalid address family: ${t}.`)}(e),n=s.networkInterfaces(),o=[],a=b;for(const r of Object.keys(n)){const s=n[r];for(const r of s)if(!i||r.family===i){try{h.write(a,r.address,0,16)}catch(t){continue}if(h.isValid(a)){switch(e){case v.NONE:break;case v.INET4:if(!h.isIPv4(a))continue;break;case v.INET6:if(h.isIPv4(a))continue}switch(t){case 0:break;case 1:if(!h.isLocal(a))continue;break;case 2:if(h.isLocal(a))continue;break;case 3:if(h.isLocal(a))continue;if(h.isRoutable(a))continue;break;case 4:if(h.isLocal(a))continue;if(!h.isRoutable(a))continue}o.push(h.encode(a))}}}return o},h.getInterfaces=function(t){return h._interfaces(0,S(t))},h.getLocal=function(t){return h._interfaces(1,S(t))},h.getNonlocal=function(t){return h._interfaces(2,S(t))},h.getPrivate=function(t){return h._interfaces(3,S(t))},h.getPublic=function(t){return h._interfaces(4,S(t))},h.type=h.getTypeString,h.family=h.isIPString,h.test=h.getTypeString,h.equal=h.isEqualString,v.NAME=0,v.DNS=0,v.IPV4=4,v.IPV6=6,h.toString=h.encode,h.toBuffer=h.decode,h.toMapped=h.map,h.isNameString=h.isUnknownString,h.hasPrefix=E,h.getStringType=h.getTypeString,h.isV4String=h.isIPv4String,h.isV6String=h.isIPv6String,h.isDNSString=h.isUnknownString,h.fromHostname=h.fromHost,h.toHostname=h.toHost,h.IP=h,h.ip=h,h.types=v,h.networks=k,h.ZERO_IP=c,h.onion=a,h.inet=o}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){
/*!
 * base32.js - base32 for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=e,n=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,26,27,28,29,30,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,-1],o=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,-1,-1,-1,-1,-1,-1,-1,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,-1,-1,-1,-1,-1,-1,-1,-1,-1],a=[0,6,4,3,1];s.encode=function(t,e=!1){return s._encode(t,"abcdefghijklmnopqrstuvwxyz234567",e)},s.encodeHex=function(t,e=!1){return s._encode(t,"0123456789abcdefghijklmnopqrstuv",e)},s._encode=function(e,i,s=!1){r(t.isBuffer(e)),r("boolean"==typeof s);let n="",o=0,h=0;for(let t=0;t<e.length;t++){const r=e[t];switch(o){case 0:n+=i[r>>>3],h=(7&r)<<2,o=1;break;case 1:n+=i[h|r>>>6],n+=i[r>>>1&31],h=(1&r)<<4,o=2;break;case 2:n+=i[h|r>>>4],h=(15&r)<<1,o=3;break;case 3:n+=i[h|r>>>7],n+=i[r>>>2&31],h=(3&r)<<3,o=4;break;case 4:n+=i[h|r>>>5],n+=i[31&r],o=0}}if(o>0&&(n+=i[h],s))for(let t=0;t<a[o];t++)n+="=";return n},s.decode=function(t,e=!1){return s._decode(t,n,e)},s.decodeHex=function(t,e=!1){return s._decode(t,o,e)},s._decode=function(e,i,s){r("string"==typeof e),r("boolean"==typeof s);const n=t.allocUnsafe(5*e.length/8|0);let o=0,a=0,h=0,c=0;for(;c<e.length;c++){const t=e.charCodeAt(c),r=65408&t?-1:i[t];if(-1===r){if(s&&o>0)break;throw new Error("Non-base32 character.")}switch(o){case 0:a=r,o=1;break;case 1:n[h++]=a<<3|r>>>2,a=3&r,o=2;break;case 2:a=a<<5|r,o=3;break;case 3:n[h++]=a<<1|r>>>4,a=15&r,o=4;break;case 4:n[h++]=a<<4|r>>>1,a=1&r,o=5;break;case 5:a=a<<5|r,o=6;break;case 6:n[h++]=a<<2|r>>>3,a=7&r,o=7;break;case 7:n[h++]=a<<5|r,o=0}}if(s)switch(o){case 0:break;case 1:case 3:case 6:throw new Error("Invalid base32 string.");case 2:if(a>0)throw new Error("Invalid padding.");if(e.length!==c+6)throw new Error("Invalid padding.");if("======"!==e.substring(c,c+6))throw new Error("Invalid base32 character.");break;case 4:if(a>0)throw new Error("Invalid padding.");if(e.length!==c+4)throw new Error("Invalid padding.");if("===="!==e.substring(c,c+4))throw new Error("Invalid base32 character.");break;case 5:if(a>0)throw new Error("Invalid padding.");if(e.length!==c+3)throw new Error("Invalid padding.");if("==="!==e.substring(c,c+3))throw new Error("Invalid base32 character.");break;case 7:if(a>0)throw new Error("Invalid padding.");if(e.length!==c+1)throw new Error("Invalid padding.");if("="!==e[c])throw new Error("Invalid base32 character.")}return n.slice(0,h)},s.test=function(t,e=!1){try{return s.decode(t,e),!0}catch(t){return!1}},s.testHex=function(t,e=!1){try{return s.decodeHex(t,e),!0}catch(t){return!1}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){
/*!
 * inet.js - inet pton/ntop for bcoin
 * Copyright (c) 2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 *
 * Parts of this software are based on c-ares:
 *   Copyright (c) 2007-2018, Daniel Stenberg (MIT License)
 *   https://github.com/c-ares/c-ares
 *   https://github.com/c-ares/c-ares/blob/master/inet_net_pton.c
 *   https://github.com/c-ares/c-ares/blob/master/inet_ntop.c
 */
const r=i(0),s=1,n=2,o=t.allocUnsafe(16),a=t.allocUnsafe(16),h=new Uint16Array(8),c=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"],l=new Int8Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,-1,-1,-1,-1,-1,-1,-1,10,11,12,13,14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,11,12,13,14,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]);function u(e,i,o){null==i&&(i=null),null==o&&(o=0),r("string"==typeof e),r(null===i||t.isBuffer(i)),r(o>>>0===o);const a=o;let h=0,c=-1,u=-1;if(i&&o+4>i.length)return-s;if(function(t,e){if(e+3>t.length)return!1;if(48!==g(t,e))return!1;const i=g(t,e+1);if(88!==i&&120!==i)return!1;const r=g(t,e+2);return-1!==l[r]}(e,h)){h+=2;let t=0,r=0,f=0;for(;h<e.length;h++){c=g(e,h);const d=l[c];if(-1===d)break;if(r=0===t?d:r<<4|d,t+=1,(f+=1)>8)return-s;if(2===t){if(o+1-a>4)return-n;i&&(i[o]=r),-1===u&&(u=r),o+=1,t=0}c=-1}if(t){if(o+1-a>4)return-n;i&&(i[o]=r<<4),-1===u&&(u=r<<4),o+=1}}else{if(!function(t,e){if(e+1>t.length)return!1;const i=g(t,e);return i>=48&&i<=57}(e,h))return-s;{let t=0;for(;;){let r=0,l=0;for(;h<e.length&&!((c=g(e,h))<48||c>57);h++){if(r*=10,r+=c-48,(l+=1)>3||r>255)return-s;c=-1}if((t+=l)>12)return-s;if(o+1-a>4)return-n;if(i&&(i[o]=r),-1===u&&(u=r),o+=1,-1===c||47===c)break;if(46!==c)return-s;if((c=g(e,h+=1))<48||c>57)return-s}}}let f=-1;if(function(t,e){if(e+2>t.length)return!1;if(47!==g(t,e))return!1;const i=g(t,e+1);return!(i<48||i>57)}(e,h)&&o>a){h+=1,f=0,c=-1;let t=0;for(;h<e.length&&!((c=g(e,h))<48||c>57);h++){if(f*=10,f+=c-48,(t+=1)>3||f>32)return-s;c=-1}}if(-1!==c)return-s;if(o===a)return-s;-1===f&&(r(-1!==u),(f=u>=240?32:u>=224?8:u>=192?24:u>=128?16:8)<8*(o-a)&&(f=8*(o-a)),8===f&&224===u&&(f=4)),r(f<=32);const d=4-(o-a);return r(d>=0&&d<=4),i&&(r(o+d<=i.length),i.fill(0,o,o+d)),o+=d,f}function f(e,i,a){null==i&&(i=null),null==a&&(a=0),r("string"==typeof e),r(null===i||t.isBuffer(i)),r(a>>>0===a);const h=o;let c=0,u=0,f=16,d=-1,p=0,m=!1,b=0,k=0,E=-1,S=!1;if(i&&a+16>i.length)return-n;if(w(e,c)){if(!w(e,c+1))return-s;c+=1}for(h.fill(0,0,16),p=c;c<e.length;c++){const t=g(e,c),i=l[t];if(-1===i){if(58!==t){if(46===t&&u+4<=f){const t=v(e,p,h,u);if(-1!==t){0!==t&&(E=t),u+=4,m=!1,S=!0;break}}if(47===t){const t=y(e,c+1);if(-1!==t){E=t;break}}return-s}if(p=c+1,!m){if(-1!==d)return-s;d=u;continue}if(c===e.length)return-s;if(u+2>f)return-s;h[u++]=b>>>8&255,h[u++]=255&b,m=!1,k=0,b=0}else{if(b<<=4,b|=i,(k+=1)>4)return-s;m=!0}}if(m){if(u+2>f)return-s;h[u++]=b>>>8&255,h[u++]=255&b}-1===E&&(E=128),r(E<=128);let R=(E+15)/16|0;if(R<2&&(R=2),S&&(R=8),f=2*R,-1!==d){const t=u-d;let e;if(u===f)return-s;for(e=1;e<=t;e++)h[f-e]=h[d+t-e],h[d+t-e]=0;u=f}if(u!==f)return-s;const I=(E+7)/8|0,A=16-I;return r(I>=0&&I<=16),i?(r(a+I+A<=i.length),a+=h.copy(i,a,0,I),i.fill(0,a,a+A),a+=A):(a+=I,a+=A),E}function d(e,i){if(null==i&&(i=0),r(t.isBuffer(e)),r(i>>>0===i),i+4>e.length)return"";let s="";return s+=m(e[i+0]),s+=".",s+=m(e[i+1]),s+=".",s+=m(e[i+2]),(s+=".")+m(e[i+3])}function p(e,i){if(null==i&&(i=0),r(t.isBuffer(e)),r(i>>>0===i),i+16>e.length)return"";let s=-1,n=0,o=-1,a=0,c="";const l=h;for(let t=0;t<16;t++)l[t]=0;for(let t=0;t<16;t++)l[t>>>1]|=e[i+t]<<(1-(1&t)<<3);for(let t=0;t<8;t++)0===l[t]?-1===o?(o=t,a=1):a+=1:-1!==o&&((-1===s||a>n)&&(s=o,n=a),o=-1);-1!==o&&(-1===s||a>n)&&(s=o,n=a),-1!==s&&n<2&&(s=-1);for(let t=0;t<8;t++)if(-1!==s&&t>=s&&t<s+n)t===s&&(c+=":");else{if(0!==t&&(c+=":"),6===t&&0===s&&(6===n||7===n&&1!==l[7]||5===n&&65535===l[5])){const t=d(e,i+12);if(!t)return"";c+=t;break}c+=b(l[t])}return-1!==s&&s+n===8&&(c+=":"),c}function g(t,e){const i=t.charCodeAt(e);return 65408&i?0:i}function m(t,e){return t.toString(10)}function b(t){let e="";for(let i=3;i>=0;i--){const r=t>>>4*i&15;0===r&&0===e.length||(e+=c[r])}return 0===e.length&&(e+=c[0]),e}function w(t,e){return!(e+1>t.length)&&58===g(t,e)}function y(t,e){let i=0,r=0;for(;e<t.length;e++){const s=g(t,e);if(s<48||s>57)return-1;if(r>0&&0===i)return-1;if(i*=10,i+=s-48,(r+=1)>3||i>128)return-1}return 0===r?-1:i}function v(t,e,i,r){const s=r;let n=0,o=0;for(;e<t.length;e++){const a=g(t,e);if(a>=48&&a<=57){if(o>0&&0===n)return-1;if(n*=10,n+=a-48,(o+=1)>3||n>255)return-1}else{if(46!==a&&47!==a)return-1;if(r-s>3)return-1;if(i){if(r+1>i.length)return-1;i[r]=n}if(r+=1,47===a)return y(t,e+1);n=0,o=0}}if(0===o)return-1;if(r-s>3)return-1;if(i){if(r+1>i.length)return-1;i[r]=n}return r+=1,0}e.pton4=u,e.pton6=f,e.pton=function(e,i,n,o){return null==n&&(n=null),null==o&&(o=0),r(e>>>0===e),r("string"==typeof i),r(null===n||t.isBuffer(n)),r(o>>>0===o),4===e?u(i,n,o):6===e?f(i,n,o):-s},e.ntop4=d,e.ntop6=p,e.ntop=function(e,i,s){return null==s&&(s=0),r(e>>>0===e),r(t.isBuffer(i)),r(s>>>0===s),4===e?d(i,s):6===e?p(i,s):""},e.family=function(t){return u(t,null,0)>=0?4:f(t,null,0)>=0?6:0},e.mapped=function(e,i){return null==i&&(i=0),r(t.isBuffer(e)),r(i>>>0===i),!(i+12>e.length)&&0===e[i++]&&0===e[i++]&&0===e[i++]&&0===e[i++]&&0===e[i++]&&0===e[i++]&&0===e[i++]&&0===e[i++]&&0===e[i++]&&0===e[i++]&&255===e[i++]&&255===e[i++]},e.onion=function(e,i){return null==i&&(i=0),r(t.isBuffer(e)),r(i>>>0===i),!(i+6>e.length)&&253===e[i++]&&135===e[i++]&&216===e[i++]&&126===e[i++]&&235===e[i++]&&67===e[i++]},e.normalize=function(t){const e=a;return u(t,e,0)>=0?d(e,0):f(t,e,0)>=0?p(e,0):""}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){
/*!
 * onion.js - onion utils for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License).
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 *
 * Parts of this software are based on node-ip.
 * https://github.com/indutny/node-ip
 * Copyright (c) 2012, Fedor Indutny (MIT License).
 */
const r=i(0),s=i(157),n=e;function o(e,i){if(r(t.isBuffer(e)),r(33===e.length),null==i)return 0;r("function"==typeof i);const s=t.alloc(48);return s.write(".onion checksum",0,15,"ascii"),e.copy(s,15,1,33),s[47]=e[0],i(s).readUInt16BE(0)}n.isString=function(t){return n.isLegacyString(t)||n.isNGString(t)},n.is=function(t){return n.isLegacy(t)||n.isNG(t)},n.encode=function(t,e){if(n.isLegacy(t))return n.encodeLegacy(t);if(n.isNG(t))return n.encodeNG(t,e);throw new Error("Not an onion buffer.")},n.decode=function(t,e){if(n.isLegacyString(t))return n.decodeLegacy(t);if(n.isNGString(t))return n.decodeNG(t,e);throw new Error("Not an onion string.")},n.normalize=function(t,e){if(n.isLegacyString(t))return n.normalizeLegacy(t);if(n.isNGString(t))return n.normalizeNG(t,e);throw new Error("Not an onion string.")},n.isLegacyString=function(t){return r("string"==typeof t),22===t.length&&".onion"===t.slice(-6).toLowerCase()},n.isLegacy=function(e){return r(t.isBuffer(e)),10===e.length},n.encodeLegacy=function(t){return r(n.isLegacy(t)),`${s.encode(t)}.onion`},n.decodeLegacy=function(t){r(n.isLegacyString(t));const e=s.decode(t.slice(0,-6));return r(10===e.length,"Invalid onion address."),e},n.normalizeLegacy=function(t){return n.encodeLegacy(n.decodeLegacy(t))},n.isNGString=function(t){return r("string"==typeof t),62===t.length&&".onion"===t.slice(-6).toLowerCase()},n.isNG=function(e){return r(t.isBuffer(e)),33===e.length},n.encodeNG=function(e,i){r(t.isBuffer(e)),r(33===e.length);const n=t.alloc(35);e.copy(n,0,1,33);const a=o(e,i);return n[32]=a>>>8,n[33]=255&a,n[34]=e[0],`${s.encode(n)}.onion`},n.decodeNG=function(e,i){r(n.isNGString(e),"Invalid onion address.");const a=s.decode(e.slice(0,-6));r(35===a.length,"Invalid onion address.");const h=t.alloc(33);return h[0]=a[34],a.copy(h,1,0,32),r(function(e,i,s){return r(t.isBuffer(i)),r(35===i.length),null==s||i.readUInt16BE(32)===o(e,s)}(h,a,i),"Invalid checksum for onion address."),h},n.normalizeNG=function(t,e){return n.encodeNG(n.decodeNG(t,e),e)}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * dns.js - dns backend for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.unsupported=!0,e.Resolver=class{constructor(){throw new Error("DNS resolver not available.")}},e.resolve=async function(t,e,i){throw new Error("DNS not supported.")},e.reverse=async function(t,e){throw new Error("DNS not supported.")},e.lookup=async function(t,e,i){throw new Error("DNS not supported.")},e.lookupService=async function(t,e,i){throw new Error("DNS not supported.")},e.getIPv4=async function(t){throw new Error("DNS not supported.")},e.getIPv6=async function(t){throw new Error("DNS not supported.")}},function(t,e,i){"use strict";
/*!
 * tcp.js - tcp backend for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(7);class s extends r{constructor(t){super()}address(){return{address:"127.0.0.1",family:"IPv4",port:0}}async close(){}async getConnections(){return 0}async listen(...t){}get listening(){return!1}set listening(t){}get maxConnections(){}set maxConnections(t){}ref(){return this}unref(){return this}}e.unsupported=!0,e.Socket=class extends r{constructor(){super(),this.readable=!0,this.writable=!0,this.encrypted=!1,this.bufferSize=0,this.bytesRead=0,this.bytesWritten=0,this.connecting=!1,this.destroyed=!1,this.localAddress="127.0.0.1",this.localPort=0,this.remoteAddress="127.0.0.1",this.remoteFamily="IPv4",this.remotePort=0}address(){return{address:"127.0.0.1",family:"IPv4",port:0}}connect(t,e){throw new Error("Unsupported.")}destroy(t){return this}end(t,e){throw new Error("Unsupported.")}pause(){return this}ref(){return this}resume(){return this}setEncoding(t){return this}setKeepAlive(t,e){return this}setNoDelay(t){return this}setTimeout(t,e){return this}unref(){return this}write(t,e){throw new Error("Unsupported.")}},e.Server=s,e.connect=function(t,e){throw new Error("Unsupported.")},e.createSocket=e.connect,e.createConnection=e.connect,e.createServer=function(t){return new s(t)}},function(t,e,i){"use strict";
/*!
 * bupnp.js - bupnp for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */t.exports=i(200)},function(t,e,i){"use strict";
/*!
 * upnp-browser.js - upnp for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */class r{constructor(t,e,i){throw new Error("UPNP not supported.")}static async discover(t,e,i,r){throw new Error("UPNP not supported.")}}r.unsupported=!0,t.exports=r},function(t,e,i){"use strict";
/*!
 * bsocks.js - SOCKS client for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */t.exports=i(202)},function(t,e,i){"use strict";
/*!
 * socks.js - socks proxy for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.unsupported=!0,e.connect=function(t,e,i){throw new Error("SOCKS unsupported.")},e.resolve=async function(t,e){throw new Error("SOCKS unsupported.")}},function(t,e,i){"use strict";
/*!
 * list.js - double linked list for bcoin
 * Copyright (c) 2017-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(0);class s{constructor(){this.head=null,this.tail=null,this.size=0}reset(){let t,e;for(t=this.head;t;t=e)e=t.next,t.prev=null,t.next=null;r(!t),this.head=null,this.tail=null,this.size=0}shift(){const t=this.head;return t?(this.remove(t),t):null}unshift(t){return this.insert(null,t)}push(t){return this.insert(this.tail,t)}pop(){const t=this.tail;return t?(this.remove(t),t):null}insert(t,e){return!(e.prev||e.next||e===this.head||(r(!e.prev),r(!e.next),null==t?(this.head?(this.head.prev=e,e.next=this.head,this.head=e):(this.head=e,this.tail=e),this.size+=1,0):(e.next=t.next,e.prev=t,t.next=e,e.next&&(e.next.prev=e),t===this.tail&&(this.tail=e),this.size+=1,0)))}remove(t){return!(!t.prev&&!t.next&&t!==this.head||(t.prev&&(t.prev.next=t.next),t.next&&(t.next.prev=t.prev),t===this.head&&(this.head=t.next),t===this.tail&&(this.tail=t.prev||this.head),this.head||r(!this.tail),this.tail||r(!this.head),t.prev=null,t.next=null,this.size-=1,0))}replace(t,e){t.prev&&(t.prev.next=e),t.next&&(t.next.prev=e),e.prev=t.prev,e.next=t.next,t.next=null,t.prev=null,this.head===t&&(this.head=e),this.tail===t&&(this.tail=e)}slice(t){null==t&&(t=-1);const e=[];let i=null;for(let r=this.head;r&&(i=r.next,r.prev=null,r.next=null,this.size-=1,e.push(r),e.length!==t);r=i);return i?(this.head=i,i.prev=null):(this.head=null,this.tail=null),e}toArray(){const t=[];for(let e=this.head;e;e=e.next)t.push(e);return t}}class n{constructor(t){this.next=null,this.prev=null,this.value=t}}(e=s).List=s,e.ListItem=n,e.Item=n,t.exports=e},function(t,e,i){"use strict";(function(e){
/*!
 * bloom.js - bloom filter for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const{enforce:r}=i(0),s=i(2),n=i(141),o=e.alloc(0),a=.48045301391820144,h=.6931471805599453;class c extends s.Struct{constructor(t,e,i,r){super(),this.filter=o,this.size=0,this.n=0,this.tweak=0,this.update=c.flags.NONE,null!=t&&this.fromOptions(t,e,i,r)}fromOptions(t,i,s,n){return null!=s&&-1!==s||(s=4294967296*Math.random()>>>0),null!=n&&-1!==n||(n=c.flags.NONE),"string"==typeof n&&(n=c.flags[n.toUpperCase()],r(null!=n,"update","flag")),r(Number.isSafeInteger(t)&&t>=0,"size","integer"),r(Number.isSafeInteger(i)&&i>=0,"n","integer"),r(s>>>0===s,"tweak","integer"),r(n>>>0===n,"update","integer"),r(n<=2,"update","range between 0 and 2"),t<8&&(t=8),0===i&&(i=1),t-=7&t,this.filter=e.alloc(t/8,0),this.size=t,this.n=i,this.tweak=s,this.update=n,this}static fromOptions(t,e,i,r){return(new this).fromOptions(t,e,i,r)}hash(t,e){return n.tweak(t,e,this.tweak)%this.size}reset(){this.filter.fill(0)}add(t,e){const i=l(t,e);for(let t=0;t<this.n;t++){const e=this.hash(i,t);this.filter[e>>>3]|=1<<(7&e)}}test(t,e){const i=l(t,e);for(let t=0;t<this.n;t++){const e=this.hash(i,t);if(0==(this.filter[e>>>3]&1<<(7&e)))return!1}return!0}added(t,e){const i=l(t,e);let r=!1;for(let t=0;t<this.n;t++){const e=this.hash(i,t);r||0!=(this.filter[e>>>3]&1<<(7&e))||(r=!0),this.filter[e>>>3]|=1<<(7&e)}return r}static fromRate(t,e,i){r(Number.isSafeInteger(t)&&t>0,"items","integer"),r("number"==typeof e&&isFinite(e),"rate","number"),r(e>=0&&e<=1,"rate","range between 0.1 and 1.0.");const s=-1/a*t*Math.log(e)|0,n=Math.max(8,s);if(-1!==i&&n>8*c.MAX_BLOOM_FILTER_SIZE)throw new Error("Bloom filter size violates policy limits!");const o=Math.max(1,n/t*h|0);if(-1!==i&&o>c.MAX_HASH_FUNCS)throw new Error("Bloom filter size violates policy limits!");return new this(n,o,-1,i)}isWithinConstraints(){return!(this.size>8*c.MAX_BLOOM_FILTER_SIZE||this.n>c.MAX_HASH_FUNCS)}getSize(){return s.sizeVarBytes(this.filter)+9}write(t){return t.writeVarBytes(this.filter),t.writeU32(this.n),t.writeU32(this.tweak),t.writeU8(this.update),t}read(t){if(this.filter=t.readVarBytes(),this.size=8*this.filter.length,this.n=t.readU32(),this.tweak=t.readU32(),this.update=t.readU8(),this.update>2)throw new Error("Invalid update flag.");return this}}function l(t,i){return"string"!=typeof t?(r(e.isBuffer(t),"value","buffer"),t):(r("string"==typeof i,"enc","string"),e.from(t,i))}c.MAX_BLOOM_FILTER_SIZE=36e3,c.MAX_HASH_FUNCS=50,c.flags={NONE:0,ALL:1,PUBKEY_ONLY:2},c.flagsByVal=["NONE","ALL","PUBKEY_ONLY"],t.exports=c}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){
/*!
 * murmur3.js - murmur3 hash for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0);function s(e,i){r(t.isBuffer(e)),r("number"==typeof i);const s=e.length-e.length%4,h=3432918353,c=461845907;let l=i;for(let t=0;t<s;t+=4){let i=e[t+3]<<24|e[t+2]<<16|e[t+1]<<8|e[t];l=o(n(l=a(l^=i=n(i=a(i=n(i,h),15),c),13),5),3864292196)}let u=0;switch(3&e.length){case 3:u^=e[s+2]<<16;case 2:u^=e[s+1]<<8;case 1:l^=u=n(u=a(u=n(u^=e[s+0],h),15),c)}return l^=e.length,l=n(l^=l>>>16,2246822507),l=n(l^=l>>>13,3266489909),(l^=l>>>16)<0&&(l+=4294967296),l}function n(t,e){const i=65535&t,r=65535&e;let s=i*r,n=(t>>>16)*r+(e>>>16)*i&65535,o=(n+=s>>>16)<<16|(s&=65535);return o<0&&(o+=4294967296),o}function o(t,e){let i=t+e&4294967295;return i<0&&(i+=4294967296),i}function a(t,e){return t<<e|t>>>32-e}e.sum=s,e.tweak=function(t,e,i){return r("number"==typeof i),s(t,o(n(e,4221880213),i))}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * rollingfilter.js - rolling bloom filter for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const{enforce:r}=i(0),{encoding:s}=i(2),n=i(141),o=e.alloc(0);class a{constructor(t,e){this.hi=t,this.lo=e}}function h(t,e){const i=s.readU32(t,e+4),r=s.readU32(t,e);return new a(i,r)}function c(t,e,i){s.writeU32(t,e.hi,i+4),s.writeU32(t,e.lo,i)}function l(t,i){return"string"!=typeof t?(r(e.isBuffer(t),"value","buffer"),t):(r("string"==typeof i,"enc","string"),e.from(t,i))}t.exports=class{constructor(t,e){this.entries=0,this.generation=1,this.n=0,this.limit=0,this.size=0,this.items=0,this.tweak=0,this.filter=o,null!=t&&this.fromRate(t,e)}fromRate(t,i){r(Number.isSafeInteger(t)&&t>0,"items","integer"),r("number"==typeof i&&isFinite(i),"rate","number"),r(i>=0&&i<=1,"rate","range between 0.1 and 1.0.");const s=Math.log(i),n=Math.max(1,Math.min(Math.round(s/Math.log(.5)),50)),o=(t+1)/2|0;let a=-1*n*(3*o)/Math.log(1-Math.exp(s/n));t=(((a=Math.ceil(a))+63)/64|0)<<1,t>>>=0,t=Math.max(1,t);const h=4294967296*Math.random()>>>0,c=e.alloc(8*t,0);return this.n=n,this.limit=o,this.size=a,this.items=t,this.tweak=h,this.filter=c,this}static fromRate(t,e){return(new this).fromRate(t,e)}hash(t,e){return n.tweak(t,e,this.tweak)}reset(){0!==this.entries&&(this.entries=0,this.generation=1,this.filter.fill(0))}add(t,e){const i=l(t,e);if(this.entries===this.limit){this.entries=0,this.generation+=1,4===this.generation&&(this.generation=1);const t=4294967295*(1&this.generation),e=4294967295*(this.generation>>>1);for(let i=0;i<this.items;i+=2){const r=8*i,s=8*(i+1),n=h(this.filter,r),o=h(this.filter,s),a=n.hi^t|o.hi^e,l=n.lo^t|o.lo^e;n.hi&=a,n.lo&=l,o.hi&=a,o.lo&=l,c(this.filter,n,r),c(this.filter,o,s)}}this.entries+=1;for(let t=0;t<this.n;t++){const e=this.hash(i,t),r=63&e,s=(e>>>6)%this.items,n=8*(-2&s),o=8*(1|s),a=r%8,h=(r-a)/8;this.filter[n+h]&=~(1<<a),this.filter[n+h]|=(1&this.generation)<<a,this.filter[o+h]&=~(1<<a),this.filter[o+h]|=this.generation>>>1<<a}}test(t,e){if(0===this.entries)return!1;const i=l(t,e);for(let t=0;t<this.n;t++){const e=this.hash(i,t),r=63&e,s=(e>>>6)%this.items,n=8*(-2&s),o=8*(1|s),a=r%8,h=(r-a)/8;if(0==(this.filter[n+h]>>>a&1|this.filter[o+h]>>>a&1))return!1}return!0}added(t,e){const i=l(t,e);return!this.test(i)&&(this.add(i),!0)}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * bsip.js - siphash for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */t.exports=i(208)},function(t,e,i){"use strict";(function(t){
/*!
 * siphash.js - siphash for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=1/4294967296;function n(e,i){r(t.isBuffer(e)),r(t.isBuffer(i)&&i.length>=16);const s=e.length>>>3,n=new c(1936682341,1886610805),o=new c(1685025377,1852075885),a=new c(1819895653,1852142177),h=new c(1952801890,2037671283),u=new c(e.length<<24,0),f=new c(0,255),d=c.fromRaw(i,0),p=c.fromRaw(i,8),g=n.ixor(d),m=o.ixor(p),b=a.ixor(d),w=h.ixor(p);let y=0;for(let t=0;t<s;t++){const t=c.fromRaw(e,y);y+=8,w.ixor(t),l(g,m,b,w),l(g,m,b,w),g.ixor(t)}switch(7&e.length){case 7:u.hi|=e[y+6]<<16;case 6:u.hi|=e[y+5]<<8;case 5:u.hi|=e[y+4];case 4:u.lo|=e[y+3]<<24;case 3:u.lo|=e[y+2]<<16;case 2:u.lo|=e[y+1]<<8;case 1:u.lo|=e[y]}return w.ixor(u),l(g,m,b,w),l(g,m,b,w),g.ixor(u),b.ixor(f),l(g,m,b,w),l(g,m,b,w),l(g,m,b,w),l(g,m,b,w),g.ixor(m),g.ixor(b),g.ixor(w),[g.hi,g.lo]}function o(e,i,s){r("number"==typeof e),r("number"==typeof i),r(t.isBuffer(s)&&s.length>=16);const n=new c(1936682341,1886610805),o=new c(1685025377,1852075885),a=new c(1819895653,1852142177),h=new c(1952801890,2037671283),u=new c(e,i),f=new c(0,255),d=c.fromRaw(s,0),p=c.fromRaw(s,8),g=n.ixor(d),m=o.ixor(p),b=a.ixor(d),w=h.ixor(p);return w.ixor(u),l(g,m,b,w),l(g,m,b,w),g.ixor(u),b.ixor(f),l(g,m,b,w),l(g,m,b,w),l(g,m,b,w),l(g,m,b,w),g.ixor(m),g.ixor(b),g.ixor(w),[g.hi,g.lo]}function a(e,i,s){r("number"==typeof e),r("number"==typeof i),r(t.isBuffer(s)&&s.length>=32);const n=new c(e,i),o=new c(0,255),a=c.fromRaw(s,0),h=c.fromRaw(s,8),u=c.fromRaw(s,16),f=c.fromRaw(s,24);return f.ixor(n),l(a,h,u,f),l(a,h,u,f),a.ixor(n),u.ixor(o),l(a,h,u,f),l(a,h,u,f),l(a,h,u,f),l(a,h,u,f),a.ixor(h),a.ixor(u),a.ixor(f),[a.hi,a.lo]}function h(t,e){return n(t,e)}class c{constructor(t,e){this.hi=0|t,this.lo=0|e}iadd(t){const e=this,i=e.lo+t.lo|0,r=i>>31,s=e.lo>>31,n=t.lo>>31,o=1&(s&n|~r&(s^n)),a=(e.hi+t.hi|0)+o;return e.hi=0|a,e.lo=i,e}ixor(t){return this.hi^=t.hi,this.lo^=t.lo,this}irotl(t){let e=this.hi,i=this.lo,r=this.hi,s=this.lo;return t<32?(e<<=t,e|=i>>>32-t,i<<=t):(e=i<<t-32,i=0),(t=64-t)<32?(s>>>=t,s|=r<<32-t,r>>>=t):(s=r>>>t-32,r=0),this.hi=e|r,this.lo=i|s,this}static fromRaw(t,e){const i=t.readUInt32LE(e),r=t.readUInt32LE(e+4);return new c(r,i)}}function l(t,e,i,r){t.iadd(e),e.irotl(13),e.ixor(t),t.irotl(32),i.iadd(r),r.irotl(16),r.ixor(i),t.iadd(r),r.irotl(21),r.ixor(t),i.iadd(e),e.irotl(17),e.ixor(i),i.irotl(32)}function u(t,e){const i=t>>>16,r=65535&t,s=e>>>16,n=65535&e;let o=0,a=0,h=0,c=0;return h+=(c+=r*n)>>>16,a+=(h+=i*n)>>>16,h&=65535,o+=(a+=(h+=r*s)>>>16)>>>16,a&=65535,o+=(a+=i*s)>>>16,o+=(a&=65535)>>>16,{hi:(o&=65535)<<16|a,lo:(h&=65535)<<16|(c&=65535)}}e.siphash=h,e.siphash256=h,e.siphash32=function(t,e){return o(0,t,e)[1]},e.siphash64=function(t,e,i){return o(t,e,i)},e.siphash32k256=function(t,e){return a(0,t,e)[1]},e.siphash64k256=function(t,e,i){return a(t,e,i)},e.sipmod=function(t,e,i,r){const[o,a]=n(t,e);return function(t,e,i,r){const n=u(t,i),o=u(t,r),a=u(i,e),h=u(e,r),c=(o.lo>>>0)+(a.lo>>>0)+(h.hi>>>0),l=(o.hi>>>0)+(a.hi>>>0)+(c*s>>>0),f=l*s|0,d=0|l,{hi:p,lo:g}=function(t,e,i,r){const s=e+d|0,n=e>>31,o=d>>31;return{hi:(t+f|0)+(1&(n&o|~(s>>31)&(n^o)))|0,lo:s}}(n.hi,n.lo);return[p,g]}(o,a,i,r)}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * peer.js - peer object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(0),s=i(7),{Lock:n}=i(28),{format:o}=i(53),a=i(158),h=i(140),c=i(46),{RollingFilter:l}=i(66),{BufferMap:u}=i(13),f=i(210),d=i(212),p=i(145),g=i(3),m=i(42),b=i(38),w=i(142),y=i(63),v=i(20),k=i(76),E=i(4),S=m.services,R=b.types,I=p.types;class A extends s{constructor(t){super(),this.options=t,this.network=this.options.network,this.logger=this.options.logger.context("peer"),this.locker=new n,this.parser=new f(this.network),this.framer=new d(this.network),this.id=-1,this.socket=null,this.opened=!1,this.outbound=!1,this.loader=!1,this.address=new k,this.local=new k,this.name=null,this.connected=!1,this.destroyed=!1,this.ack=!1,this.handshake=!1,this.time=0,this.lastSend=0,this.lastRecv=0,this.drainSize=0,this.drainQueue=[],this.banScore=0,this.invQueue=[],this.onPacket=null,this.next=null,this.prev=null,this.version=-1,this.services=0,this.height=-1,this.agent=null,this.noRelay=!1,this.preferHeaders=!1,this.hashContinue=null,this.spvFilter=null,this.feeRate=-1,this.compactMode=-1,this.compactWitness=!1,this.merkleBlock=null,this.merkleTime=-1,this.merkleMatches=0,this.merkleMap=null,this.syncing=!1,this.sentAddr=!1,this.sentGetAddr=!1,this.challenge=null,this.lastPong=-1,this.lastPing=-1,this.minPing=-1,this.blockTime=-1,this.bestHash=null,this.bestHeight=-1,this.connectTimeout=null,this.pingTimer=null,this.invTimer=null,this.stallTimer=null,this.addrFilter=new l(5e3,.001),this.invFilter=new l(5e4,1e-6),this.blockMap=new u,this.txMap=new u,this.responseMap=new Map,this.compactBlocks=new u,this.init()}static fromInbound(t,e){const i=new this(t);return i.accept(e),i}static fromOutbound(t,e){const i=new this(t);return i.connect(e),i}static fromOptions(t){return new this(new x(t))}init(){this.parser.on("packet",async t=>{try{await this.readPacket(t)}catch(t){this.error(t),this.destroy()}}),this.parser.on("error",t=>{this.destroyed||(this.error(t),this.sendReject("malformed","error parsing message"),this.increaseBan(10))})}hostname(){return this.address.hostname}framePacket(t,e,i){return this.framer.packet(t,e,i)}feedParser(t){return this.parser.feed(t)}_bind(t){r(!this.socket),this.socket=t,this.socket.once("error",t=>{this.connected&&(this.error(t),this.destroy())}),this.socket.once("close",()=>{this.error("Socket hangup."),this.destroy()}),this.socket.on("drain",()=>{this.handleDrain()}),this.socket.on("data",t=>{this.lastRecv=Date.now(),this.feedParser(t)}),this.socket.setNoDelay(!0)}accept(t){return r(!this.socket),this.address=k.fromSocket(t,this.network),this.address.services=0,this.time=Date.now(),this.outbound=!1,this.connected=!0,this._bind(t),t}connect(t){r(!this.socket);const e=this.options.createSocket(t.port,t.host);return this.address=t,this.outbound=!0,this.connected=!1,this._bind(e),e}async getName(){try{if(!this.name){const{host:t,port:e}=this.address,{hostname:i}=await h.lookupService(t,e);this.name=i}}catch(t){}return this.name}async tryOpen(){try{await this.open()}catch(t){}}async open(){try{await this._open()}catch(t){throw this.error(t),this.destroy(),t}}async _open(){this.opened=!0,await this.initConnect(),await this.initStall(),await this.initVersion(),await this.finalize(),r(!this.destroyed),this.emit("open")}initConnect(){return this.connected?(r(!this.outbound),Promise.resolve()):new Promise((t,e)=>{const i=()=>{null!=this.connectTimeout&&(clearTimeout(this.connectTimeout),this.connectTimeout=null),this.socket.removeListener("error",r)},r=t=>{i(),e(t)};this.socket.once("connect",()=>{this.time=Date.now(),this.connected=!0,this.emit("connect"),i(),t()}),this.socket.once("error",r),this.connectTimeout=setTimeout(()=>{this.connectTimeout=null,i(),e(new Error("Connection timed out."))},1e4)})}initStall(){return r(!this.stallTimer),r(!this.destroyed),this.stallTimer=setInterval(()=>{this.maybeTimeout()},A.STALL_INTERVAL),Promise.resolve()}async initVersion(){if(r(!this.destroyed),this.sendVersion(),this.ack||(await this.wait(I.VERACK,1e4),r(this.ack)),-1===this.version&&(this.logger.debug("Peer sent a verack without a version (%s).",this.hostname()),await this.wait(I.VERSION,1e4),r(-1!==this.version)),this.destroyed)throw new Error("Peer was destroyed during handshake.");this.handshake=!0,this.logger.debug("Version handshake complete (%s).",this.hostname())}async finalize(){r(!this.destroyed),this.pingTimer=setInterval(()=>{this.sendPing()},A.PING_INTERVAL),this.invTimer=setInterval(()=>{this.flushInv()},A.INV_INTERVAL)}announceBlock(t){if(!this.handshake)return;if(this.destroyed)return;Array.isArray(t)||(t=[t]);const e=[];for(const i of t)r(i instanceof y),this.invFilter.test(i.hash())||(1!==this.compactMode?this.preferHeaders?e.push(i.toHeaders()):e.push(i.toInv()):(this.invFilter.add(i.hash()),this.sendCompactBlock(i)));this.preferHeaders?this.sendHeaders(e):this.queueInv(e)}announceTX(t){if(!this.handshake)return;if(this.destroyed)return;if(this.noRelay)return;Array.isArray(t)||(t=[t]);const e=[];for(const i of t)if(r(i instanceof v),!this.invFilter.test(i.hash())&&(!this.spvFilter||i.isWatched(this.spvFilter))){if(-1!==this.feeRate){const t=i.hash(),e=this.options.getRate(t);if(-1!==e&&e<this.feeRate)continue}e.push(i.toInv())}this.queueInv(e)}queueInv(t){if(!this.handshake)return;if(this.destroyed)return;Array.isArray(t)||(t=[t]);let e=!1;for(const i of t)i.type===R.BLOCK&&(e=!0),this.invQueue.push(i);(this.invQueue.length>=500||e)&&this.flushInv()}flushInv(){if(this.destroyed)return;const t=this.invQueue;if(0===t.length)return;this.invQueue=[],this.logger.spam("Serving %d inv items to %s.",t.length,this.hostname());const e=[];for(const i of t)this.invFilter.added(i.hash)&&e.push(i);for(let t=0;t<e.length;t+=1e3){const i=e.slice(t,t+1e3);this.send(new p.InvPacket(i))}}sendInv(t){if(this.handshake&&!this.destroyed){Array.isArray(t)||(t=[t]);for(const e of t)this.invFilter.add(e.hash);if(0!==t.length){this.logger.spam("Serving %d inv items to %s.",t.length,this.hostname());for(let e=0;e<t.length;e+=1e3){const i=t.slice(e,e+1e3);this.send(new p.InvPacket(i))}}}}sendHeaders(t){if(this.handshake&&!this.destroyed){Array.isArray(t)||(t=[t]);for(const e of t)this.invFilter.add(e.hash());if(0!==t.length){this.logger.spam("Serving %d headers to %s.",t.length,this.hostname());for(let e=0;e<t.length;e+=2e3){const i=t.slice(e,e+2e3);this.send(new p.HeadersPacket(i))}}}}sendCompactBlock(t){const e=this.compactWitness,i=w.CompactBlock.fromBlock(t,e);this.send(new p.CmpctBlockPacket(i,e))}sendVersion(){const t=new p.VersionPacket;t.version=this.options.version,t.services=this.options.services,t.time=this.network.now(),t.remote=this.address,t.local.setNull(),t.local.services=this.options.services,t.nonce=this.options.createNonce(this.hostname()),t.agent=this.options.agent,t.height=this.options.getHeight(),t.noRelay=this.options.noRelay,this.send(t)}sendGetAddr(){this.sentGetAddr||(this.sentGetAddr=!0,this.send(new p.GetAddrPacket))}sendPing(){this.handshake&&(this.version<=m.PONG_VERSION?this.send(new p.PingPacket):this.challenge?this.logger.debug("Peer has not responded to ping (%s).",this.hostname()):(this.lastPing=Date.now(),this.challenge=m.nonce(),this.send(new p.PingPacket(this.challenge))))}sendFilterLoad(t){this.handshake&&this.options.spv&&this.services&S.BLOOM&&this.send(new p.FilterLoadPacket(t))}sendFeeRate(t){this.handshake&&this.send(new p.FeeFilterPacket(t))}destroy(){const t=this.connected;if(this.destroyed)return;this.destroyed=!0,this.connected=!1,this.socket.destroy(),this.socket=null,null!=this.pingTimer&&(clearInterval(this.pingTimer),this.pingTimer=null),null!=this.invTimer&&(clearInterval(this.invTimer),this.invTimer=null),null!=this.stallTimer&&(clearInterval(this.stallTimer),this.stallTimer=null),null!=this.connectTimeout&&(clearTimeout(this.connectTimeout),this.connectTimeout=null);const e=this.drainQueue;this.drainSize=0,this.drainQueue=[];for(const t of e)t.reject(new Error("Peer was destroyed."));for(const[t,e]of this.responseMap)this.responseMap.delete(t),e.reject(new Error("Peer was destroyed."));this.locker.destroy(),this.emit("close",t)}write(t){if(this.destroyed)throw new Error("Peer is destroyed (write).");this.lastSend=Date.now(),!1===this.socket.write(t)&&this.needsDrain(t.length)}send(t){if(this.destroyed)throw new Error("Peer is destroyed (send).");let e=null;if(t.type===I.TX){const i=t.tx;t.witness?i.isCoinbase()||(e=i.witnessHash()):e=i.hash()}this.sendRaw(t.cmd,t.toRaw(),e),this.addTimeout(t)}sendRaw(t,e,i){const r=this.framePacket(t,e,i);this.write(r)}drain(){return this.destroyed?Promise.reject(new Error("Peer is destroyed.")):0===this.drainSize?Promise.resolve():new Promise((t,e)=>{this.drainQueue.push({resolve:t,reject:e})})}handleDrain(){const t=this.drainQueue;if(this.drainSize=0,0!==t.length){this.drainQueue=[];for(const e of t)e.resolve()}}needsDrain(t){this.drainSize+=t,this.drainSize>=A.DRAIN_MAX&&(this.logger.warning("Peer is not reading: %dmb buffered (%s).",this.drainSize/(1<<20),this.hostname()),this.error("Peer stalled (drain)."),this.destroy())}addTimeout(t){const e=A.RESPONSE_TIMEOUT;if(this.outbound)switch(t.type){case I.MEMPOOL:this.request(I.INV,e);break;case I.GETBLOCKS:this.options.isFull()||this.request(I.INV,e);break;case I.GETHEADERS:this.request(I.HEADERS,2*e);break;case I.GETDATA:this.request(I.DATA,2*e);break;case I.GETBLOCKTXN:this.request(I.BLOCKTXN,e)}}fulfill(t){switch(t.type){case I.BLOCK:case I.CMPCTBLOCK:case I.MERKLEBLOCK:case I.TX:case I.NOTFOUND:{const e=this.response(I.DATA,t);r(!e||0===e.jobs.length);break}}return this.response(t.type,t)}maybeTimeout(){const t=Date.now();for(const[e,i]of this.responseMap)if(t>i.timeout){const t=p.typesByVal[e];return this.error("Peer is stalling (%s).",t.toLowerCase()),void this.destroy()}if(this.merkleBlock&&(r(-1!==this.merkleTime),t>this.merkleTime+A.BLOCK_TIMEOUT))return this.error("Peer is stalling (merkleblock)."),void this.destroy();if(this.syncing&&this.loader&&!this.options.isFull()&&t>this.blockTime+A.BLOCK_TIMEOUT)return this.error("Peer is stalling (block)."),void this.destroy();if(this.options.isFull()||!this.syncing){for(const e of this.blockMap.values())if(t>e+A.BLOCK_TIMEOUT)return this.error("Peer is stalling (block)."),void this.destroy();for(const e of this.txMap.values())if(t>e+A.TX_TIMEOUT)return this.error("Peer is stalling (tx)."),void this.destroy();for(const e of this.compactBlocks.values())if(t>e.now+A.RESPONSE_TIMEOUT)return this.error("Peer is stalling (blocktxn)."),void this.destroy()}if(t>this.time+6e4){if(r(0!==this.time),0===this.lastRecv||0===this.lastSend)return this.error("Peer is stalling (no message)."),void this.destroy();if(t>this.lastSend+A.TIMEOUT_INTERVAL)return this.error("Peer is stalling (send)."),void this.destroy();const e=this.version<=m.PONG_VERSION?4:1;if(t>this.lastRecv+A.TIMEOUT_INTERVAL*e)return this.error("Peer is stalling (recv)."),void this.destroy();if(this.challenge&&t>this.lastPing+A.TIMEOUT_INTERVAL)return this.error("Peer is stalling (ping)."),void this.destroy()}}request(t,e){if(this.destroyed)return null;let i=this.responseMap.get(t);return!i&&(i=new O,this.responseMap.set(t,i),this.responseMap.size>=m.MAX_REQUEST)?(this.destroy(),null):(i.setTimeout(e),i)}response(t,e){const i=this.responseMap.get(t);return i?(this.responseMap.delete(t),i):null}wait(t,e){return new Promise((i,r)=>{const s=this.request(t);s?(s.setTimeout(e),s.addJob(i,r)):r(new Error("Peer is destroyed (request)."))})}error(t){if(!this.destroyed){if("string"==typeof t){const e=o.apply(null,arguments);t=new Error(e)}if("string"==typeof t.code&&"E"===t.code[0]){const e=t.code;(t=new Error(e)).code=e,t.message=`Socket Error: ${e}`}t.message+=` (${this.hostname()})`,this.emit("error",t)}}blockType(){return this.options.spv?R.FILTERED_BLOCK:this.options.compact&&this.hasCompactSupport()&&this.hasCompact()?R.CMPCT_BLOCK:this.hasWitness()?R.WITNESS_BLOCK:R.BLOCK}txType(){return this.hasWitness()?R.WITNESS_TX:R.TX}getData(t){this.send(new p.GetDataPacket(t))}getItems(t,e){const i=[];for(const r of e)i.push(new b(t,r));0!==i.length&&this.getData(i)}getBlock(t){this.getItems(this.blockType(),t)}getTX(t){this.getItems(this.txType(),t)}getFullBlock(t){r(!this.options.spv);let e=R.BLOCK;this.hasWitness()&&(e|=b.WITNESS_FLAG),this.getItems(e,[t])}async readPacket(t){if(!this.destroyed)switch(t.type){case I.PONG:try{this.socket.pause(),await this.handlePacket(t)}finally{this.destroyed||this.socket.resume()}break;default:{const e=await this.locker.lock();try{this.socket.pause(),await this.handlePacket(t)}finally{this.destroyed||this.socket.resume(),e()}break}}}async handlePacket(t){if(this.destroyed)throw new Error("Destroyed peer sent a packet.");const e=this.fulfill(t);switch(t.type){case I.VERSION:await this.handleVersion(t);break;case I.VERACK:await this.handleVerack(t);break;case I.PING:await this.handlePing(t);break;case I.PONG:await this.handlePong(t);break;case I.SENDHEADERS:await this.handleSendHeaders(t);break;case I.FILTERLOAD:await this.handleFilterLoad(t);break;case I.FILTERADD:await this.handleFilterAdd(t);break;case I.FILTERCLEAR:await this.handleFilterClear(t);break;case I.FEEFILTER:await this.handleFeeFilter(t);break;case I.SENDCMPCT:await this.handleSendCmpct(t)}this.onPacket&&await this.onPacket(t),this.emit("packet",t),e&&e.resolve(t)}async handleVersion(t){if(-1!==this.version)throw new Error("Peer sent a duplicate version.");if(this.version=t.version,this.services=t.services,this.height=t.height,this.agent=t.agent,this.noRelay=t.noRelay,this.local=t.remote,!this.network.selfConnect&&this.options.hasNonce(t.nonce))throw new Error("We connected to ourself. Oops.");if(this.version<m.MIN_VERSION)throw new Error("Peer does not support required protocol version.");if(this.outbound){if(!(this.services&S.NETWORK))throw new Error("Peer does not support network services.");if(this.options.headers&&this.version<m.HEADERS_VERSION)throw new Error("Peer does not support getheaders.");if(this.options.spv){if(!(this.services&S.BLOOM))throw new Error("Peer does not support BIP37.");if(this.version<m.BLOOM_VERSION)throw new Error("Peer does not support BIP37.")}if(this.options.hasWitness()&&!(this.services&S.WITNESS))throw new Error("Peer does not support segregated witness.");this.options.compact&&(this.hasCompactSupport()||this.logger.debug("Peer does not support compact blocks (%s).",this.hostname()))}this.send(new p.VerackPacket)}async handleVerack(t){this.ack?this.logger.debug("Peer sent duplicate ack (%s).",this.hostname()):(this.ack=!0,this.logger.debug("Received verack (%s).",this.hostname()))}async handlePing(t){t.nonce&&this.send(new p.PongPacket(t.nonce))}async handlePong(t){const e=t.nonce,i=Date.now();if(this.challenge){if(!e.equals(this.challenge))return e.equals(m.ZERO_NONCE)?(this.logger.debug("Peer sent a zero nonce (%s).",this.hostname()),void(this.challenge=null)):void this.logger.debug("Peer sent the wrong nonce (%s).",this.hostname());i>=this.lastPing?(this.lastPong=i,-1===this.minPing&&(this.minPing=i-this.lastPing),this.minPing=Math.min(this.minPing,i-this.lastPing)):this.logger.debug("Timing mismatch (what?) (%s).",this.hostname()),this.challenge=null}else this.logger.debug("Peer sent an unsolicited pong (%s).",this.hostname())}async handleSendHeaders(t){this.preferHeaders?this.logger.debug("Peer sent a duplicate sendheaders (%s).",this.hostname()):this.preferHeaders=!0}async handleFilterLoad(t){t.isWithinConstraints()?(this.spvFilter=t.filter,this.noRelay=!1):this.increaseBan(100)}async handleFilterAdd(t){const e=t.data;e.length>g.MAX_SCRIPT_PUSH?this.increaseBan(100):(this.spvFilter&&this.spvFilter.add(e),this.noRelay=!1)}async handleFilterClear(t){this.spvFilter&&this.spvFilter.reset(),this.noRelay=!1}async handleFeeFilter(t){const e=t.rate;e<0||e>g.MAX_MONEY?this.increaseBan(100):this.feeRate=e}async handleSendCmpct(t){-1===this.compactMode?t.version>2?this.logger.info("Peer request compact blocks version %d (%s).",t.version,this.hostname()):t.mode>1?this.logger.info("Peer request compact blocks mode %d (%s).",t.mode,this.hostname()):(this.logger.info("Peer initialized compact blocks (mode=%d, version=%d) (%s).",t.mode,t.version,this.hostname()),this.compactMode=t.mode,this.compactWitness=2===t.version):this.logger.debug("Peer sent a duplicate sendcmpct (%s).",this.hostname())}sendGetHeaders(t,e){const i=new p.GetHeadersPacket(t,e);let r=null;i.locator.length>0&&(r=i.locator[0]);let s=null;e&&(s=e),this.logger.debug("Requesting headers packet from peer with getheaders (%s).",this.hostname()),this.logger.debug("Sending getheaders (hash=%h, stop=%h).",r,s),this.send(i)}sendGetBlocks(t,e){const i=new p.GetBlocksPacket(t,e);let r=null;i.locator.length>0&&(r=i.locator[0]);let s=null;e&&(s=e),this.logger.debug("Requesting inv packet from peer with getblocks (%s).",this.hostname()),this.logger.debug("Sending getblocks (hash=%h, stop=%h).",r,s),this.send(i)}sendMempool(){this.handshake&&(this.services&S.BLOOM?(this.logger.debug("Requesting inv packet from peer with mempool (%s).",this.hostname()),this.send(new p.MempoolPacket)):this.logger.debug("Cannot request mempool for non-bloom peer (%s).",this.hostname()))}sendReject(t,e,i,r){const s=p.RejectPacket.fromReason(t,e,i,r);i?this.logger.debug("Rejecting %s %h (%s): code=%s reason=%s.",i,r,this.hostname(),t,e):this.logger.debug("Rejecting packet from %s: code=%s reason=%s.",this.hostname(),t,e),this.logger.debug("Sending reject packet to peer (%s).",this.hostname()),this.send(s)}sendCompact(t){if(this.services&m.services.WITNESS&&this.version>=m.COMPACT_WITNESS_VERSION)return this.logger.info("Initializing witness compact blocks (%s).",this.hostname()),void this.send(new p.SendCmpctPacket(t,2));this.version>=m.COMPACT_VERSION&&(this.logger.info("Initializing normal compact blocks (%s).",this.hostname()),this.send(new p.SendCmpctPacket(t,1)))}increaseBan(t){return this.banScore+=t,this.banScore>=this.options.banScore&&(this.logger.debug("Ban threshold exceeded (%s).",this.hostname()),this.ban(),!0)}ban(){this.emit("ban")}reject(t,e){return this.sendReject(e.code,e.reason,t,e.hash),this.increaseBan(e.score)}hasServices(t){return(this.services&t)===t}hasWitness(){return 0!=(this.services&S.WITNESS)}hasCompactSupport(){return!(this.version<m.COMPACT_VERSION)&&(!this.options.hasWitness()||!!(this.services&S.WITNESS)&&this.version>=m.COMPACT_WITNESS_VERSION)}hasCompact(){return!(-1===this.compactMode||this.options.hasWitness()&&!this.compactWitness)}inspect(){return"<Peer:"+` handshake=${this.handshake}`+` host=${this.hostname()}`+` outbound=${this.outbound}`+` ping=${this.minPing}`+">"}}A.DRAIN_MAX=10<<20,A.STALL_INTERVAL=5e3,A.PING_INTERVAL=3e4,A.INV_INTERVAL=5e3,A.RESPONSE_TIMEOUT=3e4,A.BLOCK_TIMEOUT=12e4,A.TX_TIMEOUT=12e4,A.TIMEOUT_INTERVAL=12e5;class x{constructor(t){this.network=E.primary,this.logger=c.global,this.createSocket=a.createSocket,this.version=m.PROTOCOL_VERSION,this.services=m.LOCAL_SERVICES,this.agent=m.USER_AGENT,this.noRelay=!1,this.spv=!1,this.compact=!1,this.headers=!1,this.banScore=m.BAN_SCORE,this.getHeight=x.getHeight,this.isFull=x.isFull,this.hasWitness=x.hasWitness,this.createNonce=x.createNonce,this.hasNonce=x.hasNonce,this.getRate=x.getRate,t&&this.fromOptions(t)}fromOptions(t){return r(t,"Options are required."),null!=t.network&&(this.network=E.get(t.network)),null!=t.logger&&(r("object"==typeof t.logger),this.logger=t.logger),null!=t.createSocket&&(r("function"==typeof t.createSocket),this.createSocket=t.createSocket),null!=t.version&&(r("number"==typeof t.version),this.version=t.version),null!=t.services&&(r("number"==typeof t.services),this.services=t.services),null!=t.agent&&(r("string"==typeof t.agent),this.agent=t.agent),null!=t.noRelay&&(r("boolean"==typeof t.noRelay),this.noRelay=t.noRelay),null!=t.spv&&(r("boolean"==typeof t.spv),this.spv=t.spv),null!=t.compact&&(r("boolean"==typeof t.compact),this.compact=t.compact),null!=t.headers&&(r("boolean"==typeof t.headers),this.headers=t.headers),null!=t.banScore&&(r("number"==typeof t.banScore),this.banScore=t.banScore),null!=t.getHeight&&(r("function"==typeof t.getHeight),this.getHeight=t.getHeight),null!=t.isFull&&(r("function"==typeof t.isFull),this.isFull=t.isFull),null!=t.hasWitness&&(r("function"==typeof t.hasWitness),this.hasWitness=t.hasWitness),null!=t.createNonce&&(r("function"==typeof t.createNonce),this.createNonce=t.createNonce),null!=t.hasNonce&&(r("function"==typeof t.hasNonce),this.hasNonce=t.hasNonce),null!=t.getRate&&(r("function"==typeof t.getRate),this.getRate=t.getRate),this}static fromOptions(t){return(new this).fromOptions(t)}static getHeight(){return 0}static isFull(){return!1}static hasWitness(){return!0}static createNonce(t){return m.nonce()}static hasNonce(t){return!1}static getRate(t){return-1}}class O{constructor(){this.timeout=0,this.jobs=[]}addJob(t,e){this.jobs.push({resolve:t,reject:e})}setTimeout(t){this.timeout=Date.now()+t}reject(t){for(const e of this.jobs)e.reject(t);this.jobs.length=0}resolve(t){for(const e of this.jobs)e.resolve(t);this.jobs.length=0}}t.exports=A},function(t,e,i){"use strict";(function(e){
/*!
 * parser.js - packet parser for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(7),{format:n}=i(53),o=i(4),a=i(9),h=i(42),c=i(145);t.exports=class extends s{constructor(t){super(),this.network=o.get(t),this.pending=[],this.total=0,this.waiting=24,this.header=null}error(){const t=n.apply(null,arguments);this.emit("error",new Error(t))}feed(t){for(this.total+=t.length,this.pending.push(t);this.total>=this.waiting;){const t=e.allocUnsafe(this.waiting);let i=0;for(;i<t.length;){const e=this.pending[0].copy(t,i);e===this.pending[0].length?this.pending.shift():this.pending[0]=this.pending[0].slice(e),i+=e}r.strictEqual(i,t.length),this.total-=t.length,this.parse(t)}}parse(t){if(r(t.length<=h.MAX_MESSAGE),!this.header)return void(this.header=this.parseHeader(t));const e=a.digest(t).readUInt32LE(0,!0);if(e!==this.header.checksum)return this.waiting=24,this.header=null,void this.error("Invalid checksum: %s.",e.toString(16));let i;try{i=this.parsePayload(this.header.cmd,t)}catch(t){return this.waiting=24,this.header=null,void this.emit("error",t)}this.waiting=24,this.header=null,this.emit("packet",i)}parseHeader(t){const e=t.readUInt32LE(0,!0);if(e!==this.network.magic)return this.error("Invalid magic value: %s.",e.toString(16)),null;let i=0;for(;0!==t[i+4]&&i<12;i++);if(12===i)return this.error("Non NULL-terminated command."),null;const r=t.toString("ascii",4,4+i),s=t.readUInt32LE(16,!0);return s>h.MAX_MESSAGE?(this.waiting=24,this.error("Packet length too large: %d.",s),null):(this.waiting=s,new class{constructor(t,e,i){this.cmd=t,this.size=e,this.checksum=i}}(r,s,t.readUInt32LE(20,!0)))}parsePayload(t,e){return c.fromRaw(t,e)}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * memblock.js - memblock block object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(2),s=i(64),n=i(63),o=i(41),a=i(10),h=e.alloc(0);class c extends s{constructor(){super(),this._raw=h}isMemory(){return!0}toHead(){return this._raw.slice(0,80)}getSize(){return this._raw.length}verifyBody(){return!0}getCoinbaseHeight(){if(this.version<2)return-1;try{return this.parseCoinbaseHeight()}catch(t){return-1}}parseCoinbaseHeight(){const t=r.read(this._raw,!0);if(t.seek(80),0===t.readVarint())return-1;t.seek(4);let e=t.readVarint();if(0===e&&0!==t.readU8()&&(e=t.readVarint()),0===e)return-1;t.seek(36);const i=t.readVarBytes();return a.getCoinbaseHeight(i)}fromRaw(t){const e=r.read(t,!0);return this.readHead(e),this._raw=e.data,this}static fromRaw(t){return(new this).fromRaw(t)}toRaw(){return this._raw}toNormal(){return this._raw}toBlock(){const t=n.fromRaw(this._raw);return t._hash=this._hash,t._hhash=this._hhash,t}toHeaders(){return o.fromBlock(this)}static isMemBlock(t){return t instanceof c}}t.exports=c}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * framer.js - packet framer for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(4),n=i(9);t.exports=class{constructor(t){this.network=s.get(t)}packet(t,i,s){r(i,"No payload."),r(t.length<12),r(i.length<=4294967295);const o=e.allocUnsafe(24+i.length);o.writeUInt32LE(this.network.magic,0,!0),o.write(t,4,"ascii");for(let e=4+t.length;e<16;e++)o[e]=0;return o.writeUInt32LE(i.length,16,!0),s||(s=n.digest(i)),s.copy(o,20,0,4),i.copy(o,24),o}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * hostlist.js - address management for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(47),n=i(146),o=i(74),a=i(140),h=i(46),c=i(141),l=i(159),u=i(5),f=i(4),d=i(76),p=i(42),g=i(215),m=e.allocUnsafe(32);class b{constructor(t){this.options=new v(t),this.network=this.options.network,this.logger=this.options.logger.context("hostlist"),this.address=this.options.address,this.resolve=this.options.resolve,this.dnsSeeds=[],this.dnsNodes=[],this.map=new Map,this.fresh=[],this.totalFresh=0,this.used=[],this.totalUsed=0,this.nodes=[],this.local=new Map,this.banned=new Map,this.timer=null,this.needsFlush=!1,this.flushing=!1,this.init()}init(){const t=this.options,e=b.scores;for(let e=0;e<t.maxBuckets;e++)this.fresh.push(new Map);for(let e=0;e<t.maxBuckets;e++)this.used.push(new l);this.setSeeds(t.seeds),this.setNodes(t.nodes),this.pushLocal(this.address,e.MANUAL),this.addLocal(t.host,t.port,e.BIND);const i=o.getPublic(),r=this.address.port;for(const t of i)this.addLocal(t,r,e.IF)}async open(){try{await this.loadFile()}catch(t){this.logger.warning("Hosts deserialization failed."),this.logger.error(t)}0===this.size()&&this.injectSeeds(),await this.discoverNodes(),this.start()}async close(){this.stop(),await this.flush(),this.reset()}start(){this.options.memory||this.options.filename&&(r(null==this.timer),this.timer=setInterval(()=>this.flush(),this.options.flushInterval))}stop(){this.options.memory||this.options.filename&&(r(null!=this.timer),clearInterval(this.timer),this.timer=null)}injectSeeds(){const t=g.get(this.network.type);for(const e of t){const t=d.fromHostname(e,this.network);t.isRoutable()&&(!this.options.onion&&t.isOnion()||0!==t.port&&this.add(t))}}async loadFile(){const t=this.options.filename;if(n.unsupported)return;if(this.options.memory)return;if(!t)return;let e;try{e=await n.readFile(t,"utf8")}catch(t){if("ENOENT"===t.code)return;throw t}const i=JSON.parse(e);this.fromJSON(i)}async flush(){const t=this.options.filename;if(n.unsupported)return;if(this.options.memory)return;if(!t)return;if(!this.needsFlush)return;if(this.flushing)return;this.needsFlush=!1,this.logger.debug("Writing hosts to %s.",t);const e=this.toJSON(),i=JSON.stringify(e);this.flushing=!0;try{await n.writeFile(t,i,"utf8")}catch(t){this.logger.warning("Writing hosts failed."),this.logger.error(t)}this.flushing=!1}size(){return this.totalFresh+this.totalUsed}isFull(){const t=this.options.maxBuckets*this.options.maxEntries;return this.size()>=t}reset(){this.map.clear();for(const t of this.fresh)t.clear();for(const t of this.used)t.reset();this.totalFresh=0,this.totalUsed=0,this.nodes.length=0}ban(t){this.banned.set(t,u.now())}unban(t){this.banned.delete(t)}clearBanned(){this.banned.clear()}isBanned(t){const e=this.banned.get(t);return!(null==e||u.now()>e+this.options.banTime&&(this.banned.delete(t),1))}getHost(){let t=null;if(this.totalFresh>0&&(t=this.fresh),this.totalUsed>0&&(0!==this.totalFresh&&0!==k(2)||(t=this.used)),!t)return null;const e=this.network.now();let i=1;for(;;){const r=t[k(t.length)];if(0===r.size)continue;let s,n=k(r.size);if(t===this.used)for(s=r.head;n--;)s=s.next;else for(s of r.values()){if(0===n)break;n-=1}if(k(1<<30)<i*s.chance(e)*(1<<30))return s;i*=1.2}}freshBucket(t){const e=t.addr,i=t.src,r=function(t,e){const i=m;return t.copy(i,0),e.copy(i,32),i}(e.raw,i.raw),s=c.sum(r,4221880213)%this.fresh.length;return this.fresh[s]}usedBucket(t){const e=t.addr,i=c.sum(e.raw,4221880213)%this.used.length;return this.used[i]}add(t,e){r(0!==t.port);let i=this.map.get(t.hostname);if(i){let s=7200,n=86400;if(e||(s=0),i.addr.services|=t.services,i.addr.services>>>=0,this.network.now()-t.time<86400&&(n=3600),i.addr.time<t.time-n-s&&(i.addr.time=t.time,this.needsFlush=!0),i.addr.time&&t.time<=i.addr.time)return!1;if(i.used)return!1;if(r(i.refCount>0),i.refCount===b.MAX_REFS)return!1;r(i.refCount<b.MAX_REFS);let o=1;for(let t=0;t<i.refCount;t++)o*=2;if(0!==k(o))return!1}else{if(this.isFull())return!1;e||(e=this.address),i=new w(t,e),this.totalFresh+=1}const s=this.freshBucket(i);return!s.has(i.key())&&(s.size>=this.options.maxEntries&&this.evictFresh(s),s.set(i.key(),i),i.refCount+=1,this.map.set(i.key(),i),this.needsFlush=!0,!0)}evictFresh(t){let e=null;for(const i of t.values())this.isStale(i)?(t.delete(i.key()),0==--i.refCount&&(this.map.delete(i.key()),this.totalFresh-=1)):e?i.addr.time<e.addr.time&&(e=i):e=i;e&&(t.delete(e.key()),0==--e.refCount&&(this.map.delete(e.key()),this.totalFresh-=1))}isStale(t){const e=this.network.now();return!(t.lastAttempt&&t.lastAttempt>=e-60)&&(t.addr.time>e+600||0===t.addr.time||e-t.addr.time>24*b.HORIZON_DAYS*60*60||0===t.lastSuccess&&t.attempts>=b.RETRIES||e-t.lastSuccess>24*b.MIN_FAIL_DAYS*60*60&&t.attempts>=b.MAX_FAILURES)}remove(t){const e=this.map.get(t);if(!e)return null;if(e.used){let t=e;for(r(0===e.refCount);t.prev;)t=t.prev;for(const i of this.used)if(i.head===t){i.remove(e),this.totalUsed-=1,t=null;break}r(!t)}else{for(const t of this.fresh)t.delete(e.key())&&(e.refCount-=1);this.totalFresh-=1,r(0===e.refCount)}return this.map.delete(e.key()),e.addr}markAttempt(t){const e=this.map.get(t),i=this.network.now();e&&(e.attempts+=1,e.lastAttempt=i)}markSuccess(t){const e=this.map.get(t),i=this.network.now();e&&i-e.addr.time>1200&&(e.addr.time=i)}markAck(t,e){const i=this.map.get(t);if(!i)return;const s=this.network.now();if(i.addr.services|=e,i.addr.services>>>=0,i.lastSuccess=s,i.lastAttempt=s,i.attempts=0,i.used)return;r(i.refCount>0);let n=null;for(const t of this.fresh)t.delete(i.key())&&(i.refCount-=1,n=t);r(n),r(0===i.refCount),this.totalFresh-=1;const o=this.usedBucket(i);if(o.size<this.options.maxEntries)return i.used=!0,o.push(i),void(this.totalUsed+=1);const a=this.evictUsed(o);let h=this.freshBucket(a);h.size>=this.options.maxEntries&&(h=n),i.used=!0,o.replace(a,i),a.used=!1,h.set(a.key(),a),r(0===a.refCount),a.refCount+=1,this.totalFresh+=1}evictUsed(t){let e=t.head;for(let i=t.head;i;i=i.next)i.addr.time<e.addr.time&&(e=i);return e}toArray(){const t=[];for(const e of this.map.values())t.push(e.addr);return r.strictEqual(t.length,this.size()),t}addSeed(t){const e=o.fromHostname(t,this.network.port);if(e.type===o.types.DNS)return this.dnsSeeds.push(e),null;const i=d.fromHost(e.host,e.port,this.network);return this.add(i),i}addNode(t){const e=o.fromHostname(t,this.network.port);if(e.type===o.types.DNS)return this.dnsNodes.push(e),null;const i=d.fromHost(e.host,e.port,this.network);return this.nodes.push(i),this.add(i),i}removeNode(t){const e=o.fromHostname(t,this.network.port);for(let t=0;t<this.nodes.length;t++){const i=this.nodes[t];if(i.host===e.host&&i.port===e.port)return this.nodes.splice(t,1),!0}return!1}setSeeds(t){this.dnsSeeds.length=0;for(const e of t)this.addSeed(e)}setNodes(t){this.dnsNodes.length=0,this.nodes.length=0;for(const e of t)this.addNode(e)}addLocal(t,e,i){const r=d.fromHost(t,e,this.network);return r.services=this.options.services,this.pushLocal(r,i)}pushLocal(t,e){if(!t.isRoutable())return!1;if(this.local.has(t.hostname))return!1;const i=new y(t,e);return this.local.set(t.hostname,i),!0}getLocal(t){let e=-1,i=-1,r=null;if(t||(t=this.address),0===this.local.size)return null;for(const s of this.local.values()){const n=t.getReachability(s.addr);n<e||(n>e||s.score>i)&&(e=n,i=s.score,r=s.addr)}return r.time=this.network.now(),r}markLocal(t){const e=this.local.get(t.hostname);return!!e&&(e.score+=1,!0)}async discoverSeeds(){const t=[];for(const e of this.dnsSeeds)t.push(this.populateSeed(e));return Promise.all(t)}async discoverNodes(){const t=[];for(const e of this.dnsNodes)t.push(this.populateNode(e));return Promise.all(t)}async populateNode(t){const e=await this.populate(t);0!==e.length&&(this.nodes.push(e[0]),this.add(e[0]))}async populateSeed(t){const e=await this.populate(t);for(const t of e)this.add(t)}async populate(t){const e=[];let i;r(t.type===o.types.DNS,"Resolved host passed."),this.logger.info("Resolving host: %s.",t.host);try{i=await this.resolve(t.host)}catch(t){return this.logger.error(t),e}for(const r of i){const i=d.fromHost(r,t.port,this.network);e.push(i)}return e}toJSON(){const t=[],e=[],i=[];for(const e of this.map.values())t.push(e.toJSON());for(const t of this.fresh){const i=[];for(const e of t.keys())i.push(e);e.push(i)}for(const t of this.used){const e=[];for(let i=t.head;i;i=i.next)e.push(i.key());i.push(e)}return{version:b.VERSION,network:this.network.type,addrs:t,fresh:e,used:i}}fromJSON(t){const e=new Map,i=new Map,s=[],n=[];let o=0,a=0;r(t&&"object"==typeof t),r(!t.network||t.network===this.network.type,"Network mistmatch."),r(t.version===b.VERSION,"Bad address serialization version."),r(Array.isArray(t.addrs));for(const r of t.addrs){const t=w.fromJSON(r,this.network);let s=e.get(t.src.hostname);s||(s=t.src,e.set(s.hostname,s)),t.src=s,i.set(t.key(),t)}r(Array.isArray(t.fresh)),r(t.fresh.length<=this.options.maxBuckets,"Buckets mismatch.");for(const e of t.fresh){const t=new Map;for(const s of e){const e=i.get(s);r(e),0===e.refCount&&(o+=1),e.refCount+=1,t.set(s,e)}r(t.size<=this.options.maxEntries,"Bucket size mismatch."),s.push(t)}r(s.length===this.fresh.length,"Buckets mismatch."),r(Array.isArray(t.used)),r(t.used.length<=this.options.maxBuckets,"Buckets mismatch.");for(const e of t.used){const t=new l;for(const s of e){const e=i.get(s);r(e),r(0===e.refCount),r(!e.used),e.used=!0,a+=1,t.push(e)}r(t.size<=this.options.maxEntries,"Bucket size mismatch."),n.push(t)}r(n.length===this.used.length,"Buckets mismatch.");for(const t of i.values())r(t.used||t.refCount>0);return this.map=i,this.fresh=s,this.totalFresh=o,this.used=n,this.totalUsed=a,this}static fromJSON(t,e){return new this(t).fromJSON(e)}}b.HORIZON_DAYS=30,b.RETRIES=3,b.MIN_FAIL_DAYS=7,b.MAX_FAILURES=10,b.MAX_REFS=8,b.VERSION=0,b.scores={NONE:0,IF:1,BIND:2,UPNP:3,DNS:3,MANUAL:4,MAX:5};class w{constructor(t,e){this.addr=t||new d,this.src=e||new d,this.prev=null,this.next=null,this.used=!1,this.refCount=0,this.attempts=0,this.lastSuccess=0,this.lastAttempt=0,t&&this.fromOptions(t,e)}fromOptions(t,e){return r(t instanceof d),r(e instanceof d),this.addr=t,this.src=e,this}static fromOptions(t,e){return(new this).fromOptions(t,e)}key(){return this.addr.hostname}chance(t){let e=1;return t-this.lastAttempt<600&&(e*=.01),e*Math.pow(.66,Math.min(this.attempts,8))}inspect(){return{addr:this.addr,src:this.src,used:this.used,refCount:this.refCount,attempts:this.attempts,lastSuccess:u.date(this.lastSuccess),lastAttempt:u.date(this.lastAttempt)}}toJSON(){return{addr:this.addr.hostname,src:this.src.hostname,services:this.addr.services.toString(2),time:this.addr.time,attempts:this.attempts,lastSuccess:this.lastSuccess,lastAttempt:this.lastAttempt}}fromJSON(t,e){if(r(t&&"object"==typeof t),r("string"==typeof t.addr),r("string"==typeof t.src),this.addr.fromHostname(t.addr,e),null!=t.services){r("string"==typeof t.services),r(t.services.length>0),r(t.services.length<=32);const e=parseInt(t.services,2);r(e>>>0===e),this.addr.services=e}return null!=t.time&&(r(Number.isSafeInteger(t.time)),r(t.time>=0),this.addr.time=t.time),null!=t.src&&(r("string"==typeof t.src),this.src.fromHostname(t.src,e)),null!=t.attempts&&(r(t.attempts>>>0===t.attempts),this.attempts=t.attempts),null!=t.lastSuccess&&(r(Number.isSafeInteger(t.lastSuccess)),r(t.lastSuccess>=0),this.lastSuccess=t.lastSuccess),null!=t.lastAttempt&&(r(Number.isSafeInteger(t.lastAttempt)),r(t.lastAttempt>=0),this.lastAttempt=t.lastAttempt),this}static fromJSON(t,e){return(new this).fromJSON(t,e)}}class y{constructor(t,e){this.addr=t,this.score=e||0}}class v{constructor(t){this.network=f.primary,this.logger=h.global,this.resolve=a.lookup,this.host="0.0.0.0",this.port=this.network.port,this.services=p.LOCAL_SERVICES,this.onion=!1,this.banTime=p.BAN_TIME,this.address=new d,this.address.services=this.services,this.address.time=this.network.now(),this.seeds=this.network.seeds,this.nodes=[],this.maxBuckets=20,this.maxEntries=50,this.prefix=null,this.filename=null,this.memory=!0,this.flushInterval=12e4,t&&this.fromOptions(t)}fromOptions(t){if(r(t,"Options are required."),null!=t.network&&(this.network=f.get(t.network),this.seeds=this.network.seeds,this.address.port=this.network.port,this.port=this.network.port),null!=t.logger&&(r("object"==typeof t.logger),this.logger=t.logger),null!=t.resolve&&(r("function"==typeof t.resolve),this.resolve=t.resolve),null!=t.banTime&&(r(t.banTime>=0),this.banTime=t.banTime),t.seeds&&(r(Array.isArray(t.seeds)),this.seeds=t.seeds),t.nodes&&(r(Array.isArray(t.nodes)),this.nodes=t.nodes),null!=t.host){r("string"==typeof t.host);const e=o.toBuffer(t.host);this.host=o.toString(e),o.isRoutable(e)&&this.address.setHost(this.host)}return null!=t.port&&(r("number"==typeof t.port),r(t.port>0&&t.port<=65535),this.port=t.port,this.address.setPort(this.port)),null!=t.publicHost&&(r("string"==typeof t.publicHost),this.address.setHost(t.publicHost)),null!=t.publicPort&&(r("number"==typeof t.publicPort),r(t.publicPort>0&&t.publicPort<=65535),this.address.setPort(t.publicPort)),null!=t.services&&(r("number"==typeof t.services),this.services=t.services),null!=t.onion&&(r("boolean"==typeof t.onion),this.onion=t.onion),null!=t.maxBuckets&&(r("number"==typeof t.maxBuckets),this.maxBuckets=t.maxBuckets),null!=t.maxEntries&&(r("number"==typeof t.maxEntries),this.maxEntries=t.maxEntries),null!=t.memory&&(r("boolean"==typeof t.memory),this.memory=t.memory),null!=t.prefix&&(r("string"==typeof t.prefix),this.prefix=t.prefix,this.filename=s.join(this.prefix,"hosts.json")),null!=t.filename&&(r("string"==typeof t.filename),this.filename=t.filename),null!=t.flushInterval&&(r(t.flushInterval>=0),this.flushInterval=t.flushInterval),this.address.time=this.network.now(),this.address.services=this.services,this}}function k(t){return Math.floor(Math.random()*t)}t.exports=b}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * fs-browser.js - promisified fs module for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */function r(t,e){"string"!=typeof e&&(e="/");const i=`ENOENT: no such file or directory, ${t} '${e}'`,s=new Error(i);return s.errno=-2,s.code="ENOENT",s.syscall=t,s.path=e,Error.captureStackTrace&&Error.captureStackTrace(s,r),s}function s(t){const e=`EBADF: bad file descriptor, ${t}`,i=new Error(e);return i.errno=-9,i.code="EBADF",i.syscall=t,i.path="/",Error.captureStackTrace&&Error.captureStackTrace(i,s),i}function n(t){return async e=>{throw r(t,e)}}function o(t){return e=>{throw r(t,e)}}function a(t){return async()=>{throw s(t)}}function h(t){return()=>{throw s(t)}}async function c(){}function l(){}const u={emit:l,on:(t,e)=>{"error"===t&&e(r("stat"))},once:(t,e)=>{"error"===t&&e(r("stat"))},addListener:(t,e)=>{"error"===t&&e(r("stat"))},removeListener:l,removeAllListeners:l,listeners:()=>[],listenerCount:()=>0,readable:!0,writable:!1,write:l,end:l,close:l,destroy:l},f={emit:l,on:l,once:l,addListener:l,removeListener:l,removeAllListeners:l,listeners:()=>[],listenerCount:()=>0,readable:!1,writable:!0,write:l,end:l,close:l,destroy:l};e.unsupported=!0,e.access=n("stat"),e.accessSync=o("stat"),e.appendFile=n("open"),e.appendFileSync=o("open"),e.chmod=c,e.chmodSync=l,e.chown=c,e.chownSync=l,e.close=a("close"),e.closeSync=h("close"),e.constants={UV_FS_SYMLINK_DIR:1,UV_FS_SYMLINK_JUNCTION:2,O_RDONLY:0,O_WRONLY:1,O_RDWR:2,S_IFMT:61440,S_IFREG:32768,S_IFDIR:16384,S_IFCHR:8192,S_IFBLK:24576,S_IFIFO:4096,S_IFLNK:40960,S_IFSOCK:49152,O_CREAT:64,O_EXCL:128,O_NOCTTY:256,O_TRUNC:512,O_APPEND:1024,O_DIRECTORY:65536,O_NOATIME:262144,O_NOFOLLOW:131072,O_SYNC:1052672,O_DSYNC:4096,O_DIRECT:16384,O_NONBLOCK:2048,S_IRWXU:448,S_IRUSR:256,S_IWUSR:128,S_IXUSR:64,S_IRWXG:56,S_IRGRP:32,S_IWGRP:16,S_IXGRP:8,S_IRWXO:7,S_IROTH:4,S_IWOTH:2,S_IXOTH:1,F_OK:0,R_OK:4,W_OK:2,X_OK:1,UV_FS_COPYFILE_EXCL:1,UV_FS_COPYFILE_FICLONE:2,UV_FS_COPYFILE_FICLONE_FORCE:4,COPYFILE_EXCL:1,COPYFILE_FICLONE:2,COPYFILE_FICLONE_FORCE:4},e.copyFile=c,e.copyFileSync=l,e.createReadStream=(()=>u),e.createWriteStream=(()=>f),e.fchmod=a("fchmod"),e.fchmodSync=h("fchmod"),e.fchown=a("fchown"),e.fchownSync=h("fchown"),e.fdatasync=a("fdatasync"),e.fdatasyncSync=h("fdatasync"),e.fstat=a("fstat"),e.fstatSync=h("fstat"),e.fsync=a("fsync"),e.fsyncSync=h("fsync"),e.ftruncate=a("ftruncate"),e.ftruncateSync=h("ftruncate"),e.futimes=a("futimes"),e.futimesSync=h("futimes"),e.lchmod=c,e.lchmodSync=l,e.lchown=c,e.lchownSync=l,e.link=c,e.linkSync=l,e.lstat=n("lstat"),e.lstatSync=o("lstat"),e.mkdir=c,e.mkdirSync=l,e.mkdtemp=(async()=>`/tmp/${Math.random().toString(36)}`),e.mkdtempSync=(()=>`/tmp/${Math.random().toString(36)}`),e.open=n("open"),e.openSync=o("open"),e.read=a("read"),e.readSync=h("read"),e.readdir=n("readdir"),e.readdirSync=o("readdir"),e.readFile=n("open"),e.readFileSync=o("open"),e.readlink=n("readlink"),e.readlinkSync=o("readlink"),e.realpath=n("stat"),e.realpath.native=n("stat"),e.realpathSync=o("stat"),e.realpathSync.native=o("stat"),e.rename=c,e.renameSync=l,e.rmdir=c,e.rmdirSync=l,e.stat=n("stat"),e.statSync=o("stat"),e.symlink=c,e.symlinkSync=l,e.truncate=c,e.truncateSync=l,e.unlink=c,e.unlinkSync=l,e.unwatchFile=l,e.utimes=c,e.utimesSync=l,e.watch=(()=>u),e.watchFile=l,e.write=a("write"),e.writeSync=h("write"),e.writeFile=c,e.writeFileSync=l,e.promises=e,e.exists=(async()=>!1),e.existsSync=(()=>!1),e.rimraf=c,e.rimrafSync=l,e.mkdirp=c,e.mkdirpSync=l},function(t,e,i){"use strict";
/*!
 * seeds.js - seeds for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(216),s=i(217);e.get=function(t){switch(t){case"main":return r;case"testnet":return s;default:return[]}}},function(t,e,i){"use strict";t.exports=["5.19.5.127:8333","5.29.139.120:8333","5.39.64.7:8333","5.39.174.116:8333","5.45.69.13:8333","5.45.75.15:8333","5.45.108.108:8333","5.101.140.194:8333","5.133.13.56:8333","5.175.24.7:8333","5.189.133.130:8333","5.228.64.71:8333","13.80.67.162:8333","14.192.8.27:21301","23.89.193.201:8333","23.125.224.84:8333","23.225.160.26:8333","23.226.231.122:8333","23.227.204.78:8333","23.238.132.188:8333","23.240.67.204:8333","24.25.141.186:8333","24.120.235.185:8333","24.138.188.60:8333","24.211.229.7:8333","24.220.78.161:8333","24.225.34.62:8333","24.232.136.119:8333","27.68.131.10:8333","31.28.10.13:8333","31.31.203.113:8333","31.145.106.61:8333","31.211.102.129:62734","37.48.64.140:8333","37.120.163.181:8333","37.134.167.91:8333","37.191.225.174:8333","37.192.41.32:8333","37.194.10.30:8333","37.200.34.18:8333","37.205.8.78:8333","38.27.100.44:8333","38.102.69.70:8333","38.104.225.30:8333","41.86.104.94:8333","41.170.64.8:8333","43.229.76.45:8333","43.248.160.151:8333","45.32.65.19:8333","45.62.198.46:8333","46.19.136.138:8333","46.20.246.117:8333","46.28.69.138:8333","46.28.205.112:8333","46.160.195.121:8333","46.163.118.51:8333","46.166.129.159:8333","46.183.236.254:8333","46.227.101.176:8333","46.229.168.201:8333","46.238.238.176:8333","46.242.131.168:8333","47.20.103.108:8333","47.94.224.99:8333","47.187.1.83:8333","47.223.232.58:8333","47.254.128.15:8333","47.254.128.197:8333","50.2.189.35:8333","50.28.99.81:8333","50.31.170.51:8333","50.126.194.190:8333","51.15.0.17:8333","52.29.0.37:8333","52.59.96.11:8333","52.225.128.191:8333","54.84.98.69:8333","54.197.4.92:8333","54.223.136.62:8333","58.173.224.98:8333","58.229.208.166:8333","61.125.131.55:8333","62.13.193.206:8333","62.45.0.15:8333","62.107.200.30:8333","62.133.194.156:8333","62.138.11.10:8333","62.182.171.116:8333","62.195.193.35:8333","62.210.161.249:8333","63.141.228.18:8333","63.143.37.46:8333","64.34.231.140:8333","64.39.234.49:8333","64.110.25.26:8333","64.121.35.3:8333","65.19.155.88:8333","66.18.172.16:8333","66.160.128.215:8333","66.180.64.95:8333","66.194.38.250:8333","67.68.101.249:8333","67.128.36.90:8333","67.148.60.130:8333","67.210.228.203:8333","67.225.134.26:8333","68.12.98.246:8333","68.199.10.75:8333","69.39.49.199:8333","69.41.171.35:8333","69.41.171.224:8333","69.64.34.1:8333","69.64.46.27:8333","69.64.225.2:8333","69.159.134.58:8333","69.181.160.80:8333","69.222.192.88:8333","70.15.74.72:8333","70.35.98.12:8333","70.60.65.62:8333","70.113.33.131:8333","71.85.226.76:8333","71.93.161.162:8333","73.241.192.40:8333","74.118.192.119:8333","74.122.237.124:8333","75.159.6.167:8333","76.10.157.58:8333","76.92.136.75:8333","77.95.226.194:8333","77.163.136.136:8333","77.234.50.2:8333","77.239.37.12:8333","78.31.67.156:8333","78.109.163.153:8333","78.130.161.78:8333","78.192.35.130:8333","78.248.65.34:8333","79.46.194.163:8333","79.77.6.136:8333","79.98.196.89:8333","79.154.97.168:8333","79.165.235.119:8333","79.169.35.235:8333","79.182.167.137:8333","80.82.67.182:8333","80.82.77.138:8333","80.84.54.26:8333","80.208.224.217:8333","80.208.227.53:8333","80.220.43.228:8333","80.254.188.235:8333","81.7.10.251:8333","81.7.13.84:8333","81.18.224.62:8333","81.27.96.37:8333","81.108.196.72:8333","81.186.243.220:8333","81.228.194.187:8333","82.72.198.68:8333","82.74.224.35:8333","82.96.64.6:8333","82.117.166.77:8333","82.118.236.69:8333","82.161.109.190:8333","82.193.102.228:8333","82.193.109.199:8333","82.199.102.10:8333","82.200.204.119:8333","82.202.197.224:8333","82.212.7.242:8333","82.221.108.27:8333","82.221.128.81:8333","83.50.134.8:8333","83.78.33.135:8333","83.137.41.10:8333","83.150.37.94:8333","83.162.43.154:8333","83.164.131.242:8333","83.164.131.243:8333","83.209.8.140:8333","83.236.135.251:8333","83.243.59.41:8333","83.249.13.223:8333","83.250.86.108:8333","84.94.235.161:8333","84.117.1.27:8333","84.200.106.128:8333","84.213.64.21:8333","84.226.164.161:8333","84.245.27.130:8333","84.251.161.205:8333","85.5.1.72:8333","85.10.41.41:8333","85.25.194.12:8333","85.95.241.46:8333","85.129.0.126:8333","85.170.232.245:8333","85.195.232.39:8333","85.214.68.122:8333","85.214.235.137:8333","85.245.167.246:8333","86.8.35.17:8333","86.105.5.113:8333","86.106.131.179:8333","87.79.68.86:8333","87.120.8.5:8333","87.239.202.239:8333","88.98.198.130:8333","88.149.106.236:8333","88.207.236.175:8333","89.35.29.3:8333","89.38.96.70:8333","89.142.65.151:8333","89.163.224.195:8333","89.179.240.131:8333","89.230.96.42:8333","89.236.101.52:8333","90.191.203.18:8333","91.65.7.30:8333","91.65.192.159:8333","91.135.0.187:8333","91.154.113.227:8333","91.195.42.134:8333","91.202.67.107:8333","91.221.71.115:8333","91.224.0.227:8333","91.224.1.17:8333","91.225.236.145:8333","91.228.45.130:8333","91.231.229.136:8333","91.238.100.249:8333","92.27.142.29:8333","92.62.34.184:8333","92.177.2.181:8333","92.249.169.36:8333","92.255.176.109:8333","93.75.18.151:8333","93.79.204.222:10333","93.95.100.155:8333","93.113.131.134:8333","93.170.13.15:8333","93.179.197.152:8333","93.190.205.25:8333","94.59.135.148:8333","94.156.35.8:8333","94.177.106.189:8333","94.181.44.104:8333","94.198.97.215:8333","94.236.198.253:8333","94.237.64.138:8333","94.242.232.92:8333","95.84.134.107:8333","95.105.183.183:8333","95.191.130.100:8333","95.213.161.2:8333","95.226.77.108:8333","96.20.227.39:8333","96.23.67.85:8333","96.27.8.242:8333","98.5.31.251:8333","98.127.130.17:8333","98.162.209.130:8333","99.198.237.76:8333","99.238.3.86:8333","101.165.34.253:8333","103.44.162.50:8333","103.56.136.105:8333","103.59.166.139:8333","103.60.97.21:8333","103.79.107.144:8333","103.80.168.57:8333","103.85.14.106:8333","103.100.44.58:8333","103.250.4.74:8333","103.250.5.74:8333","104.32.162.149:8333","104.156.99.240:8333","104.156.103.72:8333","104.168.101.207:8333","104.171.113.52:8333","104.197.64.3:8333","104.199.192.85:8333","104.200.67.161:8333","104.220.16.253:8333","104.237.4.26:8333","104.238.198.165:8333","107.180.85.93:33244","108.4.11.29:8333","108.49.194.58:8333","108.175.3.18:8333","109.61.102.5:8333","109.106.136.195:8333","109.110.95.201:8333","109.172.104.119:8333","110.4.40.147:8333","112.187.178.116:8333","113.105.139.42:8333","115.90.171.158:8333","116.88.75.110:8333","116.250.193.234:8333","117.141.138.240:8333","118.67.201.40:8333","118.89.229.178:8333","118.211.167.90:8333","120.79.64.154:8333","121.200.5.186:8333","121.254.173.39:8333","123.2.128.107:8333","123.203.163.128:8333","128.1.68.46:8333","128.125.100.2:8333","130.89.78.87:8333","130.204.75.3:8333","131.114.10.233:8333","131.188.40.191:8333","132.148.130.51:8333","134.255.226.233:8333","135.23.194.98:8333","136.25.137.220:8333","136.55.10.249:8333","136.243.32.38:8333","136.243.64.23:8333","137.226.34.46:8333","139.59.96.16:8333","139.162.160.232:8333","139.199.228.84:8333","141.134.71.188:8333","141.138.137.40:8333","145.129.31.147:8333","146.71.76.53:8333","146.71.76.236:8333","149.210.228.108:8333","150.229.0.143:8333","150.249.76.102:8333","153.125.224.44:8333","155.4.99.150:8333","155.133.129.97:8333","157.159.103.161:8333","158.140.201.35:8333","158.140.229.62:8333","158.181.104.132:8333","158.181.134.193:8333","160.16.135.187:8333","162.221.224.63:8333","165.165.132.68:8333","165.194.35.203:8333","166.230.70.145:8333","169.44.34.203:8333","169.48.163.176:8333","170.75.162.180:8333","170.75.195.168:8333","171.25.165.145:8333","172.96.161.138:8333","172.98.193.45:8333","172.103.164.75:8333","172.110.8.233:8333","173.209.53.114:8333","173.212.192.117:8333","173.243.64.49:8333","173.255.224.185:8333","174.100.131.151:8333","174.113.66.230:8333","174.138.62.90:8333","176.10.136.25:8333","176.23.13.27:8333","176.24.220.141:8333","176.106.252.173:8333","176.126.167.10:8333","177.52.173.63:8333","178.78.226.178:8333","178.132.4.123:8333","178.175.144.122:8333","178.221.66.212:8333","178.236.130.229:8333","178.254.7.88:8333","178.254.34.144:8333","178.255.41.21:8333","179.48.251.41:8333","182.247.238.169:8333","183.111.29.28:8333","184.64.12.109:8333","184.70.33.190:8333","184.95.38.218:8333","185.8.172.121:8333","185.11.82.38:8333","185.12.7.38:8333","185.12.236.242:8333","185.20.226.148:8333","185.21.216.134:8333","185.22.232.167:8333","185.28.76.179:8333","185.31.136.69:8333","185.35.137.175:8333","185.35.138.84:8333","185.35.182.123:8333","185.47.132.109:8333","185.53.128.180:8333","185.63.172.14:8333","185.64.104.2:8333","185.70.105.74:8339","185.77.128.69:8333","185.77.129.176:8333","185.85.3.137:8333","185.102.71.6:8333","185.121.173.223:8333","185.127.17.167:8333","185.154.156.50:8333","185.162.128.83:8333","185.183.161.35:8333","185.189.199.248:8333","185.215.224.107:8333","186.5.136.70:8333","186.31.4.202:8333","188.27.80.126:8333","188.65.212.49:8333","188.116.140.127:8333","188.134.79.145:8333","188.214.128.18:8333","188.214.128.175:8333","188.227.64.19:8333","188.234.241.172:8333","188.253.2.125:8333","190.10.8.211:8333","190.145.22.202:8333","190.184.198.34:8333","190.210.234.38:8333","192.92.129.5:8333","192.121.170.180:8333","192.162.100.156:8333","192.162.210.91:8333","192.169.6.127:8333","192.175.59.140:8333","192.222.237.16:8333","192.228.101.157:8333","193.23.181.135:8333","193.49.43.219:8333","193.106.30.173:8333","193.138.224.230:8333","193.224.22.45:8333","194.15.231.236:8333","194.106.216.20:8333","194.186.160.253:8333","194.246.86.32:8333","195.22.104.23:8333","195.49.75.233:8333","195.91.244.138:8333","195.169.99.82:8333","196.28.98.21:8333","196.220.67.151:8333","197.155.6.43:8333","197.189.236.250:8333","197.234.69.146:8333","198.143.12.105:8333","198.187.28.2:8333","199.68.197.5:8333","199.127.224.50:8333","199.193.6.14:8333","199.201.110.146:8333","200.109.67.71:8333","200.122.128.130:8333","201.238.223.165:8333","202.47.225.242:8333","203.60.2.67:8333","204.15.11.4:8333","204.15.11.8:8333","204.138.165.35:8333","206.123.11.139:8333","206.253.163.226:8333","207.188.16.16:8333","208.77.18.25:8333","208.86.161.83:8333","208.100.137.204:8333","208.107.224.202:8333","208.118.235.190:8333","209.159.137.146:8333","209.161.4.164:8333","209.197.13.62:8333","210.211.109.165:8333","211.151.38.92:8333","212.32.229.230:8333","212.51.14.72:8333","212.56.108.81:8333","212.110.171.118:8333","212.124.160.199:8333","212.128.44.49:8333","212.149.235.185:8333","212.199.175.30:8333","212.237.96.98:8333","213.67.99.142:8333","213.91.205.134:8333","213.115.224.252:8333","213.131.12.10:8333","213.132.76.184:8333","213.152.161.170:45893","213.155.3.216:8333","213.156.108.63:8333","213.219.162.146:8333","216.36.179.27:8333","216.184.8.26:8333","216.245.218.242:8333","217.12.204.86:8333","217.20.130.72:8333","217.169.7.111:8333","217.182.192.7:8333","217.199.99.30:8333","219.88.232.229:8333","220.130.128.58:8333","220.191.169.90:8333","221.127.43.207:8333","222.239.193.210:8333","223.17.202.206:8333","[2001:0:4137:9e76:10f2:2873:970b:2068]:8333","[2001:0:4137:9e76:10f6:1aa2:ae9d:4286]:8333","[2001:0:4137:9e76:140a:d05:c1e1:b5c4]:8333","[2001:0:4137:9e76:142a:1957:b61e:56e]:8333","[2001:0:4137:9e76:142d:fac:2aaf:e4c2]:8333","[2001:0:4137:9e76:1471:452:6671:8274]:8333","[2001:0:4137:9e76:1482:530:b145:7e28]:8333","[2001:0:4137:9e76:18ac:3954:3901:a257]:8333","[2001:0:4137:9e76:18d5:3c77:829a:6fe6]:8333","[2001:0:4137:9e76:2066:164f:b39d:b087]:8333","[2001:0:4137:9e76:2069:78b:b7d5:5860]:8333","[2001:0:4137:9e76:20ac:22b1:bb18:1160]:8333","[2001:0:4137:9e76:20f6:147f:e7e9:ddd1]:8333","[2001:0:4137:9e76:20fa:3126:97f1:600d]:8333","[2001:0:4137:9e76:2457:f34:a313:4b99]:8333","[2001:0:4137:9e76:28f4:2512:bc91:2e53]:8333","[2001:0:4137:9e76:2c55:fa9:fde5:5d86]:8333","[2001:0:4137:9e76:2cba:1828:52ae:7501]:8333","[2001:0:4137:9e76:2cf3:78fc:a138:e6ed]:8333","[2001:0:4137:9e76:3001:bf6:be62:cce5]:8333","[2001:0:4137:9e76:30a8:3afb:b6d5:2bd7]:8333","[2001:0:4137:9e76:30e6:44d:ae7f:749d]:8333","[2001:0:4137:9e76:3402:daf:b475:daf9]:8333","[2001:0:4137:9e76:3423:3d03:d771:d501]:8333","[2001:0:4137:9e76:3424:211:b600:b4cb]:8333","[2001:0:4137:9e76:342f:1453:cddc:4f03]:8333","[2001:0:4137:9e76:3457:248d:a0b9:3bc9]:8333","[2001:0:4137:9e76:386f:3846:b995:188]:8333","[2001:0:4137:9e76:38a8:318a:e7dc:aee1]:8333","[2001:0:4137:9e76:38eb:1e88:addb:181c]:8333","[2001:0:4137:9e76:3c39:27e3:4758:365c]:8333","[2001:0:4137:9e76:3c7d:3fa4:86ad:4ebb]:8333","[2001:0:4137:9e76:3cfd:3181:b2c7:5c5e]:8333","[2001:0:4137:9e76:401:2157:684e:f2d6]:8333","[2001:0:4137:9e76:43a:1a64:bd14:fb16]:8333","[2001:0:4137:9e76:47d:bb:ae1e:2948]:8333","[2001:0:4137:9e76:843:9b9e:cd0a:6655]:8333","[2001:0:4137:9e76:886:3c19:addd:9a58]:8333","[2001:0:4137:9e76:8ba:9f8:9ead:f21]:8333","[2001:0:4137:9e76:c06:124c:a482:a761]:8333","[2001:0:4137:9e76:cda:b84:8d4c:d1e6]:8333","[2001:0:53aa:64c:20:a71:858b:83f7]:8333","[2001:0:53aa:64c:c5:235d:a10d:e0]:8333","[2001:0:5ef5:79fb:103a:23fb:bb8a:ed5b]:8333","[2001:0:5ef5:79fb:1064:d3d:51ff:5938]:8333","[2001:0:5ef5:79fb:10fd:1369:715e:6aa7]:8333","[2001:0:5ef5:79fb:14d5:1758:b17d:5eb1]:8333","[2001:0:5ef5:79fb:1817:2634:9fc9:1bc4]:8333","[2001:0:5ef5:79fb:181a:2717:9441:c1eb]:8333","[2001:0:5ef5:79fb:1875:bc8:b1c2:1b4]:8333","[2001:0:5ef5:79fb:18b5:3185:51a2:35d]:8333","[2001:0:5ef5:79fb:18c3:feb:b471:49d1]:8333","[2001:0:5ef5:79fb:18dd:3bd5:418f:c1e]:8333","[2001:0:5ef5:79fb:1c19:3062:bcaa:96b]:8333","[2001:0:5ef5:79fb:1c53:14bd:b8d9:7aa2]:8333","[2001:0:5ef5:79fb:1c60:82b:94fd:a452]:8333","[2001:0:5ef5:79fb:1c85:2e50:ba7d:a1a]:8333","[2001:0:5ef5:79fb:1cff:2d43:51f9:b889]:8333","[2001:0:5ef5:79fb:2074:221a:4750:eb12]:8333","[2001:0:5ef5:79fb:208f:2d83:e0f5:e31f]:8333","[2001:0:5ef5:79fb:2092:371f:9dfb:98cd]:8333","[2001:0:5ef5:79fb:20f3:39a2:39ca:38c]:8333","[2001:0:5ef5:79fb:281c:2085:518d:9c97]:8333","[2001:0:5ef5:79fb:2851:c:524c:a180]:8333","[2001:0:5ef5:79fb:2853:3b95:a430:40f3]:8333","[2001:0:5ef5:79fb:28f6:30a4:30d9:1201]:8333","[2001:0:5ef5:79fb:2c5f:1ade:718f:609d]:8333","[2001:0:5ef5:79fb:2cc0:1b38:e7af:ae80]:8333","[2001:0:5ef5:79fb:3000:3dc4:524d:3ce2]:8333","[2001:0:5ef5:79fb:3060:2e81:518f:63bc]:8333","[2001:0:5ef5:79fb:3068:507:bcaf:dbad]:8333","[2001:0:5ef5:79fb:308f:f3:935d:6a1b]:8333","[2001:0:5ef5:79fb:30ce:3301:d2d0:9bbc]:8333","[2001:0:5ef5:79fb:30db:3145:4381:f147]:8333","[2001:0:5ef5:79fb:34a3:2298:b7cd:22f6]:8333","[2001:0:5ef5:79fb:41e:160:bc48:791d]:8333","[2001:0:5ef5:79fb:42:b4fc:3f74:affb]:8333","[2001:0:5ef5:79fb:47a:16aa:d0c9:30a4]:8333","[2001:0:5ef5:79fb:89c:3481:d973:5dad]:8333","[2001:0:5ef5:79fb:8be:314a:26b2:efef]:8333","[2001:0:5ef5:79fb:8f3:3daf:3f21:bac]:8333","[2001:0:5ef5:79fb:c1f:20f4:b9ac:99db]:8333","[2001:0:5ef5:79fb:c70:105c:77de:9f7d]:8333","[2001:0:5ef5:79fb:ed:200c:b9ac:34db]:8333","[2001:0:5ef5:79fd:3057:85b:b703:255d]:8333","[2001:0:5ef5:79fd:8d1:13c6:5d0a:b117]:8333","[2001:0:9d38:6ab8:1007:395e:cd3a:82f2]:8333","[2001:0:9d38:6ab8:108b:34b5:e8e3:eed7]:8333","[2001:0:9d38:6ab8:109c:738:7fb9:785c]:8333","[2001:0:9d38:6ab8:1401:393:ba7f:c313]:8333","[2001:0:9d38:6ab8:1449:21d9:a05e:32f5]:8333","[2001:0:9d38:6ab8:1498:36b6:a29b:12a4]:8333","[2001:0:9d38:6ab8:183d:3649:b8f5:35d9]:8333","[2001:0:9d38:6ab8:1857:3293:438b:73de]:8333","[2001:0:9d38:6ab8:18b0:15d3:431c:bfec]:8333","[2001:0:9d38:6ab8:18b1:288b:51c9:db37]:8333","[2001:0:9d38:6ab8:18d5:2a37:6806:9797]:8333","[2001:0:9d38:6ab8:1c42:3a1c:942f:7f08]:8333","[2001:0:9d38:6ab8:1c7a:2fb7:e7d5:7ee2]:8333","[2001:0:9d38:6ab8:1cc6:38c6:438b:73de]:8333","[2001:0:9d38:6ab8:1cd6:2f48:fa1b:51c1]:8333","[2001:0:9d38:6ab8:1cda:2fdf:b091:dbe5]:8333","[2001:0:9d38:6ab8:1cf3:b9e:a14a:41f3]:8333","[2001:0:9d38:6ab8:2015:473:9d21:cc3c]:8333","[2001:0:9d38:6ab8:205d:eea3:a3c8:ea79]:8333","[2001:0:9d38:6ab8:207c:19b1:e758:1c46]:8333","[2001:0:9d38:6ab8:20cb:6b0:46cc:c27d]:8333","[2001:0:9d38:6ab8:20cd:1cd9:54e6:5a6e]:8333","[2001:0:9d38:6ab8:20ef:bc1:95f0:a658]:8333","[2001:0:9d38:6ab8:2409:2ea4:47ee:3c9d]:8333","[2001:0:9d38:6ab8:2427:330a:9441:dc2d]:8333","[2001:0:9d38:6ab8:2436:3c78:431d:d559]:8333","[2001:0:9d38:6ab8:24dd:2acb:b8a9:5ade]:8333","[2001:0:9d38:6ab8:2869:2cb3:b57b:311c]:8333","[2001:0:9d38:6ab8:28bf:33d4:9d29:8edc]:8333","[2001:0:9d38:6ab8:28e0:142e:3ed6:b182]:8333","[2001:0:9d38:6ab8:28f3:1675:c3ed:5be7]:8333","[2001:0:9d38:6ab8:2c4c:21d6:946c:ef01]:8333","[2001:0:9d38:6ab8:2cd6:3f49:a1ec:736]:8333","[2001:0:9d38:6ab8:301d:1cd6:ba5a:2935]:8333","[2001:0:9d38:6ab8:302b:340f:e723:b15e]:8333","[2001:0:9d38:6ab8:3034:2d96:b57f:b0e6]:8333","[2001:0:9d38:6ab8:306b:872:b4bc:d79f]:8333","[2001:0:9d38:6ab8:30a4:1190:4315:e53]:8333","[2001:0:9d38:6ab8:30c3:1362:521f:52c5]:8333","[2001:0:9d38:6ab8:30e7:3e5c:da3f:6466]:8333","[2001:0:9d38:6ab8:3439:223:a04a:fdfd]:8333","[2001:0:9d38:6ab8:3477:14cd:f7de:dee8]:8333","[2001:0:9d38:6ab8:3498:1a5:4635:2b50]:8333","[2001:0:9d38:6ab8:349d:db2:a0e6:29a2]:8333","[2001:0:9d38:6ab8:34f7:15b2:3012:3a74]:8333","[2001:0:9d38:6ab8:3809:2941:4344:4838]:8333","[2001:0:9d38:6ab8:3809:37b7:31b5:8e3d]:8333","[2001:0:9d38:6ab8:3877:2dac:b691:719c]:8333","[2001:0:9d38:6ab8:388a:24f3:a141:c194]:8333","[2001:0:9d38:6ab8:38ba:3b3e:430c:fb74]:8333","[2001:0:9d38:6ab8:38c4:2f2a:9357:b1ae]:8333","[2001:0:9d38:6ab8:38e2:23f:b4f6:6ad1]:8333","[2001:0:9d38:6ab8:3c56:2171:9d80:d360]:8333","[2001:0:9d38:6ab8:3cab:1421:3ca4:1a8e]:8333","[2001:0:9d38:6ab8:3f:2441:6806:9797]:8333","[2001:0:9d38:6ab8:424:321:52b3:5633]:8333","[2001:0:9d38:6ab8:47c:32ef:a7a8:a2b4]:8333","[2001:0:9d38:6ab8:4a7:3cdd:9d1b:708]:8333","[2001:0:9d38:6ab8:4c3:3a54:9d1c:2ad7]:8333","[2001:0:9d38:6ab8:813:3ae3:bdd2:66d8]:8333","[2001:0:9d38:6ab8:818:cf4:27f2:b5f5]:8333","[2001:0:9d38:6ab8:855:33f7:6dbd:53c4]:8333","[2001:0:9d38:6ab8:868:1baa:b174:b764]:8333","[2001:0:9d38:6ab8:878:21cf:2b5b:2860]:8333","[2001:0:9d38:6ab8:8a4:e1d1:79ec:7cee]:8333","[2001:0:9d38:6ab8:8b3:392c:ab0d:ae6b]:8333","[2001:0:9d38:6ab8:8ff:352f:b208:5604]:8333","[2001:0:9d38:6ab8:c2f:1793:fa42:acdc]:8333","[2001:0:9d38:6ab8:c36:25f:a0d0:e871]:8333","[2001:0:9d38:6ab8:d3:69e:d0a0:1b73]:8333","[2001:0:9d38:6abd:109f:379e:aeff:3957]:8333","[2001:0:9d38:6abd:10a5:2f7d:ab07:9c7b]:8333","[2001:0:9d38:6abd:1462:3fe1:b2cf:dcf0]:8333","[2001:0:9d38:6abd:180b:29be:3429:fede]:8333","[2001:0:9d38:6abd:1857:24c:46f4:7dc9]:8333","[2001:0:9d38:6abd:18d5:a69:4b4a:6e8b]:8333","[2001:0:9d38:6abd:1c20:25a2:3f5d:2da4]:8333","[2001:0:9d38:6abd:1c96:24dc:a753:d6f2]:8333","[2001:0:9d38:6abd:1ce7:533:26f3:2aab]:8333","[2001:0:9d38:6abd:2065:3008:76b5:cb06]:8333","[2001:0:9d38:6abd:20b2:434:4387:f5e1]:8333","[2001:0:9d38:6abd:20ff:147c:840c:b0db]:8333","[2001:0:9d38:6abd:2436:3c96:91e9:2de3]:8333","[2001:0:9d38:6abd:244c:1817:ae9f:8a38]:8333","[2001:0:9d38:6abd:284c:29ce:88b5:c86f]:8333","[2001:0:9d38:6abd:285a:5c:c16b:119a]:8333","[2001:0:9d38:6abd:2c5f:a51:a671:3d90]:8333","[2001:0:9d38:6abd:3065:3255:4b21:e520]:8333","[2001:0:9d38:6abd:341d:2dfa:892f:4366]:8333","[2001:0:9d38:6abd:3450:302f:23b3:a33a]:8333","[2001:0:9d38:6abd:3456:2308:d0b5:7970]:8333","[2001:0:9d38:6abd:3470:346d:af23:d41b]:8333","[2001:0:9d38:6abd:34ba:20c2:9a5a:dd02]:8333","[2001:0:9d38:6abd:3846:1133:a68c:ea80]:8333","[2001:0:9d38:6abd:38ef:31ea:6cd1:45db]:8333","[2001:0:9d38:6abd:3c1f:c35a:cc00:28d3]:8333","[2001:0:9d38:6abd:3c49:1539:fe22:5b3b]:8333","[2001:0:9d38:6abd:3c5e:2ecd:88ee:787c]:8333","[2001:0:9d38:6abd:3c74:194:4f94:e1b]:8333","[2001:0:9d38:6abd:4c4:3492:4d56:35dd]:8333","[2001:0:9d38:6abd:4e7:35f2:ae92:cbcd]:8333","[2001:0:9d38:6abd:850:2b2f:adbf:fa7e]:8333","[2001:0:9d38:6abd:8ba:f4f:3e75:b00b]:8333","[2001:0:9d38:6abd:9e:3294:c2b5:67d7]:8333","[2001:0:9d38:6abd:c74:81b:a2fb:aa90]:8333","[2001:0:9d38:78cf:146b:2cc2:b2a5:db7]:8333","[2001:0:9d38:78cf:18d3:1602:2a06:c562]:8333","[2001:0:9d38:78cf:24a7:ee0:72cc:7f75]:8333","[2001:0:9d38:78cf:2862:1384:b4b8:406f]:8333","[2001:0:9d38:78cf:30c4:3698:92a5:3af9]:8333","[2001:0:9d38:78cf:340b:1270:4d61:857]:8333","[2001:0:9d38:78cf:3cb3:2773:4da3:d4c]:8333","[2001:0:9d38:78cf:3cdf:8ab:a331:d75]:8333","[2001:0:9d38:78cf:4d1:366f:4f91:eafb]:8333","[2001:0:9d38:78cf:83f:b1c:c1a4:ad71]:8333","[2001:0:9d38:90d7:1067:13c5:a69c:b099]:8333","[2001:0:9d38:90d7:10aa:20c7:aa6f:d318]:8333","[2001:0:9d38:90d7:10df:16c3:b351:e824]:8333","[2001:0:9d38:90d7:1464:255e:9208:8012]:8333","[2001:0:9d38:90d7:14e1:1b8:b256:ff4c]:8333","[2001:0:9d38:90d7:180c:ebf:2a63:93c0]:8333","[2001:0:9d38:90d7:18fb:9d7:af8d:a5d5]:8333","[2001:0:9d38:90d7:1ca1:3e8e:ab02:edbe]:8333","[2001:0:9d38:90d7:1cd7:3fe8:e80f:53f9]:8333","[2001:0:9d38:90d7:20d8:1062:2684:32c2]:8333","[2001:0:9d38:90d7:2419:373e:da40:1e51]:8333","[2001:0:9d38:90d7:242b:1ac2:fdcc:af6a]:8333","[2001:0:9d38:90d7:2442:2d34:9e97:36a0]:8333","[2001:0:9d38:90d7:246c:24f1:3c0f:65fc]:8333","[2001:0:9d38:90d7:24c4:15e7:d0cb:7a52]:8333","[2001:0:9d38:90d7:2837:324e:d0cb:9f45]:22475","[2001:0:9d38:90d7:2858:2d7c:bc51:6ee0]:8333","[2001:0:9d38:90d7:289e:1b03:438e:b517]:8333","[2001:0:9d38:90d7:289f:30fc:54bc:9685]:8333","[2001:0:9d38:90d7:28a2:760:a6b3:3139]:8333","[2001:0:9d38:90d7:28a4:1b25:b8c7:38ff]:8333","[2001:0:9d38:90d7:28d3:1049:fd91:712c]:8333","[2001:0:9d38:90d7:2c32:2da7:c111:dd82]:8333","[2001:0:9d38:90d7:2c91:1e07:5d3d:7eb1]:8333","[2001:0:9d38:90d7:2ce5:3c7:b736:9128]:8333","[2001:0:9d38:90d7:2cf4:30d4:e020:53fa]:8333","[2001:0:9d38:90d7:2cfc:2221:98e5:eed7]:8333","[2001:0:9d38:90d7:3016:aed:6107:4df]:8333","[2001:0:9d38:90d7:303e:3e8a:d06a:d137]:8333","[2001:0:9d38:90d7:30ee:19d6:6e7b:908e]:8333","[2001:0:9d38:90d7:342c:3ecc:c2a2:1e31]:8333","[2001:0:9d38:90d7:3474:1df1:e732:e5e3]:8333","[2001:0:9d38:90d7:3496:2e2d:cb17:c3bd]:8333","[2001:0:9d38:90d7:34f3:3584:d0a4:aa5]:8333","[2001:0:9d38:90d7:38e6:1092:d0cb:7576]:8333","[2001:0:9d38:90d7:38ec:611:e05f:df3d]:8333","[2001:0:9d38:90d7:38f5:3938:b454:4717]:8333","[2001:0:9d38:90d7:38f8:14ce:8809:7786]:8333","[2001:0:9d38:90d7:3c2c:10a4:bbfa:e09d]:8333","[2001:0:9d38:90d7:3c35:2a8e:e79f:62fd]:8333","[2001:0:9d38:90d7:3c40:77b:c2bb:79]:8333","[2001:0:9d38:90d7:65:2adf:b8de:1781]:8333","[2001:0:9d38:90d7:7c:129:d0cb:6e8b]:8333","[2001:0:9d38:90d7:851:10d8:9d58:7059]:8333","[2001:0:9d38:90d7:85d:102:2aa2:519a]:8333","[2001:0:9d38:90d7:896:fe0:afc6:2270]:8333","[2001:0:9d38:90d7:8a0:22cc:a0b3:d9da]:8333","[2001:0:9d38:90d7:c0d:de2:b94f:774]:8333","[2001:0:9d38:90d7:cff:c79:aa69:cb82]:8333","[2001:0:9d38:953c:104e:8af:b3aa:f300]:8333","[2001:0:9d38:953c:1063:10c4:93fd:77b5]:8333","[2001:0:9d38:953c:10dd:3d0d:daee:ccda]:8333","[2001:0:9d38:953c:1883:22e3:af92:33c7]:8333","[2001:0:9d38:953c:1c0a:1583:9473:5f2e]:8333","[2001:0:9d38:953c:1c44:2b70:9de7:a7cc]:8333","[2001:0:9d38:953c:1cbb:646:d2cf:fd00]:8333","[2001:0:9d38:953c:2051:348d:dc5a:c3c2]:8333","[2001:0:9d38:953c:24f8:198a:d023:6580]:8333","[2001:0:9d38:953c:2c32:2ea8:b817:2bb0]:8333","[2001:0:9d38:953c:2c6d:3cef:4386:4937]:8333","[2001:0:9d38:953c:2cb1:1719:5398:e444]:8333","[2001:0:9d38:953c:3053:8a5e:25e4:352d]:8333","[2001:0:9d38:953c:307b:2309:b347:3fdc]:8333","[2001:0:9d38:953c:3084:1e46:8a72:750f]:8333","[2001:0:9d38:953c:30a8:2304:9d47:7fdf]:8333","[2001:0:9d38:953c:30b9:2ea0:e80c:53e5]:8333","[2001:0:9d38:953c:30cf:3e04:a88b:4fe8]:8333","[2001:0:9d38:953c:3427:2c62:bd53:f12d]:8333","[2001:0:9d38:953c:3445:1bcb:b8b5:9653]:8333","[2001:0:9d38:953c:3874:295f:9de2:cf3c]:8333","[2001:0:9d38:953c:38bc:3f1:52c4:ea47]:8333","[2001:0:9d38:953c:38c9:394f:bea2:fd60]:8333","[2001:0:9d38:953c:38e8:2391:b6b2:90c1]:8333","[2001:0:9d38:953c:3c43:3f1:b489:f8b8]:8333","[2001:0:9d38:953c:4c5:2ae2:b643:3866]:8333","[2001:0:9d38:953c:4db:3a7f:87b0:f876]:8333","[2001:0:9d38:953c:8be:ce8:b8c5:5212]:8333","[2001:0:9d38:953c:ac:2eab:2f99:80c4]:8333","[2001:0:9d38:953c:c0a:1923:52a0:7ab2]:8333","[2001:0:9d38:953c:c2:1715:b80b:7121]:8333","[2001:0:9d38:953c:c8c:ee1:5199:bf8a]:8333","[2001:0:9d38:953c:cbb:3f5:a670:b045]:8333","[2001:13d8:1c01:1000::8]:8333","[2001:13d8:1c01:2000:2470::1]:8333","[2001:14ba:1900::754:f271:151c]:8333","[2001:1608:10:156:38::265c]:8333","[2001:1620:923:0:75be:ed92:1a01:641]:8333","[2001:1680:101:8c::1]:8333","[2001:1838:2000:413::3]:8333","[2001:19c0:1:801:801:ff00:46c:2]:8333","[2001:19f0:0:204f:5400:ff:fe05:2d2e]:8333","[2001:19f0:5000:8c8b:5400:ff:fe1f:c023]:8333","[2001:19f0:5:17a7:5400:ff:fe87:cc21]:8333","[2001:19f0:5c01:63b:5400:1ff:fe47:2ede]:8333","[2001:19f0:ac01:2fb:5400:ff:fe5b:c3ff]:8333","[2001:1af8:4070:a016:3333::5afb]:8333","[2001:1af8:4700:a071:4444::e26e]:8333","[2001:1bc0::ffff:aaaa:21]:8333","[2001:200:0:8801:5054:ff:fef2:1d0]:8333","[2001:4128:6135:10:20c:29ff:fe69:9e81]:8333","[2001:4128:6135:2010:21e:bff:fee8:a3c0]:8333","[2001:4128:6135:e001:5054:ff:fe37:e9eb]:8333","[2001:4178:6:1427:62:116:188:85]:8333","[2001:41c9:1:424::231]:8333","[2001:41d0:1000:1e1f::]:8333","[2001:41d0:1004:1fef::]:8333","[2001:41d0:1004:24a5::]:8333","[2001:41d0:1008:1c23::]:8333","[2001:41d0:1008:2752::]:8333","[2001:41d0:1:45d8::1]:8333","[2001:41d0:1:7d09::1]:8333","[2001:41d0:1:8113::1]:8333","[2001:41d0:1:8649::1]:8333","[2001:41d0:1:8b26::1]:8333","[2001:41d0:1:a5b8::1]:8333","[2001:41d0:1:ab6b::1]:8333","[2001:41d0:1:afd8::]:8333","[2001:41d0:1:b421::1]:8333","[2001:41d0:1:b5ce::1]:8333","[2001:41d0:1:d227::]:8333","[2001:41d0:1:dabd::1]:8333","[2001:41d0:1:e13b::1]:8333","[2001:41d0:1:f176::1]:8333","[2001:41d0:203:10bd::]:8333","[2001:41d0:2:16be::1]:8333","[2001:41d0:2:53df::]:8333","[2001:41d0:2:8c65::]:8333","[2001:41d0:2:9431::]:8333","[2001:41d0:2:9c94::1]:8333","[2001:41d0:2:a5a9::]:8333","[2001:41d0:2:ab38::]:8333","[2001:41d0:2:c6e::]:8333","[2001:41d0:2:c9bf::]:8333","[2001:41d0:302:1000::fa25]:8333","[2001:41d0:303:188::]:8333","[2001:41d0:303:1907::]:8333","[2001:41d0:303:2505::1a]:8333","[2001:41d0:303:4140::]:8333","[2001:41d0:303:d02::]:8333","[2001:41d0:403:589::]:8333","[2001:41d0:52:d00::6e2]:8333","[2001:41d0:52:d00::6e3]:8333","[2001:41d0:602:3b::]:8333","[2001:41d0:602:6ca::]:8333","[2001:41d0:602:e0::]:8333","[2001:41d0:604:177::]:8333","[2001:41d0:700:468::]:8333","[2001:41d0:700:479::]:8333","[2001:41d0:800:283::]:8333","[2001:41d0:8:1b29::]:8333","[2001:41d0:8:2556::]:8333","[2001:41d0:8:7a38::1]:8333","[2001:41d0:8:8007::]:8333","[2001:41d0:8:8f46::1]:8333","[2001:41d0:8:9c6e::1]:8333","[2001:41d0:8:b3ad::1]:8333","[2001:41d0:8:b7d0::1]:8333","[2001:41d0:8:bed3::]:8333","[2001:41d0:8:c67c::]:8333","[2001:41d0:8:d444::1]:8333","[2001:41d0:8:d844:1337::1017]:8333","[2001:41d0:8:db78::1]:8333","[2001:41d0:8:ddb::1]:8333","[2001:41d0:8:ddf::1]:8333","[2001:41d0:8:e3e4::1]:8333","[2001:41d0:a:3b5f::1]:8333","[2001:41d0:a:405c::]:8333","[2001:41d0:a:635b::1]:8333","[2001:41d0:a:6a0d::1]:8333","[2001:41d0:a:6a1::1]:8333","[2001:41d0:a:6c29::1]:8333","[2001:41d0:a:6fd0::]:8333","[2001:41d0:a:755::1]:8333","[2001:41d0:a:f8d2::1]:8333","[2001:41d0:a:f915::1]:8333","[2001:41d0:e:1146::1]:8333","[2001:41d0:e:1388::1]:8333","[2001:41d0:e:26b::1]:8333","[2001:41d0:e:9e7::1]:8333","[2001:41d0:e:ec5::1]:8333","[2001:41f0:61:0:72f3:95ff:fe09:7521]:8333","[2001:41f0:61::7]:8333","[2001:4642:e527::beef]:8333","[2001:470:1d:8a9::]:8333","[2001:470:1d:8a9::4]:8333","[2001:470:1f06:15b4::2]:8333","[2001:470:1f07:803:20c:29ff:fe2d:5879]:8333","[2001:470:1f09:325::40]:8333","[2001:470:1f0b:56e:7e5c:f8ff:fe32:5302]:8333","[2001:470:1f0b:8c4::5]:8333","[2001:470:1f0b:8fe:c4:4338:e528:2713]:8333","[2001:470:1f0b:967::11]:8333","[2001:470:1f10:776::2]:8333","[2001:470:1f15:11f8::10]:8333","[2001:470:1f15:1b95:2c3e:8a9a:24e1:7084]:8333","[2001:470:1f15:cf7::14]:8333","[2001:470:1f15:e9b::3ef]:8333","[2001:470:1f17:22a:8d2:72bf:a564:21fb]:8333","[2001:470:1f17:b5::10]:8333","[2001:470:1f1b:5a6:216:3eff:fe24:1162]:8333","[2001:470:2179:dead:deaf:0:2e70:9d8b]:8333","[2001:470:25:482::2]:8333","[2001:470:27:483::2]:8333","[2001:470:7:b74::2]:8333","[2001:470:8:2e1:44ff:654e:e53e:ad59]:8333","[2001:470:8:2e1:7058:53f6:5681:5be4]:8333","[2001:470:8:2e1::43]:8333","[2001:470:8:7b3::17]:8333","[2001:470:8a2f:8000::e998]:8333","[2001:470:a068::2]:8333","[2001:470:a:88b::2]:8333","[2001:470:a:c13::2]:8333","[2001:470:b3d5:1:641c:6bff:fe9d:bccf]:8333","[2001:470:c144:cafe::9]:8333","[2001:470:d00d:0:3664:a9ff:fe9a:5150]:8333","[2001:470:dbf2:aaaa::b17:c01c]:8333","[2001:4802:7802:103:be76:4eff:fe21:19f9]:8333","[2001:48f8:1003::3ba]:8333","[2001:4b99:1:1:216:3eff:febd:85ba]:8333","[2001:4ba0:babe:2681::]:8333","[2001:4ba0:babe:832::]:8333","[2001:4ba0:cafe:20c::1]:8333","[2001:579:9284:bc:10be:5df1:f6d2:4194]:8333","[2001:638:a000:4140::ff10:415]:8333","[2001:638:a000:4140::ffff:191]:8333","[2001:67c:2564:520:7800:4817:52ec:d8f]:8333","[2001:708:150:10::4329]:8333","[2001:980:231b:1:8e89:a5ff:fee3:f8be]:8333","[2001:980:ade8:1:14fc:fd6d:608c:f669]:8333","[2001:984:aec7:1:dcb7:29a:7eda:b9a2]:8333","[2001:985:79af:20::35]:8333","[2001:bc8:225f:10e:505:6573:7573:d0a]:8333","[2001:bc8:323c:100::]:8333","[2001:bc8:399f:f000::1]:8333","[2001:bc8:3cbf::5]:8333","[2001:bc8:4400:2400::480f]:8333","[2002:261b:642c::261b:642c]:8333","[2002:2956:685e::2956:685e]:8333","[2002:2d7b:674f::2d7b:674f]:8333","[2002:2df9:5e40::2df9:5e40]:8333","[2002:2e04:784b::2e04:784b]:8333","[2002:2f58:fe42::2f58:fe42]:8333","[2002:2f58:fe62::2f58:fe62]:8333","[2002:2f59:30f3::2f59:30f3]:8333","[2002:2f5a:3c1c::2f5a:3c1c]:10011","[2002:2f5a:562a::2f5a:562a]:8333","[2002:2f5b:a5f9::2f5b:a5f9]:8333","[2002:2f5b:b086::2f5b:b086]:8333","[2002:323f:a61b::323f:a61b]:8333","[2002:33ff:69a0::1]:8333","[2002:3f62:e6bb::3f62:e6bb]:8333","[2002:4b63:50b4:1234:4059:bf54:e088:7daa]:8333","[2002:509:6ac5::509:6ac5]:8333","[2002:51a9:9cc9::51a9:9cc9]:8333","[2002:54fb:a1cd::1]:8333","[2002:5bc2:5428::5bc2:5428]:8333","[2002:5bce:1253::5bce:1253]:8333","[2002:5d68:d270::5d68:d270]:8333","[2002:5dbd:91a9::5dbd:91a9]:8333","[2002:5fd3:8944::5fd3:8944]:8333","[2002:6738:8869::6738:8869]:8333","[2002:67e9:fe16::67e9:fe16]:8333","[2002:67fa:44a::67fa:44a]:8333","[2002:67fa:44b::67fa:44b]:8333","[2002:6825:d425::6825:d425]:8333","[2002:6a0e:3ea8::6a0e:3ea8]:10011","[2002:6bb4:475c::6bb4:475c]:41888","[2002:6bb4:54bc::6bb4:54bc]:8333","[2002:6c3d:d88a::6c3d:d88a]:8333","[2002:704a:d6d4::704a:d6d4]:9997","[2002:7169:8b2a::7169:8b2a]:8333","[2002:7237:fcf6::7237:fcf6]:20188","[2002:7819:7e80::7819:7e80]:7743","[2002:8494:8233::8494:8233]:8333","[2002:8494:84fc::8494:84fc]:8333","[2002:9247:4cec::9247:4cec]:8333","[2002:9538:735d::9538:735d]:8333","[2002:adcd:b88c::adcd:b88c]:8333","[2002:b025:5c52::b025:5c52]:8333","[2002:b07e:a70a::b07e:a70a]:8333","[2002:b2c9:e6fc:10:3d5c:e3ad:813:9c46]:8333","[2002:b4b2:3612::b4b2:3612]:8333","[2002:b610:1ca3::b610:1ca3]:8333","[2002:b85f:26da::b85f:26da]:8333","[2002:b923:b67b::b923:b67b]:8333","[2002:b946:694a::b946:694a]:8339","[2002:b960:5e18::b960:5e18]:8333","[2002:bc48:d606::bc48:d606]:8333","[2002:c13a:c4d4::1]:8333","[2002:c16a:1c08::c16a:1c08]:8333","[2002:c16a:1d12::c16a:1d12]:8333","[2002:c23f:8fc5::c23f:8fc5]:8333","[2002:c2a5:1021::c2a5:1021]:8333","[2002:c2a5:10fe::c2a5:10fe]:8333","[2002:c39a:a4a8::c39a:a4a8]:8333","[2002:cb82:d02d::cb82:d02d]:8333","[2002:d035:2734::d035:2734]:8333","[2002:d2d3:6da5::d2d3:6da5]:8333","[2002:d453:9174::d453:9174]:8333","[2002:d917:d95::d917:d95]:8333","[2003:a:1114:1001:6ab5:99ff:feb0:8770]:8333","[2400:2650:480:bc00:bcaf:7c49:8c9e:7cdf]:8333","[2400:8901::f03c:91ff:fe1f:ec00]:8333","[2400:8901::f03c:91ff:fe3e:571b]:8333","[2400:8901::f03c:91ff:fe3e:57ef]:8333","[2400:8901::f03c:91ff:feb4:71f1]:8333","[2400:8902::f03c:91ff:feb9:c59c]:8333","[2400:dd01:1034:e00:f21f:afff:fedc:164d]:8333","[2400:dd08:1001:120:f0f7:d9da:8b5b:58d7]:8333","[2401:1800:7800:102:be76:4eff:fe1c:a7d]:8333","[2401:1800:7801:101:be76:4eff:fe1c:f4b]:8333","[2402:1f00:8100:36::]:8333","[2404:7a83:94e0:7f00:858f:8a7d:3a8c:26dd]:8333","[2404:c805:d00:101:716a:cff7:c9ab:a595]:8333","[2405:aa00:2::40]:8333","[2409:10:ca20:1df0:224:e8ff:fe1f:60d9]:8333","[2600:1f14:6ae:d900:6550:3fc5:e074:a72c]:8333","[2600:1f14:6d0:2e03:640e:1937:9960:32e9]:8333","[2600:1f14:6d0:2e03:761:6e21:952c:de5b]:8333","[2600:1f16:625:e00:269a:3452:2edf:1011]:8333","[2600:1f16:625:e00:7bc:5879:4463:15dd]:8333","[2600:1f16:625:e00:a28b:5a16:849c:fe41]:8333","[2600:1f16:625:e00:a70f:e728:e8e1:2c2e]:8333","[2600:1f16:b32:3102:440:fab:d8a2:cc59]:8333","[2600:1f18:3d:4600:699a:d6b3:76e8:9b8d]:48333","[2600:1f18:3f8:f90f:2b39:201b:e9a4:e882]:8333","[2600:1f18:609f:da02:b283:b16e:aac4:749f]:8333","[2600:3c00::f03c:91ff:fe28:9e61]:8333","[2600:3c00::f03c:91ff:fe91:3e49]:8333","[2600:3c00::f03c:91ff:feb9:36fc]:8333","[2600:3c01::f03c:91ff:fe39:768b]:8333","[2600:3c01::f03c:91ff:fe8e:8ae1]:8333","[2600:3c01::f03c:91ff:fe91:6a29]:8333","[2600:3c01::f03c:91ff:fea7:e0f9]:8333","[2600:3c02::f03c:91ff:fe8e:bcd9]:8333","[2600:3c03::f03c:91ff:fe28:1445]:8333","[2600:3c03::f03c:91ff:fe7a:1eb2]:8333","[2600:3c03::f03c:91ff:feb0:5fc4]:8333","[2600:3c03::f03c:91ff:fee0:233e]:8333","[2600:6c40:7900:319f:8390:e8af:5a2c:9b0b]:8333","[2600:6c44:467f:f89c:722d:8424:d481:d155]:8333","[2600:8801:8306:e900:dce8:6a03:9592:a053]:8333","[2601:186:c100:6bcd:16bd:cea1:235d:1c19]:8333","[2601:18d:4600:5f32:20e7:b3ff:fecf:a99]:8333","[2601:1c2:f00:29b0:922b:34ff:fea8:4118]:8333","[2601:282:8000:20b0:67f8:fa63:e056:dd23]:8333","[2601:40a:c200:37e8:9528:d453:6358:9f2a]:8333","[2601:646:4101:1603:5809:1bff:fe55:6678]:8333","[2601:c0:c100:1880:21f:5bff:fe3c:6e84]:8333","[2601:c8:4100:770:23e:e1ff:febe:736d]:8333","[2603:3000:903:c5f1:468a:5bff:fe9e:89dc]:8333","[2603:3005:3000:5000:bc5a:72ac:36e9:175e]:8333","[2603:3022:501:7800:495c:728c:ed5d:5d75]:8333","[2604:180:1:346::684d]:8333","[2604:67c0:2001::2]:8333","[2604:8d80:100:0:8065:4c57:667a:b70f]:8333","[2604:8d80:100::adf3:4031]:8333","[2604:a880:2:d0::22f8:f001]:8333","[2604:a880:2:d0::22f9:1]:8333","[2604:a880:2:d0::22f9:1001]:8333","[2604:a880:2:d0::22f9:c001]:8333","[2604:a880:2:d0::22f9:d001]:8333","[2604:a880:2:d0::22f9:e001]:8333","[2604:a880:2:d0::22fa:1001]:8333","[2604:a880:2:d0::22fa:2001]:8333","[2604:a880:2:d0::22fa:3001]:8333","[2604:a880:2:d0::301:8001]:8333","[2604:a880:2:d0::38:f001]:8333","[2604:a880:2:d0::46:f001]:8333","[2604:a880:2:d0::b2:9001]:8333","[2604:a880:400:d0::1ac4:b001]:8333","[2604:a880:400:d0::2004:4001]:8333","[2604:a880:400:d0::2004:5001]:8333","[2604:a880:400:d0::2004:6001]:8333","[2604:a880:400:d0::2004:c001]:8333","[2604:a880:400:d0::2004:d001]:8333","[2604:a880:400:d0::2004:e001]:8333","[2604:a880:400:d0::2004:f001]:8333","[2604:a880:400:d0::2005:1]:8333","[2604:a880:400:d0::2005:2001]:8333","[2604:a880:400:d0::2005:3001]:8333","[2604:a880:400:d0::261f:6001]:8333","[2605:4d00::50]:8333","[2605:6000:e8c8:6701:7562:de11:245c:f6ba]:8333","[2605:9880:0:3::8333]:8333","[2605:9880:201:17::4b7c]:8333","[2605:9880:201:6:ec4:7aff:fe6c:a660]:8333","[2605:a000:f343:b700:5054:ff:fea7:131]:8333","[2605:ae00:203::203]:8333","[2605:c000:2a0a:1::102]:8333","[2605:f700:80:800::3724:81c]:8333","[2605:f700:80:800::38c1:2b84]:8333","[2606:df00:7:4:4caa:2c79:b619:27c9]:8333","[2607:4480:2:1:38:102:69:70]:8333","[2607:5300:120:b7e::]:8333","[2607:5300:201:2000::1:556]:8333","[2607:5300:203:1245::]:8333","[2607:5300:203:14e7::20f]:8333","[2607:5300:203:190a::]:8333","[2607:5300:203:a3::]:8333","[2607:5300:60:10aa::1]:8333","[2607:5300:60:13bb::1]:8333","[2607:5300:60:1ba8::1]:8333","[2607:5300:60:2218::]:8333","[2607:5300:60:26f::1]:8333","[2607:5300:60:2827::]:8333","[2607:5300:60:2c16::]:8333","[2607:5300:60:3ddf::]:8333","[2607:5300:60:9ad::1]:8333","[2607:5300:60:ac0::1]:8333","[2607:5300:61:c50::]:8333","[2607:5300:61:f5b::]:8333","[2607:9000:0:6:1:0:36b:5a5]:8333","[2607:f178:0:8::106]:8333","[2607:f1c0:823:af00::35:bbd1]:8333","[2607:f1c0:846:9a00::87:d00e]:8333","[2607:f2d8:4005:d:a8a2:eeff:fee0:a859]:8333","[2607:f470:14:a:21d:7dff:fe01:bcee]:8333","[2607:fa18:0:beef::c012]:8333","[2607:fd70:4a:babe:b00b:1e5:0:1]:8333","[2607:fea8:e2df:f87e:4b8e:8a8c:8167:ec0d]:8333","[2607:fea8:e60:574:fdbc:add5:eabd:4d9e]:8333","[2610:1a0:103:4a:dead:beaf:0:cafe]:8333","[2610:1a0:103:4a:dead:beef:1:cafe]:8333","[2801:80:930::63]:8333","[2803:1500:1200:c487::1]:8333","[2a00:16d8:c::5b6a:c261]:8333","[2a00:1a48:7810:101:be76:4eff:fe08:c774]:8333","[2a00:1c48:6:108:a6bf:1ff:fe16:35c1]:8333","[2a00:1c60:0:12:e2d5:5eff:fe09:257d]:8333","[2a00:1ca8:37::65e9:f438]:8333","[2a00:4802:360::ff9]:8333","[2a00:7c80:0:97::7]:8333","[2a00:8a60:e012:a00::21]:8333","[2a00:bbe0:0:42:222:64ff:fe9a:e206]:8333","[2a00:bbe0:cc:0:6651:6ff:fe0e:9418]:8333","[2a00:c440:10:1c62:1234::1]:8333","[2a00:c440:40:33b:9d1c:7726:5571:c862]:8333","[2a00:c70:1:213:246:56:95:1]:8333","[2a00:ee2:1200:1900:20c:29ff:fe81:a0a3]:8333","[2a00:f940:2:1:2::1086]:8333","[2a00:f940:2:1:2::184b]:8333","[2a01:238:4343:7700:3e6:f65c:5e57:511c]:8333","[2a01:238:43a6:6500:5e5c:24bb:5e39:d96f]:8333","[2a01:4240:a21:983b::c0a8:32]:8333","[2a01:488:66:1000:2ea3:7633:0:1]:8333","[2a01:4d60:3:1:5::1]:8333","[2a01:4f8:10a:10a8::2]:8333","[2a01:4f8:10a:1d8f::2]:8333","[2a01:4f8:10a:239c::2]:9002","[2a01:4f8:10a:2ae0::2]:8333","[2a01:4f8:10a:31d3::2]:8333","[2a01:4f8:10a:3718::2]:8333","[2a01:4f8:10a:3fe4::2]:8333","[2a01:4f8:10a:41c1::2]:8333","[2a01:4f8:10b:18c2::2]:8333","[2a01:4f8:10b:2a9b::2]:8333","[2a01:4f8:10b:2e18::2]:8333","[2a01:4f8:10b:2e19::2]:8333","[2a01:4f8:10b:2e8c::3]:8333","[2a01:4f8:10b:d50::2]:8333","[2a01:4f8:10b:e2d::2]:8333","[2a01:4f8:10b:ee1::2]:8333","[2a01:4f8:10b:f04::2]:8333","[2a01:4f8:10b:f44::2]:8333","[2a01:4f8:110:411f::2]:8333","[2a01:4f8:120:1391::2]:8333","[2a01:4f8:120:62e6::2]:8333","[2a01:4f8:120:702e::2]:8333","[2a01:4f8:130:618e::2]:8333","[2a01:4f8:130:71d2::2]:8333","[2a01:4f8:130:7422::2]:8333","[2a01:4f8:13b:271c::2]:8333","[2a01:4f8:13b:3810::2]:8333","[2a01:4f8:140:2123::2]:8333","[2a01:4f8:140:3144::2]:8333","[2a01:4f8:140:4201::2]:8333","[2a01:4f8:140:524a::2]:8333","[2a01:4f8:140:5329::102]:8333","[2a01:4f8:140:624c::2]:8333","[2a01:4f8:140:7173::2]:8333","[2a01:4f8:140:82b6::2]:8333","[2a01:4f8:140:9082::2]:8333","[2a01:4f8:140:931a::2]:8333","[2a01:4f8:141:13b1::2]:8333","[2a01:4f8:141:22ae::2]:8333","[2a01:4f8:141:2426::2]:8333","[2a01:4f8:141:5491::2]:8333","[2a01:4f8:150:32f2::2]:8333","[2a01:4f8:150:4107::2]:5001","[2a01:4f8:150:4226::2]:8333","[2a01:4f8:150:5327::2]:8333","[2a01:4f8:150:53a4::2]:8333","[2a01:4f8:150:53a4::4]:8333","[2a01:4f8:150:728f::2]:8333","[2a01:4f8:150:72ee::4202]:8333","[2a01:4f8:150:7331::2]:8333","[2a01:4f8:151:82d2::2]:8333","[2a01:4f8:160:3324::2]:8333","[2a01:4f8:160:41f0::1:33]:8333","[2a01:4f8:160:542e::2]:8333","[2a01:4f8:160:636e::2]:8333","[2a01:4f8:160:74b2::2]:8333","[2a01:4f8:161:2148::2]:8333","[2a01:4f8:161:22e7::2]:8333","[2a01:4f8:161:6091::2]:8333","[2a01:4f8:161:610c::2]:8333","[2a01:4f8:161:9::2]:8333","[2a01:4f8:162:128d::2]:8333","[2a01:4f8:162:14ee::2]:8333","[2a01:4f8:162:2108::2]:8333","[2a01:4f8:162:33ac::2]:8333","[2a01:4f8:162:3462::2]:8333","[2a01:4f8:162:4110::2]:8333","[2a01:4f8:162:424c::2]:8333","[2a01:4f8:171:1c3::2]:8333","[2a01:4f8:171:3248::2]:8333","[2a01:4f8:171:d4a::2]:8333","[2a01:4f8:172:1568::2]:8333","[2a01:4f8:172:1823::2]:8333","[2a01:4f8:172:29ef::2]:8333","[2a01:4f8:173:1622::2]:8333","[2a01:4f8:173:1c9c::2]:8333","[2a01:4f8:173:294f::2]:8333","[2a01:4f8:173:2d9c::2]:8333","[2a01:4f8:190:24eb::2]:8333","[2a01:4f8:190:528d::2]:8333","[2a01:4f8:191:22ee::2]:8333","[2a01:4f8:191:3068::2]:8333","[2a01:4f8:191:40ef::2]:8333","[2a01:4f8:191:60a5::2]:8333","[2a01:4f8:191:81b7::2]:8333","[2a01:4f8:192:1b2::2]:8333","[2a01:4f8:192:34d0::2]:8333","[2a01:4f8:192:4a5::2]:8333","[2a01:4f8:192:628a::83]:8333","[2a01:4f8:200:1012::2]:8333","[2a01:4f8:200:24bb::2]:8333","[2a01:4f8:200:32a6::2]:8333","[2a01:4f8:200:442d::2]:8333","[2a01:4f8:200:6346::2]:8333","[2a01:4f8:200:7222::2]:8333","[2a01:4f8:200:90c3::2]:8333","[2a01:4f8:201:4017::11]:8333","[2a01:4f8:201:6016::2]:8333","[2a01:4f8:202:3030::2]:8333","[2a01:4f8:202:32c6::2]:8333","[2a01:4f8:202:53c3::2]:8333","[2a01:4f8:202:7227::2]:8333","[2a01:4f8:210:5488::2]:8333","[2a01:4f8:211:13cf::2]:8333","[2a01:4f8:211:1643::2]:8333","[2a01:4f8:211:17c6::2]:8333","[2a01:4f8:211:1e17::2]:8333","[2a01:4f8:211:d99::133]:8333","[2a01:4f8:211:f08::2]:8333","[2a01:4f8:212:1e16::2]:8333","[2a01:4f8:212:311::2]:8333","[2a01:4f8:221:1384::2311]:8333","[2a01:4f8:221:3c82:fea1::666]:8333","[2a01:4f8:221:801::2]:8333","[2a01:4f8:221:f59::2]:8333","[2a01:4f8:a0:108c::2]:8333","[2a01:4f8:a0:2232::2]:8333","[2a01:4f8:a0:4366::2]:8333","[2a01:4f8:a0:6147::2]:8333","[2a01:4f8:a0:746a:101:1:1:2]:8333","[2a01:4f8:a0:828a::2]:8333","[2a01:4f8:a0:9163::2]:8333","[2a01:4f8:b10:5009::2]:8333","[2a01:4f8:c0c:10dc::2]:8333","[2a01:4f8:c0c:1ff7::2]:8333","[2a01:4f8:c0c:2262::2]:8333","[2a01:4f8:c0c:354c::2]:8333","[2a01:4f8:c0c:4242::2]:8333","[2a01:4f8:c0c:4816::2]:8333","[2a01:4f8:c0c:dcc::2]:8333","[2a01:4f8:c17:24ee::2]:8333","[2a01:4f8:c17:330f::2]:8333","[2a01:4f8:c17:3b02::2]:8333","[2a01:4f8:c17:5dc0::2]:8333","[2a01:4f8:c17:67f8::2]:8333","[2a01:4f8:c17:710b::2]:8333","[2a01:4f8:c17:714::2]:8333","[2a01:4f8:c17:e00::2]:8333","[2a01:5c0:10:6eb1:89b8:bb58:25a:6050]:8333","[2a01:680:10:10::1]:8333","[2a01:6f0:ffff:120::8dcb]:8333","[2a01:7a0:2:1374::4]:8333","[2a01:7a0:2:1374::5]:8333","[2a01:7a0:2:1374::7]:8333","[2a01:7a7:2:1218:ec4:7aff:fe83:83c4]:8333","[2a01:7a7:2:1288:ea39:35ff:fef0:c429]:8333","[2a01:7a7:2:155c:346c:8f5:719f:a6b6]:8333","[2a01:7a7:2:1565:9484:509b:2a3b:a773]:8333","[2a01:7c8:aaaa:373:5054:ff:feb3:2947]:8333","[2a01:7c8:aab5:3e6:5054:ff:fed7:4e54]:8333","[2a01:7c8:aaba:343::8333]:8333","[2a01:7c8:aabd:3d5:5054:ff:fe95:f586]:8333","[2a01:7c8:aac1:453:c50:fa3a:229:8504]:8333","[2a01:7c8:aac7:5e:5054:ff:fee9:bdf7]:8333","[2a01:be00:10:201:0:80:cece:1]:8333","[2a01:cb00:2ca:b700:2079:b33f:cf5a:5958]:8333","[2a01:cb00:b3:d300:90fd:e3b1:28de:116c]:8333","[2a01:cb14:b8:a500:dd9d:80f5:d305:68f9]:8333","[2a01:d0:0:1c::245]:8333","[2a01:e0a:d:6ea0:56:deab:1b2f:300b]:8333","[2a01:e34:ecfd:1910:58fb:c2ff:feac:571f]:8333","[2a01:e34:eed7:6670:e150:6bb0:f11b:d6d8]:8333","[2a01:e35:2433:e320:9c8e:6ff0:990f:f06e]:8333","[2a01:e35:2ee5:610:21f:d0ff:fe4e:7460]:8333","[2a01:e35:8be7:53d0:b8d5:de58:95b5:dd16]:8333","[2a01:e35:8bff:70b0:1e1b:dff:fe0b:236d]:8333","[2a02:1205:34c3:bae0:baae:edff:feea:9445]:8333","[2a02:1205:5004:de00:c84:4a1:e760:cf90]:8333","[2a02:1205:5076:ee00:d6c9:efff:fe65:fbfb]:8333","[2a02:1205:c6be:84e0:ca2a:14ff:fe0b:803b]:8333","[2a02:1206:45c3:be80:d4a4:3215:aaf0:85aa]:8333","[2a02:120b:2c2a:5ec0:10dd:31ff:fe42:5079]:8333","[2a02:120b:2c3f:3fc0:10dd:31ff:fe42:5079]:8333","[2a02:121e:3e87:0:7d3a:fe09:b619:6b4b]:8333","[2a02:168:420b:a::20]:8333","[2a02:168:4a01::39]:8333","[2a02:168:4a35:0:2e44:fdff:fe9a:46dc]:8333","[2a02:180:1:1::517:10b6]:8333","[2a02:180:6:1::18]:8333","[2a02:1810:1d13:7200:848b:c4c4:526b:e657]:8333","[2a02:181f:0:2161:8f0:54b2:222c:b315]:8333","[2a02:20c8:1422:1::a3]:8333","[2a02:2168:80d:6e8::2]:8333","[2a02:2168:d05:2c00:216:3eff:fef7:a099]:8333","[2a02:2528:503:2::14]:8333","[2a02:2808:5401:0:225:90ff:fe4e:ee42]:8333","[2a02:390:9000:0:218:7dff:fe10:be33]:8333","[2a02:7aa0:1201::bd4e:1219]:8333","[2a02:7aa0:1619::590:eba2]:8333","[2a02:7b40:50d0:e0d9::1]:8333","[2a02:7b40:50d0:e335::1]:8333","[2a02:7b40:c287:53af::1]:8333","[2a02:7b40:d418:60c5::1]:8333","[2a02:7b40:d418:6a84::1]:8333","[2a02:8108:9c3f:dd18:922b:34ff:fe30:ac42]:8333","[2a02:8109:9ac0:2a2b:707a:ad1a:70c:84a9]:8333","[2a02:810d:8a40:36f8:9af2:b3ff:fee8:6d7a]:8333","[2a02:810d:9840:7e50::227]:8333","[2a02:930:1:0:250:56ff:fe8e:2819]:8333","[2a02:c200:1:10:2:4:334:1]:8333","[2a02:c200:1:10:2:5:227:1]:8333","[2a02:c200:1:10:2:5:800:1]:8333","[2a02:c205:0:5145::1]:8333","[2a02:c205:2008:272::1]:8333","[2a02:c205:2008:7160::1]:8333","[2a02:c205:2009:7804::1]:8333","[2a02:c205:2014:1981::1]:8333","[2a02:c205:2014:3524::1]:8333","[2a02:c205:2015:2475::1]:8333","[2a02:c205:3002:2787::1]:8333","[2a02:c207:2002:9013::1]:8333","[2a02:c207:2007:4699::1]:8333","[2a02:c207:2008:6519::1]:8333","[2a02:c207:2009:213::1]:8333","[2a02:c207:2011:2583::1]:8333","[2a02:c207:2012:263::1]:8333","[2a02:c207:2012:2917::1]:8333","[2a02:c207:2012:4826::1]:8333","[2a02:c207:2013:3160::1]:8333","[2a02:c207:2014:4199::1]:8333","[2a02:c207:2014:5639::1]:8333","[2a02:c207:2014:7160::1]:8333","[2a02:c207:2014:8104::1]:8333","[2a02:c207:2014:8536::1]:8333","[2a02:c207:2014:9433::1]:8333","[2a02:c207:2015:4997::1]:8333","[2a02:c207:2015:5919::1]:8333","[2a02:c207:3001:5824::1]:8333","[2a02:c207:3001:7645::1]:8333","[2a02:c207:3001:7776::1]:8333","[2a02:c207:3001:9320::1]:8333","[2a02:c207:3002:1287::1]:8333","[2a02:c207:3002:1532::1]:8333","[2a02:c207:3002:2432::1]:8333","[2a02:c207:3002:4431::1]:8333","[2a02:c207:3002:809::1]:8333","[2a02:c7f:7c2c:a800:428d:5cff:fe74:1455]:8333","[2a02:c7f:d826:1901:20c:29ff:fe11:9d0e]:8333","[2a02:ce80:0:20::1]:8333","[2a03:4000:2:496::8]:8333","[2a03:7380:300:16::]:8333","[2a03:7380:300:7:a19f:eb0b:ae0:6aad]:8333","[2a03:b0c0:3:d0::1219:6001]:8333","[2a03:b0c0:3:d0::23fb:6001]:8333","[2a03:b0c0:3:d0::44b8:9001]:8333","[2a03:b0c0:3:d0::44b8:a001]:8333","[2a03:b0c0:3:d0::44b8:b001]:8333","[2a03:b0c0:3:d0::44b8:e001]:8333","[2a03:b0c0:3:d0::44b8:f001]:8333","[2a03:b0c0:3:d0::44b9:1]:8333","[2a03:b0c0:3:d0::44b9:1001]:8333","[2a03:b0c0:3:d0::44b9:2001]:8333","[2a03:b0c0:3:d0::44b9:4001]:8333","[2a03:b0c0:3:d0::4:1]:8333","[2a03:b0c0:3:d0::5e48:d001]:8333","[2a03:b0c0:3:d0::c7:f001]:8333","[2a03:b0c0:3:d0::e9:f001]:8333","[2a03:ff40:4ed1:1004:a236:9fff:feb4:f9f8]:8333","[2a04:2180:0:2::94]:8333","[2a04:2180:1:6:f000::14]:8333","[2a04:52c0:101:122::496d]:8333","[2a04:dbc3:fffe:0:e61f:13ff:fe95:8401]:8333","[2a05:3580:d400:140d:da6e:826e:e771:4100]:8333","[2a05:bec0:1:1:216:3eff:fe73:d20a]:8333","[2a06:3d80:b:1:48b4:bedd:6964:54ac]:8333","[2a06:3d80:b:1:ae1f:6bff:fe13:c13e]:8333","[2a06:3d80:b:2:ae1f:6bff:fe13:c13e]:8333","[2a06:3d80:b:2:ec4:7aff:fe96:b570]:8333","[2a07:5740:600::14ad:9cec]:8333","[2a07:5740:600::1b5:3082]:8333","[2a07:5741:0:d8b::1]:8333","226eupdnaouu4h2v.onion:8333","2ej5qoyruoeijadb.onion:8333","2f4xg7m3g6vtxqcd.onion:8333","3ig6dutfdd6pkkw4.onion:8333","3r44ddzjitznyahw.onion:8333","53tsjt6zq3iasv5q.onion:8333","546esc6botbjfbxb.onion:8333","5elzwcg4xysogalo.onion:8333","5ygszbkbbauzjx7m.onion:8333","64qrhyxglyjjhkne.onion:8333","66ehyqkvke6td4fy.onion:8333","6ruyo3kysvd27dlf.onion:8333","6tr7cshvx5aymzth.onion:8333","7nubu2wy3xizgwzu.onion:8333","7nui6eestaw2f7xm.onion:8333","7qg6jdmahfxamay5.onion:8333","ab7ftdfw6qhdx3re.onion:8333","ajqvsylg5xd5vs3y.onion:8333","alhlegtjkdmbqsvt.onion:8333","b5d6etfljm2lje5y.onion:8333","b7xer7moeiiz56cp.onion:8333","brwqezn6le54w2bb.onion:8333","bup5n5e3kurvjzf3.onion:8333","bvay66ezgxwo7wj4.onion:8333","cgk4u2lxrvml4jvb.onion:8333","cpyfqbs4fs3vnbpf.onion:8333","cyvpgt25274i5b7c.onion:8333","d26tupmbhdjmxzwm.onion:8333","d6wubsdtr46dd5ki.onion:8333","dekj4wacywpqsad3.onion:8333","dqpxwlpnv3z3hznl.onion:8333","dsrwqwijtsvi4dfk.onion:42434","dxkmtmwiq7ddtgul.onion:8333","e3zbephvcqmzcqkr.onion:8333","eab5op3z24n7eqd5.onion:8333","ejcqevujcqltqn7d.onion:8333","ep2mjzox3kvb6ax4.onion:8333","f34cshhal2nuljsc.onion:8333","f3nfioh27j2xlfe5.onion:8333","f6h7ukyyiczlyvml.onion:8333","faewczjuzs4wfxhv.onion:8333","fnk3dioogxals7r4.onion:8333","hahhloezyfqh3hci.onion:8333","ifruqn4x7nbn5pba.onion:8333","ijmbmziunbszzxtj.onion:8333","imperialnza3tqgh.onion:8333","in7r5ieo7ogkxbne.onion:8333","iuenlcarsnsstiix.onion:8333","jtksnokusbzms7wl.onion:8333","k6cpe3hatrrxvnz6.onion:8333","kswfyurnglm65u7b.onion:8333","kvd44sw7skb5folw.onion:8333","l2pruzr3mnhieuug.onion:8333","l5oddj46pvoddzd4.onion:8333","lgkvbvro67jomosw.onion:8333","loflfbxumxm55biq.onion:8333","m6jrhrqvjbnzla3r.onion:8333","mvomwfdddqfqg3lq.onion:8333","o4dfb6tp33ff2lq7.onion:8333","o4sl5na6jeqgi3l6.onion:8333","o72zyzrv77ea2bwu.onion:8333","omts4ofhwqjdulr6.onion:8333","pbnlp7m4kujma6iz.onion:8333","pcfhsdqzs6q63ryu.onion:8333","pjghcivzkoersesd.onion:8333","pz2x5nfhjipshaz3.onion:8333","qaxm5spmx5d2k3up.onion:8333","qepth54daysmpy5y.onion:8333","qgw4jb6yikp44ypa.onion:8333","qj6irqn2i73edff5.onion:8333","qlv6py6hdtzipntn.onion:8333","qv4hq75asyitkmas.onion:8333","r3dsojfhwcm7x7p6.onion:8333","rjacws757ai66lre.onion:8333","seoskudzk6vn6mqz.onion:8333","smtmhcewuv6tjynv.onion:8333","stil3scvqbvhowvb.onion:8333","tchop676j6yppwwm.onion:8333","toguvy5upyuctudx.onion:8333","tpx4jan5n2a2cci2.onion:8333","trrtyp3sirmwttyu.onion:8333","u7mpvxotmnqntyn5.onion:8333","ueo6royc3775ioq7.onion:8333","vev3n5fxfrtqj6e5.onion:8333","visevrizz3quyagj.onion:8333","vnzfcobvaqahooun.onion:8333","w2dtur5kugapw3rp.onion:8333","wg6vwmbrzyyzapun.onion:8333","wmxc6ask4a5xyaxh.onion:8333","xz3bsfhiqucn37gd.onion:8333","ypzld2xyidu6ymqc.onion:8333","yyuxafli7fqdizhq.onion:8333","ziew7smr2dl2hg2q.onion:8333","zsq5qogtoshzkqad.onion:8333"]},function(t,e,i){"use strict";t.exports=["thfsmmn2jbitcoin.onion","it2pj4f7657g3rhi.onion","nkf5e6b7pl4jfd4a.onion","4zhkir2ofl7orfom.onion","t6xj6wilh4ytvcs7.onion","i6y6ivorwakd7nw3.onion","ubqj4rsu3nqtxmtp.onion","206.189.210.107:18333","[2a02:c207:2020:2583::1]:18333","52.59.254.220:18333","195.201.139.202:18333","186.24.252.114:18333","99.62.184.68:18333","[2a01:4f8:c17:199c::2]:18333","139.162.90.51:18333","185.211.58.68:18333","54.249.51.109:18333","159.65.238.250:18333","128.199.150.233:18334","18.215.126.20:18333","104.198.116.20:18333","45.76.111.197:18333","59.27.21.157:18333","106.75.224.68:18333","138.201.238.212:18333","52.1.65.208:18333","59.110.12.12:18333","188.166.57.16:18333","93.242.120.15:18333","104.130.253.244:18333","[2a01:7c8:d001:4be:5054:ff:fef6:95db]:18333","35.195.234.115:18333","[2001:0:9d38:90d7:24a9:2680:86b1:2041]:18333","178.44.0.188:18333","132.68.60.150:18333","[2601:186:c100:6bcd:219:d1ff:fe75:dc2f]:18333","18.218.202.222:18333","35.198.156.243:18333","54.250.226.223:18333","202.32.183.71:18333","52.243.61.218:18333","43.247.163.162:18333","195.218.178.122:18333","78.41.192.10:18333","122.165.21.214:18333","62.77.152.212:18333","91.209.51.90:18333","217.182.197.109:18333","93.40.7.67:18333","[2001:638:a000:4140::ffff:191]:18333","41.210.147.78:18333","[2a01:4f8:151:30c9::2]:18333","100.26.189.204:18333","195.201.131.199:18333","18.208.215.27:18333","95.216.35.252:18333","119.139.196.90:18333","52.79.236.4:18333","18.237.204.203:9343","35.185.183.88:18333","38.96.155.198:18333","13.125.214.173:18333","141.223.85.156:18333","47.74.48.92:18333","24.232.218.134:18333","213.239.212.79:25010","202.32.183.87:18333","173.212.194.197:18333","62.210.113.130:18333","23.241.161.131:18333","142.112.184.102:18333","47.75.70.201:18333","206.189.166.210:18333","85.216.75.225:18333","192.250.236.149:18333","202.32.183.72:18333","178.128.112.159:18333","92.210.111.119:18333","78.46.44.138:8343","[2a01:4f8:221:4689::2]:18333","92.222.39.78:18333","18.179.1.217:18333","54.165.195.4:18333","82.214.94.14:18333","34.222.102.24:18333","109.190.44.233:18333","178.63.49.222:18333","[2400:8901::f03c:91ff:fe81:6f9b]:18333","[2a02:7b40:b0df:8401::1]:18333","198.27.208.77:18333","121.196.211.239:12002","106.75.224.88:18333","132.232.11.31:18333","112.166.245.2:18333","34.207.108.77:18333","159.65.254.106:18333","181.30.30.53:18333","95.216.36.232:18333","100.24.50.66:18333","169.1.13.216:18333","120.79.73.209:18333","203.104.158.165:18000","140.143.140.78:18333","82.221.111.136:18333","13.115.115.90:18352","[2a01:4f8:160:4425::2]:18333","[2002:b2c9:e697:10:8de0:efc6:f8af:45ec]:18333","35.198.232.206:18333","88.208.3.158:18333","64.15.128.128:19000","188.154.144.206:18333","54.66.200.174:18333","13.78.35.128:18333","159.203.183.112:18333","23.105.240.44:18333","89.47.165.232:18333","54.92.98.67:18333","35.196.227.21:18333","188.225.18.57:18333","158.69.226.187:18333","35.241.203.98:18333","47.254.33.91:18333","[2a01:4f9:2a:2768::2]:18333","[2a02:7b40:b0df:8682::1]:18333","112.222.87.222:18333","18.136.144.35:18333","69.61.93.254:18333","59.56.110.11:18333","13.229.105.16:18333","172.104.24.78:18333","34.205.125.180:18333","104.248.206.83:18333","[2a01:4f9:2b:628::2]:18333","142.93.57.143:18333","176.233.134.238:18333","159.65.131.43:18333","89.248.168.43:18333","35.167.57.238:18333","193.70.127.197:18333","93.94.252.175:18333","213.133.103.178:18333","[2001:999:11:5d72:6425:89fa:fa63:445e]:18333","216.221.61.175:18333","149.28.179.14:18333","18.209.104.24:18333","64.147.90.37:18333","66.220.116.3:18333","52.80.239.210:18336","193.0.217.2:18333","24.35.243.25:18333","[2a02:a03f:4721:2200:5c7c:282:aafa:5d98]:18333","96.95.43.147:18333","195.201.81.229:18333","13.230.27.206:18333","18.130.66.235:18333","136.144.129.222:18333","[2a02:2698:7022:166e:3978:80df:7098:5723]:18333","[2a00:7c80:0:71::8]:18333","34.228.37.151:18333","139.162.90.51:18333","[2a01:4f8:190:320c::2]:18333","144.76.27.145:18333","157.97.106.250:18333","35.198.197.205:18333","145.239.6.138:18333","209.58.171.72:18333","[2607:1a00:0:19::fe]:18333","176.223.132.1:18333","[2a01:4f8:221:e49::2]:18333","18.212.212.24:18333","37.187.126.235:18333","52.221.194.9:18333","[2a01:4f8:190:5176::123]:18333","78.47.80.251:18333","84.209.52.208:18333","35.226.233.60:18333","[2a02:c207:2014:5152::1]:18333","159.69.123.83:18333","120.76.201.4:18333","93.190.142.127:18333","186.24.252.114:18333","144.76.71.57:18333","104.248.46.141:18333","159.89.34.110:18333","[2001:41d0:1008:2752::]:9343","188.166.104.86:18333","52.231.157.20:18333","[2a01:4f8:202:626f::2]:18333","167.99.38.203:18333","138.201.252.11:18333","5.9.157.150:18333","51.140.13.130:18333","[2001:41d0:602:e27::]:18333","121.196.197.246:18333","54.183.185.30:18333","183.14.135.209:18333","95.236.56.118:18333","112.133.236.150:18333","176.160.250.226:18333","124.159.172.18:18333","82.116.203.100:18333","54.38.70.176:18333","198.199.76.171:18333","18.191.17.25:18333","5.9.113.104:18333","47.100.227.247:18326","134.175.205.126:18333","58.229.208.152:18333","47.97.70.25:18333","34.246.89.159:18333","158.174.118.167:18333","120.79.250.108:18333","[2a01:4f8:120:918c::2]:18333","159.65.3.215:18333","[2a02:c207:3002:1287::1]:18333","58.107.227.226:18333","176.185.193.160:18333","35.241.186.53:18333","174.142.192.197:19000","35.158.243.90:18333","18.205.96.229:18333","178.128.244.253:18333","47.94.4.179:18333","66.190.107.222:18333","[2a01:7e01::f03c:91ff:fe4d:761d]:18333","119.28.227.248:18333","46.105.108.104:8444","[2a01:4f9:2a:1c85::2]:18333","52.60.133.166:18333","94.130.35.43:18333","103.57.147.217:18333","[2a01:4f8:192:826f::2]:18333","40.115.138.202:18333","142.93.98.153:18333","[2a02:c207:2016:395::1]:18333","38.99.144.10:18333","[2a01:4f8:c0c:1fee::2]:18333","123.185.66.20:18333","104.248.241.134:18333","[2001:470:26:52:58df:b18a:48be:e30e]:18333","[2002:a938:723a::a938:723a]:18333","46.4.157.54:18333","ocasutxnvl4lwegq.onion:18333","35.200.107.60:18333","52.197.170.28:18333","[2600:3c01::f03c:91ff:fee4:ff34]:18333","119.137.52.21:18333","183.14.134.216:18333","203.173.116.91:18333","85.76.2.119:18333","34.219.43.200:18333","142.93.135.102:18333","175.126.163.102:18333","159.203.67.44:18333","35.199.85.227:18333","[2001:19f0:5:eec:ec4:7aff:fe8e:f776]:18333","175.28.136.111:18333","209.97.171.251:18333","88.99.216.98:18333","95.216.36.212:18333","131.188.40.191:18333","13.250.173.230:20333","35.158.243.90:18333","54.250.250.108:18333","39.105.54.203:18333","[2401:a400:3200:5600:b618:d673:f3d9:60da]:18333","85.214.199.24:18333","52.1.65.208:18333","142.44.244.65:18333","[f00d::ae4:100:0:8b15]:18333","5.189.173.60:18333","47.75.70.201:18333","164.132.229.117:18333","13.80.154.5:18333","94.130.14.223:18334","149.28.176.234:18333","54.93.252.1:18333","159.89.159.50:18333","142.93.182.203:18333","94.130.14.223:18333","47.92.119.144:18333","148.251.245.240:18333","52.56.223.26:18333","198.50.128.9:18333","[2a01:4f8:231:915::2]:18333","47.75.57.4:18333","159.65.130.79:18333","51.15.3.210:18333","p7cymjceyfabl45d.onion:18333","192.99.21.101:18333","128.199.43.159:18333","223.72.46.82:18333","84.44.192.184:18333","59.53.22.24:18333","92.53.120.80:18333","78.46.93.242:18333","[2a01:4f8:1c1c:7747::1]:18333","5.9.148.201:18333","95.216.28.122:18333","149.28.163.40:18333","195.201.17.162:18333","47.75.70.201:16333","34.242.160.29:18333","195.177.209.31:18333","136.144.177.25:18333","124.239.252.50:18333","166.87.251.238:18333","108.20.200.187:18333","94.130.215.188:18333","54.37.194.57:18333","178.128.242.54:18333","103.76.36.113:18333","13.59.126.171:18333","95.216.36.212:18333","62.113.245.45:18333","45.79.136.38:18333","178.128.251.37:18333","[2a07:5740:600::e21:3981]:18333","159.65.232.228:18333","95.164.65.194:18333","203.156.197.136:18333","217.182.81.231:18333","18.219.185.29:18333","35.229.134.217:18333","52.62.107.245:18333","58.229.6.99:18333","104.130.141.235:18333","34.244.115.230:18333","52.78.61.161:8332","69.61.93.240:18333","85.214.51.188:18333","180.181.208.42:18333","198.251.83.19:18333","18.203.176.193:18333","88.198.54.148:18333","80.100.203.151:18333","78.24.185.211:18333","52.185.151.112:18333","86.157.22.196:18333","54.185.138.211:18333","165.227.46.200:18333","[2607:5300:60:122a::1]:18333","[2a01:4f8:1c1c:13d6::1]:18333","197.231.221.211:18333","45.32.169.150:18333","64.15.128.128:19000","[2a01:4f8:160:60aa::2]:18333","142.114.29.146:18333","62.210.252.112:18333","203.162.80.96:18333","5.153.129.229:18333","54.154.229.14:18333","5.9.2.145:18333","183.15.179.183:18333","94.130.196.179:18333","185.142.236.46:18333","52.79.83.91:8332","162.212.158.172:18333","[2a02:c207:2019:6174::1]:18333","188.127.231.188:18333","176.9.158.59:18333","176.9.28.202:18333","188.40.93.205:8433","67.40.207.136:18333","52.56.193.245:18333","172.105.194.235:18333","[2001:19f0:5:5e0a:5400:1ff:feb3:fe70]:18333","[2607:5300:60:97bb::]:18333","27.255.83.134:18333","118.163.74.161:18333","35.237.7.206:18333","5.189.155.167:18333","5.9.41.203:18333","106.14.187.240:18333","18.203.142.189:18333","5.35.240.94:18333","149.202.114.201:18333","89.39.107.219:18333","[2a01:4f8:1c1c:5b33::1]:18333","5.9.41.195:18333","34.248.224.68:18333","46.101.124.20:18333","206.189.152.173:18333","94.23.196.189:18333","51.68.152.207:18333","18.215.126.20:18333","198.58.102.18:18333","118.243.116.125:18333","198.245.50.69:8306","35.176.132.216:18333","[2001:0:dedd:5fc:34f0:1efa:3f57:ff74]:18333","206.189.224.183:18333","18.102.228.25:18333","179.125.29.69:18333","13.125.228.145:18333","[2601:182:ce00:991a::95e0]:18333","88.99.162.254:18333","71.232.134.0:18333","[2001:0:9d38:953c:38d1:dd9d:8c11:3dcb]:18333","123.112.109.89:18333","[2600:1700:57f0:8050:552b:b508:b8f8:eec3]:18333","119.59.98.71:18333","183.14.30.236:18333","[2001:0:5ef5:79fd:38c4:138c:41eb:e85c]:18333","50.28.99.81:18333","77.180.163.37:18333","150.249.209.137:18333","13.78.35.128:18333","52.80.239.210:18336","52.80.239.210:18332","195.201.108.3:18333","178.128.171.81:18333","163.172.183.126:18333","67.205.179.161:18333","173.212.235.217:18333","109.236.91.15:18333","104.198.116.20:18333","[2a01:4f9:2b:4ca::2]:18333","212.32.231.161:18333","116.125.120.98:18333","52.209.118.89:18333","104.196.153.160:18333","58.229.6.99:18333","13.125.190.124:18333","88.198.207.38:18333","13.251.176.17:18333","188.163.43.20:18333","91.121.95.47:18333","88.208.3.158:18333","85.214.213.86:18333","47.94.219.233:18333","51.15.81.77:18333","151.62.194.236:18333","[2a00:1370:8114:a60d:35e8:b8ee:a828:43f8]:18333","95.179.141.44:18333","47.91.237.127:18333","18.212.60.14:18333","47.75.96.152:18333","207.180.231.27:18333","[2a01:4f8:190:5095::2]:18333","139.59.69.9:18333","118.178.237.177:18333","[2001:470:1f06:15b4::2]:18333","142.93.184.212:18333","13.66.220.73:18333","188.166.99.121:18333","111.231.81.157:18333","95.216.10.46:18333","[2a01:4f9:2a:2510::2]:18333","39.59.36.92:18333","188.40.93.205:8433","173.115.51.70:18333","158.174.118.167:18333","94.49.173.156:18333","178.128.206.237:18333","118.178.237.177:18445","188.165.6.48:18333","176.107.130.62:18333","[2001:4800:7818:103:be76:4eff:fe05:ebaf]:18333","13.78.12.166:18333","96.126.122.163:18333","190.85.201.38:18333","198.211.121.134:18333","18.136.201.7:18333","[2a01:4f8:161:30c9::2]:18333","[2001:41d0:800:664::]:18333","193.200.173.204:18221","188.87.137.254:18333","54.39.22.4:18333","95.216.15.164:18333","104.196.184.214:18333","76.169.37.102:18333","159.89.230.135:18333","213.32.48.249:18333","89.23.35.9:18333","34.245.220.108:18333","168.63.150.180:18333","138.201.206.36:18333","[2a01:7c8:fff9:16a:5054:ff:fe2e:c06b]:18333","210.181.103.62:18333","163.172.142.212:18333","206.189.157.197:18333","223.223.192.26:18333","123.59.42.129:18333","104.46.63.228:18333","162.213.248.69:18333","13.209.80.208:18333","34.242.236.161:8333","178.128.22.240:18333","112.133.222.171:18333","18.216.130.155:18333","159.69.58.121:18333","35.200.137.255:18333","188.225.18.57:18333","194.118.44.233:18333","35.204.175.155:18333","34.241.225.111:18333","47.75.26.227:8331","[2a01:4f9:2a:2518::2]:18333","183.15.178.126:18333","121.35.102.43:18333","83.163.113.102:18333","88.198.101.22:18333","[2a01:4f8:13a:189b::2]:18333","[2a02:c207:2019:3730::1]:18333","[2a02:810d:13c0:1254:4dfa:38bb:362f:f9e0]:18333","18.204.135.109:18333","[2001:41d0:a:f7eb::1]:18333","195.201.110.218:18333","163.172.172.58:18333","[2a01:4f8:191:840b::2]:18333","147.135.136.189:18333","139.162.156.64:18333","167.114.64.228:18333","40.115.180.81:18333","209.133.215.145:18333","188.165.6.48:18333","34.250.169.52:18333","192.241.158.203:18333","172.104.211.121:18333","160.16.79.6:18333","172.92.140.254:18333","213.186.121.88:18333","37.135.36.102:18333","163.172.94.64:18333","109.236.91.15:18333","213.207.92.204:18333","217.182.86.135:18333","206.189.152.173:18333","18.205.18.126:18333","46.4.95.69:18333","142.4.213.42:18333","111.230.249.75:18333","52.25.126.192:18333","85.214.245.126:18333","167.99.194.65:18333","173.249.21.93:18333","162.212.156.23:18333","18.182.65.187:18333","217.182.75.186:18333","209.97.167.61:18333","35.205.134.126:18333","[2a03:b0c0:3:e0::24:3001]:18333","[2600:1700:3fa0:d4c0::43]:18333","34.217.79.203:9343","82.116.44.10:18333","34.242.97.159:18333","4.28.137.195:18333","89.139.187.39:18333","[2600:3c00::f03c:91ff:fefe:2fb4]:18333","82.116.32.74:18333","206.189.72.149:18333","213.133.110.173:18333","91.185.7.50:18333","198.179.121.215:18333","212.92.122.106:18333","173.212.235.217:18333","52.68.170.149:18333","52.11.139.19:8333","159.203.84.97:18333","76.95.133.92:18333","185.35.137.175:18333","104.198.114.254:18333","104.248.45.147:18333","195.201.198.52:18333","52.26.68.12:34821","[2002:5bec:ef5e::5bec:ef5e]:18333","52.53.225.38:18333","52.221.246.188:18333","147.135.136.189:18333","38.99.144.10:18333","[2001:e68:6dc3:1901:14b1:3ca8:c388:5184]:18333","54.245.43.178:18333","34.212.171.224:18333","[2a02:120b:2c13:a510:5054:ff:fe38:c4e7]:18333","95.216.25.125:18333","[2a02:c207:2021:3648::1]:18333","47.92.203.183:18333","18.102.228.28:18333","52.231.31.213:18333","[2a01:4f8:150:6369::2]:18333","85.25.95.141:18333","47.94.243.77:18333","207.154.224.115:18333","47.52.36.209:18333","115.159.103.200:18333","35.187.163.198:18333","70.180.7.114:18333","159.69.195.220:18333","45.33.38.168:18333","213.189.209.34:18333","130.211.48.5:18333","103.196.124.252:18333","114.215.66.15:18333","5.9.141.84:18333","193.200.241.55:18333","175.205.153.99:18333","95.79.117.175:18333","167.114.64.228:18333","59.63.206.56:18333","37.131.211.212:18333","18.30.107.114:18333","66.240.223.231:18333","34.246.89.159:18333","188.72.207.114:18333","ky6peumxtc5gkog4.onion:18333","121.78.223.190:18333","195.201.60.234:18333","163.172.94.64:18333","176.9.27.174:18333","38.96.155.198:18333","159.65.70.143:18333","35.198.197.205:18333","[2001:19f0:5:eec:ec4:7aff:fe8e:f776]:18333","13.57.215.93:18333","174.142.192.197:19000","165.227.55.124:18333","34.235.253.194:18333","141.223.85.171:18333","206.189.135.167:18333","27.120.85.91:18333","[2a01:4f8:1c1c:5b33::1]:18333","163.44.170.170:18333","13.70.180.136:18333","[2600:1f1c:c1e:ee3c:7855:3fcf:f351:9cb2]:18333","106.75.224.68:18333","[2a01:4f8:a0:2239::2]:18333","lkiggf5esgs7d5z6.onion:18333","[2a01:4f8:151:41cc::2]:18333","93.175.9.92:18333","52.64.217.88:18333","47.98.124.48:18333","5.9.5.135:18333","45.77.127.10:18333","159.69.94.63:18333","95.216.68.181:18333","13.78.8.218:18333","159.89.221.66:18333","138.68.61.172:18333","184.167.15.34:18333","52.53.231.136:18333","139.199.201.38:18333","52.52.157.63:18333","[2400:8902::f03c:91ff:fe60:a4fe]:18333","159.69.91.38:18333","217.23.8.64:18333","95.216.69.201:18333","176.9.204.213:18333","173.206.91.166:18333","34.250.169.52:18333","203.138.170.52:18333","35.157.221.0:20010","54.180.102.216:18333","35.203.163.50:18333","124.150.205.221:18333","211.184.136.132:18333","[2001:0:dcfa:40e1:14a6:14b2:53ea:f543]:18333"]},function(t,e,i){"use strict";
/*!
 * node.js - node object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(0),s=i(7),n=i(146),o=i(46),a=i(219),h=i(4),c=i(222);t.exports=class extends s{constructor(t,e,i,r){super(),this.config=new a(t,{suffix:"network",fallback:"main",alias:{n:"network"}}),this.config.inject(r),this.config.load(r),(r.file||r.config)&&this.config.open(e),this.network=h.get(this.config.getSuffix()),this.memory=this.config.bool("memory",!0),this.startTime=-1,this.bound=[],this.plugins=Object.create(null),this.stack=[],this.logger=null,this.workers=null,this.spv=!1,this.chain=null,this.fees=null,this.mempool=null,this.pool=null,this.miner=null,this.http=null,this._init(i)}_init(t){const e=this.config;let i=new o;e.has("logger")&&(i=e.obj("logger")),i.set({filename:!this.memory&&e.bool("log-file")?e.location(t):null,level:e.str("log-level"),console:e.bool("log-console"),shrink:e.bool("log-shrink")}),this.logger=i.context("node"),this.workers=new c({enabled:e.bool("workers"),size:e.uint("workers-size"),timeout:e.uint("workers-timeout"),file:e.str("worker-file")}),this.on("error",()=>{}),this.workers.on("spawn",t=>{this.logger.info("Spawning worker process: %d.",t.id)}),this.workers.on("exit",(t,e)=>{this.logger.warning("Worker %d exited: %s.",e.id,t)}),this.workers.on("log",(t,e)=>{this.logger.debug("Worker %d says:",e.id),this.logger.debug(t)}),this.workers.on("error",(t,e)=>{e?this.logger.error("Worker %d error: %s",e.id,t.message):this.emit("error",t)})}async ensure(){if(!n.unsupported&&!this.memory)return n.mkdirp(this.config.prefix)}location(t){return this.config.location(t)}async handlePreopen(){await this.logger.open(),await this.workers.open(),this._bind(this.network.time,"offset",t=>{this.logger.info("Time offset: %d (%d minutes).",t,t/60|0)}),this._bind(this.network.time,"sample",(t,e)=>{this.logger.debug("Added time data: samples=%d, offset=%d (%d minutes).",e,t,t/60|0)}),this._bind(this.network.time,"mismatch",()=>{this.logger.warning("Adjusted time mismatch!"),this.logger.warning("Please make sure your system clock is correct!")})}async handleOpen(){this.startTime=Date.now(),this.workers.enabled||(this.logger.warning("Warning: worker pool is disabled."),this.logger.warning("Verification will be slow."))}async handlePreclose(){}async handleClose(){for(const[t,e,i]of this.bound)t.removeListener(e,i);this.bound.length=0,this.startTime=-1,this.logger.info("Node is closed."),await this.workers.close(),await this.logger.close()}_bind(t,e,i){this.bound.push([t,e,i]),t.on(e,i)}error(t){this.logger.error(t),this.emit("error",t)}uptime(){return-1===this.startTime?0:Math.floor((Date.now()-this.startTime)/1e3)}use(t){r(t,"Plugin must be an object."),r("function"==typeof t.init,"`init` must be a function."),r(!this.loaded,"Cannot add plugin after node is loaded.");const e=t.init(this);if(r(!e.open||"function"==typeof e.open,"`open` must be a function."),r(!e.close||"function"==typeof e.close,"`close` must be a function."),t.id){switch(r("string"==typeof t.id,"`id` must be a string."),t.id){case"chain":case"fees":case"mempool":case"miner":case"pool":case"rpc":case"http":r(!1,`${t.id} is already added.`)}r(!this.plugins[t.id],`${t.id} is already added.`),this.plugins[t.id]=e}return this.stack.push(e),"function"==typeof e.on&&e.on("error",t=>this.error(t)),e}has(t){return null!=this.plugins[t]}get(t){switch(r("string"==typeof t,"Plugin name must be a string."),t){case"chain":return r(this.chain,"chain is not loaded."),this.chain;case"fees":return r(this.fees,"fees is not loaded."),this.fees;case"mempool":return r(this.mempool,"mempool is not loaded."),this.mempool;case"miner":return r(this.miner,"miner is not loaded."),this.miner;case"pool":return r(this.pool,"pool is not loaded."),this.pool;case"rpc":return r(this.rpc,"rpc is not loaded."),this.rpc;case"http":return r(this.http,"http is not loaded."),this.http}return this.plugins[t]||null}require(t){const e=this.get(t);return r(e,`${t} is not loaded.`),e}loadPlugins(){const t=this.config.array("plugins",[]),e=this.config.func("loader");for(let i of t)"string"==typeof i&&(r(e,"Must pass a loader function."),i=e(i)),this.use(i)}async openPlugins(){for(const t of this.stack)t.open&&await t.open()}async closePlugins(){for(const t of this.stack)t.close&&await t.close()}}},function(t,e,i){"use strict";
/*!
 * bcfg.js - configuration parsing for bcoin
 * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */t.exports=i(220)},function(t,e,i){"use strict";(function(e,r,s){
/*!
 * config.js - configuration parsing for bcoin
 * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const n=i(0),o=i(47),a=i(139),h=i(221),c=a.homedir?a.homedir():"/";class l{constructor(t,e){n("string"==typeof t),n(t.length>0),this.module=t,this.prefix=o.join(c,`.${t}`),this.suffix=null,this.fallback=null,this.alias=Object.create(null),this.options=Object.create(null),this.data=Object.create(null),this.env=Object.create(null),this.args=Object.create(null),this.argv=[],this.pass=[],this.query=Object.create(null),this.hash=Object.create(null),e&&this.init(e)}init(t){if(n(t&&"object"==typeof t),null!=t.suffix&&(n("string"==typeof t.suffix),this.suffix=t.suffix),null!=t.fallback&&(n("string"==typeof t.fallback),this.fallback=t.fallback),t.alias){n("object"==typeof t.alias);for(const e of Object.keys(t.alias)){const i=t.alias[e];n("string"==typeof i),this.alias[e]=i}}}inject(t){for(const e of Object.keys(t)){const i=t[e];switch(e){case"hash":case"query":case"env":case"argv":case"config":continue}this.set(e,i)}}load(t){t.hash&&this.parseHash(t.hash),t.query&&this.parseQuery(t.query),t.env&&this.parseEnv(t.env),t.argv&&this.parseArg(t.argv),this.prefix=this.getPrefix()}open(t){if(h.unsupported)return;const e=this.getFile(t);let i;try{i=h.readFileSync(e,"utf8")}catch(t){if("ENOENT"===t.code)return;throw t}this.parseConfig(i),this.prefix=this.getPrefix()}filter(t){n("string"==typeof t);const e=new l(this.module);return e.prefix=this.prefix,e.suffix=this.suffix,e.fallback=this.fallback,e.argv=this.argv,e.pass=this.pass,b(t,this.env,e.env),b(t,this.args,e.args),b(t,this.query,e.query),b(t,this.hash,e.hash),e}set(t,e){n("string"==typeof t,"Key must be a string."),null!=e&&(t=(t=t.replace(/-/g,"")).toLowerCase(),this.options[t]=e)}has(t){return"number"==typeof t?(n(t>=0,"Index must be positive."),!(t>=this.argv.length)):(n("string"==typeof t,"Key must be a string."),t=(t=t.replace(/-/g,"")).toLowerCase(),null!=this.hash[t]||null!=this.query[t]||null!=this.args[t]||null!=this.env[t]||null!=this.data[t]||null!=this.options[t])}get(t,e){if(void 0===e&&(e=null),Array.isArray(t)){const i=t;for(const t of i){const e=this.get(t);if(null!==e)return e}return e}return"number"==typeof t?(n(t>=0,"Index must be positive."),t>=this.argv.length?e:null!=this.argv[t]?this.argv[t]:e):(n("string"==typeof t,"Key must be a string."),t=(t=t.replace(/-/g,"")).toLowerCase(),null!=this.hash[t]?this.hash[t]:null!=this.query[t]?this.query[t]:null!=this.args[t]?this.args[t]:null!=this.env[t]?this.env[t]:null!=this.data[t]?this.data[t]:null!=this.options[t]?this.options[t]:e)}typeOf(t){const e=this.get(t);return null===e?"null":typeof e}str(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("string"!=typeof i)throw new Error(`${u(t)} must be a string.`);return i}int(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("string"!=typeof i){if("number"!=typeof i)throw new Error(`${u(t)} must be an int.`);if(!Number.isSafeInteger(i))throw new Error(`${u(t)} must be an int.`);return i}if(!/^\-?\d+$/.test(i))throw new Error(`${u(t)} must be an int.`);const r=parseInt(i,10);if(!Number.isSafeInteger(r))throw new Error(`${u(t)} must be an int.`);return r}uint(t,e){const i=this.int(t);if(void 0===e&&(e=null),null===i)return e;if(i<0)throw new Error(`${u(t)} must be a uint.`);return i}float(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("string"!=typeof i){if("number"!=typeof i)throw new Error(`${u(t)} must be a float.`);if(!isFinite(i))throw new Error(`${u(t)} must be a float.`);return i}if(!/^\-?\d*(?:\.\d*)?$/.test(i))throw new Error(`${u(t)} must be a float.`);if(!/\d/.test(i))throw new Error(`${u(t)} must be a float.`);const r=parseFloat(i);if(!isFinite(r))throw new Error(`${u(t)} must be a float.`);return r}ufloat(t,e){const i=this.float(t);if(void 0===e&&(e=null),null===i)return e;if(i<0)throw new Error(`${u(t)} must be a positive float.`);return i}fixed(t,e,i){const r=this.float(t);if(void 0===i&&(i=null),null===r)return i;try{return function(t,e){n("number"==typeof t&&isFinite(t)),n(Number.isSafeInteger(e));let i=t.toFixed(e),r=1;i.length>0&&"-"===i[0]&&(i=i.substring(1),r=-1);let s=i,o="0";const a=i.indexOf(".");for(-1!==a&&(s=i.substring(0,a),o=i.substring(a+1)),s=s.replace(/^0+/,""),o=o.replace(/0+$/,""),n(s.length<=16-e,"Fixed number string exceeds 2^53-1."),n(o.length<=e,"Too many decimal places in fixed number string."),0===s.length&&(s="0");o.length<e;)o+="0";0===o.length&&(o="0"),n(/^\d+$/.test(s)&&/^\d+$/.test(o),"Non-numeric characters in fixed number string."),s=parseInt(s,10),o=parseInt(o,10);const h=Math.pow(10,e),c=Number.MAX_SAFE_INTEGER%h,l=(Number.MAX_SAFE_INTEGER-c)/h;return n(s<l||s===l&&o<=c,"Fixed number string exceeds 2^53-1."),r*(s*h+o)}(r,e||0)}catch(e){throw new Error(`${u(t)} must be a fixed number.`)}}ufixed(t,e,i){const r=this.fixed(t,e);if(void 0===i&&(i=null),null===r)return i;if(r<0)throw new Error(`${u(t)} must be a positive fixed number.`);return r}bool(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("number"==typeof i){if(1===i)return!0;if(0===i)return!1}if("string"!=typeof i){if("boolean"!=typeof i)throw new Error(`${u(t)} must be a boolean.`);return i}if("true"===i||"1"===i)return!0;if("false"===i||"0"===i)return!1;throw new Error(`${u(t)} must be a boolean.`)}buf(t,i,r){const s=this.get(t);if(r||(r="hex"),void 0===i&&(i=null),null===s)return i;if("string"!=typeof s){if(!e.isBuffer(s))throw new Error(`${u(t)} must be a buffer.`);return s}const n=e.from(s,r);if(n.length!==e.byteLength(s,r))throw new Error(`${u(t)} must be a ${r} string.`);return n}array(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("string"!=typeof i){if(!Array.isArray(i))throw new Error(`${u(t)} must be an array.`);return i}const r=i.trim().split(/\s*,\s*/),s=[];for(const t of r)0!==t.length&&s.push(t);return s}obj(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("object"!=typeof i||Array.isArray(i))throw new Error(`${u(t)} must be an object.`);return i}func(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("function"!=typeof i)throw new Error(`${u(t)} must be a function.`);return i}path(t,e){let i=this.str(t);if(void 0===e&&(e=null),null===i)return e;if(0===i.length)return e;switch(i[0]){case"~":i=o.join(c,i.substring(1));break;case"@":i=o.join(this.prefix,i.substring(1))}return o.normalize(i)}mb(t,e){const i=this.uint(t);return void 0===e&&(e=null),null===i?e:1024*i*1024}getSuffix(){if(!this.suffix)throw new Error("No suffix presented.");const t=this.str(this.suffix,this.fallback);return n(d(t),"Bad suffix."),t}getPrefix(){let t=this.str("prefix");if(t?"~"===t[0]&&(t=o.join(c,t.substring(1))):t=o.join(c,`.${this.module}`),this.suffix){const e=this.str(this.suffix);e&&(n(d(e),"Bad suffix."),this.fallback&&e!==this.fallback&&(t=o.join(t,e)))}return o.normalize(t)}getFile(t){return this.str("config")||o.join(this.prefix,t)}location(t){return o.join(this.prefix,t)}parseConfig(t){n("string"==typeof t,"Config must be text."),65279===t.charCodeAt(0)&&(t=t.substring(1)),t=(t=(t=t.replace(/\r\n/g,"\n")).replace(/\r/g,"\n")).replace(/\\\n/g,"");let e=0;for(const i of t.split("\n")){const t=i.trim();if(e+=1,0===t.length)continue;if("#"===t[0])continue;const r=t.indexOf(":");if(-1===r)throw new Error(`Expected ':' on line ${e}: "${t}".`);let s=t.substring(0,r).trim();if(!g(s=s.replace(/\-/g,"")))throw new Error(`Invalid option on line ${e}: ${s}.`);const n=t.substring(r+1).trim();if(0===n.length)continue;const o=this.alias[s];o&&(s=o),this.data[s]=n}}parseArg(t){t&&"object"==typeof t||(t=r.argv),n(Array.isArray(t));let e=null,i=!1;for(let r=2;r<t.length;r++){const s=t[r];if(n("string"==typeof s),"--"===s){i=!0;continue}if(i){this.pass.push(s);continue}if(0===s.length){e=null;continue}if(0===s.indexOf("--")){const t=s.indexOf("=");let i=null,r=null,n=!1;if(-1!==t?(i=s.substring(2,t),r=s.substring(t+1),e=null,n=!1):(i=s.substring(2),r="true",e=null,n=!0),!g(i=i.replace(/\-/g,"")))throw new Error(`Invalid argument: --${i}.`);if(0===r.length)continue;if(i.length>1){const t=this.alias[i];t&&(i=t)}this.args[i]=r,n&&(e=i);continue}if("-"===s[0]){e=null;for(let t=1;t<s.length;t++){let i=s[t];if((i<"a"||i>"z")&&(i<"A"||i>"Z")&&(i<"0"||i>"9")&&"?"!==i)throw new Error(`Invalid argument: -${i}.`);const r=this.alias[i];r&&(i=r),this.args[i]="true",e=i}continue}const o=s;0!==o.length?e?(this.args[e]=o,e=null):this.argv.push(o):e=null}}parseEnv(t){let e=this.module;e=(e=e.toUpperCase()).replace(/-/g,"_"),e+="_",t&&"object"==typeof t||(t=r.env),n(t&&"object"==typeof t);for(let i of Object.keys(t)){const r=t[i];if(n("string"==typeof r),0===i.indexOf(e)&&m(i=(i=i.substring(e.length)).replace(/_/g,""))&&0!==r.length){if((i=i.toLowerCase()).length>1){const t=this.alias[i];t&&(i=t)}this.env[i]=r}}}parseQuery(t){if("string"!=typeof t){if(!s.location)return{};if("string"!=typeof(t=s.location.search))return{}}return this.parseForm(t,"?",this.query)}parseHash(t){if("string"!=typeof t){if(!s.location)return{};if("string"!=typeof(t=s.location.hash))return{}}return this.parseForm(t,"#",this.hash)}parseForm(t,e,i){if(n("string"==typeof t),0!==t.length){t[0]===e&&(t=t.substring(1));for(const e of t.split("&")){const t=e.indexOf("=");let r,s;if(-1!==t?(r=e.substring(0,t),s=e.substring(t+1)):(r=e,s="true"),!g(r=(r=f(r)).replace(/\-/g,"")))continue;if(0===(s=f(s)).length)continue;const n=this.alias[r];n&&(r=n),i[r]=s}}}}function u(t){return Array.isArray(t)&&(t=t[0]),"number"==typeof t?`Argument #${t}`:t}function f(t){try{t=(t=decodeURIComponent(t)).replace(/\+/g," ")}catch(t){}return t.replace(/\0/g,"")}function d(t){return/^[a-z0-9_\-]+$/i.test(t)}function p(t){return/^[a-zA-Z0-9]+$/.test(t)}function g(t){return!!p(t)&&!/[A-Z]/.test(t)}function m(t){return!!p(t)&&!/[a-z]/.test(t)}function b(t,e,i){for(const r of Object.keys(e))r.length>t.length&&0===r.indexOf(t)&&(i[r.substring(t.length)]=e[r])}t.exports=l}).call(this,i(1).Buffer,i(21),i(11))},function(t,e,i){"use strict";e.unsupported=!0},function(t,e,i){"use strict";(function(e,r){
/*!
 * workerpool.js - worker processes for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),n=i(7),o=i(139),a=i(4),h=i(223),c=i(147),l=i(151),u=i(152),f=i(43);class d{constructor(t,e,i,r){this.worker=t,this.id=e,this.job={resolve:i,reject:r},this.timer=null}start(t){!t||t<=0||(this.timer=setTimeout(()=>{this.reject(new Error("Worker timed out."))},t))}destroy(){this.reject(new Error("Job was destroyed."))}cleanup(){const t=this.job;return s(t,"Already finished."),this.job=null,null!=this.timer&&(clearTimeout(this.timer),this.timer=null),s(this.worker.pending.has(this.id)),this.worker.pending.delete(this.id),t}resolve(t){this.cleanup().resolve(t)}reject(t){this.cleanup().reject(t)}}t.exports=class extends n{constructor(t){super(),this.enabled=!1,this.size=Math.max(2,o.cpus().length),this.timeout=12e4,this.file="/bcoin-worker.js",this.children=new Map,this.uid=0,this.set(t)}set(t){t&&(null!=t.enabled&&(s("boolean"==typeof t.enabled),this.enabled=t.enabled),null!=t.size&&(s(t.size>>>0===t.size),s(t.size>0),this.size=t.size),null!=t.timeout&&(s(Number.isSafeInteger(t.timeout)),s(t.timeout>=-1),this.timeout=t.timeout),null!=t.file&&(s("string"==typeof t.file),this.file=t.file))}async open(){}async close(){this.destroy()}spawn(t){const e=new class extends n{constructor(t){super(),this.id=-1,this.framer=new u,this.parser=new l,this.pending=new Map,this.child=new h(t),this.init()}init(){this.child.on("data",t=>{this.parser.feed(t)}),this.child.on("exit",(t,e)=>{this.emit("exit",t,e)}),this.child.on("error",t=>{this.emit("error",t)}),this.parser.on("error",t=>{this.emit("error",t)}),this.parser.on("packet",t=>{this.emit("packet",t)}),this.listen()}listen(){this.on("exit",(t,e)=>{this.killJobs()}),this.on("error",t=>{this.killJobs()}),this.on("packet",t=>{try{this.handlePacket(t)}catch(t){this.emit("error",t)}}),this.sendEnv({BCOIN_WORKER_NETWORK:a.type,BCOIN_WORKER_ISTTY:r.stdout&&r.stdout.isTTY?"1":"0"})}handlePacket(t){switch(t.cmd){case f.types.EVENT:this.emit("event",t.items),this.emit(...t.items);break;case f.types.LOG:this.emit("log",t.text);break;case f.types.ERROR:this.emit("error",t.error);break;case f.types.ERRORRESULT:this.rejectJob(t.id,t.error);break;default:this.resolveJob(t.id,t)}}write(t){return this.child.write(t)}send(t){return this.write(this.framer.packet(t))}sendEnv(t){return this.send(new f.EnvPacket(t))}sendEvent(...t){return this.send(new f.EventPacket(t))}destroy(){return this.child.destroy()}execute(t,e){return new Promise((i,r)=>{this._execute(t,e,i,r)})}_execute(t,e,i,r){const n=new d(this,t.id,i,r);s(!this.pending.has(t.id),"ID overflow."),this.pending.set(t.id,n),n.start(e),this.send(t)}resolveJob(t,e){const i=this.pending.get(t);if(!i)throw new Error(`Job ${t} is not in progress.`);i.resolve(e)}rejectJob(t,e){const i=this.pending.get(t);if(!i)throw new Error(`Job ${t} is not in progress.`);i.reject(e)}killJobs(){for(const t of this.pending.values())t.destroy()}}(this.file);return e.id=t,e.on("error",t=>{this.emit("error",t,e)}),e.on("exit",i=>{this.emit("exit",i,e),this.children.get(t)===e&&this.children.delete(t)}),e.on("event",t=>{this.emit("event",t,e),this.emit(...t)}),e.on("log",t=>{this.emit("log",t,e)}),this.emit("spawn",e),e}alloc(){const t=this.uid++%this.size;return this.children.has(t)||this.children.set(t,this.spawn(t)),this.children.get(t)}sendEvent(){let t=!0;for(const e of this.children.values())e.sendEvent.apply(e,arguments)||(t=!1);return t}destroy(){for(const t of this.children.values())t.destroy()}execute(t,i){return this.enabled&&h.hasSupport()?(i||(i=this.timeout),this.alloc().execute(t,i)):new Promise((i,r)=>{e(()=>{let e;try{e=c.handle(t)}catch(t){return void r(t)}i(e)})})}async check(t,e,i){const r=new f.CheckPacket(t,e,i),s=await this.execute(r,-1);if(s.error)throw s.error;return null}async sign(t,e,i){let r=e;Array.isArray(r)||(r=[r]);const s=new f.SignPacket(t,r,i),n=await this.execute(s,-1);return n.inject(t),n.total}async checkInput(t,e,i,r){const s=new f.CheckInputPacket(t,e,i,r),n=await this.execute(s,-1);if(n.error)throw n.error;return null}async signInput(t,e,i,r,s){const n=new f.SignInputPacket(t,e,i,r,s),o=await this.execute(n,-1);return o.inject(t),o.value}async ecVerify(t,e,i){const r=new f.ECVerifyPacket(t,e,i);return(await this.execute(r,-1)).value}async ecSign(t,e){const i=new f.ECSignPacket(t,e);return(await this.execute(i,-1)).sig}async mine(t,e,i,r){const s=new f.MinePacket(t,e,i,r);return(await this.execute(s,-1)).nonce}async scrypt(t,e,i,r,s,n){const o=new f.ScryptPacket(t,e,i,r,s,n);return(await this.execute(o,-1)).key}}}).call(this,i(34).setImmediate,i(21))},function(t,e,i){"use strict";(function(e,r){
/*!
 * child.js - child processes for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),n=i(7);t.exports=class extends n{constructor(t){super(),this.init(t)}static hasSupport(){return"function"==typeof e.postMessage}init(t){this.child=new e.Worker(t),this.child.onerror=(t=>{this.emit("error",new Error("Child error.")),this.emit("exit",1,null)}),this.child.onmessage=(t=>{let e;"string"==typeof t.data?(e=r.from(t.data,"hex"),s(e.length===t.data.length/2)):(s(t.data&&"object"==typeof t.data),s(t.data.data&&"number"==typeof t.data.data.length),(e=t.data.data).__proto__=r.prototype),this.emit("data",e)})}write(t){return 2===this.child.postMessage.length?(t.__proto__=Uint8Array.prototype,this.child.postMessage({data:t},[t])):this.child.postMessage(t.toString("hex")),!0}destroy(){this.child.terminate(),this.emit("exit",143,"SIGTERM")}}}).call(this,i(11),i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * server.js - http server for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(47),{Server:n}=i(78),o=i(79),{base58:a}=i(27),{BloomFilter:h}=i(66),c=i(19),l=i(37),{safeEqual:u}=i(80),f=i(5),d=i(12),p=i(20),g=i(17),m=i(4),b=i(75);class w{constructor(t){this.network=m.primary,this.logger=null,this.node=null,this.apiKey=a.encode(l.randomBytes(20)),this.apiHash=c.digest(e.from(this.apiKey,"ascii")),this.noAuth=!1,this.cors=!1,this.prefix=null,this.host="127.0.0.1",this.port=8080,this.ssl=!1,this.keyFile=null,this.certFile=null,this.fromOptions(t)}fromOptions(t){return r(t),r(t.node&&"object"==typeof t.node,"HTTP Server requires a Node."),this.node=t.node,this.network=t.node.network,this.logger=t.node.logger,this.port=this.network.rpcPort,null!=t.logger&&(r("object"==typeof t.logger),this.logger=t.logger),null!=t.apiKey&&(r("string"==typeof t.apiKey,"API key must be a string."),r(t.apiKey.length<=255,"API key must be under 256 bytes."),this.apiKey=t.apiKey,this.apiHash=c.digest(e.from(this.apiKey,"ascii"))),null!=t.noAuth&&(r("boolean"==typeof t.noAuth),this.noAuth=t.noAuth),null!=t.cors&&(r("boolean"==typeof t.cors),this.cors=t.cors),null!=t.prefix&&(r("string"==typeof t.prefix),this.prefix=t.prefix,this.keyFile=s.join(this.prefix,"key.pem"),this.certFile=s.join(this.prefix,"cert.pem")),null!=t.host&&(r("string"==typeof t.host),this.host=t.host),null!=t.port&&(r((65535&t.port)===t.port,"Port must be a number."),this.port=t.port),null!=t.ssl&&(r("boolean"==typeof t.ssl),this.ssl=t.ssl),null!=t.keyFile&&(r("string"==typeof t.keyFile),this.keyFile=t.keyFile),null!=t.certFile&&(r("string"==typeof t.certFile),this.certFile=t.certFile),t.apiKey||"127.0.0.1"!==this.host&&"::1"!==this.host||(this.noAuth=!0),this}static fromOptions(t){return(new w).fromOptions(t)}}function y(t,e){if(!t){const t=new Error(e);throw t.statusCode=400,t}}t.exports=class extends n{constructor(t){super(new w(t)),this.network=this.options.network,this.logger=this.options.logger.context("http"),this.node=this.options.node,this.chain=this.node.chain,this.mempool=this.node.mempool,this.pool=this.node.pool,this.fees=this.node.fees,this.miner=this.node.miner,this.rpc=this.node.rpc,this.init()}init(){this.on("request",(t,e)=>{"POST"===t.method&&"/"===t.pathname||this.logger.debug("Request for method=%s path=%s (%s).",t.method,t.pathname,t.socket.remoteAddress)}),this.on("listening",t=>{this.logger.info("Node HTTP server listening on %s (port=%d).",t.address,t.port)}),this.initRouter(),this.initSockets()}initRouter(){this.options.cors&&this.use(this.cors()),this.options.noAuth||this.use(this.basicAuth({hash:c.digest,password:this.options.apiKey,realm:"node"})),this.use(this.bodyParser({type:"json"})),this.use(this.jsonRPC()),this.use(this.router()),this.error((t,e,i)=>{const r=t.statusCode||500;i.json(r,{error:{type:t.type,code:t.code,message:t.message}})}),this.get("/",async(t,e)=>{const i=this.mempool?this.mempool.map.size:0,r=this.mempool?this.mempool.getSize():0;let s=this.pool.hosts.getLocal();s||(s=this.pool.hosts.address),e.json(200,{version:b.version,network:this.network.type,chain:{height:this.chain.height,tip:this.chain.tip.rhash(),progress:this.chain.getProgress()},pool:{host:s.host,port:s.port,agent:this.pool.options.agent,services:this.pool.options.services.toString(2),outbound:this.pool.peers.outbound,inbound:this.pool.peers.inbound},mempool:{tx:i,size:r},time:{uptime:this.node.uptime(),system:f.now(),adjusted:this.network.now(),offset:this.network.time.offset},memory:this.logger.memoryUsage()})}),this.get("/coin/address/:address",async(t,e)=>{const i=o.fromRequest(t).str("address");y(i,"Address is required."),y(!this.chain.options.spv,"Cannot get coins in SPV mode.");const r=d.fromString(i,this.network),s=await this.node.getCoinsByAddress(r),n=[];for(const t of s)n.push(t.getJSON(this.network));e.json(200,n)}),this.get("/coin/:hash/:index",async(t,e)=>{const i=o.fromRequest(t),r=i.brhash("hash"),s=i.u32("index");y(r,"Hash is required."),y(null!=s,"Index is required."),y(!this.chain.options.spv,"Cannot get coins in SPV mode.");const n=await this.node.getCoin(r,s);n?e.json(200,n.getJSON(this.network)):e.json(404)}),this.post("/coin/address",async(t,e)=>{const i=o.fromRequest(t).array("addresses");y(i,"Address is required."),y(!this.chain.options.spv,"Cannot get coins in SPV mode.");const r=await this.node.getCoinsByAddress(i),s=[];for(const t of r)s.push(t.getJSON(this.network));e.json(200,s)}),this.get("/tx/:hash",async(t,e)=>{const i=o.fromRequest(t).brhash("hash");y(i,"Hash is required."),y(!this.chain.options.spv,"Cannot get TX in SPV mode.");const r=await this.node.getMeta(i);if(!r)return void e.json(404);const s=await this.node.getMetaView(r);e.json(200,r.getJSON(this.network,s,this.chain.height))}),this.get("/tx/address/:address",async(t,e)=>{const i=o.fromRequest(t).str("address");y(i,"Address is required."),y(!this.chain.options.spv,"Cannot get TX in SPV mode.");const r=d.fromString(i,this.network),s=await this.node.getMetaByAddress(r),n=[];for(const t of s){const e=await this.node.getMetaView(t);n.push(t.getJSON(this.network,e,this.chain.height))}e.json(200,n)}),this.post("/tx/address",async(t,e)=>{const i=o.fromRequest(t).array("addresses");y(i,"Address is required."),y(!this.chain.options.spv,"Cannot get TX in SPV mode.");const r=await this.node.getMetaByAddress(i),s=[];for(const t of r){const e=await this.node.getMetaView(t);s.push(t.getJSON(this.network,e,this.chain.height))}e.json(200,s)}),this.get("/block/:block",async(t,e)=>{const i=o.fromRequest(t).uintbrhash("block");y(null!=i,"Hash or height required."),y(!this.chain.options.spv,"Cannot get block in SPV mode.");const r=await this.chain.getBlock(i);if(!r)return void e.json(404);const s=await this.chain.getBlockView(r);if(!s)return void e.json(404);const n=await this.chain.getHeight(i),a=this.chain.height-n+1;e.json(200,r.getJSON(this.network,s,n,a))}),this.get("/mempool",async(t,e)=>{y(this.mempool,"No mempool available.");const i=this.mempool.getSnapshot(),r=[];for(const t of i)r.push(f.revHex(t));e.json(200,r)}),this.post("/broadcast",async(t,e)=>{const i=o.fromRequest(t).buf("tx");y(i,"TX is required.");const r=p.fromRaw(i);await this.node.sendTX(r),e.json(200,{success:!0})}),this.get("/fee",async(t,e)=>{const i=o.fromRequest(t).u32("blocks");if(!this.fees)return void e.json(200,{rate:this.network.feeRate});const r=this.fees.estimateFee(i);e.json(200,{rate:r})}),this.post("/reset",async(t,e)=>{const i=o.fromRequest(t).u32("height");y(null!=i,"Height is required."),await this.chain.reset(i),e.json(200,{success:!0})})}handleSocket(t){t.hook("auth",(...i)=>{if(t.channel("auth"))throw new Error("Already authed.");if(!this.options.noAuth){const t=new o(i).str(0,"");if(t.length>255)throw new Error("Invalid API key.");const r=e.from(t,"ascii"),s=c.digest(r);if(!u(s,this.options.apiHash))throw new Error("Invalid API key.")}return t.join("auth"),this.logger.info("Successful auth from %s.",t.host),this.handleAuth(t),null}),t.fire("version",{version:b.version,network:this.network.type})}handleAuth(t){t.hook("watch chain",()=>(t.join("chain"),null)),t.hook("unwatch chain",()=>(t.leave("chain"),null)),t.hook("watch mempool",()=>(t.join("mempool"),null)),t.hook("unwatch mempool",()=>(t.leave("mempool"),null)),t.hook("set filter",(...e)=>{const i=new o(e).buf(0);if(!i)throw new Error("Invalid parameter.");return t.filter=h.fromRaw(i),null}),t.hook("get tip",()=>this.chain.tip.toRaw()),t.hook("get entry",async(...t)=>{const e=new o(t).uintbrhash(0);if(null==e)throw new Error("Invalid parameter.");const i=await this.chain.getEntry(e);return i&&await this.chain.isMainChain(i)?i.toRaw():null}),t.hook("get hashes",async(...t)=>{const e=new o(t),i=e.i32(0,-1),r=e.i32(1,-1);return this.chain.getHashes(i,r)}),t.hook("add filter",(...e)=>{const i=new o(e).array(0);if(!i)throw new Error("Invalid parameter.");if(!t.filter)throw new Error("No filter set.");const r=new o(i);for(let e=0;e<i.length;e++){const i=r.buf(e);if(!i)throw new Error("Bad data chunk.");t.filter.add(i),this.node.spv&&this.pool.watch(i)}return null}),t.hook("reset filter",()=>(t.filter=null,null)),t.hook("estimate fee",(...t)=>{const e=new o(t).u32(0);return this.fees?this.fees.estimateFee(e):this.network.feeRate}),t.hook("send",(...t)=>{const e=new o(t).buf(0);if(!e)throw new Error("Invalid parameter.");const i=p.fromRaw(e);return this.node.relay(i),null}),t.hook("rescan",(...e)=>{const i=new o(e).uintbrhash(0);if(null==i)throw new Error("Invalid parameter.");return this.scan(t,i)})}initSockets(){const t=this.mempool||this.pool;this.chain.on("connect",(t,e,i)=>{const r=this.channel("chain");if(!r)return;const s=t.toRaw();this.to("chain","chain connect",s);for(const t of r){const i=this.filterBlock(t,e);t.fire("block connect",s,i)}}),this.chain.on("disconnect",(t,e,i)=>{if(!this.channel("chain"))return;const r=t.toRaw();this.to("chain","chain disconnect",r),this.to("chain","block disconnect",r)}),this.chain.on("reset",t=>{this.channel("chain")&&this.to("chain","chain reset",t.toRaw())}),t.on("tx",t=>{const e=this.channel("mempool");if(!e)return;const i=t.toRaw();for(const r of e)this.filterTX(r,t)&&r.fire("tx",i)})}filterBlock(t,e){if(!t.filter)return[];const i=[];for(const r of e.txs)this.filterTX(t,r)&&i.push(r.toRaw());return i}filterTX(t,e){if(!t.filter)return!1;let i=!1;for(let r=0;r<e.outputs.length;r++){const s=e.outputs[r].getHash();if(s&&t.filter.test(s)){const s=g.fromTX(e,r);t.filter.add(s.toRaw()),i=!0}}if(i)return!0;if(!e.isCoinbase())for(const{prevout:i}of e.inputs)if(t.filter.test(i.toRaw()))return!0;return!1}async scan(t,e){return await this.node.scan(e,t.filter,(e,i)=>{const r=e.toRaw(),s=[];for(const t of i)s.push(t.toRaw());return t.call("block rescan",r,s)}),null}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * server.js - http server for bweb
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bweb
 */const r=i(7),s=i(161);t.exports=class extends r{constructor(t){super(),this.options=t,this.config={},this.server=new r,this.io=new r,this.rpc=new s}async open(){this.emit("listening",this.address())}async close(){}error(){}mount(){}use(){}hook(){}get(){}post(){}put(){}del(){}channel(){return null}join(){}leave(){}to(){}all(){}async execute(){}add(){}address(){return{address:"localhost",port:80}}router(){return async()=>{}}cors(){return async()=>{}}basicAuth(){return async()=>{}}bodyParser(){return async()=>{}}jsonRPC(){return async()=>{}}fileServer(){return async()=>{}}cookieParser(){return async()=>{}}}},function(t,e,i){"use strict";
/*!
 * router.js - router for bweb
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bweb
 */const r=i(0),s=i(227),n=i(228);t.exports=class{constructor(){this._get=[],this._post=[],this._put=[],this._del=[],this.hooks=[]}_handlers(t){switch(r("string"==typeof t),t.toUpperCase()){case"GET":return this._get;case"POST":return this._post;case"PUT":return this._put;case"DELETE":return this._del;default:return null}}async handle(t,e){const i=this._handlers(t.method);if(!i)return!1;let r=null;for(const s of i){const i=s.match(t.pathname);if(i)if(t.params=i,r){if(3!==s.arity)continue;if(await s.handler(r,t,e),e.sent)return!0}else if(2===s.arity){if(await this._handleHooks(t,e))return!0;try{if(await s.handler(t,e),e.sent)return!0}catch(t){r=t}}}if(r)throw r;return!1}async _handleHooks(t,e){let i=null;for(const r of this.hooks)if(r.isPrefix(t.pathname))if(i){if(3!==r.arity)continue;if(await r.handler(i,t,e),e.sent)return!0}else if(2===r.arity)try{if(await r.handler(t,e),e.sent)return!0}catch(t){i=t}if(i)throw i;return!1}hook(t,e){e||(e=t,t="/"),this.hooks.push(new n(t,e))}get(t,e){this._get.push(new s(t,e))}post(t,e){this._post.push(new s(t,e))}put(t,e){this._put.push(new s(t,e))}del(t,e){this._del.push(new s(t,e))}}},function(t,e,i){"use strict";
/*!
 * route.js - route object for bweb
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bweb
 */const r=i(0);t.exports=class{constructor(t,e){r("string"==typeof t),r("function"==typeof e),r(2===e.length||3===e.length),this.path=t,this.regex=/^\/$/,this.handler=e,this.arity=e.length,this.map=[],this.compiled=!1}compile(){if(this.compiled)return;if(this.compiled=!0,"/"===this.path)return;const t=this.map;let e=this.path;e=(e=(e=(e=(e=e.replace(/(\/[^\/]+)\?/g,"(?:$1)?")).replace(/\.(?!\+)/g,"\\.")).replace(/\*/g,".*?")).replace(/%/g,"\\")).replace(/:(\w+)/g,(e,i)=>(t.push(i),"([^/]+)")),this.regex=new RegExp("^"+e+"$")}match(t){this.compile();const e=this.regex.exec(t);if(!e)return null;const i=Object.create(null);for(let t=1;t<e.length;t++){const r=e[t],s=this.map[t-1];s&&(i[s]=r),i[t-1]=r}return i}}},function(t,e,i){"use strict";
/*!
 * hook.js - hook object for bweb
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bweb
 */const r=i(0);t.exports=class{constructor(t,e){r("string"==typeof t),r("function"==typeof e||"object"==typeof e),r(null!==e),this.path=t,this.handler=e,this.arity=0,"function"==typeof e&&(this.arity=e.length)}isPrefix(t){return"/"===this.path||(t.startsWith?t.startsWith(this.path):0===t.indexOf(this.path))}}},function(t,e,i){"use strict";
/*!
 * middleware.js - middleware for bweb
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bweb
 */function r(){return async(t,e)=>{}}e.basicAuth=r,e.bodyParser=r,e.cookieParser=r,e.cors=r,e.fileServer=r,e.jsonRPC=r,e.router=r},function(t,e,i){"use strict";(function(e){
/*!
 * validator.js - validator for bcoin
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0);class s{constructor(t,e){if(!t||"object"!=typeof t)throw new a("map","object");this.map=t,this.loose=e||!1}static multi(t,e){return new o(t,e)}static fromRequest(t){const e=new s(t.query,!0),i=new s(t.params,!0),r=new s(t.body,!1);return new o([e,i,r])}child(t){return new this.constructor(this.get(t))}has(t){return null!=this.get(t)}get(t,e){if(void 0===e&&(e=null),Array.isArray(t)){const i=t;for(const t of i){const e=this.get(t);if(null!==e)return e}return e}r("string"==typeof t||"number"==typeof t,"Key must be a string or number.");const i=this.map[t];return null!=i?i:e}typeOf(t){const e=this.get(t);return null==e?"null":typeof e}str(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("string"!=typeof i)throw new a(t,"string");return i}int(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("string"!=typeof i){if("number"!=typeof i)throw new a(t,"int");if(!Number.isSafeInteger(i))throw new a(t,"int");return i}if(!this.loose)throw new a(t,"int");if(!/^\-?\d+$/.test(i))throw new a(t,"int");const r=parseInt(i,10);if(!Number.isSafeInteger(r))throw new a(t,"int");return r}uint(t,e){const i=this.int(t);if(void 0===e&&(e=null),null===i)return e;if(i<0)throw new a(t,"uint");return i}float(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("string"!=typeof i){if("number"!=typeof i)throw new a(t,"float");if(!isFinite(i))throw new a(t,"float");return i}if(!this.loose)throw new a(t,"float");if(!/^\-?\d*(?:\.\d*)?$/.test(i))throw new a(t,"float");if(!/\d/.test(i))throw new a(t,"float");const r=parseFloat(i);if(!isFinite(r))throw new a(t,"float");return r}ufloat(t,e){const i=this.float(t);if(void 0===e&&(e=null),null===i)return e;if(i<0)throw new a(t,"positive float");return i}fixed(t,e,i){const s=this.float(t);if(void 0===i&&(i=null),null===s)return i;try{return function(t,e){r("number"==typeof t&&isFinite(t)),r(Number.isSafeInteger(e));let i=t.toFixed(e),s=1;i.length>0&&"-"===i[0]&&(i=i.substring(1),s=-1);let n=i,o="0";const a=i.indexOf(".");for(-1!==a&&(n=i.substring(0,a),o=i.substring(a+1)),n=n.replace(/^0+/,""),o=o.replace(/0+$/,""),r(n.length<=16-e,"Fixed number string exceeds 2^53-1."),r(o.length<=e,"Too many decimal places in fixed number string."),0===n.length&&(n="0");o.length<e;)o+="0";0===o.length&&(o="0"),r(/^\d+$/.test(n)&&/^\d+$/.test(o),"Non-numeric characters in fixed number string."),n=parseInt(n,10),o=parseInt(o,10);const h=Math.pow(10,e),c=Number.MAX_SAFE_INTEGER%h,l=(Number.MAX_SAFE_INTEGER-c)/h;return r(n<l||n===l&&o<=c,"Fixed number string exceeds 2^53-1."),s*(n*h+o)}(s,e||0)}catch(e){throw new a(t,"fixed number")}}ufixed(t,e,i){const r=this.fixed(t,e);if(void 0===i&&(i=null),null===r)return i;if(r<0)throw new a(t,"positive fixed number");return r}i8(t,e){const i=this.int(t);if(void 0===e&&(e=null),null===i)return e;if(i<-128||i>127)throw new a(t,"i8");return i}i16(t,e){const i=this.int(t);if(void 0===e&&(e=null),null===i)return e;if(i<-32768||i>32767)throw new a(t,"i16");return i}i32(t,e){const i=this.int(t);if(void 0===e&&(e=null),null===i)return e;if((0|i)!==i)throw new a(t,"int32");return i}i64(t,e){return this.int(t,e)}u8(t,e){const i=this.uint(t);if(void 0===e&&(e=null),null===i)return e;if((255&i)!==i)throw new a(t,"uint8");return i}u16(t,e){const i=this.uint(t);if(void 0===e&&(e=null),null===i)return e;if((65535&i)!==i)throw new a(t,"uint16");return i}u32(t,e){const i=this.uint(t);if(void 0===e&&(e=null),null===i)return e;if(i>>>0!==i)throw new a(t,"uint32");return i}u64(t,e){return this.uint(t,e)}hash(t,i){const r=this.get(t);if(void 0===i&&(i=null),null===r)return i;if("string"!=typeof r){if(!e.isBuffer(r))throw new a(t,"hash");if(32!==r.length)throw new a(t,"hash");return r.toString("hex")}if(64!==r.length)throw new a(t,"hex string");if(!/^[0-9a-f]+$/i.test(r))throw new a(t,"hex string");return r.toLowerCase()}bhash(t,i){const r=this.hash(t,i);return r?e.from(r,"hex"):r}uinthash(t,i){const r=this.get(t);return null==i&&(i=null),null==r?i:e.isBuffer(r)?this.hash(t,i):"string"!=typeof r||this.loose&&64!==r.length?this.uint(t,i):this.hash(t,i)}uintbhash(t,i){const r=this.uinthash(t,i);return"string"!=typeof r?r:e.from(r,"hex")}rhash(t,i){const r=this.get(t);if(void 0===i&&(i=null),null===r)return i;if("string"!=typeof r){if(!e.isBuffer(r))throw new a(t,"hash");if(32!==r.length)throw new a(t,"hash");return r.toString("hex")}if(64!==r.length)throw new a(t,"hex string");if(!/^[0-9a-f]+$/i.test(r))throw new a(t,"hex string");let s="";for(let t=0;t<r.length;t+=2)s=r.slice(t,t+2)+s;return s.toLowerCase()}brhash(t,i){const r=this.rhash(t,i);return r?e.from(r,"hex"):r}uintrhash(t,i){const r=this.get(t);return null==i&&(i=null),null==r?i:e.isBuffer(r)?this.rhash(t,i):"string"!=typeof r||this.loose&&64!==r.length?this.uint(t,i):this.rhash(t,i)}uintbrhash(t,i){const r=this.uintrhash(t,i);return"string"!=typeof r?r:e.from(r,"hex")}bool(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("number"==typeof i){if(1===i)return!0;if(0===i)return!1}if("string"!=typeof i){if("boolean"!=typeof i)throw new a(t,"boolean");return i}if(!this.loose)throw new a(t,"boolean");if("true"===i||"1"===i)return!0;if("false"===i||"0"===i)return!1;throw new a(t,"boolean")}buf(t,i,r){const s=this.get(t);if(r||(r="hex"),void 0===i&&(i=null),null===s)return i;if("string"!=typeof s){if(!e.isBuffer(s))throw new a(t,"buffer");return s}const n=e.from(s,r);if(n.length!==e.byteLength(s,r))throw new a(t,`${r} string`);return n}array(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("string"!=typeof i){if(!Array.isArray(i))throw new a(t,"array");return i}if(!this.loose)throw new a(t,"array");const r=i.trim().split(/\s*,\s*/),s=[];for(const t of r)0!==t.length&&s.push(t);return s}obj(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("object"!=typeof i||Array.isArray(i))throw new a(t,"object");return i}func(t,e){const i=this.get(t);if(void 0===e&&(e=null),null===i)return e;if("function"!=typeof i)throw new a(t,"function");return i}}const n=new s(Object.create(null));class o{constructor(t,e){this.maps=[],this.init(t,e)}init(t,e){r(Array.isArray(t)),r(t.length>0);for(const i of t)i instanceof s?this.maps.push(i):(r(i&&"object"==typeof i),this.maps.push(new s(i,e)))}find(t){for(const e of this.maps)if(e.has(t))return e;return n}child(t){return this.find(t).child(t)}has(t){return this.find(t).has(t)}get(t,e){return this.find(t).get(t,e)}typeOf(t){return this.find(t).typeOf(t)}str(t,e){return this.find(t).str(t,e)}int(t,e){return this.find(t).int(t,e)}uint(t,e){return this.find(t).uint(t,e)}float(t,e){return this.find(t).float(t,e)}ufloat(t,e){return this.find(t).ufloat(t,e)}fixed(t,e,i){return this.find(t).fixed(t,e,i)}ufixed(t,e,i){return this.find(t).ufixed(t,e,i)}i8(t,e){return this.find(t).i8(t,e)}i16(t,e){return this.find(t).i16(t,e)}i32(t,e){return this.find(t).i32(t,e)}i64(t,e){return this.find(t).i64(t,e)}u8(t,e){return this.find(t).u8(t,e)}u16(t,e){return this.find(t).u16(t,e)}u32(t,e){return this.find(t).u32(t,e)}u64(t,e){return this.find(t).u64(t,e)}hash(t,e){return this.find(t).hash(t,e)}bhash(t,e){return this.find(t).bhash(t,e)}uinthash(t,e){return this.find(t).uinthash(t,e)}uintbhash(t,e){return this.find(t).uintbhash(t,e)}rhash(t,e){return this.find(t).rhash(t,e)}brhash(t,e){return this.find(t).brhash(t,e)}uintrhash(t,e){return this.find(t).uintrhash(t,e)}uintbrhash(t,e){return this.find(t).uintbrhash(t,e)}bool(t,e){return this.find(t).bool(t,e)}buf(t,e,i){return this.find(t).buf(t,e,i)}array(t,e){return this.find(t).array(t,e)}obj(t,e){return this.find(t).obj(t,e)}func(t,e){return this.find(t).func(t,e)}}class a extends Error{constructor(t,e){super(),this.type="ValidationError",this.message=`${function(t){return Array.isArray(t)&&(t=t[0]),"number"==typeof t?`Param #${t}`:t}(t)} must be a ${e}.`,Error.captureStackTrace&&Error.captureStackTrace(this,a)}}t.exports=s}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e,r){
/*!
 * rpc.js - bitcoind-compatible json rpc for bcoin.
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const s=i(0),n=i(78),{Lock:o}=i(28),a=i(74),h=i(79),{BufferMap:c,BufferSet:l}=i(13),u=i(24),f=i(9),{safeEqual:d}=i(80),p=i(15),g=i(5),m=i(138),b=i(18),w=i(76),y=i(10),v=i(12),k=i(63),E=i(41),S=i(52),R=i(45),I=i(73),A=i(44),x=i(4),O=i(17),_=i(16),B=i(20),P=i(3),N=i(75),T=n.RPC,C=n.RPCError,M={INVALID_REQUEST:n.errors.INVALID_REQUEST,METHOD_NOT_FOUND:n.errors.METHOD_NOT_FOUND,INVALID_PARAMS:n.errors.INVALID_PARAMS,INTERNAL_ERROR:n.errors.INTERNAL_ERROR,PARSE_ERROR:n.errors.PARSE_ERROR,MISC_ERROR:-1,FORBIDDEN_BY_SAFE_MODE:-2,TYPE_ERROR:-3,INVALID_ADDRESS_OR_KEY:-5,OUT_OF_MEMORY:-7,INVALID_PARAMETER:-8,DATABASE_ERROR:-20,DESERIALIZATION_ERROR:-22,VERIFY_ERROR:-25,VERIFY_REJECTED:-26,VERIFY_ALREADY_IN_CHAIN:-27,IN_WARMUP:-28,CLIENT_NOT_CONNECTED:-9,CLIENT_IN_INITIAL_DOWNLOAD:-10,CLIENT_NODE_ALREADY_ADDED:-23,CLIENT_NODE_NOT_ADDED:-24,CLIENT_NODE_NOT_CONNECTED:-29,CLIENT_INVALID_IP_OR_SUBNET:-30,CLIENT_P2P_DISABLED:-31},U="Bitcoin Signed Message:\n";function L(t){for(let e=0;e<t.length;e+=4){const i=t.readUInt32LE(e,!0);t.writeUInt32BE(i,e,!0)}return t}function z(t,e,i){return{id:t,version:e,reject:{status:i}}}function D(t,e){try{return v.fromString(t,e)}catch(t){throw new C(M.INVALID_ADDRESS_OR_KEY,"Invalid address.")}}function H(t,e){try{return R.fromSecret(t,e)}catch(t){throw new C(M.INVALID_ADDRESS_OR_KEY,"Invalid key.")}}function F(t,e){try{return a.fromHostname(t,e.port)}catch(t){throw new C(M.CLIENT_INVALID_IP_OR_SUBNET,"Invalid IP address or subnet.")}}function V(t,e){try{return w.fromHostname(t,e)}catch(t){throw new C(M.CLIENT_INVALID_IP_OR_SUBNET,"Invalid IP address or subnet.")}}function K(t){let e=t>>>24&255,i=65535/(16777215&t);for(;e<29;)i*=256,e++;for(;e>29;)i/=256,e--;return i}function j(t){for(s(t>=0),t=t.toString(16),s(t.length<=8);t.length<8;)t="0"+t;return t}t.exports=class extends T{constructor(t){super(),s(t,"RPC requires a Node."),this.node=t,this.network=t.network,this.workers=t.workers,this.chain=t.chain,this.mempool=t.mempool,this.pool=t.pool,this.fees=t.fees,this.miner=t.miner,this.logger=t.logger.context("rpc"),this.locker=new o,this.mining=!1,this.procLimit=0,this.attempt=null,this.lastActivity=0,this.boundChain=!1,this.nonce1=0,this.nonce2=0,this.merkleMap=new c,this.pollers=[],this.init()}getCode(t){switch(t.type){case"RPCError":return t.code;case"ValidationError":return M.TYPE_ERROR;case"EncodingError":return M.DESERIALIZATION_ERROR;default:return M.INTERNAL_ERROR}}handleCall(t,e){"getwork"!==t.method&&"getblocktemplate"!==t.method&&"getbestblockhash"!==t.method&&(this.logger.debug("Handling RPC call: %s.",t.method),"submitblock"!==t.method&&"getmemorypool"!==t.method&&this.logger.debug(t.params)),"getwork"===t.method&&e.longpoll&&(t.method="getworklp")}handleError(t){this.logger.error("RPC internal error."),this.logger.error(t)}init(){this.add("stop",this.stop),this.add("help",this.help),this.add("getblockchaininfo",this.getBlockchainInfo),this.add("getbestblockhash",this.getBestBlockHash),this.add("getblockcount",this.getBlockCount),this.add("getblock",this.getBlock),this.add("getblockbyheight",this.getBlockByHeight),this.add("getblockhash",this.getBlockHash),this.add("getblockheader",this.getBlockHeader),this.add("getchaintips",this.getChainTips),this.add("getdifficulty",this.getDifficulty),this.add("getmempoolancestors",this.getMempoolAncestors),this.add("getmempooldescendants",this.getMempoolDescendants),this.add("getmempoolentry",this.getMempoolEntry),this.add("getmempoolinfo",this.getMempoolInfo),this.add("getrawmempool",this.getRawMempool),this.add("gettxout",this.getTXOut),this.add("gettxoutsetinfo",this.getTXOutSetInfo),this.add("pruneblockchain",this.pruneBlockchain),this.add("verifychain",this.verifyChain),this.add("invalidateblock",this.invalidateBlock),this.add("reconsiderblock",this.reconsiderBlock),this.add("getnetworkhashps",this.getNetworkHashPS),this.add("getmininginfo",this.getMiningInfo),this.add("prioritisetransaction",this.prioritiseTransaction),this.add("getwork",this.getWork),this.add("getworklp",this.getWorkLongpoll),this.add("getblocktemplate",this.getBlockTemplate),this.add("submitblock",this.submitBlock),this.add("verifyblock",this.verifyBlock),this.add("setgenerate",this.setGenerate),this.add("getgenerate",this.getGenerate),this.add("generate",this.generate),this.add("generatetoaddress",this.generateToAddress),this.add("estimatefee",this.estimateFee),this.add("estimatepriority",this.estimatePriority),this.add("estimatesmartfee",this.estimateSmartFee),this.add("estimatesmartpriority",this.estimateSmartPriority),this.add("getinfo",this.getInfo),this.add("validateaddress",this.validateAddress),this.add("createmultisig",this.createMultisig),this.add("createwitnessaddress",this.createWitnessAddress),this.add("verifymessage",this.verifyMessage),this.add("signmessagewithprivkey",this.signMessageWithPrivkey),this.add("setmocktime",this.setMockTime),this.add("getconnectioncount",this.getConnectionCount),this.add("ping",this.ping),this.add("getpeerinfo",this.getPeerInfo),this.add("addnode",this.addNode),this.add("disconnectnode",this.disconnectNode),this.add("getaddednodeinfo",this.getAddedNodeInfo),this.add("getnettotals",this.getNetTotals),this.add("getnetworkinfo",this.getNetworkInfo),this.add("setban",this.setBan),this.add("listbanned",this.listBanned),this.add("clearbanned",this.clearBanned),this.add("getrawtransaction",this.getRawTransaction),this.add("createrawtransaction",this.createRawTransaction),this.add("decoderawtransaction",this.decodeRawTransaction),this.add("decodescript",this.decodeScript),this.add("sendrawtransaction",this.sendRawTransaction),this.add("signrawtransaction",this.signRawTransaction),this.add("gettxoutproof",this.getTXOutProof),this.add("verifytxoutproof",this.verifyTXOutProof),this.add("getmemoryinfo",this.getMemoryInfo),this.add("setloglevel",this.setLogLevel)}async getInfo(t,e){if(e||0!==t.length)throw new C(M.MISC_ERROR,"getinfo");return{version:N.version,protocolversion:this.pool.options.version,walletversion:0,balance:0,blocks:this.chain.height,timeoffset:this.network.time.offset,connections:this.pool.peers.size(),proxy:"",difficulty:K(this.chain.tip.bits),testnet:this.network!==x.main,keypoololdest:0,keypoolsize:0,unlocked_until:0,paytxfee:b.btc(this.network.feeRate,!0),relayfee:b.btc(this.network.minRelay,!0),errors:""}}async help(t,e){if(0===t.length)return"Select a command.";const i={method:t[0],params:[]};return await this.execute(i,!0)}async stop(t,i){if(i||0!==t.length)throw new C(M.MISC_ERROR,"stop");return this.node.close().catch(t=>{e(()=>{throw t})}),"Stopping."}async getNetworkInfo(t,e){if(e||0!==t.length)throw new C(M.MISC_ERROR,"getnetworkinfo");const i=this.pool.hosts,r=[];for(const t of i.local.values())r.push({address:t.addr.host,port:t.addr.port,score:t.score});return{version:N.version,subversion:this.pool.options.agent,protocolversion:this.pool.options.version,localservices:j(this.pool.options.services),localrelay:!this.pool.options.noRelay,timeoffset:this.network.time.offset,networkactive:this.pool.connected,connections:this.pool.peers.size(),networks:[],relayfee:b.btc(this.network.minRelay,!0),incrementalfee:0,localaddresses:r,warnings:""}}async addNode(t,e){if(e||2!==t.length)throw new C(M.MISC_ERROR,'addnode "node" "add|remove|onetry"');const i=new h(t),r=i.str(0,"");switch(i.str(1,"")){case"add":this.pool.hosts.addNode(r);case"onetry":{const t=V(r,this.network);if(!this.pool.peers.get(t.hostname)){const e=this.pool.createOutbound(t);this.pool.peers.add(e)}break}case"remove":this.pool.hosts.removeNode(r)}return null}async disconnectNode(t,e){if(e||1!==t.length)throw new C(M.MISC_ERROR,'disconnectnode "node"');const i=F(new h(t).str(0,""),this.network),r=this.pool.peers.get(i.hostname);return r&&r.destroy(),null}async getAddedNodeInfo(t,e){if(e||t.length>1)throw new C(M.MISC_ERROR,'getaddednodeinfo ( "node" )');const i=this.pool.hosts,r=new h(t).str(0,"");let s;1===t.length&&(s=F(r,this.network));const n=[];for(const t of i.nodes){if(s){if(t.host!==s.host)continue;if(t.port!==s.port)continue}const e=this.pool.peers.get(t.hostname);e&&e.connected?n.push({addednode:t.hostname,connected:e.connected,addresses:[{address:e.hostname(),connected:e.outbound?"outbound":"inbound"}]}):n.push({addednode:t.hostname,connected:!1,addresses:[]})}if(s&&0===n.length)throw new C(M.CLIENT_NODE_NOT_ADDED,"Node has not been added.");return n}async getConnectionCount(t,e){if(e||0!==t.length)throw new C(M.MISC_ERROR,"getconnectioncount");return this.pool.peers.size()}async getNetTotals(t,e){let i=0,r=0;if(e||t.length>0)throw new C(M.MISC_ERROR,"getnettotals");for(let t=this.pool.peers.head();t;t=t.next)i+=t.socket.bytesWritten,r+=t.socket.bytesRead;return{totalbytesrecv:r,totalbytessent:i,timemillis:Date.now()}}async getPeerInfo(t,e){if(e||0!==t.length)throw new C(M.MISC_ERROR,"getpeerinfo");const i=[];for(let t=this.pool.peers.head();t;t=t.next){const e=this.network.time.known.get(t.hostname())||0,r=[];for(const e in t.blockMap.keys()){const t=g.revHex(e);r.push(t)}t.getName(),i.push({id:t.id,addr:t.hostname(),addrlocal:t.local.isNull()?void 0:t.local.hostname,name:t.name||void 0,services:j(t.services),relaytxes:!t.noRelay,lastsend:t.lastSend/1e3|0,lastrecv:t.lastRecv/1e3|0,bytessent:t.socket.bytesWritten,bytesrecv:t.socket.bytesRead,conntime:0!==t.time?(Date.now()-t.time)/1e3|0:0,timeoffset:e,pingtime:-1!==t.lastPong?(t.lastPong-t.lastPing)/1e3:-1,minping:-1!==t.minPing?t.minPing/1e3:-1,version:t.version,subver:t.agent,inbound:!t.outbound,startingheight:t.height,besthash:t.bestHash?g.revHex(t.bestHash):null,bestheight:t.bestHeight,banscore:t.banScore,inflight:r,whitelisted:!1})}return i}async ping(t,e){if(e||0!==t.length)throw new C(M.MISC_ERROR,"ping");for(let t=this.pool.peers.head();t;t=t.next)t.sendPing();return null}async setBan(t,e){const i=new h(t),r=i.str(0,""),s=i.str(1,"");if(e||t.length<2||"add"!==s&&"remove"!==s)throw new C(M.MISC_ERROR,'setban "ip(/netmask)" "add|remove" (bantime) (absolute)');const n=V(r,this.network);switch(s){case"add":this.pool.ban(n);break;case"remove":this.pool.unban(n)}return null}async listBanned(t,e){if(e||0!==t.length)throw new C(M.MISC_ERROR,"listbanned");const i=[];for(const[t,e]of this.pool.hosts.banned)i.push({address:t,banned_until:e+this.pool.options.banTime,ban_created:e,ban_reason:""});return i}async clearBanned(t,e){if(e||0!==t.length)throw new C(M.MISC_ERROR,"clearbanned");return this.pool.hosts.clearBanned(),null}async getBlockchainInfo(t,e){if(e||0!==t.length)throw new C(M.MISC_ERROR,"getblockchaininfo");return{chain:"testnet"!==this.network.type?this.network.type:"test",blocks:this.chain.height,headers:this.chain.height,bestblockhash:this.chain.tip.rhash(),difficulty:K(this.chain.tip.bits),mediantime:await this.chain.getMedianTime(this.chain.tip),verificationprogress:this.chain.getProgress(),chainwork:this.chain.tip.chainwork.toString("hex",64),pruned:this.chain.options.prune,softforks:this.getSoftforks(),bip9_softforks:await this.getBIP9Softforks(),pruneheight:this.chain.options.prune?Math.max(0,this.chain.height-this.network.block.keepBlocks):null}}async getBestBlockHash(t,e){if(e||0!==t.length)throw new C(M.MISC_ERROR,"getbestblockhash");return this.chain.tip.rhash()}async getBlockCount(t,e){if(e||0!==t.length)throw new C(M.MISC_ERROR,"getblockcount");return this.chain.tip.height}async getBlock(t,e){if(e||t.length<1||t.length>3)throw new C(M.MISC_ERROR,'getblock "hash" ( verbose )');const i=new h(t),r=i.brhash(0),s=i.bool(1,!0),n=i.bool(2,!1);if(!r)throw new C(M.TYPE_ERROR,"Invalid block hash.");const o=await this.chain.getEntry(r);if(!o)throw new C(M.MISC_ERROR,"Block not found");const a=await this.chain.getBlock(o.hash);if(!a){if(this.chain.options.spv)throw new C(M.MISC_ERROR,"Block not available (spv mode)");if(this.chain.options.prune)throw new C(M.MISC_ERROR,"Block not available (pruned data)");throw new C(M.MISC_ERROR,"Can't read block from disk")}return s?await this.blockToJSON(o,a,n):a.toRaw().toString("hex")}async getBlockByHeight(t,e){if(e||t.length<1||t.length>3)throw new C(M.MISC_ERROR,'getblockbyheight "height" ( verbose )');const i=new h(t),r=i.u32(0,-1),s=i.bool(1,!0),n=i.bool(2,!1);if(-1===r)throw new C(M.TYPE_ERROR,"Invalid block height.");const o=await this.chain.getEntry(r);if(!o)throw new C(M.MISC_ERROR,"Block not found");const a=await this.chain.getBlock(o.hash);if(!a){if(this.chain.options.spv)throw new C(M.MISC_ERROR,"Block not available (spv mode)");if(this.chain.options.prune)throw new C(M.MISC_ERROR,"Block not available (pruned data)");throw new C(M.DATABASE_ERROR,"Can't read block from disk")}return s?await this.blockToJSON(o,a,n):a.toRaw().toString("hex")}async getBlockHash(t,e){if(e||1!==t.length)throw new C(M.MISC_ERROR,"getblockhash index");const i=new h(t).u32(0);if(null==i||i>this.chain.height)throw new C(M.INVALID_PARAMETER,"Block height out of range.");const r=await this.chain.getHash(i);if(!r)throw new C(M.MISC_ERROR,"Not found.");return g.revHex(r)}async getBlockHeader(t,e){if(e||t.length<1||t.length>2)throw new C(M.MISC_ERROR,'getblockheader "hash" ( verbose )');const i=new h(t),r=i.brhash(0),s=i.bool(1,!0);if(!r)throw new C(M.MISC_ERROR,"Invalid block hash.");const n=await this.chain.getEntry(r);if(!n)throw new C(M.MISC_ERROR,"Block not found");return s?await this.headerToJSON(n):n.toRaw().toString("hex",0,80)}async getChainTips(t,e){if(e||0!==t.length)throw new C(M.MISC_ERROR,"getchaintips");const i=await this.chain.getTips(),r=[];for(const t of i){const e=await this.chain.getEntry(t);s(e);const i=await this.findFork(e),n=await this.chain.isMainChain(e);r.push({height:e.height,hash:e.rhash(),branchlen:e.height-i.height,status:n?"active":"valid-headers"})}return r}async getDifficulty(t,e){if(e||0!==t.length)throw new C(M.MISC_ERROR,"getdifficulty");return K(this.chain.tip.bits)}async getMempoolInfo(t,e){if(e||0!==t.length)throw new C(M.MISC_ERROR,"getmempoolinfo");if(!this.mempool)throw new C(M.MISC_ERROR,"No mempool available.");return{size:this.mempool.map.size,bytes:this.mempool.getSize(),usage:this.mempool.getSize(),maxmempool:this.mempool.options.maxSize,mempoolminfee:b.btc(this.mempool.options.minRelay,!0)}}async getMempoolAncestors(t,e){if(e||t.length<1||t.length>2)throw new C(M.MISC_ERROR,"getmempoolancestors txid (verbose)");const i=new h(t),r=i.brhash(0),s=i.bool(1,!1);if(!this.mempool)throw new C(M.MISC_ERROR,"No mempool available.");if(!r)throw new C(M.TYPE_ERROR,"Invalid TXID.");const n=this.mempool.getEntry(r);if(!n)throw new C(M.MISC_ERROR,"Transaction not in mempool.");const o=this.mempool.getAncestors(n),a=[];if(s)for(const t of o)a.push(this.entryToJSON(t));else for(const t of o)a.push(t.txid());return a}async getMempoolDescendants(t,e){if(e||t.length<1||t.length>2)throw new C(M.MISC_ERROR,"getmempooldescendants txid (verbose)");const i=new h(t),r=i.brhash(0),s=i.bool(1,!1);if(!this.mempool)throw new C(M.MISC_ERROR,"No mempool available.");if(!r)throw new C(M.TYPE_ERROR,"Invalid TXID.");const n=this.mempool.getEntry(r);if(!n)throw new C(M.MISC_ERROR,"Transaction not in mempool.");const o=this.mempool.getDescendants(n),a=[];if(s)for(const t of o)a.push(this.entryToJSON(t));else for(const t of o)a.push(t.txid());return a}async getMempoolEntry(t,e){if(e||1!==t.length)throw new C(M.MISC_ERROR,"getmempoolentry txid");const i=new h(t).brhash(0);if(!this.mempool)throw new C(M.MISC_ERROR,"No mempool available.");if(!i)throw new C(M.TYPE_ERROR,"Invalid TXID.");const r=this.mempool.getEntry(i);if(!r)throw new C(M.MISC_ERROR,"Transaction not in mempool.");return this.entryToJSON(r)}async getRawMempool(t,e){if(e||t.length>1)throw new C(M.MISC_ERROR,"getrawmempool ( verbose )");const i=new h(t).bool(0,!1);if(!this.mempool)throw new C(M.MISC_ERROR,"No mempool available.");if(i){const t={};for(const e of this.mempool.map.values())t[e.txid()]=this.entryToJSON(e);return t}return this.mempool.getSnapshot().map(g.revHex)}async getTXOut(t,e){if(e||t.length<2||t.length>3)throw new C(M.MISC_ERROR,'gettxout "txid" n ( includemempool )');const i=new h(t),r=i.brhash(0),s=i.u32(1),n=i.bool(2,!0);if(this.chain.options.spv)throw new C(M.MISC_ERROR,"Cannot get coins in SPV mode.");if(this.chain.options.prune)throw new C(M.MISC_ERROR,"Cannot get coins when pruned.");if(!r||null==s)throw new C(M.TYPE_ERROR,"Invalid outpoint.");let o;if(n){if(!this.mempool)throw new C(M.MISC_ERROR,"No mempool available.");o=this.mempool.getCoin(r,s)}return o||(o=await this.chain.getCoin(r,s)),o?{bestblock:this.chain.tip.rhash(),confirmations:o.getDepth(this.chain.height),value:b.btc(o.value,!0),scriptPubKey:this.scriptToJSON(o.script,!0),version:o.version,coinbase:o.coinbase}:null}async getTXOutProof(t,e){if(e||1!==t.length&&2!==t.length)throw new C(M.MISC_ERROR,'gettxoutproof ["txid",...] ( blockhash )');const i=new h(t),r=i.array(0),s=i.brhash(1);if(this.chain.options.spv)throw new C(M.MISC_ERROR,"Cannot get coins in SPV mode.");if(this.chain.options.prune)throw new C(M.MISC_ERROR,"Cannot get coins when pruned.");if(!r||0===r.length)throw new C(M.INVALID_PARAMETER,"Invalid TXIDs.");const n=new h(r),o=new l,a=[];let c=null;for(let t=0;t<r.length;t++){const e=n.brhash(t);if(!e)throw new C(M.TYPE_ERROR,"Invalid TXID.");if(o.has(e))throw new C(M.INVALID_PARAMETER,"Duplicate txid.");o.add(e),a.push(e),c=e}let u=null;if(s)u=await this.chain.getBlock(s);else if(this.chain.options.indexTX){const t=await this.chain.getMeta(c);t&&(u=await this.chain.getBlock(t.block))}else{const t=await this.chain.getCoin(c,0);t&&(u=await this.chain.getBlock(t.height))}if(!u)throw new C(M.MISC_ERROR,"Block not found.");for(const t of a)if(!u.hasTX(t))throw new C(M.VERIFY_ERROR,"Block does not contain all txids.");return(u=I.fromHashes(u,a)).toRaw().toString("hex")}async verifyTXOutProof(t,e){if(e||1!==t.length)throw new C(M.MISC_ERROR,'verifytxoutproof "proof"');const i=new h(t).buf(0);if(!i)throw new C(M.TYPE_ERROR,"Invalid hex string.");const r=I.fromRaw(i);if(!r.verify())return[];if(!await this.chain.getEntry(r.hash()))throw new C(M.MISC_ERROR,"Block not found in chain.");const s=r.getTree(),n=[];for(const t of s.matches)n.push(g.revHex(t));return n}async getTXOutSetInfo(t,e){if(e||0!==t.length)throw new C(M.MISC_ERROR,"gettxoutsetinfo");if(this.chain.options.spv)throw new C(M.MISC_ERROR,"Chainstate not available (SPV mode).");return{height:this.chain.height,bestblock:this.chain.tip.rhash(),transactions:this.chain.db.state.tx,txouts:this.chain.db.state.coin,bytes_serialized:0,hash_serialized:0,total_amount:b.btc(this.chain.db.state.value,!0)}}async pruneBlockchain(t,e){if(e||0!==t.length)throw new C(M.MISC_ERROR,"pruneblockchain");if(this.chain.options.spv)throw new C(M.MISC_ERROR,"Cannot prune chain in SPV mode.");if(this.chain.options.prune)throw new C(M.MISC_ERROR,"Chain is already pruned.");if(this.chain.height<this.network.block.pruneAfterHeight)throw new C(M.MISC_ERROR,"Chain is too short for pruning.");try{await this.chain.prune()}catch(t){throw new C(M.DATABASE_ERROR,t.message)}}async verifyChain(t,e){if(e||t.length>2)throw new C(M.MISC_ERROR,"verifychain ( checklevel numblocks )");const i=new h(t),r=i.u32(0),s=i.u32(1);if(null==r||null==s)throw new C(M.TYPE_ERROR,"Missing parameters.");if(this.chain.options.spv)throw new C(M.MISC_ERROR,"Cannot verify chain in SPV mode.");if(this.chain.options.prune)throw new C(M.MISC_ERROR,"Cannot verify chain when pruned.");return null}async submitWork(t){const e=await this.locker.lock();try{return await this._submitWork(t)}finally{e()}}async _submitWork(t){const e=this.attempt;if(!e)return!1;if(128!==t.length)throw new C(M.INVALID_PARAMETER,"Invalid work size.");const i=t.slice(0,80);L(i);const r=E.fromHead(i);if(r.prevBlock!==e.prevBlock||r.bits!==e.bits)return!1;if(!r.verify())return!1;const s=this.merkleMap.get(r.merkleRoot);if(!s)return!1;const[n,o]=s,a=r.nonce,h=r.time,c=e.getProof(n,o,h,a);if(!c.verify(e.target))return!1;const l=e.commit(c);let u;try{u=await this.chain.add(l)}catch(t){if("VerifyError"===t.type)return this.logger.warning("RPC block rejected: %h (%s).",l.hash(),t.reason),!1;throw t}return!!u||(this.logger.warning("RPC block rejected: %h (bad-prevblk).",l.hash()),!1)}async createWork(t){const e=await this.locker.lock();try{return await this._createWork(t)}finally{e()}}async _createWork(){const t=await this.updateWork(),e=this.nonce1,i=this.nonce2,s=t.time,n=r.allocUnsafe(128);n.fill(0);const o=t.getRoot(e,i);return t.getHeader(o,s,0).copy(n,0),n[80]=128,n.writeUInt32BE(640,n.length-4,!0),L(n),{data:n.toString("hex"),target:t.target.toString("hex"),height:t.height}}async getWorkLongpoll(t,e){return await this.longpoll(),await this.createWork()}async getWork(t,e){if(t.length>1)throw new C(M.MISC_ERROR,'getwork ( "data" )');if(1===t.length){const e=new h(t).buf(0);if(!e)throw new C(M.TYPE_ERROR,"Invalid work data.");return await this.submitWork(e)}return await this.createWork()}async submitBlock(t,e){if(e||t.length<1||t.length>2)throw new C(M.MISC_ERROR,'submitblock "hexdata" ( "jsonparametersobject" )');const i=new h(t).buf(0),r=k.fromRaw(i);return await this.addBlock(r)}async getBlockTemplate(t,e){if(e||t.length>1)throw new C(M.MISC_ERROR,'getblocktemplate ( "jsonrequestobject" )');const i=new h(t).obj(0,{}),r=new h(i),s=r.str("mode","template");if("template"!==s&&"proposal"!==s)throw new C(M.INVALID_PARAMETER,"Invalid mode.");if("proposal"===s){const e=r.buf("data");if(!e)throw new C(M.TYPE_ERROR,"Missing data parameter.");const i=k.fromRaw(e);if(!i.prevBlock.equals(this.chain.tip.hash))return"inconclusive-not-best-prevblk";try{await this.chain.verifyBlock(i)}catch(t){if("VerifyError"===t.type)return t.reason;throw t}return null}let n=r.u32("maxversion",-1),o=r.array("rules");o&&(n=-1);const a=r.array("capabilities");let c=!1;if(a){let t=!1,e=!1;for(const i of a){if("string"!=typeof i)throw new C(M.TYPE_ERROR,"Invalid capability.");switch(i){case"coinbasetxn":t=!0;break;case"coinbasevalue":e=!0}}if(e=!0,t&&!e){if(0===this.miner.addresses.length)throw new C(M.MISC_ERROR,"No addresses available for coinbase.");c=!0}}if(!this.network.selfConnect){if(0===this.pool.peers.size())throw new C(M.CLIENT_NOT_CONNECTED,"Bitcoin is not connected!");if(!this.chain.synced)throw new C(M.CLIENT_IN_INITIAL_DOWNLOAD,"Bitcoin is downloading blocks...")}const l=r.str("longpollid");return l&&await this.handleLongpoll(l),o||(o=[]),await this.createTemplate(n,c,o)}async createTemplate(t,e,i){const r=await this.locker.lock();try{return await this._createTemplate(t,e,i)}finally{r()}}async _createTemplate(t,e,i){const r=await this.getTemplate(),n=r.witness?1:P.WITNESS_SCALE_FACTOR,o=["time","transactions","prevblock"];t>=2&&o.push("version/force"),e&&(o.push("coinbase"),o.push("coinbase/append"),o.push("generation"));const a=new c;for(let t=0;t<r.items.length;t++){const e=r.items[t];a.set(e.hash,t+1)}const h=[];for(let t=0;t<r.items.length;t++){const e=r.items[t],i=e.tx,o=[];for(let e=0;e<i.inputs.length;e++){const r=i.inputs[e],n=a.get(r.prevout.hash);null!=n&&-1===o.indexOf(n)&&(s(n<t+1),o.push(n))}h.push({data:i.toRaw().toString("hex"),txid:i.txid(),hash:i.wtxid(),depends:o,fee:e.fee,sigops:e.sigops/n|0,weight:i.getWeight()})}this.chain.options.bip91&&(i.push("segwit"),i.push("segsignal")),this.chain.options.bip148&&i.push("segwit");let l=r.version;const u={},f=[];for(const t of this.network.deploys){const e=await this.chain.getState(this.chain.tip,t);let r=t.name;switch(e){case m.thresholdStates.DEFINED:case m.thresholdStates.FAILED:break;case m.thresholdStates.LOCKED_IN:l|=1<<t.bit;case m.thresholdStates.STARTED:t.force||(-1===i.indexOf(r)&&(l&=~(1<<t.bit)),t.required&&(r="!"+r)),u[r]=t.bit;break;case m.thresholdStates.ACTIVE:if(!t.force&&t.required){if(-1===i.indexOf(r))throw new C(M.INVALID_PARAMETER,`Client must support ${r}.`);r="!"+r}f.push(r);break;default:s(!1,"Bad state.")}}const d={capabilities:["proposal"],mutable:o,version:l>>>=0,rules:f,vbavailable:u,vbrequired:0,height:r.height,previousblockhash:g.revHex(r.prevBlock),target:g.revHex(r.target),bits:j(r.bits),noncerange:"00000000ffffffff",curtime:r.time,mintime:r.mtp+1,maxtime:r.time+7200,expires:r.time+7200,sigoplimit:P.MAX_BLOCK_SIGOPS_COST/n|0,sizelimit:P.MAX_BLOCK_SIZE,weightlimit:void 0,longpollid:this.chain.tip.rhash()+j(this.totalTX()),submitold:!1,coinbaseaux:{flags:r.coinbaseFlags.toString("hex")},coinbasevalue:void 0,coinbasetxn:void 0,default_witness_commitment:void 0,transactions:h};if(r.witness&&(d.sizelimit=P.MAX_RAW_BLOCK_SIZE,d.weightlimit=P.MAX_BLOCK_WEIGHT),e){const t=r.toCoinbase(),e=t.inputs[0];if(e.script.pop(),e.script.compile(),r.witness){const i=t.outputs.pop();s(i.script.isCommitment()),e.witness.clear()}t.refresh(),d.coinbasetxn={data:t.toRaw().toString("hex"),txid:t.txid(),hash:t.wtxid(),depends:[],fee:0,sigops:t.getSigopsCost()/n|0,weight:t.getWeight()}}else d.coinbasevalue=r.getReward();return-1!==i.indexOf("segwit")&&(d.default_witness_commitment=r.getWitnessScript().toJSON()),d}async getMiningInfo(t,e){if(e||0!==t.length)throw new C(M.MISC_ERROR,"getmininginfo");const i=this.attempt;let r=0,s=0,n=0,o=0;if(i){s=i.weight,n=i.items.length+1,o=i.getDifficulty(),r=1e3;for(const t of i.items)r+=t.tx.getBaseSize()}return{blocks:this.chain.height,currentblocksize:r,currentblockweight:s,currentblocktx:n,difficulty:o,errors:"",genproclimit:this.procLimit,networkhashps:await this.getHashRate(120),pooledtx:this.totalTX(),testnet:this.network!==x.main,chain:"testnet"!==this.network.type?this.network.type:"test",generate:this.mining}}async getNetworkHashPS(t,e){if(e||t.length>2)throw new C(M.MISC_ERROR,"getnetworkhashps ( blocks height )");const i=new h(t),r=i.u32(0,120),s=i.u32(1);return await this.getHashRate(r,s)}async prioritiseTransaction(t,e){if(e||3!==t.length)throw new C(M.MISC_ERROR,"prioritisetransaction <txid> <priority delta> <fee delta>");const i=new h(t),r=i.brhash(0),s=i.i64(1),n=i.i64(2);if(!this.mempool)throw new C(M.MISC_ERROR,"No mempool available.");if(!r)throw new C(M.TYPE_ERROR,"Invalid TXID");if(null==s||null==n)throw new C(M.TYPE_ERROR,"Invalid fee or priority.");const o=this.mempool.getEntry(r);if(!o)throw new C(M.MISC_ERROR,"Transaction not in mempool.");return this.mempool.prioritise(o,s,n),!0}async verifyBlock(t,e){if(e||1!==t.length)throw new C(M.MISC_ERROR,'verifyblock "block-hex"');const i=new h(t).buf(0);if(!i)throw new C(M.TYPE_ERROR,"Invalid block hex.");if(this.chain.options.spv)throw new C(M.MISC_ERROR,"Cannot verify block in SPV mode.");const r=k.fromRaw(i);try{await this.chain.verifyBlock(r)}catch(t){if("VerifyError"===t.type)return t.reason;throw t}return null}async getGenerate(t,e){if(e||0!==t.length)throw new C(M.MISC_ERROR,"getgenerate");return this.mining}async setGenerate(t,e){if(e||t.length<1||t.length>2)throw new C(M.MISC_ERROR,"setgenerate mine ( proclimit )");const i=new h(t),r=i.bool(0,!1),s=i.u32(1,0);if(r&&0===this.miner.addresses.length)throw new C(M.MISC_ERROR,"No addresses available for coinbase.");return this.mining=r,this.procLimit=s,r?(this.miner.cpu.start(),!0):(await this.miner.cpu.stop(),!1)}async generate(t,e){if(e||t.length<1||t.length>2)throw new C(M.MISC_ERROR,"generate numblocks ( maxtries )");const i=new h(t),r=i.u32(0,1),s=i.u32(1);if(0===this.miner.addresses.length)throw new C(M.MISC_ERROR,"No addresses available for coinbase.");return await this.mineBlocks(r,null,s)}async generateToAddress(t,e){if(e||t.length<2||t.length>3)throw new C(M.MISC_ERROR,"generatetoaddress numblocks address ( maxtries )");const i=new h(t),r=i.u32(0,1),s=i.str(1,""),n=i.u32(2),o=D(s,this.network);return await this.mineBlocks(r,o,n)}async createRawTransaction(t,e){if(e||t.length<2||t.length>3)throw new C(M.MISC_ERROR,'createrawtransaction [{"txid":"id","vout":n},...] {"address":amount,"data":"hex",...} ( locktime )');const i=new h(t),r=i.array(0),s=i.obj(1),n=i.u32(2);if(!r||!s)throw new C(M.TYPE_ERROR,"Invalid parameters (inputs and sendTo).");const o=new A;null!=n&&(o.locktime=n);for(const t of r){const e=new h(t),i=e.brhash("txid"),r=e.u32("vout");let s=e.u32("sequence",4294967295);if(o.locktime&&s--,!i||null==r)throw new C(M.TYPE_ERROR,"Invalid outpoint.");const n=new S;n.prevout.hash=i,n.prevout.index=r,n.sequence=s,o.inputs.push(n)}const a=new h(s),c=new Set;for(const t of Object.keys(s)){if("data"===t){const e=a.buf(t);if(!e)throw new C(M.TYPE_ERROR,"Invalid nulldata..");const i=new _;i.value=0,i.script.fromNulldata(e),o.outputs.push(i);continue}const e=D(t,this.network),i=e.toString(this.network);if(c.has(i))throw new C(M.INVALID_PARAMETER,"Duplicate address");c.add(i);const r=a.ufixed(t,8);if(null==r)throw new C(M.TYPE_ERROR,"Invalid output value.");const s=new _;s.value=r,s.script.fromAddress(e),o.outputs.push(s)}return o.toRaw().toString("hex")}async decodeRawTransaction(t,e){if(e||1!==t.length)throw new C(M.MISC_ERROR,'decoderawtransaction "hexstring"');const i=new h(t).buf(0);if(!i)throw new C(M.TYPE_ERROR,"Invalid hex string.");const r=B.fromRaw(i);return this.txToJSON(r)}async decodeScript(t,e){if(e||1!==t.length)throw new C(M.MISC_ERROR,'decodescript "hex"');const i=new h(t).buf(0);let r=new y;i&&(r=y.fromRaw(i));const s=v.fromScripthash(r.hash160()),n=this.scriptToJSON(r);return n.p2sh=s.toString(this.network),n}async getRawTransaction(t,e){if(e||t.length<1||t.length>2)throw new C(M.MISC_ERROR,'getrawtransaction "txid" ( verbose )');const i=new h(t),r=i.brhash(0),s=i.bool(1,!1);if(!r)throw new C(M.TYPE_ERROR,"Invalid TXID.");const n=await this.node.getMeta(r);if(!n)throw new C(M.MISC_ERROR,"Transaction not found.");const o=n.tx;if(!s)return o.toRaw().toString("hex");let a;n.block&&(a=await this.chain.getEntry(n.block));const c=this.txToJSON(o,a);return c.time=n.mtime,c.hex=o.toRaw().toString("hex"),c}async sendRawTransaction(t,e){if(e||t.length<1||t.length>2)throw new C(M.MISC_ERROR,'sendrawtransaction "hexstring" ( allowhighfees )');const i=new h(t).buf(0);if(!i)throw new C(M.TYPE_ERROR,"Invalid hex string.");const r=B.fromRaw(i);return this.node.relay(r),r.txid()}async signRawTransaction(t,e){if(e||t.length<1||t.length>4)throw new C(M.MISC_ERROR,'signrawtransaction "hexstring" ( [{"txid":"id","vout":n,"scriptPubKey":"hex",redeemScript":"hex"},...] ["privatekey1",...] sighashtype )');const i=new h(t),r=i.buf(0),s=i.array(1),n=i.array(2),o=i.str(3);if(!r)throw new C(M.TYPE_ERROR,"Invalid hex string.");if(!this.mempool)throw new C(M.MISC_ERROR,"No mempool available.");const a=A.fromRaw(r);a.view=await this.mempool.getSpentView(a);const l=new c,u=[];if(n){const t=new h(n);for(let e=0;e<n.length;e++){const i=H(t.str(e,""),this.network);l.set(i.getPublicKey(),i),u.push(i)}}if(s)for(const t of s){const e=new h(t),i=e.brhash("txid"),r=e.u32("vout"),s=e.buf("scriptPubKey"),n=e.ufixed("amount",8),o=e.buf("redeemScript");if(!i||null==r||!s||null==n)throw new C(M.INVALID_PARAMETER,"Invalid UTXO.");const c=new O(i,r),f=y.fromRaw(s),d=_.fromScript(f,n);if(a.view.addOutput(c,d),0===u.length||!o)continue;if(!f.isScripthash()&&!f.isWitnessScripthash())continue;if(!o)throw new C(M.INVALID_PARAMETER,"P2SH requires redeem script.");const p=y.fromRaw(o);for(const t of p.code){if(!t.data)continue;const e=l.get(t.data);if(e){e.script=p,e.witness=f.isWitnessScripthash(),e.refresh();break}}}let f=y.hashType.ALL;if(o){const t=o.split("|");if(t.length<1||t.length>2)throw new C(M.INVALID_PARAMETER,"Invalid sighash type.");if(null==(f=y.hashType[t[0]]))throw new C(M.INVALID_PARAMETER,"Invalid sighash type.");if(2===t.length){if("ANYONECANPAY"!==t[1])throw new C(M.INVALID_PARAMETER,"Invalid sighash type.");f|=y.hashType.ANYONECANPAY}}return await a.signAsync(u,f,this.workers),{hex:a.toRaw().toString("hex"),complete:a.isSigned()}}async createMultisig(t,e){if(e||t.length<2||t.length>2)throw new C(M.MISC_ERROR,'createmultisig nrequired ["key",...]');const i=new h(t),r=i.array(1,[]),s=i.u32(0,0),n=r.length;if(s<1||n<s||n>16)throw new C(M.INVALID_PARAMETER,"Invalid m and n values.");const o=new h(r);for(let t=0;t<r.length;t++){const e=o.buf(t);if(!e)throw new C(M.TYPE_ERROR,"Invalid key.");if(!p.publicKeyVerify(e))throw new C(M.INVALID_ADDRESS_OR_KEY,"Invalid key.");r[t]=e}const a=y.fromMultisig(s,n,r);if(a.getSize()>P.MAX_SCRIPT_PUSH)throw new C(M.VERIFY_ERROR,"Redeem script exceeds size limit.");return{address:a.getAddress().toString(this.network),redeemScript:a.toJSON()}}async createWitnessAddress(t,e){if(e||1!==t.length)throw new C(M.MISC_ERROR,'createwitnessaddress "script"');const i=new h(t).buf(0);if(!i)throw new C(M.TYPE_ERROR,"Invalid script hex.");const r=y.fromRaw(i).forWitness();return{address:r.getAddress().toString(this.network),witnessScript:r.toJSON()}}async validateAddress(t,e){if(e||1!==t.length)throw new C(M.MISC_ERROR,'validateaddress "bitcoinaddress"');const i=new h(t).str(0,"");let r;try{r=v.fromString(i,this.network)}catch(t){return{isvalid:!1}}const s=y.fromAddress(r);return{isvalid:!0,address:r.toString(this.network),scriptPubKey:s.toJSON(),ismine:!1,iswatchonly:!1}}async verifyMessage(t,e){if(e||3!==t.length)throw new C(M.MISC_ERROR,'verifymessage "bitcoinaddress" "signature" "message"');const i=new h(t),s=i.str(0,""),n=i.buf(1,null,"base64"),o=i.str(2);if(!n||!o)throw new C(M.TYPE_ERROR,"Invalid parameters.");const a=D(s,this.network),c=r.from(U+o,"utf8"),l=f.digest(c),g=p.recoverDER(l,n,0,!0);return!!g&&d(u.digest(g),a.hash)}async signMessageWithPrivkey(t,e){if(e||2!==t.length)throw new C(M.MISC_ERROR,'signmessagewithprivkey "privkey" "message"');const i=new h(t),s=i.str(0,""),n=i.str(1,""),o=H(s,this.network),a=r.from(U+n,"utf8"),c=f.digest(a);return o.sign(c).toString("base64")}async estimateFee(t,e){if(e||1!==t.length)throw new C(M.MISC_ERROR,"estimatefee nblocks");const i=new h(t).u32(0,1);if(!this.fees)throw new C(M.MISC_ERROR,"Fee estimation not available.");const r=this.fees.estimateFee(i,!1);return 0===r?-1:b.btc(r,!0)}async estimatePriority(t,e){if(e||1!==t.length)throw new C(M.MISC_ERROR,"estimatepriority nblocks");const i=new h(t).u32(0,1);if(!this.fees)throw new C(M.MISC_ERROR,"Priority estimation not available.");return this.fees.estimatePriority(i,!1)}async estimateSmartFee(t,e){if(e||1!==t.length)throw new C(M.MISC_ERROR,"estimatesmartfee nblocks");const i=new h(t).u32(0,1);if(!this.fees)throw new C(M.MISC_ERROR,"Fee estimation not available.");let r=this.fees.estimateFee(i,!0);return{fee:r=0===r?-1:b.btc(r,!0),blocks:i}}async estimateSmartPriority(t,e){if(e||1!==t.length)throw new C(M.MISC_ERROR,"estimatesmartpriority nblocks");const i=new h(t).u32(0,1);if(!this.fees)throw new C(M.MISC_ERROR,"Priority estimation not available.");return{priority:this.fees.estimatePriority(i,!0),blocks:i}}async invalidateBlock(t,e){if(e||1!==t.length)throw new C(M.MISC_ERROR,'invalidateblock "hash"');const i=new h(t).brhash(0);if(!i)throw new C(M.TYPE_ERROR,"Invalid block hash.");return await this.chain.invalidate(i),null}async reconsiderBlock(t,e){if(e||1!==t.length)throw new C(M.MISC_ERROR,'reconsiderblock "hash"');const i=new h(t).brhash(0);if(!i)throw new C(M.TYPE_ERROR,"Invalid block hash.");return this.chain.removeInvalid(i),null}async setMockTime(t,e){if(e||1!==t.length)throw new C(M.MISC_ERROR,"setmocktime timestamp");const i=new h(t).u32(0);if(null==i)throw new C(M.TYPE_ERROR,"Invalid timestamp.");this.network.time.offset=0;const r=this.network.now()-i;return this.network.time.offset=-r,null}async getMemoryInfo(t,e){if(e||0!==t.length)throw new C(M.MISC_ERROR,"getmemoryinfo");return this.logger.memoryUsage()}async setLogLevel(t,e){if(e||1!==t.length)throw new C(M.MISC_ERROR,'setloglevel "level"');const i=new h(t).str(0,"");return this.logger.setLevel(i),null}async handleLongpoll(t){if(72!==t.length)throw new C(M.INVALID_PARAMETER,"Invalid longpoll ID.");const e=t.slice(0,64),i=parseInt(t.slice(64,72),16);if(i>>>0!==i)throw new C(M.INVALID_PARAMETER,"Invalid longpoll ID.");const r=g.revHex(e);this.chain.tip.hash.equals(r)&&await this.longpoll()}longpoll(){return new Promise((t,e)=>{this.pollers.push({resolve:t,reject:e})})}refreshBlock(){const t=this.pollers;this.attempt=null,this.lastActivity=0,this.merkleMap.clear(),this.nonce1=0,this.nonce2=0,this.pollers=[];for(const e of t)e.resolve()}bindChain(){this.boundChain||(this.boundChain=!0,this.node.on("connect",()=>{this.attempt&&this.refreshBlock()}),this.mempool&&this.node.on("tx",()=>{this.attempt&&g.now()-this.lastActivity>10&&this.refreshBlock()}))}async getTemplate(){this.bindChain();let t=this.attempt;return t?this.miner.updateTime(t):(t=await this.miner.createBlock(),this.attempt=t,this.lastActivity=g.now()),t}async updateWork(){this.bindChain();let t=this.attempt;if(t){if(t.address.isNull())throw new C(M.MISC_ERROR,"No addresses available for coinbase.");this.miner.updateTime(t),4294967296==++this.nonce2&&(this.nonce2=0,this.nonce1++);const e=this.nonce1,i=this.nonce2,r=t.getRoot(e,i);return this.merkleMap.set(r,[e,i]),t}if(0===this.miner.addresses.length)throw new C(M.MISC_ERROR,"No addresses available for coinbase.");t=await this.miner.createBlock();const e=this.nonce1,i=this.nonce2,r=t.getRoot(e,i);return this.attempt=t,this.lastActivity=g.now(),this.merkleMap.set(r,[e,i]),t}async addBlock(t){const e=await this.locker.lock(),i=await this.chain.locker.lock();try{return await this._addBlock(t)}finally{i(),e()}}async _addBlock(t){this.logger.info("Handling submitted block: %h.",t.hash());const e=await this.chain.getEntry(t.prevBlock);if(e&&(await this.chain.getDeployments(t.time,e)).hasWitness()&&t.getCommitmentHash()){const e=t.txs[0],i=e.inputs[0];e.hasWitness()||(this.logger.warning("Submitted block had no witness nonce."),this.logger.debug(e),i.witness.push(P.ZERO_HASH),i.witness.compile(),e.refresh(),t.refresh())}let i;try{i=await this.chain._add(t)}catch(e){if("VerifyError"===e.type)return this.logger.warning("RPC block rejected: %h (%s).",t.hash(),e.reason),`rejected: ${e.reason}`;throw e}return i?null:(this.logger.warning("RPC block rejected: %h (bad-prevblk).",t.hash()),"rejected: bad-prevblk")}totalTX(){return this.mempool?this.mempool.map.size:0}getSoftforks(){return[z("bip34",2,this.chain.state.hasBIP34()),z("bip66",3,this.chain.state.hasBIP66()),z("bip65",4,this.chain.state.hasCLTV())]}async getBIP9Softforks(){const t=this.chain.tip,e={};for(const i of this.network.deploys){let r;switch(await this.chain.getState(t,i)){case m.thresholdStates.DEFINED:r="defined";break;case m.thresholdStates.STARTED:r="started";break;case m.thresholdStates.LOCKED_IN:r="locked_in";break;case m.thresholdStates.ACTIVE:r="active";break;case m.thresholdStates.FAILED:r="failed";break;default:s(!1,"Bad state.")}e[i.name]={status:r,bit:i.bit,startTime:i.startTime,timeout:i.timeout}}return e}async getHashRate(t,e){let i=this.chain.tip;if(null!=e&&(i=await this.chain.getEntry(e)),!i)return 0;s("number"==typeof t),s(t>=0),0===t&&(t=i.height%this.network.pow.retargetInterval+1),t>i.height&&(t=i.height);let r=i.time,n=r,o=i;for(let e=0;e<t;e++){if(!(o=await this.chain.getPrevious(o)))throw new C(M.DATABASE_ERROR,"Not found.");r=Math.min(o.time,r),n=Math.max(o.time,n)}const a=n-r;if(0===a)return 0;const h=i.chainwork.sub(o.chainwork);return Number(h.toString())/a}async mineBlocks(t,e,i){const r=await this.locker.lock();try{return await this._mineBlocks(t,e,i)}finally{r()}}async _mineBlocks(t,e,i){const r=[];for(let i=0;i<t;i++){const t=await this.miner.mineBlock(null,e),i=await this.chain.add(t);s(i),r.push(i.rhash())}return r}async findFork(t){for(;t;){if(await this.chain.isMainChain(t))return t;t=await this.chain.getPrevious(t)}throw new Error("Fork not found.")}txToJSON(t,e){let i=-1,r=0,s=null,n=0;e&&(i=e.height,r=e.time,s=e.rhash(),n=this.chain.height-i+1);const o=[];for(const e of t.inputs){const i={coinbase:void 0,txid:void 0,scriptSig:void 0,txinwitness:void 0,sequence:e.sequence};t.isCoinbase()?i.coinbase=e.script.toJSON():(i.txid=e.prevout.txid(),i.vout=e.prevout.index,i.scriptSig={asm:e.script.toASM(),hex:e.script.toJSON()}),e.witness.items.length>0&&(i.txinwitness=e.witness.items.map(t=>t.toString("hex"))),o.push(i)}const a=[];for(let e=0;e<t.outputs.length;e++){const i=t.outputs[e];a.push({value:b.btc(i.value,!0),n:e,scriptPubKey:this.scriptToJSON(i.script,!0)})}return{txid:t.txid(),hash:t.wtxid(),size:t.getSize(),vsize:t.getVirtualSize(),version:t.version,locktime:t.locktime,vin:o,vout:a,blockhash:s,confirmations:n,time:r,blocktime:r,hex:void 0}}scriptToJSON(t,e){const i=t.getType(),r={asm:t.toASM(),hex:void 0,type:y.typesByVal[i],reqSigs:1,addresses:[],p2sh:void 0};e&&(r.hex=t.toJSON());const[s]=t.getMultisig();-1!==s&&(r.reqSigs=s);const n=t.getAddress();if(n){const t=n.toString(this.network);r.addresses.push(t)}return r}async headerToJSON(t){const e=await this.chain.getMedianTime(t),i=await this.chain.getNextHash(t.hash);return{hash:t.rhash(),confirmations:this.chain.height-t.height+1,height:t.height,version:t.version,versionHex:j(t.version),merkleroot:g.revHex(t.merkleRoot),time:t.time,mediantime:e,bits:t.bits,difficulty:K(t.bits),chainwork:t.chainwork.toString("hex",64),previousblockhash:t.prevBlock.equals(P.ZERO_HASH)?null:g.revHex(t.prevBlock),nextblockhash:i?g.revHex(i):null}}async blockToJSON(t,e,i){const r=await this.chain.getMedianTime(t),s=await this.chain.getNextHash(t.hash),n=[];for(const r of e.txs)if(i){const e=this.txToJSON(r,t);n.push(e)}else n.push(r.txid());return{hash:t.rhash(),confirmations:this.chain.height-t.height+1,strippedsize:e.getBaseSize(),size:e.getSize(),weight:e.getWeight(),height:t.height,version:t.version,versionHex:j(t.version),merkleroot:g.revHex(t.merkleRoot),coinbase:e.txs[0].inputs[0].script.toJSON(),tx:n,time:t.time,mediantime:r,bits:t.bits,difficulty:K(t.bits),chainwork:t.chainwork.toString("hex",64),previousblockhash:t.prevBlock.equals(P.ZERO_HASH)?null:g.revHex(t.prevBlock),nextblockhash:s?g.revHex(s):null}}entryToJSON(t){return{size:t.size,fee:b.btc(t.deltaFee,!0),modifiedfee:0,time:t.time,height:t.height,startingpriority:t.priority,currentpriority:t.getPriority(this.chain.height),descendantcount:this.mempool.countDescendants(t),descendantsize:t.descSize,descendantfees:t.descFee,ancestorcount:this.mempool.countAncestors(t),ancestorsize:0,ancestorfees:0,depends:this.mempool.getDepends(t.tx).map(g.revHex)}}}}).call(this,i(34).setImmediate,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * plugin.js - wallet plugin for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(7),s=i(233),n=i(253),o=i(254),a=i(255),h=e;h.id="walletdb",h.init=function(t){return new class extends r{constructor(t){super(),this.config=t.config.filter("wallet"),t.config.options.file&&this.config.open("wallet.conf"),this.network=t.network,this.logger=t.logger,this.client=new n(t),this.wdb=new s({network:this.network,logger:this.logger,workers:this.workers,client:this.client,prefix:this.config.prefix,memory:this.config.bool("memory",t.memory),maxFiles:this.config.uint("max-files"),cacheSize:this.config.mb("cache-size"),witness:this.config.bool("witness"),checkpoints:this.config.bool("checkpoints"),wipeNoReally:this.config.bool("wipe-no-really"),spv:t.spv}),this.rpc=new a(this),this.http=new o({network:this.network,logger:this.logger,node:this,ssl:this.config.bool("ssl"),keyFile:this.config.path("ssl-key"),certFile:this.config.path("ssl-cert"),host:this.config.str("http-host"),port:this.config.uint("http-port"),apiKey:this.config.str("api-key",t.config.str("api-key")),walletAuth:this.config.bool("wallet-auth"),noAuth:this.config.bool("no-auth"),cors:this.config.bool("cors"),adminToken:this.config.str("admin-token")}),this.init()}init(){this.wdb.on("error",t=>this.emit("error",t)),this.http.on("error",t=>this.emit("error",t))}async open(){await this.wdb.open(),this.rpc.wallet=this.wdb.primary,await this.http.open()}async close(){await this.http.close(),this.rpc.wallet=null,await this.wdb.close()}}(t)}},function(t,e,i){"use strict";(function(e){
/*!
 * walletdb.js - storage for wallets
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(47),n=i(7),o=i(2),{BloomFilter:a}=i(66),{Lock:h,MapLock:c}=i(28),l=i(71),u=i(46),{safeEqual:f}=i(80),d=i(162),p=i(4),g=i(81),m=i(68),b=i(237),w=i(168),y=i(17),v=i(164),k=i(163),E=i(252),S=v.wdb,R=v.txdb,{ChainState:I,BlockMeta:A,TXRecord:x,MapRecord:O}=k;function _(t){const i=e.allocUnsafe(4);return i.writeUInt32LE(t,0,!0),i}function B(t){const i=e.alloc(1+t.length);return i[0]=t.length,i.write(t,1,t.length,"ascii"),i}function P(t){return r(t.length>0),r(t[0]===t.length-1),t.toString("ascii",1,t.length)}t.exports=class extends n{constructor(t){super(),this.options=new class{constructor(t){this.network=p.primary,this.logger=u.global,this.workers=null,this.client=null,this.feeRate=0,this.prefix=null,this.location=null,this.memory=!0,this.maxFiles=64,this.cacheSize=16<<20,this.compression=!0,this.spv=!1,this.witness=!1,this.checkpoints=!1,this.wipeNoReally=!1,t&&this.fromOptions(t)}fromOptions(t){return null!=t.network&&(this.network=p.get(t.network)),null!=t.logger&&(r("object"==typeof t.logger),this.logger=t.logger),null!=t.workers&&(r("object"==typeof t.workers),this.workers=t.workers),null!=t.client&&(r("object"==typeof t.client),this.client=t.client),null!=t.feeRate&&(r(t.feeRate>>>0===t.feeRate),this.feeRate=t.feeRate),null!=t.prefix&&(r("string"==typeof t.prefix),this.prefix=t.prefix,this.location=s.join(this.prefix,"wallet")),null!=t.location&&(r("string"==typeof t.location),this.location=t.location),null!=t.memory&&(r("boolean"==typeof t.memory),this.memory=t.memory),null!=t.maxFiles&&(r(t.maxFiles>>>0===t.maxFiles),this.maxFiles=t.maxFiles),null!=t.cacheSize&&(r(Number.isSafeInteger(t.cacheSize)&&t.cacheSize>=0),this.cacheSize=t.cacheSize),null!=t.compression&&(r("boolean"==typeof t.compression),this.compression=t.compression),null!=t.spv&&(r("boolean"==typeof t.spv),this.spv=t.spv),null!=t.witness&&(r("boolean"==typeof t.witness),this.witness=t.witness),null!=t.checkpoints&&(r("boolean"==typeof t.checkpoints),this.checkpoints=t.checkpoints),null!=t.wipeNoReally&&(r("boolean"==typeof t.wipeNoReally),this.wipeNoReally=t.wipeNoReally),this}static fromOptions(t){return(new this).fromOptions(t)}}(t),this.network=this.options.network,this.logger=this.options.logger.context("wallet"),this.workers=this.options.workers,this.client=this.options.client||new E(this),this.feeRate=this.options.feeRate,this.db=l.create(this.options),this.primary=null,this.state=new I,this.height=0,this.wallets=new Map,this.depth=0,this.rescanning=!1,this.filterSent=!1,this.readLock=new c,this.writeLock=new h,this.txLock=new h,this.filter=new a,this.init()}init(){let t=3e6,e=-1;this.options.spv&&(t=2e4,e=a.flags.ALL),this.filter=a.fromRate(t,.001,e),this._bind()}_bind(){this.client.on("error",t=>{this.emit("error",t)}),this.client.on("connect",async()=>{try{await this.syncNode()}catch(t){this.emit("error",t)}}),this.client.on("disconnect",async()=>{this.filterSent=!1}),this.client.bind("block connect",async(t,e)=>{try{await this.addBlock(t,e)}catch(t){this.emit("error",t)}}),this.client.bind("block disconnect",async t=>{try{await this.removeBlock(t)}catch(t){this.emit("error",t)}}),this.client.hook("block rescan",async(t,e)=>{try{await this.rescanBlock(t,e)}catch(t){this.emit("error",t)}}),this.client.bind("tx",async t=>{try{await this.addTX(t)}catch(t){this.emit("error",t)}}),this.client.bind("chain reset",async t=>{try{await this.resetChain(t)}catch(t){this.emit("error",t)}})}async open(){await this.db.open(),await this.db.verify(S.V.encode(),"wallet",7),await this.verifyNetwork(),this.depth=await this.getDepth(),this.options.wipeNoReally&&await this.wipe(),await this.watch(),await this.connect(),this.logger.info("WalletDB loaded (depth=%d, height=%d, start=%d).",this.depth,this.state.height,this.state.startHeight);const t=await this.ensure({id:"primary"}),e=await t.receiveAddress();this.logger.info("Loaded primary wallet (id=%s, wid=%d, address=%s)",t.id,t.wid,e.toString(this.network)),this.primary=t}async verifyNetwork(){const t=await this.db.get(S.O.encode());if(!t){const t=this.db.batch();return t.put(S.O.encode(),_(this.network.magic)),t.write()}if(t.readUInt32LE(0,!0)!==this.network.magic)throw new Error("Network mismatch for WalletDB.")}async close(){await this.disconnect();for(const t of this.wallets.values())await t.destroy(),this.unregister(t);return this.db.close()}async watch(){const t=this.db.iterator({gte:S.p.min(),lte:S.p.max()});let e=0;await t.each(t=>{const[i]=S.p.decode(t);this.filter.add(i),e+=1}),this.logger.info("Added %d hashes to WalletDB filter.",e);const i=this.db.iterator({gte:S.o.min(),lte:S.o.max()});let r=0;await i.each(t=>{const[e,i]=S.o.decode(t),s=new y(e,i).toRaw();this.filter.add(s),r+=1}),this.logger.info("Added %d outpoints to WalletDB filter.",r)}async connect(){return this.client.open()}async disconnect(){return this.client.close()}async syncNode(){const t=await this.txLock.lock();try{this.logger.info("Resyncing from server..."),await this.syncState(),await this.syncFilter(),await this.syncChain(),await this.resend()}finally{t()}}async syncState(){const t=await this.getState();if(t)return await this.getBlock(0)?(this.state=t,void(this.height=t.height)):this.migrateState(t);this.logger.info("Initializing database state from server.");const e=this.db.batch(),i=await this.client.getHashes();let s=null;for(let t=0;t<i.length;t++){const r=i[t],n=new A(r,t);e.put(S.h.encode(t),n.toHash()),s=n}r(s);const n=this.state.clone();n.startHeight=s.height,n.startHash=s.hash,n.height=s.height,n.marked=!1,e.put(S.R.encode(),n.toRaw()),await e.write(),this.state=n,this.height=n.height}async migrateState(t){const e=this.db.batch();this.logger.info("Migrating to new sync state.");const i=await this.client.getHashes(0,t.height);for(let t=0;t<i.length;t++){const r=i[t],s=new A(r,t);e.put(S.h.encode(t),s.toHash())}await e.write(),this.state=t,this.height=t.height}async syncChain(){let t=this.state.height;for(this.logger.info("Syncing state from height %d.",t);;){const e=await this.getBlock(t);if(r(e),await this.client.getEntry(e.hash))break;r(0!==t),t-=1}return this.scan(t)}async scan(t){null==t&&(t=this.state.startHeight),r(t>>>0===t,"WDB: Must pass in a height."),this.logger.info("WalletDB is scanning %d blocks.",this.state.height-t+1),await this.rollback(t);const e=await this.getTip();try{this.rescanning=!0,await this.client.rescan(e.hash)}finally{this.rescanning=!1}}async rescan(t){const e=await this.txLock.lock();try{return await this._rescan(t)}finally{e()}}async _rescan(t){return this.scan(t)}async send(t){return this.client.send(t)}async estimateFee(t){if(this.feeRate>0)return this.feeRate;const e=await this.client.estimateFee(t);return e<this.network.feeRate?this.network.feeRate:e>this.network.maxFeeRate?this.network.maxFeeRate:e}syncFilter(){return this.logger.info("Sending filter to server (%dmb).",this.filter.size/8/(1<<20)),this.filterSent=!0,this.client.setFilter(this.filter)}addFilter(t){if(this.filterSent)return this.client.addFilter(t)}resetFilter(){if(this.filterSent)return this.client.resetFilter()}backup(t){return this.db.backup(t)}async wipe(){this.logger.warning("Wiping WalletDB TXDB..."),this.logger.warning("I hope you know what you're doing.");const t=this.db.iterator(),e=this.db.batch();let i=0;return await t.each(t=>{switch(t[0]){case 98:case 99:case 101:case 116:case 111:case 104:case 82:e.del(t),i+=1}}),this.logger.warning("Wiped %d txdb records.",i),e.write()}async getDepth(){const t=await this.db.get(S.D.encode());return t?t.readUInt32LE(0,!0):0}testFilter(t){return this.filter.test(t)}addHash(t){return this.filter.add(t),this.addFilter(t)}addOutpoint(t,e){const i=new y(t,e);this.filter.add(i.toRaw())}dump(){return this.db.dump()}register(t){r(!this.wallets.has(t.wid)),this.wallets.set(t.wid,t)}unregister(t){r(this.wallets.has(t.wid)),this.wallets.delete(t.wid)}async ensureWID(t){return"number"==typeof t?await this.db.has(S.W.encode(t))?t:-1:this.getWID(t)}async getWID(t){const e=await this.db.get(S.l.encode(t));return e?(r(4===e.length),e.readUInt32LE(0,!0)):-1}async getID(t){const e=await this.db.get(S.W.encode(t));return e?P(e):null}async get(t){const e=await this.ensureWID(t);if(-1===e)return null;const i=await this.readLock.lock(e);try{return await this._get(e)}finally{i()}}async _get(t){const e=this.wallets.get(t);if(e)return e;const i=await this.getID(t);if(!i)return null;const s=await this.db.get(S.w.encode(t));r(s);const n=b.fromRaw(this,s);return n.wid=t,n.id=i,await n.open(),this.register(n),n}save(t,e){const i=e.wid,r=e.id;t.put(S.w.encode(i),e.toRaw()),t.put(S.W.encode(i),B(r)),t.put(S.l.encode(r),_(i))}increment(t,e){t.put(S.D.encode(),_(e+1))}async rename(t,e){const i=await this.writeLock.lock();try{return await this._rename(t,e)}finally{i()}}async _rename(t,e){if(!m.isName(e))throw new Error("WDB: Bad wallet ID.");if(await this.has(e))throw new Error("WDB: ID not available.");const i=this.db.batch();i.put(S.W.encode(t.wid),B(e)),i.del(S.l.encode(t.id)),i.put(S.l.encode(e),_(t.wid)),await i.write(),t.id=e}renameAccount(t,e,i){const r=e.wid,s=e.accountIndex;t.del(S.i.encode(r,e.name)),t.put(S.i.encode(r,i),_(s)),t.put(S.n.encode(r,s),B(i)),e.name=i}async remove(t){const e=await this.ensureWID(t);if(-1===e)return!1;const i=await this.readLock.lock(e),r=await this.writeLock.lock(),s=await this.txLock.lock();try{return await this._remove(e)}finally{s(),r(),i()}}async _remove(t){const e=await this.getID(t);if(!e)return!1;if("primary"===e)throw new Error("Cannot remove primary wallet.");const i=this.db.batch();i.del(S.w.encode(t)),i.del(S.W.encode(t)),i.del(S.l.encode(e));const r=this.db.iterator({gte:S.P.min(t),lte:S.P.max(t)});await r.each((e,r)=>{const[,s]=S.P.decode(e);return i.del(e),this.removePathMap(i,s,t)});const s=t=>this.db.iterator(t).each(t=>i.del(t));await s({gte:S.r.min(t),lte:S.r.max(t)}),await s({gte:S.a.min(t),lte:S.a.max(t)}),await s({gte:S.i.min(t),lte:S.i.max(t)}),await s({gte:S.n.min(t),lte:S.n.max(t)}),await s({gt:S.t.encode(t),lt:S.t.encode(t+1)});const n=this.db.bucket(S.t.encode(t)),o=n.iterator({gte:R.b.min(),lte:R.b.max()});await o.each((e,r)=>{const[s]=R.b.decode(e);return this.removeBlockMap(i,s,t)});const a=n.iterator({gte:R.s.min(),lte:R.s.max(),keys:!0});await a.each((e,r)=>{const[s,n]=R.s.decode(e);return this.removeOutpointMap(i,s,n,t)});const h=n.iterator({gte:R.p.min(),lte:R.p.max(),keys:!0});await h.each((e,r)=>{const[s]=R.p.decode(e);return this.removeTXMap(i,s,t)});const c=this.wallets.get(t);return c&&(await c.destroy(),this.unregister(c)),await i.write(),!0}async auth(t,e){const i=await this.get(t);if(!i)return null;if(!f(e,i.token))throw new Error("WDB: Authentication error.");return i}async create(t){const e=await this.writeLock.lock();t||(t={});try{return await this._create(t)}finally{e()}}async _create(t){if(t.id&&await this.has(t.id))throw new Error("WDB: Wallet already exists.");const e=b.fromOptions(this,t);return e.wid=this.depth,await e.init(t,t.passphrase),this.depth+=1,this.register(e),this.logger.info("Created wallet %s in WalletDB.",e.id),e}async has(t){return-1!==await this.ensureWID(t)}async ensure(t){if(t.id){const e=await this.get(t.id);if(e)return e}return this.create(t)}async getAccount(t,e){const i=await this.getAccountName(t,e);if(!i)return null;const s=await this.db.get(S.a.encode(t,e));r(s);const n=w.fromRaw(this,s);return n.accountIndex=e,n.name=i,n}async getAccounts(t){return this.db.values({gte:S.n.min(t),lte:S.n.max(t),parse:P})}async getAccountIndex(t,e){const i=await this.db.get(S.i.encode(t,e));return i?i.readUInt32LE(0,!0):-1}async getAccountName(t,e){const i=await this.db.get(S.n.encode(t,e));return i?P(i):null}saveAccount(t,e){const i=e.wid,r=e.accountIndex,s=e.name;t.put(S.a.encode(i,r),e.toRaw()),t.put(S.i.encode(i,s),_(r)),t.put(S.n.encode(i,r),B(s))}async hasAccount(t,e){return this.db.has(S.a.encode(t,e))}async saveKey(t,e,i){return this.savePath(t,e,i.toPath())}async savePath(t,e,i){await this.addPathMap(t,i.hash,e),t.put(S.P.encode(e,i.hash),i.toRaw()),t.put(S.r.encode(e,i.account,i.hash),null)}async getPath(t,e){const i=await this.readPath(t,e);return i?(i.name=await this.getAccountName(t,i.account),r(i.name),i):null}async readPath(t,e){const i=await this.db.get(S.P.encode(t,e));if(!i)return null;const r=g.fromRaw(i);return r.hash=e,r}async hasPath(t,e){return this.db.has(S.P.encode(t,e))}async getHashes(){return this.db.keys({gte:S.p.min(),lte:S.p.max(),parse:t=>S.p.decode(t)[0]})}async getOutpoints(){return this.db.keys({gte:S.o.min(),lte:S.o.max(),parse:t=>{const[e,i]=S.o.decode(t);return new y(e,i)}})}async getWalletHashes(t){return this.db.keys({gte:S.P.min(t),lte:S.P.max(t),parse:t=>S.P.decode(t)[1]})}async getAccountHashes(t,e){return this.db.keys({gte:S.r.min(t,e),lte:S.r.max(t,e),parse:t=>S.r.decode(t)[2]})}async getWalletPaths(t){const e=await this.db.range({gte:S.P.min(t),lte:S.P.min(t)}),i=[];for(const{key:s,value:n}of e){const[,e]=S.P.decode(s),o=g.fromRaw(n);o.hash=e,o.name=await this.getAccountName(t,o.account),r(o.name),i.push(o)}return i}async getWallets(){return this.db.values({gte:S.W.min(),lte:S.W.max(),parse:P})}async encryptKeys(t,e,i){const s=this.db.iterator({gte:S.P.min(e),lte:S.P.max(e),values:!0});await s.each((e,s)=>{const[,n]=S.P.decode(e),o=g.fromRaw(s);if(!o.data)return;r(!o.encrypted);const a=n.slice(0,16);o.data=d.encipher(o.data,i,a),o.encrypted=!0,t.put(e,o.toRaw())})}async decryptKeys(t,e,i){const s=this.db.iterator({gte:S.P.min(e),lte:S.P.max(e),values:!0});await s.each((e,s)=>{const[,n]=S.P.decode(e),o=g.fromRaw(s);if(!o.data)return;r(o.encrypted);const a=n.slice(0,16);o.data=d.decipher(o.data,i,a),o.encrypted=!1,t.put(e,o.toRaw())})}async resend(){const t=await this.db.keys({gte:S.w.min(),lte:S.w.max(),parse:t=>S.w.decode(t)[0]});this.logger.info("Resending from %d wallets.",t.length);for(const e of t)await this.resendPending(e)}async resendPending(t){const e=S.t.encode(t),i=this.db.bucket(e),r=await i.keys({gte:R.p.min(),lte:R.p.max(),parse:t=>R.p.decode(t)[0]});if(0===r.length)return;this.logger.info("Rebroadcasting %d transactions for %d.",r.length,t);const s=[];for(const t of r){const e=await i.get(R.t.encode(t));if(!e)continue;const r=x.fromRaw(e);r.tx.isCoinbase()||s.push(r.tx)}for(const t of m.sortDeps(s))await this.send(t)}async getWalletsByTX(t){const e=new Set;if(!t.isCoinbase())for(const{prevout:i}of t.inputs){const{hash:t,index:r}=i;if(!this.testFilter(i.toRaw()))continue;const s=await this.getOutpointMap(t,r);if(s)for(const t of s.wids)e.add(t)}const i=t.getOutputHashes();for(const t of i){if(!this.testFilter(t))continue;const i=await this.getPathMap(t);if(i)for(const t of i.wids)e.add(t)}return 0===e.size?null:e}async getState(){const t=await this.db.get(S.R.encode());return t?I.fromRaw(t):null}async setTip(t){const e=this.db.batch(),i=this.state.clone();if(t.height<i.height)for(;i.height!==t.height;)e.del(S.h.encode(i.height)),i.height-=1;else t.height>i.height&&(r(t.height===i.height+1,"Bad chain sync."),i.height+=1);t.height<i.startHeight&&(i.startHeight=t.height,i.startHash=t.hash,i.marked=!1),e.put(S.h.encode(t.height),t.toHash()),e.put(S.R.encode(),i.toRaw()),await e.write(),this.state=i,this.height=i.height}async markState(t){const e=this.state.clone();e.startHeight=t.height,e.startHash=t.hash,e.marked=!0;const i=this.db.batch();i.put(S.R.encode(),e.toRaw()),await i.write(),this.state=e,this.height=e.height}async getMap(t){const e=await this.db.get(t);return e?O.fromRaw(e):null}async addMap(t,e,i){const s=await this.db.get(e);if(!s){const r=new O;return r.add(i),void t.put(e,r.toRaw())}r(s.length>=4);const n=s.readUInt32LE(0,!0),a=o.write(s.length+4);a.writeU32(n+1),a.copy(s,4,s.length),a.writeU32(i),t.put(e,a.render())}async removeMap(t,e,i){const r=await this.getMap(e);r&&r.remove(i)&&(0!==r.size?t.put(e,r.toRaw()):t.del(e))}async getPathMap(t){return this.getMap(S.p.encode(t))}async addPathMap(t,e,i){return await this.addHash(e),this.addMap(t,S.p.encode(e),i)}async removePathMap(t,e,i){return this.removeMap(t,S.p.encode(e),i)}async getBlockMap(t){return this.getMap(S.b.encode(t))}async addBlockMap(t,e,i){return this.addMap(t,S.b.encode(e),i)}async removeBlockMap(t,e,i){return this.removeMap(t,S.b.encode(e),i)}async getTXMap(t){return this.getMap(S.T.encode(t))}async addTXMap(t,e,i){return this.addMap(t,S.T.encode(e),i)}async removeTXMap(t,e,i){return this.removeMap(t,S.T.encode(e),i)}async getOutpointMap(t,e){return this.getMap(S.o.encode(t,e))}async addOutpointMap(t,e,i,r){return await this.addOutpoint(e,i),this.addMap(t,S.o.encode(e,i),r)}async removeOutpointMap(t,e,i,r){return this.removeMap(t,S.o.encode(e,i),r)}async getBlock(t){const e=await this.db.get(S.h.encode(t));if(!e)return null;const i=new A;return i.hash=e,i.height=t,i}async getTip(){const t=await this.getBlock(this.state.height);if(!t)throw new Error("WDB: Tip not found!");return t}async rollback(t){if(t>this.state.height)throw new Error("WDB: Cannot rollback to the future.");if(t===this.state.height)return void this.logger.info("Rolled back to same height (%d).",t);this.logger.info("Rolling back %d WalletDB blocks to height %d.",this.state.height-t,t);const e=await this.getBlock(t);r(e),await this.revert(e.height),await this.setTip(e)}async revert(t){const e=this.db.iterator({gte:S.b.encode(t+1),lte:S.b.max(),reverse:!0,values:!0});let i=0;await e.each(async(t,e)=>{const[s]=S.b.decode(t),n=O.fromRaw(e);for(const t of n.wids){const e=await this.get(t);r(e),i+=await e.revert(s)}}),this.logger.info("Rolled back %d WalletDB transactions.",i)}async addBlock(t,e){const i=await this.txLock.lock();try{return await this._addBlock(t,e)}finally{i()}}async _addBlock(t,e){const i=A.fromEntry(t);if(i.height<this.state.height)return this.logger.warning("WalletDB is connecting low blocks (%d).",i.height),0;if(i.height>=this.network.block.slowHeight&&this.logger.debug("Adding block: %d.",i.height),i.height===this.state.height)this.logger.warning("Already saw WalletDB block (%d).",i.height);else if(i.height!==this.state.height+1)return await this.scan(this.state.height),0;if(await this.setTip(i),this.options.checkpoints&&!this.state.marked&&i.height<=this.network.lastCheckpoint)return 0;let r=0;for(const t of e)await this._addTX(t,i)&&(r+=1);return r>0&&this.logger.info("Connected WalletDB block %h (tx=%d).",i.hash,r),r}async removeBlock(t){const e=await this.txLock.lock();try{return await this._removeBlock(t)}finally{e()}}async _removeBlock(t){const e=A.fromEntry(t);if(0===e.height)throw new Error("WDB: Bad disconnection (genesis block).");if(e.height>this.state.height)return this.logger.warning("WalletDB is disconnecting high blocks (%d).",e.height),0;if(e.height!==this.state.height)throw new Error("WDB: Bad disconnection (height mismatch).");const i=await this.getBlock(e.height-1);r(i);const s=await this.getBlockMap(e.height);if(!s)return await this.setTip(i),0;let n=0;for(const t of s.wids){const i=await this.get(t);r(i),n+=await i.revert(e.height)}return await this.setTip(i),this.logger.warning("Disconnected wallet block %h (tx=%d).",e.hash,n),n}async rescanBlock(t,e){if(this.rescanning)if(t.height>this.state.height+1)this.logger.warning("Rescan block too high: %d.",t.height);else try{await this._addBlock(t,e)}catch(t){throw this.emit("error",t),t}else this.logger.warning("Unsolicited rescan block: %d.",t.height)}async addTX(t){const e=await this.txLock.lock();try{return await this._addTX(t)}finally{e()}}async _addTX(t,e){const i=await this.getWalletsByTX(t);if(r(!t.mutable,"WDB: Cannot add mutable TX."),!i)return null;e&&!this.state.marked&&await this.markState(e),this.logger.info("Incoming transaction for %d wallets in WalletDB (%h).",i.size,t.hash());let s=!1;for(const n of i){const i=await this.get(n);r(i),await i.add(t,e)&&(this.logger.info("Added transaction to wallet in WalletDB: %s (%d).",i.id,n),s=!0)}return s?i:null}async resetChain(t){const e=await this.txLock.lock();try{return await this._resetChain(t)}finally{e()}}async _resetChain(t){if(t.height>this.state.height)throw new Error("WDB: Bad reset height.");return this.rollback(t.height)}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){
/*!
 * aes.js - aes128/192/256 for bcrypto
 * Copyright (c) 2016-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */
const r=i(235),{CBCCipher:s,CBCDecipher:n}=i(236);function o(e,i){const r=t.allocUnsafe(e.length+i.length);return e.copy(r,0),i.copy(r,e.length),r}e.native=0,e.encipher=function(t,e,i){const n=new s(new r(256));return n.init(e,i),o(n.update(t),n.final())},e.decipher=function(t,e,i){const s=new n(new r(256));return s.init(e,i),o(s.update(t),s.final())}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * aes.js - aes128/192/256 for bcrypto
 * Copyright (c) 2016-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 *
 * Ported from:
 * https://github.com/openssl/openssl/blob/master/crypto/aes/aes_core.c
 * Entered into the public domain by Vincent Rijmen.
 */
const r=i(0),s=new Uint32Array([3328402341,4168907908,4000806809,4135287693,4294111757,3597364157,3731845041,2445657428,1613770832,33620227,3462883241,1445669757,3892248089,3050821474,1303096294,3967186586,2412431941,528646813,2311702848,4202528135,4026202645,2992200171,2387036105,4226871307,1101901292,3017069671,1604494077,1169141738,597466303,1403299063,3832705686,2613100635,1974974402,3791519004,1033081774,1277568618,1815492186,2118074177,4126668546,2211236943,1748251740,1369810420,3521504564,4193382664,3799085459,2883115123,1647391059,706024767,134480908,2512897874,1176707941,2646852446,806885416,932615841,168101135,798661301,235341577,605164086,461406363,3756188221,3454790438,1311188841,2142417613,3933566367,302582043,495158174,1479289972,874125870,907746093,3698224818,3025820398,1537253627,2756858614,1983593293,3084310113,2108928974,1378429307,3722699582,1580150641,327451799,2790478837,3117535592,0,3253595436,1075847264,3825007647,2041688520,3059440621,3563743934,2378943302,1740553945,1916352843,2487896798,2555137236,2958579944,2244988746,3151024235,3320835882,1336584933,3992714006,2252555205,2588757463,1714631509,293963156,2319795663,3925473552,67240454,4269768577,2689618160,2017213508,631218106,1269344483,2723238387,1571005438,2151694528,93294474,1066570413,563977660,1882732616,4059428100,1673313503,2008463041,2950355573,1109467491,537923632,3858759450,4260623118,3218264685,2177748300,403442708,638784309,3287084079,3193921505,899127202,2286175436,773265209,2479146071,1437050866,4236148354,2050833735,3362022572,3126681063,840505643,3866325909,3227541664,427917720,2655997905,2749160575,1143087718,1412049534,999329963,193497219,2353415882,3354324521,1807268051,672404540,2816401017,3160301282,369822493,2916866934,3688947771,1681011286,1949973070,336202270,2454276571,201721354,1210328172,3093060836,2680341085,3184776046,1135389935,3294782118,965841320,831886756,3554993207,4068047243,3588745010,2345191491,1849112409,3664604599,26054028,2983581028,2622377682,1235855840,3630984372,2891339514,4092916743,3488279077,3395642799,4101667470,1202630377,268961816,1874508501,4034427016,1243948399,1546530418,941366308,1470539505,1941222599,2546386513,3421038627,2715671932,3899946140,1042226977,2521517021,1639824860,227249030,260737669,3765465232,2084453954,1907733956,3429263018,2420656344,100860677,4160157185,470683154,3261161891,1781871967,2924959737,1773779408,394692241,2579611992,974986535,664706745,3655459128,3958962195,731420851,571543859,3530123707,2849626480,126783113,865375399,765172662,1008606754,361203602,3387549984,2278477385,2857719295,1344809080,2782912378,59542671,1503764984,160008576,437062935,1707065306,3622233649,2218934982,3496503480,2185314755,697932208,1512910199,504303377,2075177163,2824099068,1841019862,739644986]),n=new Uint32Array([2781242211,2230877308,2582542199,2381740923,234877682,3184946027,2984144751,1418839493,1348481072,50462977,2848876391,2102799147,434634494,1656084439,3863849899,2599188086,1167051466,2636087938,1082771913,2281340285,368048890,3954334041,3381544775,201060592,3963727277,1739838676,4250903202,3930435503,3206782108,4149453988,2531553906,1536934080,3262494647,484572669,2923271059,1783375398,1517041206,1098792767,49674231,1334037708,1550332980,4098991525,886171109,150598129,2481090929,1940642008,1398944049,1059722517,201851908,1385547719,1699095331,1587397571,674240536,2704774806,252314885,3039795866,151914247,908333586,2602270848,1038082786,651029483,1766729511,3447698098,2682942837,454166793,2652734339,1951935532,775166490,758520603,3000790638,4004797018,4217086112,4137964114,1299594043,1639438038,3464344499,2068982057,1054729187,1901997871,2534638724,4121318227,1757008337,0,750906861,1614815264,535035132,3363418545,3988151131,3201591914,1183697867,3647454910,1265776953,3734260298,3566750796,3903871064,1250283471,1807470800,717615087,3847203498,384695291,3313910595,3617213773,1432761139,2484176261,3481945413,283769337,100925954,2180939647,4037038160,1148730428,3123027871,3813386408,4087501137,4267549603,3229630528,2315620239,2906624658,3156319645,1215313976,82966005,3747855548,3245848246,1974459098,1665278241,807407632,451280895,251524083,1841287890,1283575245,337120268,891687699,801369324,3787349855,2721421207,3431482436,959321879,1469301956,4065699751,2197585534,1199193405,2898814052,3887750493,724703513,2514908019,2696962144,2551808385,3516813135,2141445340,1715741218,2119445034,2872807568,2198571144,3398190662,700968686,3547052216,1009259540,2041044702,3803995742,487983883,1991105499,1004265696,1449407026,1316239930,504629770,3683797321,168560134,1816667172,3837287516,1570751170,1857934291,4014189740,2797888098,2822345105,2754712981,936633572,2347923833,852879335,1133234376,1500395319,3084545389,2348912013,1689376213,3533459022,3762923945,3034082412,4205598294,133428468,634383082,2949277029,2398386810,3913789102,403703816,3580869306,2297460856,1867130149,1918643758,607656988,4049053350,3346248884,1368901318,600565992,2090982877,2632479860,557719327,3717614411,3697393085,2249034635,2232388234,2430627952,1115438654,3295786421,2865522278,3633334344,84280067,33027830,303828494,2747425121,1600795957,4188952407,3496589753,2434238086,1486471617,658119965,3106381470,953803233,334231800,3005978776,857870609,3151128937,1890179545,2298973838,2805175444,3056442267,574365214,2450884487,550103529,1233637070,4289353045,2018519080,2057691103,2399374476,4166623649,2148108681,387583245,3664101311,836232934,3330556482,3100665960,3280093505,2955516313,2002398509,287182607,3413881008,4238890068,3597515707,975967766]),o=new Uint32Array([1671808611,2089089148,2006576759,2072901243,4061003762,1807603307,1873927791,3310653893,810573872,16974337,1739181671,729634347,4263110654,3613570519,2883997099,1989864566,3393556426,2191335298,3376449993,2106063485,4195741690,1508618841,1204391495,4027317232,2917941677,3563566036,2734514082,2951366063,2629772188,2767672228,1922491506,3227229120,3082974647,4246528509,2477669779,644500518,911895606,1061256767,4144166391,3427763148,878471220,2784252325,3845444069,4043897329,1905517169,3631459288,827548209,356461077,67897348,3344078279,593839651,3277757891,405286936,2527147926,84871685,2595565466,118033927,305538066,2157648768,3795705826,3945188843,661212711,2999812018,1973414517,152769033,2208177539,745822252,439235610,455947803,1857215598,1525593178,2700827552,1391895634,994932283,3596728278,3016654259,695947817,3812548067,795958831,2224493444,1408607827,3513301457,0,3979133421,543178784,4229948412,2982705585,1542305371,1790891114,3410398667,3201918910,961245753,1256100938,1289001036,1491644504,3477767631,3496721360,4012557807,2867154858,4212583931,1137018435,1305975373,861234739,2241073541,1171229253,4178635257,33948674,2139225727,1357946960,1011120188,2679776671,2833468328,1374921297,2751356323,1086357568,2408187279,2460827538,2646352285,944271416,4110742005,3168756668,3066132406,3665145818,560153121,271589392,4279952895,4077846003,3530407890,3444343245,202643468,322250259,3962553324,1608629855,2543990167,1154254916,389623319,3294073796,2817676711,2122513534,1028094525,1689045092,1575467613,422261273,1939203699,1621147744,2174228865,1339137615,3699352540,577127458,712922154,2427141008,2290289544,1187679302,3995715566,3100863416,339486740,3732514782,1591917662,186455563,3681988059,3762019296,844522546,978220090,169743370,1239126601,101321734,611076132,1558493276,3260915650,3547250131,2901361580,1655096418,2443721105,2510565781,3828863972,2039214713,3878868455,3359869896,928607799,1840765549,2374762893,3580146133,1322425422,2850048425,1823791212,1459268694,4094161908,3928346602,1706019429,2056189050,2934523822,135794696,3134549946,2022240376,628050469,779246638,472135708,2800834470,3032970164,3327236038,3894660072,3715932637,1956440180,522272287,1272813131,3185336765,2340818315,2323976074,1888542832,1044544574,3049550261,1722469478,1222152264,50660867,4127324150,236067854,1638122081,895445557,1475980887,3117443513,2257655686,3243809217,489110045,2662934430,3778599393,4162055160,2561878936,288563729,1773916777,3648039385,2391345038,2493985684,2612407707,505560094,2274497927,3911240169,3460925390,1442818645,678973480,3749357023,2358182796,2717407649,2306869641,219617805,3218761151,3862026214,1120306242,1756942440,1103331905,2578459033,762796589,252780047,2966125488,1425844308,3151392187,372911126]),a=new Uint32Array([1667474886,2088535288,2004326894,2071694838,4075949567,1802223062,1869591006,3318043793,808472672,16843522,1734846926,724270422,4278065639,3621216949,2880169549,1987484396,3402253711,2189597983,3385409673,2105378810,4210693615,1499065266,1195886990,4042263547,2913856577,3570689971,2728590687,2947541573,2627518243,2762274643,1920112356,3233831835,3082273397,4261223649,2475929149,640051788,909531756,1061110142,4160160501,3435941763,875846760,2779116625,3857003729,4059105529,1903268834,3638064043,825316194,353713962,67374088,3351728789,589522246,3284360861,404236336,2526454071,84217610,2593830191,117901582,303183396,2155911963,3806477791,3958056653,656894286,2998062463,1970642922,151591698,2206440989,741110872,437923380,454765878,1852748508,1515908788,2694904667,1381168804,993742198,3604373943,3014905469,690584402,3823320797,791638366,2223281939,1398011302,3520161977,0,3991743681,538992704,4244381667,2981218425,1532751286,1785380564,3419096717,3200178535,960056178,1246420628,1280103576,1482221744,3486468741,3503319995,4025428677,2863326543,4227536621,1128514950,1296947098,859002214,2240123921,1162203018,4193849577,33687044,2139062782,1347481760,1010582648,2678045221,2829640523,1364325282,2745433693,1077985408,2408548869,2459086143,2644360225,943212656,4126475505,3166494563,3065430391,3671750063,555836226,269496352,4294908645,4092792573,3537006015,3452783745,202118168,320025894,3974901699,1600119230,2543297077,1145359496,387397934,3301201811,2812801621,2122220284,1027426170,1684319432,1566435258,421079858,1936954854,1616945344,2172753945,1330631070,3705438115,572679748,707427924,2425400123,2290647819,1179044492,4008585671,3099120491,336870440,3739122087,1583276732,185277718,3688593069,3772791771,842159716,976899700,168435220,1229577106,101059084,606366792,1549591736,3267517855,3553849021,2897014595,1650632388,2442242105,2509612081,3840161747,2038008818,3890688725,3368567691,926374254,1835907034,2374863873,3587531953,1313788572,2846482505,1819063512,1448540844,4109633523,3941213647,1701162954,2054852340,2930698567,134748176,3132806511,2021165296,623210314,774795868,471606328,2795958615,3031746419,3334885783,3907527627,3722280097,1953799400,522133822,1263263126,3183336545,2341176845,2324333839,1886425312,1044267644,3048588401,1718004428,1212733584,50529542,4143317495,235803164,1633788866,892690282,1465383342,3115962473,2256965911,3250673817,488449850,2661202215,3789633753,4177007595,2560144171,286339874,1768537042,3654906025,2391705863,2492770099,2610673197,505291324,2273808917,3924369609,3469625735,1431699370,673740880,3755965093,2358021891,2711746649,2307489801,218961690,3217021541,3873845719,1111672452,1751693520,1094828930,2576986153,757954394,252645662,2964376443,1414855848,3149649517,370555436]),h=new Uint32Array([1374988112,2118214995,437757123,975658646,1001089995,530400753,2902087851,1273168787,540080725,2910219766,2295101073,4110568485,1340463100,3307916247,641025152,3043140495,3736164937,632953703,1172967064,1576976609,3274667266,2169303058,2370213795,1809054150,59727847,361929877,3211623147,2505202138,3569255213,1484005843,1239443753,2395588676,1975683434,4102977912,2572697195,666464733,3202437046,4035489047,3374361702,2110667444,1675577880,3843699074,2538681184,1649639237,2976151520,3144396420,4269907996,4178062228,1883793496,2403728665,2497604743,1383856311,2876494627,1917518562,3810496343,1716890410,3001755655,800440835,2261089178,3543599269,807962610,599762354,33778362,3977675356,2328828971,2809771154,4077384432,1315562145,1708848333,101039829,3509871135,3299278474,875451293,2733856160,92987698,2767645557,193195065,1080094634,1584504582,3178106961,1042385657,2531067453,3711829422,1306967366,2438237621,1908694277,67556463,1615861247,429456164,3602770327,2302690252,1742315127,2968011453,126454664,3877198648,2043211483,2709260871,2084704233,4169408201,0,159417987,841739592,504459436,1817866830,4245618683,260388950,1034867998,908933415,168810852,1750902305,2606453969,607530554,202008497,2472011535,3035535058,463180190,2160117071,1641816226,1517767529,470948374,3801332234,3231722213,1008918595,303765277,235474187,4069246893,766945465,337553864,1475418501,2943682380,4003061179,2743034109,4144047775,1551037884,1147550661,1543208500,2336434550,3408119516,3069049960,3102011747,3610369226,1113818384,328671808,2227573024,2236228733,3535486456,2935566865,3341394285,496906059,3702665459,226906860,2009195472,733156972,2842737049,294930682,1206477858,2835123396,2700099354,1451044056,573804783,2269728455,3644379585,2362090238,2564033334,2801107407,2776292904,3669462566,1068351396,742039012,1350078989,1784663195,1417561698,4136440770,2430122216,775550814,2193862645,2673705150,1775276924,1876241833,3475313331,3366754619,270040487,3902563182,3678124923,3441850377,1851332852,3969562369,2203032232,3868552805,2868897406,566021896,4011190502,3135740889,1248802510,3936291284,699432150,832877231,708780849,3332740144,899835584,1951317047,4236429990,3767586992,866637845,4043610186,1106041591,2144161806,395441711,1984812685,1139781709,3433712980,3835036895,2664543715,1282050075,3240894392,1181045119,2640243204,25965917,4203181171,4211818798,3009879386,2463879762,3910161971,1842759443,2597806476,933301370,1509430414,3943906441,3467192302,3076639029,3776767469,2051518780,2631065433,1441952575,404016761,1942435775,1408749034,1610459739,3745345300,2017778566,3400528769,3110650942,941896748,3265478751,371049330,3168937228,675039627,4279080257,967311729,135050206,3635733660,1683407248,2076935265,3576870512,1215061108,3501741890]),c=new Uint32Array([1347548327,1400783205,3273267108,2520393566,3409685355,4045380933,2880240216,2471224067,1428173050,4138563181,2441661558,636813900,4233094615,3620022987,2149987652,2411029155,1239331162,1730525723,2554718734,3781033664,46346101,310463728,2743944855,3328955385,3875770207,2501218972,3955191162,3667219033,768917123,3545789473,692707433,1150208456,1786102409,2029293177,1805211710,3710368113,3065962831,401639597,1724457132,3028143674,409198410,2196052529,1620529459,1164071807,3769721975,2226875310,486441376,2499348523,1483753576,428819965,2274680428,3075636216,598438867,3799141122,1474502543,711349675,129166120,53458370,2592523643,2782082824,4063242375,2988687269,3120694122,1559041666,730517276,2460449204,4042459122,2706270690,3446004468,3573941694,533804130,2328143614,2637442643,2695033685,839224033,1973745387,957055980,2856345839,106852767,1371368976,4181598602,1033297158,2933734917,1179510461,3046200461,91341917,1862534868,4284502037,605657339,2547432937,3431546947,2003294622,3182487618,2282195339,954669403,3682191598,1201765386,3917234703,3388507166,0,2198438022,1211247597,2887651696,1315723890,4227665663,1443857720,507358933,657861945,1678381017,560487590,3516619604,975451694,2970356327,261314535,3535072918,2652609425,1333838021,2724322336,1767536459,370938394,182621114,3854606378,1128014560,487725847,185469197,2918353863,3106780840,3356761769,2237133081,1286567175,3152976349,4255350624,2683765030,3160175349,3309594171,878443390,1988838185,3704300486,1756818940,1673061617,3403100636,272786309,1075025698,545572369,2105887268,4174560061,296679730,1841768865,1260232239,4091327024,3960309330,3497509347,1814803222,2578018489,4195456072,575138148,3299409036,446754879,3629546796,4011996048,3347532110,3252238545,4270639778,915985419,3483825537,681933534,651868046,2755636671,3828103837,223377554,2607439820,1649704518,3270937875,3901806776,1580087799,4118987695,3198115200,2087309459,2842678573,3016697106,1003007129,2802849917,1860738147,2077965243,164439672,4100872472,32283319,2827177882,1709610350,2125135846,136428751,3874428392,3652904859,3460984630,3572145929,3593056380,2939266226,824852259,818324884,3224740454,930369212,2801566410,2967507152,355706840,1257309336,4148292826,243256656,790073846,2373340630,1296297904,1422699085,3756299780,3818836405,457992840,3099667487,2135319889,77422314,1560382517,1945798516,788204353,1521706781,1385356242,870912086,325965383,2358957921,2050466060,2388260884,2313884476,4006521127,901210569,3990953189,1014646705,1503449823,1062597235,2031621326,3212035895,3931371469,1533017514,350174575,2256028891,2177544179,1052338372,741876788,1606591296,1914052035,213705253,2334669897,1107234197,1899603969,3725069491,2631447780,2422494913,1635502980,1893020342,1950903388,1120974935]),l=new Uint32Array([2807058932,1699970625,2764249623,1586903591,1808481195,1173430173,1487645946,59984867,4199882800,1844882806,1989249228,1277555970,3623636965,3419915562,1149249077,2744104290,1514790577,459744698,244860394,3235995134,1963115311,4027744588,2544078150,4190530515,1608975247,2627016082,2062270317,1507497298,2200818878,567498868,1764313568,3359936201,2305455554,2037970062,1047239e3,1910319033,1337376481,2904027272,2892417312,984907214,1243112415,830661914,861968209,2135253587,2011214180,2927934315,2686254721,731183368,1750626376,4246310725,1820824798,4172763771,3542330227,48394827,2404901663,2871682645,671593195,3254988725,2073724613,145085239,2280796200,2779915199,1790575107,2187128086,472615631,3029510009,4075877127,3802222185,4107101658,3201631749,1646252340,4270507174,1402811438,1436590835,3778151818,3950355702,3963161475,4020912224,2667994737,273792366,2331590177,104699613,95345982,3175501286,2377486676,1560637892,3564045318,369057872,4213447064,3919042237,1137477952,2658625497,1119727848,2340947849,1530455833,4007360968,172466556,266959938,516552836,0,2256734592,3980931627,1890328081,1917742170,4294704398,945164165,3575528878,958871085,3647212047,2787207260,1423022939,775562294,1739656202,3876557655,2530391278,2443058075,3310321856,547512796,1265195639,437656594,3121275539,719700128,3762502690,387781147,218828297,3350065803,2830708150,2848461854,428169201,122466165,3720081049,1627235199,648017665,4122762354,1002783846,2117360635,695634755,3336358691,4234721005,4049844452,3704280881,2232435299,574624663,287343814,612205898,1039717051,840019705,2708326185,793451934,821288114,1391201670,3822090177,376187827,3113855344,1224348052,1679968233,2361698556,1058709744,752375421,2431590963,1321699145,3519142200,2734591178,188127444,2177869557,3727205754,2384911031,3215212461,2648976442,2450346104,3432737375,1180849278,331544205,3102249176,4150144569,2952102595,2159976285,2474404304,766078933,313773861,2570832044,2108100632,1668212892,3145456443,2013908262,418672217,3070356634,2594734927,1852171925,3867060991,3473416636,3907448597,2614737639,919489135,164948639,2094410160,2997825956,590424639,2486224549,1723872674,3157750862,3399941250,3501252752,3625268135,2555048196,3673637356,1343127501,4130281361,3599595085,2957853679,1297403050,81781910,3051593425,2283490410,532201772,1367295589,3926170974,895287692,1953757831,1093597963,492483431,3528626907,1446242576,1192455638,1636604631,209336225,344873464,1015671571,669961897,3375740769,3857572124,2973530695,3747192018,1933530610,3464042516,935293895,3454686199,2858115069,1863638845,3683022916,4085369519,3292445032,875313188,1080017571,3279033885,621591778,1233856572,2504130317,24197544,3017672716,3835484340,3247465558,2220981195,3060847922,1551124588,1463996600]),u=new Uint32Array([4104605777,1097159550,396673818,660510266,2875968315,2638606623,4200115116,3808662347,821712160,1986918061,3430322568,38544885,3856137295,718002117,893681702,1654886325,2975484382,3122358053,3926825029,4274053469,796197571,1290801793,1184342925,3556361835,2405426947,2459735317,1836772287,1381620373,3196267988,1948373848,3764988233,3385345166,3263785589,2390325492,1480485785,3111247143,3780097726,2293045232,548169417,3459953789,3746175075,439452389,1362321559,1400849762,1685577905,1806599355,2174754046,137073913,1214797936,1174215055,3731654548,2079897426,1943217067,1258480242,529487843,1437280870,3945269170,3049390895,3313212038,923313619,679998e3,3215307299,57326082,377642221,3474729866,2041877159,133361907,1776460110,3673476453,96392454,878845905,2801699524,777231668,4082475170,2330014213,4142626212,2213296395,1626319424,1906247262,1846563261,562755902,3708173718,1040559837,3871163981,1418573201,3294430577,114585348,1343618912,2566595609,3186202582,1078185097,3651041127,3896688048,2307622919,425408743,3371096953,2081048481,1108339068,2216610296,0,2156299017,736970802,292596766,1517440620,251657213,2235061775,2933202493,758720310,265905162,1554391400,1532285339,908999204,174567692,1474760595,4002861748,2610011675,3234156416,3693126241,2001430874,303699484,2478443234,2687165888,585122620,454499602,151849742,2345119218,3064510765,514443284,4044981591,1963412655,2581445614,2137062819,19308535,1928707164,1715193156,4219352155,1126790795,600235211,3992742070,3841024952,836553431,1669664834,2535604243,3323011204,1243905413,3141400786,4180808110,698445255,2653899549,2989552604,2253581325,3252932727,3004591147,1891211689,2487810577,3915653703,4237083816,4030667424,2100090966,865136418,1229899655,953270745,3399679628,3557504664,4118925222,2061379749,3079546586,2915017791,983426092,2022837584,1607244650,2118541908,2366882550,3635996816,972512814,3283088770,1568718495,3499326569,3576539503,621982671,2895723464,410887952,2623762152,1002142683,645401037,1494807662,2595684844,1335535747,2507040230,4293295786,3167684641,367585007,3885750714,1865862730,2668221674,2960971305,2763173681,1059270954,2777952454,2724642869,1320957812,2194319100,2429595872,2815956275,77089521,3973773121,3444575871,2448830231,1305906550,4021308739,2857194700,2516901860,3518358430,1787304780,740276417,1699839814,1592394909,2352307457,2272556026,188821243,1729977011,3687994002,274084841,3594982253,3613494426,2701949495,4162096729,322734571,2837966542,1640576439,484830689,1202797690,3537852828,4067639125,349075736,3342319475,4157467219,4255800159,1030690015,1155237496,2951971274,1757691577,607398968,2738905026,499347990,3794078908,1011452712,227885567,2818666809,213114376,3034881240,1455525988,3414450555,850817237,1817998408,3092726480]),f=new Uint8Array([82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125]),d=new Uint32Array([16777216,33554432,67108864,134217728,268435456,536870912,1073741824,2147483648,452984832,905969664]);function p(t,e){return 16777216*t[e++]+65536*t[e++]+256*t[e++]+t[e]}function g(t,e,i){return t[i++]=e>>>24,t[i++]=e>>>16,t[i++]=e>>>8,t[i++]=e,i}t.exports=class{constructor(t=256){r(t>>>0===t),this.bits=t,this.rounds=function(t){switch(t){case 128:return 10;case 192:return 12;case 256:return 14;default:throw new Error("Bad key size.")}}(t),this.key=null,this.encKey=null,this.decKey=null}get blockSize(){return 16}init(t){if(r(e.isBuffer(t)),t.length!==this.bits>>>3)throw new Error("Invalid key size.");return this.key=t,this.encKey=null,this.decKey=null,this}createEncryptKey(){if(!this.key)throw new Error("Cipher is not initialized.");const t=this.key;if(t.length!==this.bits>>>3)throw new Error("Invalid key size.");const e=new Uint32Array(60);e[0]=p(t,0),e[1]=p(t,4),e[2]=p(t,8),e[3]=p(t,12);let i,r=0,h=0;if(128===this.bits){for(;;){const t=e[r+3];if(i=e[r],i^=4278190080&o[t>>>16&255],i^=16711680&a[t>>>8&255],i^=65280&s[t>>>0&255],i^=255&n[t>>>24&255],i^=d[h],e[r+4]=i,e[r+5]=e[r+1]^e[r+4],e[r+6]=e[r+2]^e[r+5],e[r+7]=e[r+3]^e[r+6],10===(h+=1))break;r+=4}return e}if(e[r+4]=p(t,16),e[r+5]=p(t,20),192===this.bits){for(;;){const t=e[r+5];if(i=e[r],i^=4278190080&o[t>>>16&255],i^=16711680&a[t>>>8&255],i^=65280&s[t>>>0&255],i^=255&n[t>>>24&255],i^=d[h],e[r+6]=i,e[r+7]=e[r+1]^e[r+6],e[r+8]=e[r+2]^e[r+7],e[r+9]=e[r+3]^e[r+8],8===(h+=1))break;e[r+10]=e[r+4]^e[r+9],e[r+11]=e[r+5]^e[r+10],r+=6}return e}if(e[r+6]=p(t,24),e[r+7]=p(t,28),256===this.bits){for(;;){let t=e[r+7];if(i=e[r],i^=4278190080&o[t>>>16&255],i^=16711680&a[t>>>8&255],i^=65280&s[t>>>0&255],i^=255&n[t>>>24&255],i^=d[h],e[r+8]=i,e[r+9]=e[r+1]^e[r+8],e[r+10]=e[r+2]^e[r+9],e[r+11]=e[r+3]^e[r+10],7===(h+=1))break;t=e[r+11],i=e[r+4],i^=4278190080&o[t>>>24&255],i^=16711680&a[t>>>16&255],i^=65280&s[t>>>8&255],i^=255&n[t>>>0&255],e[r+12]=i,e[r+13]=e[r+5]^e[r+12],e[r+14]=e[r+6]^e[r+13],e[r+15]=e[r+7]^e[r+14],r+=8}return e}throw new Error("Bad key size.")}createDecryptKey(){const t=this.createEncryptKey();let e=0;for(let i=0,r=4*this.rounds;i<r;i+=4,r-=4){let s=t[e+i+0];t[e+i+0]=t[e+r+0],t[e+r+0]=s,s=t[e+i+1],t[e+i+1]=t[e+r+1],t[e+r+1]=s,s=t[e+i+2],t[e+i+2]=t[e+r+2],t[e+r+2]=s,s=t[e+i+3],t[e+i+3]=t[e+r+3],t[e+r+3]=s}for(let i=1;i<this.rounds;i++){let i,r,s,o;i=h[255&n[t[(e+=4)+0]>>>24&255]],i^=c[255&n[t[e+0]>>>16&255]],i^=l[255&n[t[e+0]>>>8&255]],i^=u[255&n[t[e+0]>>>0&255]],r=h[255&n[t[e+1]>>>24&255]],r^=c[255&n[t[e+1]>>>16&255]],r^=l[255&n[t[e+1]>>>8&255]],r^=u[255&n[t[e+1]>>>0&255]],s=h[255&n[t[e+2]>>>24&255]],s^=c[255&n[t[e+2]>>>16&255]],s^=l[255&n[t[e+2]>>>8&255]],s^=u[255&n[t[e+2]>>>0&255]],o=h[255&n[t[e+3]>>>24&255]],o^=c[255&n[t[e+3]>>>16&255]],o^=l[255&n[t[e+3]>>>8&255]],o^=u[255&n[t[e+3]>>>0&255]],t[e+0]=i,t[e+1]=r,t[e+2]=s,t[e+3]=o}return t}getEncryptKey(){return this.encKey||(this.encKey=this.createEncryptKey()),this.encKey}getDecryptKey(){return this.decKey||(this.decKey=this.createDecryptKey()),this.decKey}encrypt(t,e,i,r){const h=this.getEncryptKey();let c,l,u,f,d=p(t,e+0)^h[0],m=p(t,e+4)^h[1],b=p(t,e+8)^h[2],w=p(t,e+12)^h[3],y=this.rounds>>>1,v=0;for(;c=s[d>>>24&255],c^=n[m>>>16&255],c^=o[b>>>8&255],c^=a[w>>>0&255],c^=h[v+4],l=s[m>>>24&255],l^=n[b>>>16&255],l^=o[w>>>8&255],l^=a[d>>>0&255],l^=h[v+5],u=s[b>>>24&255],u^=n[w>>>16&255],u^=o[d>>>8&255],u^=a[m>>>0&255],u^=h[v+6],f=s[w>>>24&255],f^=n[d>>>16&255],f^=o[m>>>8&255],f^=a[b>>>0&255],f^=h[v+7],v+=8,0!=(y-=1);)d=s[c>>>24&255],d^=n[l>>>16&255],d^=o[u>>>8&255],d^=a[f>>>0&255],d^=h[v+0],m=s[l>>>24&255],m^=n[u>>>16&255],m^=o[f>>>8&255],m^=a[c>>>0&255],m^=h[v+1],b=s[u>>>24&255],b^=n[f>>>16&255],b^=o[c>>>8&255],b^=a[l>>>0&255],b^=h[v+2],w=s[f>>>24&255],w^=n[c>>>16&255],w^=o[l>>>8&255],w^=a[u>>>0&255],w^=h[v+3];return d=4278190080&o[c>>>24&255],d^=16711680&a[l>>>16&255],d^=65280&s[u>>>8&255],d^=255&n[f>>>0&255],d^=h[v+0],m=4278190080&o[l>>>24&255],m^=16711680&a[u>>>16&255],m^=65280&s[f>>>8&255],m^=255&n[c>>>0&255],m^=h[v+1],b=4278190080&o[u>>>24&255],b^=16711680&a[f>>>16&255],b^=65280&s[c>>>8&255],b^=255&n[l>>>0&255],b^=h[v+2],w=4278190080&o[f>>>24&255],w^=16711680&a[c>>>16&255],w^=65280&s[l>>>8&255],w^=255&n[u>>>0&255],w^=h[v+3],g(i,d,r+0),g(i,m,r+4),g(i,b,r+8),g(i,w,r+12),this}decrypt(t,e,i,r){const s=this.getDecryptKey();let n,o,a,d,m=p(t,e+0)^s[0],b=p(t,e+4)^s[1],w=p(t,e+8)^s[2],y=p(t,e+12)^s[3],v=this.rounds>>>1,k=0;for(;n=h[m>>>24&255],n^=c[y>>>16&255],n^=l[w>>>8&255],n^=u[b>>>0&255],n^=s[k+4],o=h[b>>>24&255],o^=c[m>>>16&255],o^=l[y>>>8&255],o^=u[w>>>0&255],o^=s[k+5],a=h[w>>>24&255],a^=c[b>>>16&255],a^=l[m>>>8&255],a^=u[y>>>0&255],a^=s[k+6],d=h[y>>>24&255],d^=c[w>>>16&255],d^=l[b>>>8&255],d^=u[m>>>0&255],d^=s[k+7],k+=8,0!=(v-=1);)m=h[n>>>24&255],m^=c[d>>>16&255],m^=l[a>>>8&255],m^=u[o>>>0&255],m^=s[k+0],b=h[o>>>24&255],b^=c[n>>>16&255],b^=l[d>>>8&255],b^=u[a>>>0&255],b^=s[k+1],w=h[a>>>24&255],w^=c[o>>>16&255],w^=l[n>>>8&255],w^=u[d>>>0&255],w^=s[k+2],y=h[d>>>24&255],y^=c[a>>>16&255],y^=l[o>>>8&255],y^=u[n>>>0&255],y^=s[k+3];return m=f[n>>>24&255]<<24,m^=f[d>>>16&255]<<16,m^=f[a>>>8&255]<<8,m^=f[o>>>0&255]<<0,m^=s[k+0],b=f[o>>>24&255]<<24,b^=f[n>>>16&255]<<16,b^=f[d>>>8&255]<<8,b^=f[a>>>0&255]<<0,b^=s[k+1],w=f[a>>>24&255]<<24,w^=f[o>>>16&255]<<16,w^=f[n>>>8&255]<<8,w^=f[d>>>0&255]<<0,w^=s[k+2],y=f[d>>>24&255]<<24,y^=f[a>>>16&255]<<16,y^=f[o>>>8&255]<<8,y^=f[n>>>0&255]<<0,y^=s[k+3],g(i,m,r+0),g(i,b,r+4),g(i,w,r+8),g(i,y,r+12),this}destroy(){if(this.encKey)for(let t=0;t<60;t++)this.encKey[t]=0;if(this.decKey)for(let t=0;t<60;t++)this.decKey[t]=0;return this}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(t){
/*!
 * modes.js - cipher modes for bcrypto
 * Copyright (c) 2016-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */
const r=i(0),s=t.alloc(0);class n{constructor(e,i=!1){r(e&&"function"==typeof e.encrypt),r("number"==typeof e.blockSize),r("boolean"==typeof i),this.ctx=e,this.padding=i,this.block=t.allocUnsafe(e.blockSize),this.bpos=-1,this.last=s}get blockSize(){return this.block.length}init(e,i){return null==i&&(i=s),r(t.isBuffer(e)),r(t.isBuffer(i)),this.ctx.init(e),this.bpos=0,this.last=s,this._init(e,i),this}update(e){if(r(t.isBuffer(e)),-1===this.bpos)throw new Error("Cipher not initialized.");const i=this.block.length;let n=this.bpos,o=e.length,a=o-o%i,h=0,c=0;if(this.bpos=(this.bpos+o)%i,n>0){let t=i-n;if(t>o&&(t=o),e.copy(this.block,n,h,h+t),o-=t,h+=t,(n+=t)<i)return s;a+=i}const l=t.allocUnsafe(a);for(h&&(this._update(this.block,0,l,c),c+=i);o>=i;)this._update(e,h,l,c),c+=i,h+=i,o-=i;return o>0&&e.copy(this.block,0,h,h+o),this.padding?(this.last=l,l.slice(0,a-i)):l}final(){if(-1===this.bpos)throw new Error("Cipher not initialized.");let t;try{t=this._final()}finally{this.ctx.destroy(),this.block.fill(0),this.bpos=-1,this.last=s}return t}_init(){return this}_update(){throw new Error("Unimplemented.")}_final(){return s}}class o extends n{constructor(t,e=!1){r("boolean"==typeof e),super(t,!1),this.chain=e,this.prev=s,this.ppos=0}_init(e,i){return r(t.isBuffer(i)),this.chain?r(i.length===this.blockSize):r(0===i.length),this.prev=i,this.ppos=0,this}_update(t,e,i,r){if(this.chain){const s=this.blockSize;for(let n=0;n<s;n++)i[r+n]=t[e+n]^this.prev[this.ppos+n];this.ctx.encrypt(i,r,i,r),this.prev=i,this.ppos=r}else this.ctx.encrypt(t,e,i,r);return this}_final(){const e=this.blockSize,i=e-this.bpos,r=t.from(this.block);return r.fill(i,this.bpos,e),this._update(r,0,r,0),this.prev=s,r}}class a extends n{constructor(t,e=!1){r("boolean"==typeof e),super(t,!0),this.chain=e,this.prev=s,this.ppos=0}_init(e,i){return r(t.isBuffer(i)),this.chain?r(i.length===this.blockSize):r(0===i.length),this.prev=i,this.ppos=0,this}_update(t,e,i,r){if(this.chain){const s=this.blockSize;this.ctx.decrypt(t,e,i,r);for(let t=0;t<s;t++)i[r+t]=i[r+t]^this.prev[this.ppos+t];this.prev=t,this.ppos=e}else this.ctx.decrypt(t,e,i,r);return this}_final(){const t=this.blockSize;if(this.prev=s,0===this.last.length)throw new Error("Bad decrypt (no data).");const e=this.last;if(this.last=s,0!==this.bpos)throw new Error("Bad decrypt (trailing bytes).");const i=e.length-t;let r=e.length;const n=e[r-1];if(0===n||n>t)throw new Error("Bad decrypt (padding).");for(let t=0;t<n;t++)if(e[r-=1]!==n)throw new Error("Bad decrypt (padding).");return e.slice(i,r)}}class h extends o{constructor(t){super(t,!1)}}class c extends a{constructor(t){super(t,!1)}}class l extends o{constructor(t){super(t,!0)}}class u extends a{constructor(t){super(t,!0)}}class f extends n{constructor(t){super(t,!1),this.state=s,this.ctr=s}_init(e,i){return r(t.isBuffer(i)),r(i.length===this.blockSize),this.state=t.allocUnsafe(this.blockSize),this.ctr=t.from(i),this}_increment(){for(let t=this.ctr.length-1;t>=0;t--){if(255!==this.ctr[t]){this.ctr[t]+=1;break}this.ctr[t]=0}}_update(t,e,i,r){const s=this.blockSize;this.ctx.encrypt(this.ctr,0,this.state,0),this._increment();for(let n=0;n<s;n++)i[r+n]=t[e+n]^this.state[n];return this}_final(){this.ctx.encrypt(this.ctr,0,this.state,0);const e=t.allocUnsafe(this.bpos);for(let t=0;t<this.bpos;t++)e[t]=this.block[t]^this.state[t];return this.state.fill(0),this.ctr.fill(0),this.state=s,this.ctr=s,e}}class d extends f{constructor(t){super(t)}}class p extends f{constructor(t){super(t)}}class g extends n{constructor(t,e=!0){r("boolean"==typeof e),super(t,!1),this.encrypt=e,this.state=s,this.prev=s,this.ppos=0}_init(e,i){return r(t.isBuffer(i)),r(i.length===this.blockSize),this.state=t.allocUnsafe(this.blockSize),this.prev=i,this.ppos=0,this}_update(t,e,i,r){const s=this.blockSize;this.ctx.encrypt(this.prev,this.ppos,this.state,0);for(let n=0;n<s;n++)i[r+n]=t[e+n]^this.state[n];return this.encrypt?(this.prev=i,this.ppos=r):(this.prev=t,this.ppos=e),this}_final(){this.ctx.encrypt(this.prev,this.ppos,this.state,0);const e=t.allocUnsafe(this.bpos);for(let t=0;t<this.bpos;t++)e[t]=this.block[t]^this.state[t];return this.state.fill(0),this.state=s,this.prev=s,e}}class m extends g{constructor(t){super(t,!0)}}class b extends g{constructor(t){super(t,!1)}}class w extends n{constructor(t){super(t,!1),this.state=s}_init(e,i){return r(t.isBuffer(i)),r(i.length===this.blockSize),this.state=t.from(i),this}_update(t,e,i,r){const s=this.blockSize;this.ctx.encrypt(this.state,0,this.state,0);for(let n=0;n<s;n++)i[r+n]=t[e+n]^this.state[n];return this}_final(){this.ctx.encrypt(this.state,0,this.state,0);const e=t.allocUnsafe(this.bpos);for(let t=0;t<this.bpos;t++)e[t]=this.block[t]^this.state[t];return this.state.fill(0),this.state=s,e}}class y extends w{constructor(t){super(t)}}class v extends w{constructor(t){super(t)}}e.Cipher=n,e.BlockCipher=o,e.BlockDecipher=a,e.ECBCipher=h,e.ECBDecipher=c,e.CBCCipher=l,e.CBCDecipher=u,e.CTR=f,e.CTRCipher=d,e.CTRDecipher=p,e.CFB=g,e.CFBCipher=m,e.CFBDecipher=b,e.OFB=w,e.OFBCipher=y,e.OFBDecipher=v,e.get=function(t,e=!0){switch(r("string"==typeof t),r("boolean"==typeof e),t){case"ecb":case"ECB":return e?h:c;case"cbc":case"CBC":return e?l:u;case"ctr":case"CTR":return e?d:p;case"cfb":case"CFB":return e?m:b;case"ofb":case"OFB":return e?y:v;default:throw new Error(`Unknown mode: ${t}.`)}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * wallet.js - wallet object for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(7),{Lock:n}=i(28),{base58:o}=i(27),a=i(2),h=i(24),c=i(9),l=i(69),u=i(239),f=i(81),d=i(68),p=i(12),g=i(44),m=i(10),b=i(165),w=i(166),y=i(16),v=i(168),k=i(251),E=i(25),S=i(3),{encoding:R}=a,{Mnemonic:I}=w;class A extends s{constructor(t,e){super(),r(t,"WDB required."),this.wdb=t,this.db=t.db,this.network=t.network,this.logger=t.logger,this.writeLock=new n,this.fundLock=new n,this.wid=0,this.id=null,this.watchOnly=!1,this.accountDepth=0,this.token=S.ZERO_HASH,this.tokenDepth=0,this.master=new k,this.txdb=new u(this.wdb),e&&this.fromOptions(e)}fromOptions(t){if(!t)return this;let i,s,n,o=t.master;return o?("string"==typeof o&&(o=w.PrivateKey.fromBase58(o,this.network)),r(w.isPrivate(o),"Must create wallet with hd private key.")):(n=new I(t.mnemonic),o=w.fromMnemonic(n,t.password)),this.master.fromKey(o,n),null!=t.wid&&(r(t.wid>>>0===t.wid),this.wid=t.wid),t.id&&(r(d.isName(t.id),"Bad wallet ID."),i=t.id),null!=t.watchOnly&&(r("boolean"==typeof t.watchOnly),this.watchOnly=t.watchOnly),null!=t.accountDepth&&(r(t.accountDepth>>>0===t.accountDepth),this.accountDepth=t.accountDepth),t.token&&(r(e.isBuffer(t.token)),r(32===t.token.length),s=t.token),null!=t.tokenDepth&&(r(t.tokenDepth>>>0===t.tokenDepth),this.tokenDepth=t.tokenDepth),i||(i=this.getID()),s||(s=this.getToken(this.tokenDepth)),this.id=i,this.token=s,this}static fromOptions(t,e){return new this(t).fromOptions(e)}async init(t,e){e&&await this.master.encrypt(e);const i=await this._createAccount(t,e);return r(i),this.logger.info("Wallet initialized (%s).",this.id),this.txdb.open(this)}async open(){if(!await this.getAccount(0))throw new Error("Default account not found.");return this.logger.info("Wallet opened (%s).",this.id),this.txdb.open(this)}async destroy(){const t=await this.writeLock.lock(),e=await this.fundLock.lock();try{await this.master.destroy(),this.writeLock.destroy(),this.fundLock.destroy()}finally{e(),t()}}async addSharedKey(t,e){const i=await this.writeLock.lock();try{return await this._addSharedKey(t,e)}finally{i()}}async _addSharedKey(t,e){const i=await this.getAccount(t);if(!i)throw new Error("Account not found.");const r=this.db.batch(),s=await i.addSharedKey(r,e);return await r.write(),s}async removeSharedKey(t,e){const i=await this.writeLock.lock();try{return await this._removeSharedKey(t,e)}finally{i()}}async _removeSharedKey(t,e){const i=await this.getAccount(t);if(!i)throw new Error("Account not found.");const r=this.db.batch(),s=await i.removeSharedKey(r,e);return await r.write(),s}async setPassphrase(t,e){null!=e&&await this.decrypt(e),await this.encrypt(t)}async encrypt(t){const e=await this.writeLock.lock();try{return await this._encrypt(t)}finally{e()}}async _encrypt(t){const e=await this.master.encrypt(t,!0),i=this.db.batch();try{await this.wdb.encryptKeys(i,this.wid,e)}finally{l(e)}this.save(i),await i.write()}async decrypt(t){const e=await this.writeLock.lock();try{return await this._decrypt(t)}finally{e()}}async _decrypt(t){const e=await this.master.decrypt(t,!0),i=this.db.batch();try{await this.wdb.decryptKeys(i,this.wid,e)}finally{l(e)}this.save(i),await i.write()}async retoken(t){const e=await this.writeLock.lock();try{return await this._retoken(t)}finally{e()}}async _retoken(t){t&&await this.unlock(t),this.tokenDepth+=1,this.token=this.getToken(this.tokenDepth);const e=this.db.batch();return this.save(e),await e.write(),this.token}async rename(t){const e=await this.writeLock.lock();try{return await this.wdb.rename(this,t)}finally{e()}}async renameAccount(t,e){const i=await this.writeLock.lock();try{return await this._renameAccount(t,e)}finally{i()}}async _renameAccount(t,e){if(!d.isName(e))throw new Error("Bad account name.");const i=await this.getAccount(t);if(!i)throw new Error("Account not found.");if(0===i.accountIndex)throw new Error("Cannot rename default account.");if(await this.hasAccount(e))throw new Error("Account name not available.");const r=this.db.batch();this.wdb.renameAccount(r,i,e),await r.write()}async lock(){const t=await this.writeLock.lock(),e=await this.fundLock.lock();try{await this.master.lock()}finally{e(),t()}}unlock(t,e){return this.master.unlock(t,e)}getID(){r(this.master.key,"Cannot derive id.");const t=this.master.key.derive(44),e=a.write(37);e.writeBytes(t.publicKey),e.writeU32(this.network.magic);const i=h.digest(e.render()),s=a.write(27);return s.writeU8(3),s.writeU8(190),s.writeU8(4),s.writeBytes(i),s.writeChecksum(c.digest),o.encode(s.render())}getToken(t){if(!this.master.key)throw new Error("Cannot derive token.");const e=this.master.key.derive(44,!0),i=a.write(36);return i.writeBytes(e.privateKey),i.writeU32(t),c.digest(i.render())}async createAccount(t,e){const i=await this.writeLock.lock();try{return await this._createAccount(t,e)}finally{i()}}async _createAccount(t,e){let i,s=t.name;if(s||(s=this.accountDepth.toString(10)),await this.hasAccount(s))throw new Error("Account already exists.");if(await this.unlock(e),this.watchOnly&&t.accountKey){if("string"==typeof(i=t.accountKey)&&(i=w.PublicKey.fromBase58(i,this.network)),!w.isPublic(i))throw new Error("Must add HD public keys to watch only wallet.")}else{r(this.master.key);const t=this.network.keyPrefix.coinType;i=(i=this.master.key.deriveAccount(44,t,this.accountDepth)).toPublic()}const n={wid:this.wid,id:this.id,name:0===this.accountDepth?"default":s,witness:t.witness,watchOnly:this.watchOnly,accountKey:i,accountIndex:this.accountDepth,type:t.type,m:t.m,n:t.n,keys:t.keys},o=this.db.batch(),a=v.fromOptions(this.wdb,n);return await a.init(o),this.logger.info("Created account %s/%s/%d.",a.id,a.name,a.accountIndex),this.accountDepth+=1,this.save(o),1===this.accountDepth&&this.increment(o),await o.write(),a}async ensureAccount(t,e){const i=t.name;return await this.getAccount(i)||this.createAccount(t,e)}getAccounts(){return this.wdb.getAccounts(this.wid)}getAddressHashes(t){return null!=t?this.getAccountHashes(t):this.wdb.getWalletHashes(this.wid)}async getAccountHashes(t){const e=await this.getAccountIndex(t);if(-1===e)throw new Error("Account not found.");return this.wdb.getAccountHashes(this.wid,e)}async getAccount(t){const e=await this.getAccountIndex(t);if(-1===e)return null;const i=await this.wdb.getAccount(this.wid,e);return i?(i.wid=this.wid,i.id=this.id,i.watchOnly=this.watchOnly,i):null}getAccountIndex(t){return null==t?-1:"number"==typeof t?t:this.wdb.getAccountIndex(this.wid,t)}async ensureIndex(t){if(null==t||-1===t)return-1;const e=await this.getAccountIndex(t);if(-1===e)throw new Error("Account not found.");return e}async getAccountName(t){return"string"==typeof t?t:this.wdb.getAccountName(this.wid,t)}async hasAccount(t){const e=await this.getAccountIndex(t);return-1!==e&&this.wdb.hasAccount(this.wid,e)}createReceive(t=0){return this.createKey(t,0)}createChange(t=0){return this.createKey(t,1)}createNested(t=0){return this.createKey(t,2)}async createKey(t,e){const i=await this.writeLock.lock();try{return await this._createKey(t,e)}finally{i()}}async _createKey(t,e){const i=await this.getAccount(t);if(!i)throw new Error("Account not found.");const r=this.db.batch(),s=await i.createKey(r,e);return await r.write(),s}save(t){return this.wdb.save(t,this)}increment(t){return this.wdb.increment(t,this.wid)}async hasAddress(t){const e=p.getHash(t);return null!=await this.getPath(e)}async getPath(t){const e=p.getHash(t);return this.wdb.getPath(this.wid,e)}async readPath(t){const e=p.getHash(t);return this.wdb.readPath(this.wid,e)}async hasPath(t){const e=p.getHash(t);return this.wdb.hasPath(this.wid,e)}async getPaths(t){return null!=t?this.getAccountPaths(t):this.wdb.getWalletPaths(this.wid)}async getAccountPaths(t){const e=await this.getAccountIndex(t);if(-1===e)throw new Error("Account not found.");const i=await this.getAccountHashes(e),s=await this.getAccountName(t);r(s);const n=[];for(const t of i){const i=await this.readPath(t);r(i),r(i.account===e),i.name=s,n.push(i)}return n}async importKey(t,e,i){const r=await this.writeLock.lock();try{return await this._importKey(t,e,i)}finally{r()}}async _importKey(t,e,i){if(this.watchOnly){if(e.privateKey)throw new Error("Cannot import privkey into watch-only wallet.")}else if(!e.privateKey)throw new Error("Cannot import pubkey into non watch-only wallet.");const s=e.getHash();if(await this.getPath(s))throw new Error("Key already exists.");const n=await this.getAccount(t);if(!n)throw new Error("Account not found.");if(n.type!==v.types.PUBKEYHASH)throw new Error("Cannot import into non-pkh account.");await this.unlock(i);const o=b.fromRing(n,e).toPath();this.master.encrypted&&(o.data=this.master.encipher(o.data,o.hash),r(o.data),o.encrypted=!0);const a=this.db.batch();await n.savePath(a,o),await a.write()}async importAddress(t,e){const i=await this.writeLock.lock();try{return await this._importAddress(t,e)}finally{i()}}async _importAddress(t,e){if(!this.watchOnly)throw new Error("Cannot import address into non watch-only wallet.");if(await this.getPath(e))throw new Error("Address already exists.");const i=await this.getAccount(t);if(!i)throw new Error("Account not found.");if(i.type!==v.types.PUBKEYHASH)throw new Error("Cannot import into non-pkh account.");const r=f.fromAddress(i,e),s=this.db.batch();await i.savePath(s,r),await s.write()}async fund(t,e,i){const r=await this.fundLock.lock(i);try{return await this._fund(t,e)}finally{r()}}async _fund(t,e){e||(e={});const i=e.account||0,s=await this.changeAddress(i);if(!s)throw new Error("Account not found.");let n,o=e.rate;null==o&&(o=await this.wdb.estimateFee(e.blocks)),e.smart?n=await this.getSmartCoins(e.account):(n=await this.getCoins(e.account),n=this.txdb.filterLocked(n)),await t.fund(n,{selection:e.selection,round:e.round,depth:e.depth,hardFee:e.hardFee,subtractFee:e.subtractFee,subtractIndex:e.subtractIndex,changeAddress:s,height:this.wdb.state.height,rate:o,maxFee:e.maxFee,estimate:t=>this.estimateSize(t)}),r(t.getFee()<=g.Selector.MAX_FEE,"TX exceeds MAX_FEE.")}async getAccountByAddress(t){const e=p.getHash(t),i=await this.getPath(e);return i?this.getAccount(i.account):null}async estimateSize(t){const e=S.WITNESS_SCALE_FACTOR,i=t.getAddress();if(!i)return-1;const r=await this.getAccountByAddress(i);if(!r)return-1;let s=0;if(t.isScripthash()&&r.witness)switch(r.type){case v.types.PUBKEYHASH:s+=23,s*=4;break;case v.types.MULTISIG:s+=35,s*=4}switch(r.type){case v.types.PUBKEYHASH:s+=74,s+=34;break;case v.types.MULTISIG:s+=1,s+=74*r.m,s+=3,s+=1,s+=34*r.n,s+=1,s+=1}return r.witness?s=((s+=1)+e-1)/e|0:s+=R.sizeVarint(s),s}async createTX(t,e){const i=t.outputs,s=new g;r(Array.isArray(i),"Outputs must be an array."),r(i.length>0,"No outputs available.");for(const t of i){const e=new y(t),i=e.getAddress();if(e.isDust())throw new Error("Output is dust.");if(e.value>0){if(!i)throw new Error("Cannot send to unknown address.");if(i.isNull())throw new Error("Cannot send to null address.")}s.outputs.push(e)}if(await this.fund(s,t,e),!1!==t.sort&&s.sortMembers(),null!=t.locktime&&s.setLocktime(t.locktime),r(s.isSane(),"TX failed sanity check."),r(s.verifyInputs(this.wdb.state.height+1),"TX failed context check."),0===await this.template(s))throw new Error("Templating failed.");return s}async send(t,e){const i=await this.fundLock.lock();try{return await this._send(t,e)}finally{i()}}async _send(t,e){const i=await this.createTX(t,!0);if(await this.sign(i,e),!i.isSigned())throw new Error("TX could not be fully signed.");const r=i.toTX();if(r.getSigopsCost(i.view)>E.MAX_TX_SIGOPS_COST)throw new Error("TX exceeds policy sigops.");if(r.getWeight()>E.MAX_TX_WEIGHT)throw new Error("TX exceeds policy weight.");return await this.wdb.addTX(r),this.logger.debug("Sending wallet tx (%s): %h",this.id,r.hash()),await this.wdb.send(r),r}async increaseFee(t,e,i){r(e>>>0===e,"Rate must be a number.");const s=await this.getTX(t);if(!s)throw new Error("Transaction not found.");if(-1!==s.height)throw new Error("Transaction is confirmed.");const n=s.tx;if(n.isCoinbase())throw new Error("Transaction is a coinbase.");const o=await this.getSpentView(n);if(!n.hasCoins(o))throw new Error("Not all coins available.");const a=n.getFee(o);let h=n.getMinFee(null,e);if(h>g.Selector.MAX_FEE&&(h=g.Selector.MAX_FEE),a>=h)throw new Error("Fee is not increasing.");const c=g.fromTX(n);c.view=o;for(const t of c.inputs)t.script.clear(),t.witness.clear();let l;for(let t=0;t<c.outputs.length;t++){const e=c.outputs[t],i=e.getAddress();if(!i)continue;const r=await this.getPath(i);if(r&&1===r.branch){l=e,c.changeIndex=t;break}}if(!l)throw new Error("No change output.");if(l.value+=a,0!==c.getFee())throw new Error("Arithmetic error for change.");if(l.value-=h,l.value<0)throw new Error("Fee is too high.");if(l.isDust()&&(c.outputs.splice(c.changeIndex,1),c.changeIndex=-1),await this.sign(c,i),!c.isSigned())throw new Error("TX could not be fully signed.");const u=c.toTX();return this.logger.debug("Increasing fee for wallet tx (%s): %h",this.id,u.hash()),await this.wdb.addTX(u),await this.wdb.send(u),u}async resend(){const t=await this.getPending();t.length>0&&this.logger.info("Rebroadcasting %d transactions.",t.length);const e=[];for(const i of t)e.push(i.tx);const i=d.sortDeps(e);for(const t of i)await this.wdb.send(t);return e}async deriveInputs(t){r(t.mutable);const e=await this.getInputPaths(t),i=[];for(const t of e){const e=await this.getAccount(t.account);if(!e)continue;const r=e.derivePath(t,this.master);r&&i.push(r)}return i}async getKey(t){const e=p.getHash(t),i=await this.getPath(e);if(!i)return null;const r=await this.getAccount(i.account);return r?r.derivePath(i,this.master):null}async getPrivateKey(t,e){const i=p.getHash(t),r=await this.getPath(i);if(!r)return null;const s=await this.getAccount(r.account);if(!s)return null;await this.unlock(e);const n=s.derivePath(r,this.master);return n.privateKey?n:null}async getInputPaths(t){if(r(t.mutable),!t.hasCoins())throw new Error("Not all coins available.");const e=t.getInputHashes(),i=[];for(const t of e){const e=await this.getPath(t);e&&i.push(e)}return i}async getOutputPaths(t){const e=[],i=t.getOutputHashes();for(const t of i){const i=await this.getPath(t);i&&e.push(i)}return e}async setLookahead(t,e){const i=await this.writeLock.lock();try{return this._setLookahead(t,e)}finally{i()}}async _setLookahead(t,e){const i=await this.getAccount(t);if(!i)throw new Error("Account not found.");const r=this.db.batch();await i.setLookahead(r,e),await r.write()}async syncOutputDepth(t){const e=new Map;for(const i of t.getOutputHashes()){const t=await this.readPath(i);t&&-1!==t.index&&(e.has(t.account)||e.set(t.account,[]),e.get(t.account).push(t))}const i=[],s=this.db.batch();for(const[t,n]of e){let e=-1,o=-1,a=-1;for(const t of n)switch(t.branch){case 0:t.index>e&&(e=t.index);break;case 1:t.index>o&&(o=t.index);break;case 2:t.index>a&&(a=t.index)}e+=2,o+=2,a+=2;const h=await this.getAccount(t);r(h);const c=await h.syncDepth(s,e,o,a);c&&i.push(c)}return await s.write(),i}async template(t){const e=await this.deriveInputs(t);return t.template(e)}async sign(t,e){if(this.watchOnly)throw new Error("Cannot sign from a watch-only wallet.");await this.unlock(e);const i=await this.deriveInputs(t);return t.signAsync(i,m.hashType.ALL,this.wdb.workers)}getCoinView(t){return this.txdb.getCoinView(t)}getSpentView(t){return this.txdb.getSpentView(t)}toDetails(t){return this.txdb.toDetails(t)}getDetails(t){return this.txdb.getDetails(t)}getCoin(t,e){return this.txdb.getCoin(t,e)}getTX(t){return this.txdb.getTX(t)}getBlocks(){return this.txdb.getBlocks()}getBlock(t){return this.txdb.getBlock(t)}async add(t,e){const i=await this.writeLock.lock();try{return await this._add(t,e)}finally{i()}}async _add(t,e){const i=await this.txdb.add(t,e);if(i){const e=await this.syncOutputDepth(t);e.length>0&&(this.wdb.emit("address",this,e),this.emit("address",e))}return i}async revert(t){const e=await this.writeLock.lock();try{return await this.txdb.revert(t)}finally{e()}}async remove(t){const e=await this.writeLock.lock();try{return await this.txdb.remove(t)}finally{e()}}async zap(t,e){const i=await this.writeLock.lock();try{return await this._zap(t,e)}finally{i()}}async _zap(t,e){const i=await this.ensureIndex(t);return this.txdb.zap(i,e)}async abandon(t){const e=await this.writeLock.lock();try{return await this._abandon(t)}finally{e()}}_abandon(t){return this.txdb.abandon(t)}lockCoin(t){return this.txdb.lockCoin(t)}unlockCoin(t){return this.txdb.unlockCoin(t)}isLocked(t){return this.txdb.isLocked(t)}getLocked(){return this.txdb.getLocked()}async getHistory(t){const e=await this.ensureIndex(t);return this.txdb.getHistory(e)}async getCoins(t){const e=await this.ensureIndex(t);return this.txdb.getCoins(e)}async getCredits(t){const e=await this.ensureIndex(t);return this.txdb.getCredits(e)}async getSmartCoins(t){const e=await this.getCredits(t),i=[];for(const t of e){const e=t.coin;t.spent||this.txdb.isLocked(e)||(-1===e.height?t.own&&i.push(e):i.push(e))}return i}async getPending(t){const e=await this.ensureIndex(t);return this.txdb.getPending(e)}async getBalance(t){const e=await this.ensureIndex(t);return this.txdb.getBalance(e)}async getRange(t,e){const i=await this.ensureIndex(t);return this.txdb.getRange(i,e)}async getLast(t,e){const i=await this.ensureIndex(t);return this.txdb.getLast(i,e)}async accountKey(t=0){const e=await this.getAccount(t);if(!e)throw new Error("Account not found.");return e.accountKey}async receiveDepth(t=0){const e=await this.getAccount(t);if(!e)throw new Error("Account not found.");return e.receiveDepth}async changeDepth(t=0){const e=await this.getAccount(t);if(!e)throw new Error("Account not found.");return e.changeDepth}async nestedDepth(t=0){const e=await this.getAccount(t);if(!e)throw new Error("Account not found.");return e.nestedDepth}async receiveAddress(t=0){const e=await this.getAccount(t);if(!e)throw new Error("Account not found.");return e.receiveAddress()}async changeAddress(t=0){const e=await this.getAccount(t);if(!e)throw new Error("Account not found.");return e.changeAddress()}async nestedAddress(t=0){const e=await this.getAccount(t);if(!e)throw new Error("Account not found.");return e.nestedAddress()}async receiveKey(t=0){const e=await this.getAccount(t);if(!e)throw new Error("Account not found.");return e.receiveKey()}async changeKey(t=0){const e=await this.getAccount(t);if(!e)throw new Error("Account not found.");return e.changeKey()}async nestedKey(t=0){const e=await this.getAccount(t);if(!e)throw new Error("Account not found.");return e.nestedKey()}inspect(){return{wid:this.wid,id:this.id,network:this.network.type,accountDepth:this.accountDepth,token:this.token.toString("hex"),tokenDepth:this.tokenDepth,master:this.master}}toJSON(t,e){return{network:this.network.type,wid:this.wid,id:this.id,watchOnly:this.watchOnly,accountDepth:this.accountDepth,token:this.token.toString("hex"),tokenDepth:this.tokenDepth,master:this.master.toJSON(this.network,t),balance:e?e.toJSON(!0):null}}getSize(){let t=0;return(t+=41)+this.master.getSize()}toRaw(){const t=this.getSize(),e=a.write(t);let i=0;return this.watchOnly&&(i|=1),e.writeU8(i),e.writeU32(this.accountDepth),e.writeBytes(this.token),e.writeU32(this.tokenDepth),this.master.toWriter(e),e.render()}fromRaw(t){const e=a.read(t),i=e.readU8();return this.watchOnly=0!=(1&i),this.accountDepth=e.readU32(),this.token=e.readBytes(32),this.tokenDepth=e.readU32(),this.master.fromReader(e),this}static fromRaw(t,e){return new this(t).fromRaw(e)}static isWallet(t){return t instanceof A}}t.exports=A}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * cleanse.js - memzero for bcrypto
 * Copyright (c) 2016-2018, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcrypto
 */
const r=i(0);let s=0;function n(t){r(e.isBuffer(t));let i=s;for(let e=0;e<t.length;e++)t[e]=255&i,i+=e;s=i>>>0}n.native=0,t.exports=n}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * txdb.js - persistent transaction pool
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(2),{BufferSet:n}=i(13),o=i(5),a=i(18),h=i(35),c=i(50),l=i(17),u=i(163),f=i(164).txdb,d=i(3),p=i(25),{TXRecord:g}=u;class m{constructor(t=-1){r("number"==typeof t),this.account=t,this.tx=0,this.coin=0,this.unconfirmed=0,this.confirmed=0}applyTo(t){t.tx+=this.tx,t.coin+=this.coin,t.unconfirmed+=this.unconfirmed,t.confirmed+=this.confirmed,r(t.tx>=0),r(t.coin>=0),r(t.unconfirmed>=0),r(t.confirmed>=0)}toRaw(){const t=s.write(32);return t.writeU64(this.tx),t.writeU64(this.coin),t.writeU64(this.unconfirmed),t.writeU64(this.confirmed),t.render()}fromRaw(t){const e=s.read(t);return this.tx=e.readU64(),this.coin=e.readU64(),this.unconfirmed=e.readU64(),this.confirmed=e.readU64(),this}static fromRaw(t,e){return new this(t).fromRaw(e)}toJSON(t){return{account:t?void 0:this.account,tx:this.tx,coin:this.coin,unconfirmed:this.unconfirmed,confirmed:this.confirmed}}inspect(){return"<Balance"+` tx=${this.tx}`+` coin=${this.coin}`+` unconfirmed=${a.btc(this.unconfirmed)}`+` confirmed=${a.btc(this.confirmed)}`+">"}}class b{constructor(){this.wallet=new m,this.accounts=new Map}updated(){return 0!==this.wallet.tx}applyTo(t){this.wallet.applyTo(t)}get(t){return this.accounts.has(t.account)||this.accounts.set(t.account,new m),this.accounts.get(t.account)}tx(t,e){this.get(t).tx=e,this.wallet.tx=e}coin(t,e){this.get(t).coin+=e,this.wallet.coin+=e}unconfirmed(t,e){this.get(t).unconfirmed+=e,this.wallet.unconfirmed+=e}confirmed(t,e){this.get(t).confirmed+=e,this.wallet.confirmed+=e}}class w{constructor(t,e){this.coin=t||new c,this.spent=e||!1,this.own=!1}fromRaw(t){const e=s.read(t);return this.coin.fromReader(e),this.spent=1===e.readU8(),this.own=1===e.readU8(),this}static fromRaw(t){return(new this).fromRaw(t)}getSize(){return this.coin.getSize()+2}toRaw(){const t=this.getSize(),e=s.write(t);return this.coin.toWriter(e),e.writeU8(this.spent?1:0),e.writeU8(this.own?1:0),e.render()}fromTX(t,e,i){return this.coin.fromTX(t,e,i),this.spent=!1,this.own=!1,this}static fromTX(t,e,i){return(new this).fromTX(t,e,i)}}class y{constructor(t,e){this.hash=t.hash,this.tx=t.tx,this.mtime=t.mtime,this.size=this.tx.getSize(),this.vsize=this.tx.getVirtualSize(),this.block=null,this.height=-1,this.time=0,e&&(this.block=e.hash,this.height=e.height,this.time=e.time),this.inputs=[],this.outputs=[],this.init()}init(){for(const t of this.tx.inputs){const e=new v;e.address=t.getAddress(),this.inputs.push(e)}for(const t of this.tx.outputs){const e=new v;e.value=t.value,e.address=t.getAddress(),this.outputs.push(e)}}setInput(t,e,i){const r=this.inputs[t];i&&(r.value=i.value,r.address=i.getAddress()),e&&(r.path=e)}setOutput(t,e){const i=this.outputs[t];e&&(i.path=e)}getDepth(t){if(-1===this.height)return 0;if(null==t)return 0;const e=t-this.height;return e<0?0:e+1}getFee(){let t=0,e=0;for(const e of this.inputs){if(!e.path)return 0;t+=e.value}for(const t of this.outputs)e+=t.value;return t-e}getRate(t){return p.getRate(this.vsize,t)}toJSON(t,e){const i=this.getFee(),r=this.getRate(i);return{hash:o.revHex(this.hash),height:this.height,block:this.block?o.revHex(this.block):null,time:this.time,mtime:this.mtime,date:o.date(this.time),mdate:o.date(this.mtime),size:this.size,virtualSize:this.vsize,fee:i,rate:r,confirmations:this.getDepth(e),inputs:this.inputs.map(e=>e.getJSON(t)),outputs:this.outputs.map(e=>e.getJSON(t)),tx:this.tx.toRaw().toString("hex")}}}class v{constructor(){this.value=0,this.address=null,this.path=null}toJSON(){return this.getJSON()}getJSON(t){return{value:this.value,address:this.address?this.address.toString(t):null,path:this.path?this.path.toJSON():null}}}class k{constructor(t,e,i){this.hash=t||d.ZERO_HASH,this.height=null!=e?e:-1,this.time=i||0,this.hashes=new n}add(t){return!this.hashes.has(t)&&(this.hashes.add(t),!0)}remove(t){return this.hashes.delete(t)}fromRaw(t){const e=s.read(t);this.hash=e.readHash(),this.height=e.readU32(),this.time=e.readU32();const i=e.readU32();for(let t=0;t<i;t++){const t=e.readHash();this.hashes.add(t)}return this}static fromRaw(t){return(new this).fromRaw(t)}getSize(){return 44+32*this.hashes.size}toRaw(){const t=this.getSize(),e=s.write(t);e.writeHash(this.hash),e.writeU32(this.height),e.writeU32(this.time),e.writeU32(this.hashes.size);for(const t of this.hashes)e.writeHash(t);return e.render()}toArray(){const t=[];for(const e of this.hashes)t.push(e);return t}toJSON(){return{hash:o.revHex(this.hash),height:this.height,time:this.time,hashes:this.toArray().map(o.revHex)}}fromMeta(t){return this.hash=t.hash,this.height=t.height,this.time=t.time,this}static fromMeta(t){return(new this).fromMeta(t)}}t.exports=class{constructor(t,e){this.wdb=t,this.db=t.db,this.logger=t.logger,this.wid=e||0,this.bucket=null,this.wallet=null,this.locked=new n}async open(t){const e=f.prefix.encode(t.wid);this.wid=t.wid,this.bucket=this.db.bucket(e),this.wallet=t}emit(t,e,i){this.wdb.emit(t,this.wallet,e,i),this.wallet.emit(t,e,i)}getPath(t){const e=t.getHash();return e?this.wdb.getPath(this.wid,e):null}hasPath(t){const e=t.getHash();return!!e&&this.wdb.hasPath(this.wid,e)}async saveCredit(t,e,i){const{coin:r}=e;return t.put(f.c.encode(r.hash,r.index),e.toRaw()),t.put(f.C.encode(i.account,r.hash,r.index),null),this.addOutpointMap(t,r.hash,r.index)}async removeCredit(t,e,i){const{coin:r}=e;return t.del(f.c.encode(r.hash,r.index)),t.del(f.C.encode(i.account,r.hash,r.index)),this.removeOutpointMap(t,r.hash,r.index)}spendCredit(t,e,i,r){const s=i.inputs[r].prevout,n=l.fromTX(i,r);t.put(f.s.encode(s.hash,s.index),n.toRaw()),t.put(f.d.encode(n.hash,n.index),e.coin.toRaw())}unspendCredit(t,e,i){const r=e.inputs[i].prevout,s=l.fromTX(e,i);t.del(f.s.encode(r.hash,r.index)),t.del(f.d.encode(s.hash,s.index))}async writeInput(t,e,i){const r=e.inputs[i].prevout,s=l.fromTX(e,i);return t.put(f.s.encode(r.hash,r.index),s.toRaw()),this.addOutpointMap(t,r.hash,r.index)}async removeInput(t,e,i){const r=e.inputs[i].prevout;return t.del(f.s.encode(r.hash,r.index)),this.removeOutpointMap(t,r.hash,r.index)}async updateBalance(t,e){const i=await this.getWalletBalance();return e.applyTo(i),t.put(f.R.encode(),i.toRaw()),i}async updateAccountBalance(t,e,i){const r=await this.getAccountBalance(e);return i.applyTo(r),t.put(f.r.encode(e),r.toRaw()),r}async getSpent(t,e){const i=await this.bucket.get(f.s.encode(t,e));return i?l.fromRaw(i):null}isSpent(t,e){return this.bucket.has(f.s.encode(t,e))}addBlockMap(t,e){return this.wdb.addBlockMap(t.root(),e,this.wid)}removeBlockMap(t,e){return this.wdb.removeBlockMap(t.root(),e,this.wid)}addTXMap(t,e){return this.wdb.addTXMap(t.root(),e,this.wid)}removeTXMap(t,e){return this.wdb.removeTXMap(t.root(),e,this.wid)}addOutpointMap(t,e,i){return this.wdb.addOutpointMap(t.root(),e,i,this.wid)}removeOutpointMap(t,e,i){return this.wdb.removeOutpointMap(t.root(),e,i,this.wid)}getBlocks(){return this.bucket.keys({gte:f.b.min(),lte:f.b.max(),parse:t=>f.b.decode(t)[0]})}async getBlock(t){const e=await this.bucket.get(f.b.encode(t));return e?k.fromRaw(e):null}async addBlock(t,i,r){const s=f.b.encode(r.height),n=await this.bucket.get(s);if(!n){const e=k.fromMeta(r);return e.add(i),void t.put(s,e.toRaw())}const o=e.allocUnsafe(n.length+32);n.copy(o,0);const a=o.readUInt32LE(40,!0);o.writeUInt32LE(a+1,40,!0),i.copy(o,n.length),t.put(s,o)}async removeBlock(t,e,i){const s=f.b.encode(i),n=await this.bucket.get(s);if(!n)return;const o=n.readUInt32LE(40,!0);if(r(o>0),r(n.slice(-32).equals(e)),1===o)return void t.del(s);const a=n.slice(0,-32);a.writeUInt32LE(o-1,40,!0),t.put(s,a)}async spliceBlock(t,e,i){const r=await this.getBlock(i);r&&r.remove(e)&&(0!==r.hashes.size?t.put(f.b.encode(i),r.toRaw()):t.del(f.b.encode(i)))}async add(t,e){const i=t.hash(),s=await this.getTX(i);if(r(!t.mutable,"Cannot add mutable TX to wallet."),s)return-1!==s.height?null:e?this.confirm(s,e):null;const n=g.fromTX(t,e);if(e)await this.removeConflicts(t,!1);else if(!await this.removeConflicts(t,!0))return null;return this.insert(n,e)}async insert(t,e){const i=this.bucket.batch(),{tx:s,hash:n}=t,o=e?e.height:-1,a=new y(t,e),h=new b;let c=!1;if(!s.isCoinbase())for(let t=0;t<s.inputs.length;t++){const n=s.inputs[t],{hash:o,index:l}=n.prevout,u=await this.getCredit(o,l);if(!u){e||await this.writeInput(i,s,t);continue}const f=u.coin,d=await this.getPath(f);r(d),a.setInput(t,d,f),this.spendCredit(i,u,s,t),h.tx(d,1),h.coin(d,-1),h.unconfirmed(d,-f.value),e?(h.confirmed(d,-f.value),await this.removeCredit(i,u,d)):(u.spent=!0,await this.saveCredit(i,u,d)),c=!0}for(let t=0;t<s.outputs.length;t++){const r=s.outputs[t],n=await this.getPath(r);if(!n)continue;a.setOutput(t,n);const l=w.fromTX(s,t,o);l.own=c,h.tx(n,1),h.coin(n,1),h.unconfirmed(n,r.value),e&&h.confirmed(n,r.value),await this.saveCredit(i,l,n)}if(!h.updated())return null;i.put(f.t.encode(n),t.toRaw()),i.put(f.m.encode(t.mtime,n),null),e?i.put(f.h.encode(o,n),null):i.put(f.p.encode(n),null);for(const[r,s]of h.accounts)await this.updateAccountBalance(i,r,s),i.put(f.T.encode(r,n),null),i.put(f.M.encode(r,t.mtime,n),null),e?i.put(f.H.encode(r,o,n),null):i.put(f.P.encode(r,n),null);e?(await this.addBlockMap(i,o),await this.addBlock(i,s.hash(),e)):await this.addTXMap(i,n);const l=await this.updateBalance(i,h);return await i.write(),this.unlockTX(s),this.emit("tx",s,a),this.emit("balance",l),a}async confirm(t,e){const i=this.bucket.batch(),{tx:s,hash:n}=t,o=e.height,a=new y(t,e),h=new b;if(t.setBlock(e),!s.isCoinbase()){const t=await this.getSpentCredits(s);for(let e=0;e<s.inputs.length;e++){const n=s.inputs[e],{hash:o,index:c}=n.prevout;let l=!1;if(!t[e]){await this.removeInput(i,s,e);const r=await this.getCredit(o,c);if(!r)continue;this.spendCredit(i,r,s,e),t[e]=r,l=!0}const u=t[e],f=u.coin;r(-1!==f.height);const d=await this.getPath(f);r(d),a.setInput(e,d,f),l&&(h.coin(d,-1),h.unconfirmed(d,-f.value)),h.confirmed(d,-f.value),await this.removeCredit(i,u,d)}}for(let t=0;t<s.outputs.length;t++){const e=s.outputs[t],c=await this.getPath(e);if(!c)continue;a.setOutput(t,c);const l=await this.getCredit(n,t);r(l),l.spent&&await this.updateSpentCoin(i,s,t,o),h.confirmed(c,e.value),l.coin.height=o,await this.saveCredit(i,l,c)}i.put(f.t.encode(n),t.toRaw()),i.del(f.p.encode(n)),i.put(f.h.encode(o,n),null);for(const[t,e]of h.accounts)await this.updateAccountBalance(i,t,e),i.del(f.P.encode(t,n)),i.put(f.H.encode(t,o,n),null);await this.removeTXMap(i,n),await this.addBlockMap(i,o),await this.addBlock(i,s.hash(),e);const c=await this.updateBalance(i,h);return await i.write(),this.unlockTX(s),this.emit("confirmed",s,a),this.emit("balance",c),a}async remove(t){const e=await this.getTX(t);return e?this.removeRecursive(e):null}async erase(t,e){const i=this.bucket.batch(),{tx:s,hash:n}=t,o=e?e.height:-1,a=new y(t,e),h=new b;if(!s.isCoinbase()){const t=await this.getSpentCredits(s);for(let n=0;n<s.inputs.length;n++){const o=t[n];if(!o){e||await this.removeInput(i,s,n);continue}const c=o.coin,l=await this.getPath(c);r(l),a.setInput(n,l,c),h.tx(l,-1),h.coin(l,1),h.unconfirmed(l,c.value),e&&h.confirmed(l,c.value),this.unspendCredit(i,s,n),o.spent=!1,await this.saveCredit(i,o,l)}}for(let t=0;t<s.outputs.length;t++){const r=s.outputs[t],n=await this.getPath(r);if(!n)continue;a.setOutput(t,n);const c=w.fromTX(s,t,o);h.tx(n,-1),h.coin(n,-1),h.unconfirmed(n,-r.value),e&&h.confirmed(n,-r.value),await this.removeCredit(i,c,n)}i.del(f.t.encode(n)),i.del(f.m.encode(t.mtime,n)),e?i.del(f.h.encode(o,n)):i.del(f.p.encode(n));for(const[r,s]of h.accounts)await this.updateAccountBalance(i,r,s),i.del(f.T.encode(r,n)),i.del(f.M.encode(r,t.mtime,n)),e?i.del(f.H.encode(r,o,n)):i.del(f.P.encode(r,n));e?(await this.removeBlockMap(i,o),await this.spliceBlock(i,n,o)):await this.removeTXMap(i,n);const c=await this.updateBalance(i,h);return await i.write(),this.emit("remove tx",s,a),this.emit("balance",c),a}async removeRecursive(t){const{tx:e,hash:i}=t;for(let t=0;t<e.outputs.length;t++){const e=await this.getSpent(i,t);if(!e)continue;const s=await this.getTX(e.hash);r(s),await this.removeRecursive(s)}return this.erase(t,t.getBlock())}async revert(t){const e=await this.getBlock(t);if(!e)return 0;const i=e.toArray();for(let t=i.length-1;t>=0;t--){const e=i[t];await this.unconfirm(e)}return i.length}async unconfirm(t){const e=await this.getTX(t);return e?-1===e.height?null:this.disconnect(e,e.getBlock()):null}async disconnect(t,e){const i=this.bucket.batch(),{tx:s,hash:n,height:o}=t,a=new y(t,e),h=new b;if(r(e),t.unsetBlock(),!s.isCoinbase()){const t=await this.getSpentCredits(s);for(let e=0;e<s.inputs.length;e++){const n=t[e];if(!n){await this.writeInput(i,s,e);continue}const o=n.coin;r(-1!==o.height);const c=await this.getPath(o);r(c),a.setInput(e,c,o),h.confirmed(c,o.value),n.spent=!0,await this.saveCredit(i,n,c)}}for(let t=0;t<s.outputs.length;t++){const e=s.outputs[t],r=await this.getPath(e);if(!r)continue;const c=await this.getCredit(n,t);c?(c.spent&&await this.updateSpentCoin(i,s,t,o),a.setOutput(t,r),c.coin.height=-1,h.confirmed(r,-e.value),await this.saveCredit(i,c,r)):await this.updateSpentCoin(i,s,t,o)}await this.addTXMap(i,n),await this.removeBlockMap(i,o),await this.removeBlock(i,s.hash(),o),i.put(f.t.encode(n),t.toRaw()),i.put(f.p.encode(n),null),i.del(f.h.encode(o,n));for(const[t,e]of h.accounts)await this.updateAccountBalance(i,t,e),i.put(f.P.encode(t,n),null),i.del(f.H.encode(t,o,n));const c=await this.updateBalance(i,h);return await i.write(),this.emit("unconfirmed",s,a),this.emit("balance",c),a}async removeConflict(t){const e=t.tx;this.logger.warning("Handling conflicting tx: %h.",e.hash());const i=await this.removeRecursive(t);return this.logger.warning("Removed conflict: %h.",e.hash()),this.emit("conflict",e,i),i}async removeConflicts(t,e){if(t.isCoinbase())return!0;const i=t.hash(),s=[];for(const{prevout:n}of t.inputs){const{hash:t,index:o}=n,a=await this.getSpent(t,o);if(!a)continue;if(a.hash.equals(i))continue;const h=await this.getTX(a.hash);if(r(h),e&&-1!==h.height)return!1;s.push(h)}for(const t of s)await this.removeConflict(t);return!0}lockTX(t){if(!t.isCoinbase())for(const e of t.inputs)this.lockCoin(e.prevout)}unlockTX(t){if(!t.isCoinbase())for(const e of t.inputs)this.unlockCoin(e.prevout)}lockCoin(t){const e=t.toKey();this.locked.add(e)}unlockCoin(t){const e=t.toKey();return this.locked.delete(e)}isLocked(t){const e=t.toKey();return this.locked.has(e)}filterLocked(t){const e=[];for(const i of t)this.isLocked(i)||e.push(i);return e}getLocked(){const t=[];for(const e of this.locked.keys())t.push(l.fromKey(e));return t}getAccountHistoryHashes(t){return r("number"==typeof t),this.bucket.keys({gte:f.T.min(t),lte:f.T.max(t),parse:t=>{const[,e]=f.T.decode(t);return e}})}getHistoryHashes(t){return r("number"==typeof t),-1!==t?this.getAccountHistoryHashes(t):this.bucket.keys({gte:f.t.min(),lte:f.t.max(),parse:t=>f.t.decode(t)[0]})}getAccountPendingHashes(t){return r("number"==typeof t),this.bucket.keys({gte:f.P.min(t),lte:f.P.max(t),parse:t=>{const[,e]=f.P.decode(t);return e}})}getPendingHashes(t){return r("number"==typeof t),-1!==t?this.getAccountPendingHashes(t):this.bucket.keys({gte:f.p.min(),lte:f.p.max(),parse:t=>f.p.decode(t)[0]})}getAccountOutpoints(t){return r("number"==typeof t),this.bucket.keys({gte:f.C.min(t),lte:f.C.max(t),parse:t=>{const[,e,i]=f.C.decode(t);return new l(e,i)}})}getOutpoints(t){return r("number"==typeof t),-1!==t?this.getAccountOutpoints(t):this.bucket.keys({gte:f.c.min(),lte:f.c.max(),parse:t=>{const[e,i]=f.c.decode(t);return new l(e,i)}})}getAccountHeightRangeHashes(t,e){r("number"==typeof t);const i=e.start||0,s=e.end||4294967295;return this.bucket.keys({gte:f.H.min(t,i),lte:f.H.max(t,s),limit:e.limit,reverse:e.reverse,parse:t=>{const[,,e]=f.H.decode(t);return e}})}getHeightRangeHashes(t,e){if(r("number"==typeof t),-1!==t)return this.getAccountHeightRangeHashes(t,e);const i=e.start||0,s=e.end||4294967295;return this.bucket.keys({gte:f.h.min(i),lte:f.h.max(s),limit:e.limit,reverse:e.reverse,parse:t=>{const[,e]=f.h.decode(t);return e}})}getHeightHashes(t){return this.getHeightRangeHashes({start:t,end:t})}getAccountRangeHashes(t,e){r("number"==typeof t);const i=e.start||0,s=e.end||4294967295;return this.bucket.keys({gte:f.M.min(t,i),lte:f.M.max(t,s),limit:e.limit,reverse:e.reverse,parse:t=>{const[,,e]=f.M.decode(t);return e}})}getRangeHashes(t,e){if(r("number"==typeof t),-1!==t)return this.getAccountRangeHashes(t,e);const i=e.start||0,s=e.end||4294967295;return this.bucket.keys({gte:f.m.min(i),lte:f.m.max(s),limit:e.limit,reverse:e.reverse,parse:t=>{const[,e]=f.m.decode(t);return e}})}async getRange(t,e){const i=await this.getRangeHashes(t,e),s=[];for(const t of i){const e=await this.getTX(t);r(e),s.push(e)}return s}getLast(t,e){return this.getRange(t,{start:0,end:4294967295,reverse:!0,limit:e||10})}getHistory(t){return r("number"==typeof t),-1!==t?this.getAccountHistory(t):this.bucket.values({gte:f.t.min(),lte:f.t.max(),parse:t=>g.fromRaw(t)})}async getAccountHistory(t){const e=await this.getHistoryHashes(t),i=[];for(const t of e){const e=await this.getTX(t);r(e),i.push(e)}return i}async getPending(t){const e=await this.getPendingHashes(t),i=[];for(const t of e){const e=await this.getTX(t);r(e),i.push(e)}return i}getCredits(t){return r("number"==typeof t),-1!==t?this.getAccountCredits(t):this.bucket.range({gte:f.c.min(),lte:f.c.max(),parse:(t,e)=>{const[i,r]=f.c.decode(t),s=w.fromRaw(e);return s.coin.hash=i,s.coin.index=r,s}})}async getAccountCredits(t){const e=await this.getOutpoints(t),i=[];for(const{hash:t,index:s}of e){const e=await this.getCredit(t,s);r(e),i.push(e)}return i}async getSpentCredits(t){if(t.isCoinbase())return[];const e=t.hash(),i=[];for(let e=0;e<t.inputs.length;e++)i.push(null);return await this.bucket.range({gte:f.d.min(e),lte:f.d.max(e),parse:(e,s)=>{const[,n]=f.d.decode(e),o=c.fromRaw(s),a=t.inputs[n];r(a),o.hash=a.prevout.hash,o.index=a.prevout.index,i[n]=new w(o)}}),i}async getCoins(t){const e=await this.getCredits(t),i=[];for(const t of e)t.spent||i.push(t.coin);return i}async getAccountCoins(t){const e=await this.getAccountCredits(t),i=[];for(const t of e)t.spent||i.push(t.coin);return i}async getSpentCoins(t){if(t.isCoinbase())return[];const e=await this.getSpentCredits(t),i=[];for(const t of e)t?i.push(t.coin):i.push(null);return i}async getCoinView(t){const e=new h;if(t.isCoinbase())return e;for(const{prevout:i}of t.inputs){const{hash:t,index:r}=i,s=await this.getCoin(t,r);s&&e.addCoin(s)}return e}async getSpentView(t){const e=new h;if(t.isCoinbase())return e;const i=await this.getSpentCoins(t);for(const t of i)t&&e.addCoin(t);return e}async getTX(t){const e=await this.bucket.get(f.t.encode(t));return e?g.fromRaw(e):null}async getDetails(t){const e=await this.getTX(t);return e?this.toDetails(e):null}async toDetails(t){const e=[];if(!Array.isArray(t))return this._toDetails(t);for(const i of t){const t=await this._toDetails(i);t&&e.push(t)}return e}async _toDetails(t){const e=t.tx,i=t.getBlock(),r=new y(t,i),s=await this.getSpentCoins(e);for(let t=0;t<e.inputs.length;t++){const e=s[t];let i=null;e&&(i=await this.getPath(e)),r.setInput(t,i,e)}for(let t=0;t<e.outputs.length;t++){const i=e.outputs[t],s=await this.getPath(i);r.setOutput(t,s)}return r}hasTX(t){return this.bucket.has(f.t.encode(t))}async getCoin(t,e){const i=await this.getCredit(t,e);return i?i.coin:null}async getCredit(t,e){const i=await this.bucket.get(f.c.encode(t,e));if(!i)return null;const r=w.fromRaw(i);return r.coin.hash=t,r.coin.index=e,r}async getSpentCoin(t,e){const i=await this.bucket.get(f.d.encode(t.hash,t.index));if(!i)return null;const r=c.fromRaw(i);return r.hash=e.hash,r.index=e.index,r}hasSpentCoin(t){return this.bucket.has(f.d.encode(t.hash,t.index))}async updateSpentCoin(t,e,i,r){const s=l.fromTX(e,i),n=await this.getSpent(s.hash,s.index);if(!n)return;const o=await this.getSpentCoin(n,s);o&&(o.height=r,t.put(f.d.encode(n.hash,n.index),o.toRaw()))}async hasCoin(t,e){return this.bucket.has(f.c.encode(t,e))}async getBalance(t){return r("number"==typeof t),-1!==t?this.getAccountBalance(t):this.getWalletBalance()}async getWalletBalance(){const t=await this.bucket.get(f.R.encode());return t?m.fromRaw(-1,t):new m}async getAccountBalance(t){const e=await this.bucket.get(f.r.encode(t));return e?m.fromRaw(t,e):new m(t)}async zap(t,e){r(e>>>0===e);const i=o.now(),s=await this.getRange(t,{start:0,end:i-e}),n=[];for(const t of s)-1===t.height&&(r(i-t.mtime>=e),this.logger.debug("Zapping TX: %h (%d)",t.tx.hash(),this.wid),await this.remove(t.hash),n.push(t.hash));return n}async abandon(t){if(!await this.bucket.has(f.p.encode(t)))throw new Error("TX not eligible.");return this.remove(t)}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";
/*!
 * index.js - wordlists for bcoin
 * Copyright (c) 2015-2016, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */e.chinese={simplified:i(241),traditional:i(242)},e.english=i(243),e.french=i(244),e.italian=i(245),e.japanese=i(246),e.spanish=i(247)},function(t,e,i){"use strict";t.exports=["的","一","是","在","不","了","有","和","人","这","中","大","为","上","个","国","我","以","要","他","时","来","用","们","生","到","作","地","于","出","就","分","对","成","会","可","主","发","年","动","同","工","也","能","下","过","子","说","产","种","面","而","方","后","多","定","行","学","法","所","民","得","经","十","三","之","进","着","等","部","度","家","电","力","里","如","水","化","高","自","二","理","起","小","物","现","实","加","量","都","两","体","制","机","当","使","点","从","业","本","去","把","性","好","应","开","它","合","还","因","由","其","些","然","前","外","天","政","四","日","那","社","义","事","平","形","相","全","表","间","样","与","关","各","重","新","线","内","数","正","心","反","你","明","看","原","又","么","利","比","或","但","质","气","第","向","道","命","此","变","条","只","没","结","解","问","意","建","月","公","无","系","军","很","情","者","最","立","代","想","已","通","并","提","直","题","党","程","展","五","果","料","象","员","革","位","入","常","文","总","次","品","式","活","设","及","管","特","件","长","求","老","头","基","资","边","流","路","级","少","图","山","统","接","知","较","将","组","见","计","别","她","手","角","期","根","论","运","农","指","几","九","区","强","放","决","西","被","干","做","必","战","先","回","则","任","取","据","处","队","南","给","色","光","门","即","保","治","北","造","百","规","热","领","七","海","口","东","导","器","压","志","世","金","增","争","济","阶","油","思","术","极","交","受","联","什","认","六","共","权","收","证","改","清","美","再","采","转","更","单","风","切","打","白","教","速","花","带","安","场","身","车","例","真","务","具","万","每","目","至","达","走","积","示","议","声","报","斗","完","类","八","离","华","名","确","才","科","张","信","马","节","话","米","整","空","元","况","今","集","温","传","土","许","步","群","广","石","记","需","段","研","界","拉","林","律","叫","且","究","观","越","织","装","影","算","低","持","音","众","书","布","复","容","儿","须","际","商","非","验","连","断","深","难","近","矿","千","周","委","素","技","备","半","办","青","省","列","习","响","约","支","般","史","感","劳","便","团","往","酸","历","市","克","何","除","消","构","府","称","太","准","精","值","号","率","族","维","划","选","标","写","存","候","毛","亲","快","效","斯","院","查","江","型","眼","王","按","格","养","易","置","派","层","片","始","却","专","状","育","厂","京","识","适","属","圆","包","火","住","调","满","县","局","照","参","红","细","引","听","该","铁","价","严","首","底","液","官","德","随","病","苏","失","尔","死","讲","配","女","黄","推","显","谈","罪","神","艺","呢","席","含","企","望","密","批","营","项","防","举","球","英","氧","势","告","李","台","落","木","帮","轮","破","亚","师","围","注","远","字","材","排","供","河","态","封","另","施","减","树","溶","怎","止","案","言","士","均","武","固","叶","鱼","波","视","仅","费","紧","爱","左","章","早","朝","害","续","轻","服","试","食","充","兵","源","判","护","司","足","某","练","差","致","板","田","降","黑","犯","负","击","范","继","兴","似","余","坚","曲","输","修","故","城","夫","够","送","笔","船","占","右","财","吃","富","春","职","觉","汉","画","功","巴","跟","虽","杂","飞","检","吸","助","升","阳","互","初","创","抗","考","投","坏","策","古","径","换","未","跑","留","钢","曾","端","责","站","简","述","钱","副","尽","帝","射","草","冲","承","独","令","限","阿","宣","环","双","请","超","微","让","控","州","良","轴","找","否","纪","益","依","优","顶","础","载","倒","房","突","坐","粉","敌","略","客","袁","冷","胜","绝","析","块","剂","测","丝","协","诉","念","陈","仍","罗","盐","友","洋","错","苦","夜","刑","移","频","逐","靠","混","母","短","皮","终","聚","汽","村","云","哪","既","距","卫","停","烈","央","察","烧","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","游","久","菜","味","旧","模","湖","货","损","预","阻","毫","普","稳","乙","妈","植","息","扩","银","语","挥","酒","守","拿","序","纸","医","缺","雨","吗","针","刘","啊","急","唱","误","训","愿","审","附","获","茶","鲜","粮","斤","孩","脱","硫","肥","善","龙","演","父","渐","血","欢","械","掌","歌","沙","刚","攻","谓","盾","讨","晚","粒","乱","燃","矛","乎","杀","药","宁","鲁","贵","钟","煤","读","班","伯","香","介","迫","句","丰","培","握","兰","担","弦","蛋","沉","假","穿","执","答","乐","谁","顺","烟","缩","征","脸","喜","松","脚","困","异","免","背","星","福","买","染","井","概","慢","怕","磁","倍","祖","皇","促","静","补","评","翻","肉","践","尼","衣","宽","扬","棉","希","伤","操","垂","秋","宜","氢","套","督","振","架","亮","末","宪","庆","编","牛","触","映","雷","销","诗","座","居","抓","裂","胞","呼","娘","景","威","绿","晶","厚","盟","衡","鸡","孙","延","危","胶","屋","乡","临","陆","顾","掉","呀","灯","岁","措","束","耐","剧","玉","赵","跳","哥","季","课","凯","胡","额","款","绍","卷","齐","伟","蒸","殖","永","宗","苗","川","炉","岩","弱","零","杨","奏","沿","露","杆","探","滑","镇","饭","浓","航","怀","赶","库","夺","伊","灵","税","途","灭","赛","归","召","鼓","播","盘","裁","险","康","唯","录","菌","纯","借","糖","盖","横","符","私","努","堂","域","枪","润","幅","哈","竟","熟","虫","泽","脑","壤","碳","欧","遍","侧","寨","敢","彻","虑","斜","薄","庭","纳","弹","饲","伸","折","麦","湿","暗","荷","瓦","塞","床","筑","恶","户","访","塔","奇","透","梁","刀","旋","迹","卡","氯","遇","份","毒","泥","退","洗","摆","灰","彩","卖","耗","夏","择","忙","铜","献","硬","予","繁","圈","雪","函","亦","抽","篇","阵","阴","丁","尺","追","堆","雄","迎","泛","爸","楼","避","谋","吨","野","猪","旗","累","偏","典","馆","索","秦","脂","潮","爷","豆","忽","托","惊","塑","遗","愈","朱","替","纤","粗","倾","尚","痛","楚","谢","奋","购","磨","君","池","旁","碎","骨","监","捕","弟","暴","割","贯","殊","释","词","亡","壁","顿","宝","午","尘","闻","揭","炮","残","冬","桥","妇","警","综","招","吴","付","浮","遭","徐","您","摇","谷","赞","箱","隔","订","男","吹","园","纷","唐","败","宋","玻","巨","耕","坦","荣","闭","湾","键","凡","驻","锅","救","恩","剥","凝","碱","齿","截","炼","麻","纺","禁","废","盛","版","缓","净","睛","昌","婚","涉","筒","嘴","插","岸","朗","庄","街","藏","姑","贸","腐","奴","啦","惯","乘","伙","恢","匀","纱","扎","辩","耳","彪","臣","亿","璃","抵","脉","秀","萨","俄","网","舞","店","喷","纵","寸","汗","挂","洪","贺","闪","柬","爆","烯","津","稻","墙","软","勇","像","滚","厘","蒙","芳","肯","坡","柱","荡","腿","仪","旅","尾","轧","冰","贡","登","黎","削","钻","勒","逃","障","氨","郭","峰","币","港","伏","轨","亩","毕","擦","莫","刺","浪","秘","援","株","健","售","股","岛","甘","泡","睡","童","铸","汤","阀","休","汇","舍","牧","绕","炸","哲","磷","绩","朋","淡","尖","启","陷","柴","呈","徒","颜","泪","稍","忘","泵","蓝","拖","洞","授","镜","辛","壮","锋","贫","虚","弯","摩","泰","幼","廷","尊","窗","纲","弄","隶","疑","氏","宫","姐","震","瑞","怪","尤","琴","循","描","膜","违","夹","腰","缘","珠","穷","森","枝","竹","沟","催","绳","忆","邦","剩","幸","浆","栏","拥","牙","贮","礼","滤","钠","纹","罢","拍","咱","喊","袖","埃","勤","罚","焦","潜","伍","墨","欲","缝","姓","刊","饱","仿","奖","铝","鬼","丽","跨","默","挖","链","扫","喝","袋","炭","污","幕","诸","弧","励","梅","奶","洁","灾","舟","鉴","苯","讼","抱","毁","懂","寒","智","埔","寄","届","跃","渡","挑","丹","艰","贝","碰","拔","爹","戴","码","梦","芽","熔","赤","渔","哭","敬","颗","奔","铅","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","仓","魏","锐","晓","氮","兼","隐","碍","赫","拨","忠","肃","缸","牵","抢","博","巧","壳","兄","杜","讯","诚","碧","祥","柯","页","巡","矩","悲","灌","龄","伦","票","寻","桂","铺","圣","恐","恰","郑","趣","抬","荒","腾","贴","柔","滴","猛","阔","辆","妻","填","撤","储","签","闹","扰","紫","砂","递","戏","吊","陶","伐","喂","疗","瓶","婆","抚","臂","摸","忍","虾","蜡","邻","胸","巩","挤","偶","弃","槽","劲","乳","邓","吉","仁","烂","砖","租","乌","舰","伴","瓜","浅","丙","暂","燥","橡","柳","迷","暖","牌","秧","胆","详","簧","踏","瓷","谱","呆","宾","糊","洛","辉","愤","竞","隙","怒","粘","乃","绪","肩","籍","敏","涂","熙","皆","侦","悬","掘","享","纠","醒","狂","锁","淀","恨","牲","霸","爬","赏","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鸭","趋","凤","晨","畜","辈","秩","卵","署","梯","炎","滩","棋","驱","筛","峡","冒","啥","寿","译","浸","泉","帽","迟","硅","疆","贷","漏","稿","冠","嫩","胁","芯","牢","叛","蚀","奥","鸣","岭","羊","凭","串","塘","绘","酵","融","盆","锡","庙","筹","冻","辅","摄","袭","筋","拒","僚","旱","钾","鸟","漆","沈","眉","疏","添","棒","穗","硝","韩","逼","扭","侨","凉","挺","碗","栽","炒","杯","患","馏","劝","豪","辽","勃","鸿","旦","吏","拜","狗","埋","辊","掩","饮","搬","骂","辞","勾","扣","估","蒋","绒","雾","丈","朵","姆","拟","宇","辑","陕","雕","偿","蓄","崇","剪","倡","厅","咬","驶","薯","刷","斥","番","赋","奉","佛","浇","漫","曼","扇","钙","桃","扶","仔","返","俗","亏","腔","鞋","棱","覆","框","悄","叔","撞","骗","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","胀","谐","抛","霉","桑","岗","嘛","衰","盗","渗","脏","赖","涌","甜","曹","阅","肌","哩","厉","烃","纬","毅","昨","伪","症","煮","叹","钉","搭","茎","笼","酷","偷","弓","锥","恒","杰","坑","鼻","翼","纶","叙","狱","逮","罐","络","棚","抑","膨","蔬","寺","骤","穆","冶","枯","册","尸","凸","绅","坯","牺","焰","轰","欣","晋","瘦","御","锭","锦","丧","旬","锻","垄","搜","扑","邀","亭","酯","迈","舒","脆","酶","闲","忧","酚","顽","羽","涨","卸","仗","陪","辟","惩","杭","姚","肚","捉","飘","漂","昆","欺","吾","郎","烷","汁","呵","饰","萧","雅","邮","迁","燕","撒","姻","赴","宴","烦","债","帐","斑","铃","旨","醇","董","饼","雏","姿","拌","傅","腹","妥","揉","贤","拆","歪","葡","胺","丢","浩","徽","昂","垫","挡","览","贪","慰","缴","汪","慌","冯","诺","姜","谊","凶","劣","诬","耀","昏","躺","盈","骑","乔","溪","丛","卢","抹","闷","咨","刮","驾","缆","悟","摘","铒","掷","颇","幻","柄","惠","惨","佳","仇","腊","窝","涤","剑","瞧","堡","泼","葱","罩","霍","捞","胎","苍","滨","俩","捅","湘","砍","霞","邵","萄","疯","淮","遂","熊","粪","烘","宿","档","戈","驳","嫂","裕","徙","箭","捐","肠","撑","晒","辨","殿","莲","摊","搅","酱","屏","疫","哀","蔡","堵","沫","皱","畅","叠","阁","莱","敲","辖","钩","痕","坝","巷","饿","祸","丘","玄","溜","曰","逻","彭","尝","卿","妨","艇","吞","韦","怨","矮","歇"]},function(t,e,i){"use strict";t.exports=["的","一","是","在","不","了","有","和","人","這","中","大","為","上","個","國","我","以","要","他","時","來","用","們","生","到","作","地","於","出","就","分","對","成","會","可","主","發","年","動","同","工","也","能","下","過","子","說","產","種","面","而","方","後","多","定","行","學","法","所","民","得","經","十","三","之","進","著","等","部","度","家","電","力","裡","如","水","化","高","自","二","理","起","小","物","現","實","加","量","都","兩","體","制","機","當","使","點","從","業","本","去","把","性","好","應","開","它","合","還","因","由","其","些","然","前","外","天","政","四","日","那","社","義","事","平","形","相","全","表","間","樣","與","關","各","重","新","線","內","數","正","心","反","你","明","看","原","又","麼","利","比","或","但","質","氣","第","向","道","命","此","變","條","只","沒","結","解","問","意","建","月","公","無","系","軍","很","情","者","最","立","代","想","已","通","並","提","直","題","黨","程","展","五","果","料","象","員","革","位","入","常","文","總","次","品","式","活","設","及","管","特","件","長","求","老","頭","基","資","邊","流","路","級","少","圖","山","統","接","知","較","將","組","見","計","別","她","手","角","期","根","論","運","農","指","幾","九","區","強","放","決","西","被","幹","做","必","戰","先","回","則","任","取","據","處","隊","南","給","色","光","門","即","保","治","北","造","百","規","熱","領","七","海","口","東","導","器","壓","志","世","金","增","爭","濟","階","油","思","術","極","交","受","聯","什","認","六","共","權","收","證","改","清","美","再","採","轉","更","單","風","切","打","白","教","速","花","帶","安","場","身","車","例","真","務","具","萬","每","目","至","達","走","積","示","議","聲","報","鬥","完","類","八","離","華","名","確","才","科","張","信","馬","節","話","米","整","空","元","況","今","集","溫","傳","土","許","步","群","廣","石","記","需","段","研","界","拉","林","律","叫","且","究","觀","越","織","裝","影","算","低","持","音","眾","書","布","复","容","兒","須","際","商","非","驗","連","斷","深","難","近","礦","千","週","委","素","技","備","半","辦","青","省","列","習","響","約","支","般","史","感","勞","便","團","往","酸","歷","市","克","何","除","消","構","府","稱","太","準","精","值","號","率","族","維","劃","選","標","寫","存","候","毛","親","快","效","斯","院","查","江","型","眼","王","按","格","養","易","置","派","層","片","始","卻","專","狀","育","廠","京","識","適","屬","圓","包","火","住","調","滿","縣","局","照","參","紅","細","引","聽","該","鐵","價","嚴","首","底","液","官","德","隨","病","蘇","失","爾","死","講","配","女","黃","推","顯","談","罪","神","藝","呢","席","含","企","望","密","批","營","項","防","舉","球","英","氧","勢","告","李","台","落","木","幫","輪","破","亞","師","圍","注","遠","字","材","排","供","河","態","封","另","施","減","樹","溶","怎","止","案","言","士","均","武","固","葉","魚","波","視","僅","費","緊","愛","左","章","早","朝","害","續","輕","服","試","食","充","兵","源","判","護","司","足","某","練","差","致","板","田","降","黑","犯","負","擊","范","繼","興","似","餘","堅","曲","輸","修","故","城","夫","夠","送","筆","船","佔","右","財","吃","富","春","職","覺","漢","畫","功","巴","跟","雖","雜","飛","檢","吸","助","昇","陽","互","初","創","抗","考","投","壞","策","古","徑","換","未","跑","留","鋼","曾","端","責","站","簡","述","錢","副","盡","帝","射","草","衝","承","獨","令","限","阿","宣","環","雙","請","超","微","讓","控","州","良","軸","找","否","紀","益","依","優","頂","礎","載","倒","房","突","坐","粉","敵","略","客","袁","冷","勝","絕","析","塊","劑","測","絲","協","訴","念","陳","仍","羅","鹽","友","洋","錯","苦","夜","刑","移","頻","逐","靠","混","母","短","皮","終","聚","汽","村","雲","哪","既","距","衛","停","烈","央","察","燒","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","遊","久","菜","味","舊","模","湖","貨","損","預","阻","毫","普","穩","乙","媽","植","息","擴","銀","語","揮","酒","守","拿","序","紙","醫","缺","雨","嗎","針","劉","啊","急","唱","誤","訓","願","審","附","獲","茶","鮮","糧","斤","孩","脫","硫","肥","善","龍","演","父","漸","血","歡","械","掌","歌","沙","剛","攻","謂","盾","討","晚","粒","亂","燃","矛","乎","殺","藥","寧","魯","貴","鐘","煤","讀","班","伯","香","介","迫","句","豐","培","握","蘭","擔","弦","蛋","沉","假","穿","執","答","樂","誰","順","煙","縮","徵","臉","喜","松","腳","困","異","免","背","星","福","買","染","井","概","慢","怕","磁","倍","祖","皇","促","靜","補","評","翻","肉","踐","尼","衣","寬","揚","棉","希","傷","操","垂","秋","宜","氫","套","督","振","架","亮","末","憲","慶","編","牛","觸","映","雷","銷","詩","座","居","抓","裂","胞","呼","娘","景","威","綠","晶","厚","盟","衡","雞","孫","延","危","膠","屋","鄉","臨","陸","顧","掉","呀","燈","歲","措","束","耐","劇","玉","趙","跳","哥","季","課","凱","胡","額","款","紹","卷","齊","偉","蒸","殖","永","宗","苗","川","爐","岩","弱","零","楊","奏","沿","露","桿","探","滑","鎮","飯","濃","航","懷","趕","庫","奪","伊","靈","稅","途","滅","賽","歸","召","鼓","播","盤","裁","險","康","唯","錄","菌","純","借","糖","蓋","橫","符","私","努","堂","域","槍","潤","幅","哈","竟","熟","蟲","澤","腦","壤","碳","歐","遍","側","寨","敢","徹","慮","斜","薄","庭","納","彈","飼","伸","折","麥","濕","暗","荷","瓦","塞","床","築","惡","戶","訪","塔","奇","透","梁","刀","旋","跡","卡","氯","遇","份","毒","泥","退","洗","擺","灰","彩","賣","耗","夏","擇","忙","銅","獻","硬","予","繁","圈","雪","函","亦","抽","篇","陣","陰","丁","尺","追","堆","雄","迎","泛","爸","樓","避","謀","噸","野","豬","旗","累","偏","典","館","索","秦","脂","潮","爺","豆","忽","托","驚","塑","遺","愈","朱","替","纖","粗","傾","尚","痛","楚","謝","奮","購","磨","君","池","旁","碎","骨","監","捕","弟","暴","割","貫","殊","釋","詞","亡","壁","頓","寶","午","塵","聞","揭","炮","殘","冬","橋","婦","警","綜","招","吳","付","浮","遭","徐","您","搖","谷","贊","箱","隔","訂","男","吹","園","紛","唐","敗","宋","玻","巨","耕","坦","榮","閉","灣","鍵","凡","駐","鍋","救","恩","剝","凝","鹼","齒","截","煉","麻","紡","禁","廢","盛","版","緩","淨","睛","昌","婚","涉","筒","嘴","插","岸","朗","莊","街","藏","姑","貿","腐","奴","啦","慣","乘","夥","恢","勻","紗","扎","辯","耳","彪","臣","億","璃","抵","脈","秀","薩","俄","網","舞","店","噴","縱","寸","汗","掛","洪","賀","閃","柬","爆","烯","津","稻","牆","軟","勇","像","滾","厘","蒙","芳","肯","坡","柱","盪","腿","儀","旅","尾","軋","冰","貢","登","黎","削","鑽","勒","逃","障","氨","郭","峰","幣","港","伏","軌","畝","畢","擦","莫","刺","浪","秘","援","株","健","售","股","島","甘","泡","睡","童","鑄","湯","閥","休","匯","舍","牧","繞","炸","哲","磷","績","朋","淡","尖","啟","陷","柴","呈","徒","顏","淚","稍","忘","泵","藍","拖","洞","授","鏡","辛","壯","鋒","貧","虛","彎","摩","泰","幼","廷","尊","窗","綱","弄","隸","疑","氏","宮","姐","震","瑞","怪","尤","琴","循","描","膜","違","夾","腰","緣","珠","窮","森","枝","竹","溝","催","繩","憶","邦","剩","幸","漿","欄","擁","牙","貯","禮","濾","鈉","紋","罷","拍","咱","喊","袖","埃","勤","罰","焦","潛","伍","墨","欲","縫","姓","刊","飽","仿","獎","鋁","鬼","麗","跨","默","挖","鏈","掃","喝","袋","炭","污","幕","諸","弧","勵","梅","奶","潔","災","舟","鑑","苯","訟","抱","毀","懂","寒","智","埔","寄","屆","躍","渡","挑","丹","艱","貝","碰","拔","爹","戴","碼","夢","芽","熔","赤","漁","哭","敬","顆","奔","鉛","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","倉","魏","銳","曉","氮","兼","隱","礙","赫","撥","忠","肅","缸","牽","搶","博","巧","殼","兄","杜","訊","誠","碧","祥","柯","頁","巡","矩","悲","灌","齡","倫","票","尋","桂","鋪","聖","恐","恰","鄭","趣","抬","荒","騰","貼","柔","滴","猛","闊","輛","妻","填","撤","儲","簽","鬧","擾","紫","砂","遞","戲","吊","陶","伐","餵","療","瓶","婆","撫","臂","摸","忍","蝦","蠟","鄰","胸","鞏","擠","偶","棄","槽","勁","乳","鄧","吉","仁","爛","磚","租","烏","艦","伴","瓜","淺","丙","暫","燥","橡","柳","迷","暖","牌","秧","膽","詳","簧","踏","瓷","譜","呆","賓","糊","洛","輝","憤","競","隙","怒","粘","乃","緒","肩","籍","敏","塗","熙","皆","偵","懸","掘","享","糾","醒","狂","鎖","淀","恨","牲","霸","爬","賞","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鴨","趨","鳳","晨","畜","輩","秩","卵","署","梯","炎","灘","棋","驅","篩","峽","冒","啥","壽","譯","浸","泉","帽","遲","矽","疆","貸","漏","稿","冠","嫩","脅","芯","牢","叛","蝕","奧","鳴","嶺","羊","憑","串","塘","繪","酵","融","盆","錫","廟","籌","凍","輔","攝","襲","筋","拒","僚","旱","鉀","鳥","漆","沈","眉","疏","添","棒","穗","硝","韓","逼","扭","僑","涼","挺","碗","栽","炒","杯","患","餾","勸","豪","遼","勃","鴻","旦","吏","拜","狗","埋","輥","掩","飲","搬","罵","辭","勾","扣","估","蔣","絨","霧","丈","朵","姆","擬","宇","輯","陝","雕","償","蓄","崇","剪","倡","廳","咬","駛","薯","刷","斥","番","賦","奉","佛","澆","漫","曼","扇","鈣","桃","扶","仔","返","俗","虧","腔","鞋","棱","覆","框","悄","叔","撞","騙","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","脹","諧","拋","黴","桑","崗","嘛","衰","盜","滲","臟","賴","湧","甜","曹","閱","肌","哩","厲","烴","緯","毅","昨","偽","症","煮","嘆","釘","搭","莖","籠","酷","偷","弓","錐","恆","傑","坑","鼻","翼","綸","敘","獄","逮","罐","絡","棚","抑","膨","蔬","寺","驟","穆","冶","枯","冊","屍","凸","紳","坯","犧","焰","轟","欣","晉","瘦","禦","錠","錦","喪","旬","鍛","壟","搜","撲","邀","亭","酯","邁","舒","脆","酶","閒","憂","酚","頑","羽","漲","卸","仗","陪","闢","懲","杭","姚","肚","捉","飄","漂","昆","欺","吾","郎","烷","汁","呵","飾","蕭","雅","郵","遷","燕","撒","姻","赴","宴","煩","債","帳","斑","鈴","旨","醇","董","餅","雛","姿","拌","傅","腹","妥","揉","賢","拆","歪","葡","胺","丟","浩","徽","昂","墊","擋","覽","貪","慰","繳","汪","慌","馮","諾","姜","誼","兇","劣","誣","耀","昏","躺","盈","騎","喬","溪","叢","盧","抹","悶","諮","刮","駕","纜","悟","摘","鉺","擲","頗","幻","柄","惠","慘","佳","仇","臘","窩","滌","劍","瞧","堡","潑","蔥","罩","霍","撈","胎","蒼","濱","倆","捅","湘","砍","霞","邵","萄","瘋","淮","遂","熊","糞","烘","宿","檔","戈","駁","嫂","裕","徙","箭","捐","腸","撐","曬","辨","殿","蓮","攤","攪","醬","屏","疫","哀","蔡","堵","沫","皺","暢","疊","閣","萊","敲","轄","鉤","痕","壩","巷","餓","禍","丘","玄","溜","曰","邏","彭","嘗","卿","妨","艇","吞","韋","怨","矮","歇"]},function(t,e,i){"use strict";t.exports=["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"]},function(t,e,i){"use strict";t.exports=["abaisser","abandon","abdiquer","abeille","abolir","aborder","aboutir","aboyer","abrasif","abreuver","abriter","abroger","abrupt","absence","absolu","absurde","abusif","abyssal","académie","acajou","acarien","accabler","accepter","acclamer","accolade","accroche","accuser","acerbe","achat","acheter","aciduler","acier","acompte","acquérir","acronyme","acteur","actif","actuel","adepte","adéquat","adhésif","adjectif","adjuger","admettre","admirer","adopter","adorer","adoucir","adresse","adroit","adulte","adverbe","aérer","aéronef","affaire","affecter","affiche","affreux","affubler","agacer","agencer","agile","agiter","agrafer","agréable","agrume","aider","aiguille","ailier","aimable","aisance","ajouter","ajuster","alarmer","alchimie","alerte","algèbre","algue","aliéner","aliment","alléger","alliage","allouer","allumer","alourdir","alpaga","altesse","alvéole","amateur","ambigu","ambre","aménager","amertume","amidon","amiral","amorcer","amour","amovible","amphibie","ampleur","amusant","analyse","anaphore","anarchie","anatomie","ancien","anéantir","angle","angoisse","anguleux","animal","annexer","annonce","annuel","anodin","anomalie","anonyme","anormal","antenne","antidote","anxieux","apaiser","apéritif","aplanir","apologie","appareil","appeler","apporter","appuyer","aquarium","aqueduc","arbitre","arbuste","ardeur","ardoise","argent","arlequin","armature","armement","armoire","armure","arpenter","arracher","arriver","arroser","arsenic","artériel","article","aspect","asphalte","aspirer","assaut","asservir","assiette","associer","assurer","asticot","astre","astuce","atelier","atome","atrium","atroce","attaque","attentif","attirer","attraper","aubaine","auberge","audace","audible","augurer","aurore","automne","autruche","avaler","avancer","avarice","avenir","averse","aveugle","aviateur","avide","avion","aviser","avoine","avouer","avril","axial","axiome","badge","bafouer","bagage","baguette","baignade","balancer","balcon","baleine","balisage","bambin","bancaire","bandage","banlieue","bannière","banquier","barbier","baril","baron","barque","barrage","bassin","bastion","bataille","bateau","batterie","baudrier","bavarder","belette","bélier","belote","bénéfice","berceau","berger","berline","bermuda","besace","besogne","bétail","beurre","biberon","bicycle","bidule","bijou","bilan","bilingue","billard","binaire","biologie","biopsie","biotype","biscuit","bison","bistouri","bitume","bizarre","blafard","blague","blanchir","blessant","blinder","blond","bloquer","blouson","bobard","bobine","boire","boiser","bolide","bonbon","bondir","bonheur","bonifier","bonus","bordure","borne","botte","boucle","boueux","bougie","boulon","bouquin","bourse","boussole","boutique","boxeur","branche","brasier","brave","brebis","brèche","breuvage","bricoler","brigade","brillant","brioche","brique","brochure","broder","bronzer","brousse","broyeur","brume","brusque","brutal","bruyant","buffle","buisson","bulletin","bureau","burin","bustier","butiner","butoir","buvable","buvette","cabanon","cabine","cachette","cadeau","cadre","caféine","caillou","caisson","calculer","calepin","calibre","calmer","calomnie","calvaire","camarade","caméra","camion","campagne","canal","caneton","canon","cantine","canular","capable","caporal","caprice","capsule","capter","capuche","carabine","carbone","caresser","caribou","carnage","carotte","carreau","carton","cascade","casier","casque","cassure","causer","caution","cavalier","caverne","caviar","cédille","ceinture","céleste","cellule","cendrier","censurer","central","cercle","cérébral","cerise","cerner","cerveau","cesser","chagrin","chaise","chaleur","chambre","chance","chapitre","charbon","chasseur","chaton","chausson","chavirer","chemise","chenille","chéquier","chercher","cheval","chien","chiffre","chignon","chimère","chiot","chlorure","chocolat","choisir","chose","chouette","chrome","chute","cigare","cigogne","cimenter","cinéma","cintrer","circuler","cirer","cirque","citerne","citoyen","citron","civil","clairon","clameur","claquer","classe","clavier","client","cligner","climat","clivage","cloche","clonage","cloporte","cobalt","cobra","cocasse","cocotier","coder","codifier","coffre","cogner","cohésion","coiffer","coincer","colère","colibri","colline","colmater","colonel","combat","comédie","commande","compact","concert","conduire","confier","congeler","connoter","consonne","contact","convexe","copain","copie","corail","corbeau","cordage","corniche","corpus","correct","cortège","cosmique","costume","coton","coude","coupure","courage","couteau","couvrir","coyote","crabe","crainte","cravate","crayon","créature","créditer","crémeux","creuser","crevette","cribler","crier","cristal","critère","croire","croquer","crotale","crucial","cruel","crypter","cubique","cueillir","cuillère","cuisine","cuivre","culminer","cultiver","cumuler","cupide","curatif","curseur","cyanure","cycle","cylindre","cynique","daigner","damier","danger","danseur","dauphin","débattre","débiter","déborder","débrider","débutant","décaler","décembre","déchirer","décider","déclarer","décorer","décrire","décupler","dédale","déductif","déesse","défensif","défiler","défrayer","dégager","dégivrer","déglutir","dégrafer","déjeuner","délice","déloger","demander","demeurer","démolir","dénicher","dénouer","dentelle","dénuder","départ","dépenser","déphaser","déplacer","déposer","déranger","dérober","désastre","descente","désert","désigner","désobéir","dessiner","destrier","détacher","détester","détourer","détresse","devancer","devenir","deviner","devoir","diable","dialogue","diamant","dicter","différer","digérer","digital","digne","diluer","dimanche","diminuer","dioxyde","directif","diriger","discuter","disposer","dissiper","distance","divertir","diviser","docile","docteur","dogme","doigt","domaine","domicile","dompter","donateur","donjon","donner","dopamine","dortoir","dorure","dosage","doseur","dossier","dotation","douanier","double","douceur","douter","doyen","dragon","draper","dresser","dribbler","droiture","duperie","duplexe","durable","durcir","dynastie","éblouir","écarter","écharpe","échelle","éclairer","éclipse","éclore","écluse","école","économie","écorce","écouter","écraser","écrémer","écrivain","écrou","écume","écureuil","édifier","éduquer","effacer","effectif","effigie","effort","effrayer","effusion","égaliser","égarer","éjecter","élaborer","élargir","électron","élégant","éléphant","élève","éligible","élitisme","éloge","élucider","éluder","emballer","embellir","embryon","émeraude","émission","emmener","émotion","émouvoir","empereur","employer","emporter","emprise","émulsion","encadrer","enchère","enclave","encoche","endiguer","endosser","endroit","enduire","énergie","enfance","enfermer","enfouir","engager","engin","englober","énigme","enjamber","enjeu","enlever","ennemi","ennuyeux","enrichir","enrobage","enseigne","entasser","entendre","entier","entourer","entraver","énumérer","envahir","enviable","envoyer","enzyme","éolien","épaissir","épargne","épatant","épaule","épicerie","épidémie","épier","épilogue","épine","épisode","épitaphe","époque","épreuve","éprouver","épuisant","équerre","équipe","ériger","érosion","erreur","éruption","escalier","espadon","espèce","espiègle","espoir","esprit","esquiver","essayer","essence","essieu","essorer","estime","estomac","estrade","étagère","étaler","étanche","étatique","éteindre","étendoir","éternel","éthanol","éthique","ethnie","étirer","étoffer","étoile","étonnant","étourdir","étrange","étroit","étude","euphorie","évaluer","évasion","éventail","évidence","éviter","évolutif","évoquer","exact","exagérer","exaucer","exceller","excitant","exclusif","excuse","exécuter","exemple","exercer","exhaler","exhorter","exigence","exiler","exister","exotique","expédier","explorer","exposer","exprimer","exquis","extensif","extraire","exulter","fable","fabuleux","facette","facile","facture","faiblir","falaise","fameux","famille","farceur","farfelu","farine","farouche","fasciner","fatal","fatigue","faucon","fautif","faveur","favori","fébrile","féconder","fédérer","félin","femme","fémur","fendoir","féodal","fermer","féroce","ferveur","festival","feuille","feutre","février","fiasco","ficeler","fictif","fidèle","figure","filature","filetage","filière","filleul","filmer","filou","filtrer","financer","finir","fiole","firme","fissure","fixer","flairer","flamme","flasque","flatteur","fléau","flèche","fleur","flexion","flocon","flore","fluctuer","fluide","fluvial","folie","fonderie","fongible","fontaine","forcer","forgeron","formuler","fortune","fossile","foudre","fougère","fouiller","foulure","fourmi","fragile","fraise","franchir","frapper","frayeur","frégate","freiner","frelon","frémir","frénésie","frère","friable","friction","frisson","frivole","froid","fromage","frontal","frotter","fruit","fugitif","fuite","fureur","furieux","furtif","fusion","futur","gagner","galaxie","galerie","gambader","garantir","gardien","garnir","garrigue","gazelle","gazon","géant","gélatine","gélule","gendarme","général","génie","genou","gentil","géologie","géomètre","géranium","germe","gestuel","geyser","gibier","gicler","girafe","givre","glace","glaive","glisser","globe","gloire","glorieux","golfeur","gomme","gonfler","gorge","gorille","goudron","gouffre","goulot","goupille","gourmand","goutte","graduel","graffiti","graine","grand","grappin","gratuit","gravir","grenat","griffure","griller","grimper","grogner","gronder","grotte","groupe","gruger","grutier","gruyère","guépard","guerrier","guide","guimauve","guitare","gustatif","gymnaste","gyrostat","habitude","hachoir","halte","hameau","hangar","hanneton","haricot","harmonie","harpon","hasard","hélium","hématome","herbe","hérisson","hermine","héron","hésiter","heureux","hiberner","hibou","hilarant","histoire","hiver","homard","hommage","homogène","honneur","honorer","honteux","horde","horizon","horloge","hormone","horrible","houleux","housse","hublot","huileux","humain","humble","humide","humour","hurler","hydromel","hygiène","hymne","hypnose","idylle","ignorer","iguane","illicite","illusion","image","imbiber","imiter","immense","immobile","immuable","impact","impérial","implorer","imposer","imprimer","imputer","incarner","incendie","incident","incliner","incolore","indexer","indice","inductif","inédit","ineptie","inexact","infini","infliger","informer","infusion","ingérer","inhaler","inhiber","injecter","injure","innocent","inoculer","inonder","inscrire","insecte","insigne","insolite","inspirer","instinct","insulter","intact","intense","intime","intrigue","intuitif","inutile","invasion","inventer","inviter","invoquer","ironique","irradier","irréel","irriter","isoler","ivoire","ivresse","jaguar","jaillir","jambe","janvier","jardin","jauger","jaune","javelot","jetable","jeton","jeudi","jeunesse","joindre","joncher","jongler","joueur","jouissif","journal","jovial","joyau","joyeux","jubiler","jugement","junior","jupon","juriste","justice","juteux","juvénile","kayak","kimono","kiosque","label","labial","labourer","lacérer","lactose","lagune","laine","laisser","laitier","lambeau","lamelle","lampe","lanceur","langage","lanterne","lapin","largeur","larme","laurier","lavabo","lavoir","lecture","légal","léger","légume","lessive","lettre","levier","lexique","lézard","liasse","libérer","libre","licence","licorne","liège","lièvre","ligature","ligoter","ligue","limer","limite","limonade","limpide","linéaire","lingot","lionceau","liquide","lisière","lister","lithium","litige","littoral","livreur","logique","lointain","loisir","lombric","loterie","louer","lourd","loutre","louve","loyal","lubie","lucide","lucratif","lueur","lugubre","luisant","lumière","lunaire","lundi","luron","lutter","luxueux","machine","magasin","magenta","magique","maigre","maillon","maintien","mairie","maison","majorer","malaxer","maléfice","malheur","malice","mallette","mammouth","mandater","maniable","manquant","manteau","manuel","marathon","marbre","marchand","mardi","maritime","marqueur","marron","marteler","mascotte","massif","matériel","matière","matraque","maudire","maussade","mauve","maximal","méchant","méconnu","médaille","médecin","méditer","méduse","meilleur","mélange","mélodie","membre","mémoire","menacer","mener","menhir","mensonge","mentor","mercredi","mérite","merle","messager","mesure","métal","météore","méthode","métier","meuble","miauler","microbe","miette","mignon","migrer","milieu","million","mimique","mince","minéral","minimal","minorer","minute","miracle","miroiter","missile","mixte","mobile","moderne","moelleux","mondial","moniteur","monnaie","monotone","monstre","montagne","monument","moqueur","morceau","morsure","mortier","moteur","motif","mouche","moufle","moulin","mousson","mouton","mouvant","multiple","munition","muraille","murène","murmure","muscle","muséum","musicien","mutation","muter","mutuel","myriade","myrtille","mystère","mythique","nageur","nappe","narquois","narrer","natation","nation","nature","naufrage","nautique","navire","nébuleux","nectar","néfaste","négation","négliger","négocier","neige","nerveux","nettoyer","neurone","neutron","neveu","niche","nickel","nitrate","niveau","noble","nocif","nocturne","noirceur","noisette","nomade","nombreux","nommer","normatif","notable","notifier","notoire","nourrir","nouveau","novateur","novembre","novice","nuage","nuancer","nuire","nuisible","numéro","nuptial","nuque","nutritif","obéir","objectif","obliger","obscur","observer","obstacle","obtenir","obturer","occasion","occuper","océan","octobre","octroyer","octupler","oculaire","odeur","odorant","offenser","officier","offrir","ogive","oiseau","oisillon","olfactif","olivier","ombrage","omettre","onctueux","onduler","onéreux","onirique","opale","opaque","opérer","opinion","opportun","opprimer","opter","optique","orageux","orange","orbite","ordonner","oreille","organe","orgueil","orifice","ornement","orque","ortie","osciller","osmose","ossature","otarie","ouragan","ourson","outil","outrager","ouvrage","ovation","oxyde","oxygène","ozone","paisible","palace","palmarès","palourde","palper","panache","panda","pangolin","paniquer","panneau","panorama","pantalon","papaye","papier","papoter","papyrus","paradoxe","parcelle","paresse","parfumer","parler","parole","parrain","parsemer","partager","parure","parvenir","passion","pastèque","paternel","patience","patron","pavillon","pavoiser","payer","paysage","peigne","peintre","pelage","pélican","pelle","pelouse","peluche","pendule","pénétrer","pénible","pensif","pénurie","pépite","péplum","perdrix","perforer","période","permuter","perplexe","persil","perte","peser","pétale","petit","pétrir","peuple","pharaon","phobie","phoque","photon","phrase","physique","piano","pictural","pièce","pierre","pieuvre","pilote","pinceau","pipette","piquer","pirogue","piscine","piston","pivoter","pixel","pizza","placard","plafond","plaisir","planer","plaque","plastron","plateau","pleurer","plexus","pliage","plomb","plonger","pluie","plumage","pochette","poésie","poète","pointe","poirier","poisson","poivre","polaire","policier","pollen","polygone","pommade","pompier","ponctuel","pondérer","poney","portique","position","posséder","posture","potager","poteau","potion","pouce","poulain","poumon","pourpre","poussin","pouvoir","prairie","pratique","précieux","prédire","préfixe","prélude","prénom","présence","prétexte","prévoir","primitif","prince","prison","priver","problème","procéder","prodige","profond","progrès","proie","projeter","prologue","promener","propre","prospère","protéger","prouesse","proverbe","prudence","pruneau","psychose","public","puceron","puiser","pulpe","pulsar","punaise","punitif","pupitre","purifier","puzzle","pyramide","quasar","querelle","question","quiétude","quitter","quotient","racine","raconter","radieux","ragondin","raideur","raisin","ralentir","rallonge","ramasser","rapide","rasage","ratisser","ravager","ravin","rayonner","réactif","réagir","réaliser","réanimer","recevoir","réciter","réclamer","récolter","recruter","reculer","recycler","rédiger","redouter","refaire","réflexe","réformer","refrain","refuge","régalien","région","réglage","régulier","réitérer","rejeter","rejouer","relatif","relever","relief","remarque","remède","remise","remonter","remplir","remuer","renard","renfort","renifler","renoncer","rentrer","renvoi","replier","reporter","reprise","reptile","requin","réserve","résineux","résoudre","respect","rester","résultat","rétablir","retenir","réticule","retomber","retracer","réunion","réussir","revanche","revivre","révolte","révulsif","richesse","rideau","rieur","rigide","rigoler","rincer","riposter","risible","risque","rituel","rival","rivière","rocheux","romance","rompre","ronce","rondin","roseau","rosier","rotatif","rotor","rotule","rouge","rouille","rouleau","routine","royaume","ruban","rubis","ruche","ruelle","rugueux","ruiner","ruisseau","ruser","rustique","rythme","sabler","saboter","sabre","sacoche","safari","sagesse","saisir","salade","salive","salon","saluer","samedi","sanction","sanglier","sarcasme","sardine","saturer","saugrenu","saumon","sauter","sauvage","savant","savonner","scalpel","scandale","scélérat","scénario","sceptre","schéma","science","scinder","score","scrutin","sculpter","séance","sécable","sécher","secouer","sécréter","sédatif","séduire","seigneur","séjour","sélectif","semaine","sembler","semence","séminal","sénateur","sensible","sentence","séparer","séquence","serein","sergent","sérieux","serrure","sérum","service","sésame","sévir","sevrage","sextuple","sidéral","siècle","siéger","siffler","sigle","signal","silence","silicium","simple","sincère","sinistre","siphon","sirop","sismique","situer","skier","social","socle","sodium","soigneux","soldat","soleil","solitude","soluble","sombre","sommeil","somnoler","sonde","songeur","sonnette","sonore","sorcier","sortir","sosie","sottise","soucieux","soudure","souffle","soulever","soupape","source","soutirer","souvenir","spacieux","spatial","spécial","sphère","spiral","stable","station","sternum","stimulus","stipuler","strict","studieux","stupeur","styliste","sublime","substrat","subtil","subvenir","succès","sucre","suffixe","suggérer","suiveur","sulfate","superbe","supplier","surface","suricate","surmener","surprise","sursaut","survie","suspect","syllabe","symbole","symétrie","synapse","syntaxe","système","tabac","tablier","tactile","tailler","talent","talisman","talonner","tambour","tamiser","tangible","tapis","taquiner","tarder","tarif","tartine","tasse","tatami","tatouage","taupe","taureau","taxer","témoin","temporel","tenaille","tendre","teneur","tenir","tension","terminer","terne","terrible","tétine","texte","thème","théorie","thérapie","thorax","tibia","tiède","timide","tirelire","tiroir","tissu","titane","titre","tituber","toboggan","tolérant","tomate","tonique","tonneau","toponyme","torche","tordre","tornade","torpille","torrent","torse","tortue","totem","toucher","tournage","tousser","toxine","traction","trafic","tragique","trahir","train","trancher","travail","trèfle","tremper","trésor","treuil","triage","tribunal","tricoter","trilogie","triomphe","tripler","triturer","trivial","trombone","tronc","tropical","troupeau","tuile","tulipe","tumulte","tunnel","turbine","tuteur","tutoyer","tuyau","tympan","typhon","typique","tyran","ubuesque","ultime","ultrason","unanime","unifier","union","unique","unitaire","univers","uranium","urbain","urticant","usage","usine","usuel","usure","utile","utopie","vacarme","vaccin","vagabond","vague","vaillant","vaincre","vaisseau","valable","valise","vallon","valve","vampire","vanille","vapeur","varier","vaseux","vassal","vaste","vecteur","vedette","végétal","véhicule","veinard","véloce","vendredi","vénérer","venger","venimeux","ventouse","verdure","vérin","vernir","verrou","verser","vertu","veston","vétéran","vétuste","vexant","vexer","viaduc","viande","victoire","vidange","vidéo","vignette","vigueur","vilain","village","vinaigre","violon","vipère","virement","virtuose","virus","visage","viseur","vision","visqueux","visuel","vital","vitesse","viticole","vitrine","vivace","vivipare","vocation","voguer","voile","voisin","voiture","volaille","volcan","voltiger","volume","vorace","vortex","voter","vouloir","voyage","voyelle","wagon","xénon","yacht","zèbre","zénith","zeste","zoologie"]},function(t,e,i){"use strict";t.exports=["abaco","abbaglio","abbinato","abete","abisso","abolire","abrasivo","abrogato","accadere","accenno","accusato","acetone","achille","acido","acqua","acre","acrilico","acrobata","acuto","adagio","addebito","addome","adeguato","aderire","adipe","adottare","adulare","affabile","affetto","affisso","affranto","aforisma","afoso","africano","agave","agente","agevole","aggancio","agire","agitare","agonismo","agricolo","agrumeto","aguzzo","alabarda","alato","albatro","alberato","albo","albume","alce","alcolico","alettone","alfa","algebra","aliante","alibi","alimento","allagato","allegro","allievo","allodola","allusivo","almeno","alogeno","alpaca","alpestre","altalena","alterno","alticcio","altrove","alunno","alveolo","alzare","amalgama","amanita","amarena","ambito","ambrato","ameba","america","ametista","amico","ammasso","ammenda","ammirare","ammonito","amore","ampio","ampliare","amuleto","anacardo","anagrafe","analista","anarchia","anatra","anca","ancella","ancora","andare","andrea","anello","angelo","angolare","angusto","anima","annegare","annidato","anno","annuncio","anonimo","anticipo","anzi","apatico","apertura","apode","apparire","appetito","appoggio","approdo","appunto","aprile","arabica","arachide","aragosta","araldica","arancio","aratura","arazzo","arbitro","archivio","ardito","arenile","argento","argine","arguto","aria","armonia","arnese","arredato","arringa","arrosto","arsenico","arso","artefice","arzillo","asciutto","ascolto","asepsi","asettico","asfalto","asino","asola","aspirato","aspro","assaggio","asse","assoluto","assurdo","asta","astenuto","astice","astratto","atavico","ateismo","atomico","atono","attesa","attivare","attorno","attrito","attuale","ausilio","austria","autista","autonomo","autunno","avanzato","avere","avvenire","avviso","avvolgere","azione","azoto","azzimo","azzurro","babele","baccano","bacino","baco","badessa","badilata","bagnato","baita","balcone","baldo","balena","ballata","balzano","bambino","bandire","baraonda","barbaro","barca","baritono","barlume","barocco","basilico","basso","batosta","battuto","baule","bava","bavosa","becco","beffa","belgio","belva","benda","benevole","benigno","benzina","bere","berlina","beta","bibita","bici","bidone","bifido","biga","bilancia","bimbo","binocolo","biologo","bipede","bipolare","birbante","birra","biscotto","bisesto","bisnonno","bisonte","bisturi","bizzarro","blando","blatta","bollito","bonifico","bordo","bosco","botanico","bottino","bozzolo","braccio","bradipo","brama","branca","bravura","bretella","brevetto","brezza","briglia","brillante","brindare","broccolo","brodo","bronzina","brullo","bruno","bubbone","buca","budino","buffone","buio","bulbo","buono","burlone","burrasca","bussola","busta","cadetto","caduco","calamaro","calcolo","calesse","calibro","calmo","caloria","cambusa","camerata","camicia","cammino","camola","campale","canapa","candela","cane","canino","canotto","cantina","capace","capello","capitolo","capogiro","cappero","capra","capsula","carapace","carcassa","cardo","carisma","carovana","carretto","cartolina","casaccio","cascata","caserma","caso","cassone","castello","casuale","catasta","catena","catrame","cauto","cavillo","cedibile","cedrata","cefalo","celebre","cellulare","cena","cenone","centesimo","ceramica","cercare","certo","cerume","cervello","cesoia","cespo","ceto","chela","chiaro","chicca","chiedere","chimera","china","chirurgo","chitarra","ciao","ciclismo","cifrare","cigno","cilindro","ciottolo","circa","cirrosi","citrico","cittadino","ciuffo","civetta","civile","classico","clinica","cloro","cocco","codardo","codice","coerente","cognome","collare","colmato","colore","colposo","coltivato","colza","coma","cometa","commando","comodo","computer","comune","conciso","condurre","conferma","congelare","coniuge","connesso","conoscere","consumo","continuo","convegno","coperto","copione","coppia","copricapo","corazza","cordata","coricato","cornice","corolla","corpo","corredo","corsia","cortese","cosmico","costante","cottura","covato","cratere","cravatta","creato","credere","cremoso","crescita","creta","criceto","crinale","crisi","critico","croce","cronaca","crostata","cruciale","crusca","cucire","cuculo","cugino","cullato","cupola","curatore","cursore","curvo","cuscino","custode","dado","daino","dalmata","damerino","daniela","dannoso","danzare","datato","davanti","davvero","debutto","decennio","deciso","declino","decollo","decreto","dedicato","definito","deforme","degno","delegare","delfino","delirio","delta","demenza","denotato","dentro","deposito","derapata","derivare","deroga","descritto","deserto","desiderio","desumere","detersivo","devoto","diametro","dicembre","diedro","difeso","diffuso","digerire","digitale","diluvio","dinamico","dinnanzi","dipinto","diploma","dipolo","diradare","dire","dirotto","dirupo","disagio","discreto","disfare","disgelo","disposto","distanza","disumano","dito","divano","divelto","dividere","divorato","doblone","docente","doganale","dogma","dolce","domato","domenica","dominare","dondolo","dono","dormire","dote","dottore","dovuto","dozzina","drago","druido","dubbio","dubitare","ducale","duna","duomo","duplice","duraturo","ebano","eccesso","ecco","eclissi","economia","edera","edicola","edile","editoria","educare","egemonia","egli","egoismo","egregio","elaborato","elargire","elegante","elencato","eletto","elevare","elfico","elica","elmo","elsa","eluso","emanato","emblema","emesso","emiro","emotivo","emozione","empirico","emulo","endemico","enduro","energia","enfasi","enoteca","entrare","enzima","epatite","epilogo","episodio","epocale","eppure","equatore","erario","erba","erboso","erede","eremita","erigere","ermetico","eroe","erosivo","errante","esagono","esame","esanime","esaudire","esca","esempio","esercito","esibito","esigente","esistere","esito","esofago","esortato","esoso","espanso","espresso","essenza","esso","esteso","estimare","estonia","estroso","esultare","etilico","etnico","etrusco","etto","euclideo","europa","evaso","evidenza","evitato","evoluto","evviva","fabbrica","faccenda","fachiro","falco","famiglia","fanale","fanfara","fango","fantasma","fare","farfalla","farinoso","farmaco","fascia","fastoso","fasullo","faticare","fato","favoloso","febbre","fecola","fede","fegato","felpa","feltro","femmina","fendere","fenomeno","fermento","ferro","fertile","fessura","festivo","fetta","feudo","fiaba","fiducia","fifa","figurato","filo","finanza","finestra","finire","fiore","fiscale","fisico","fiume","flacone","flamenco","flebo","flemma","florido","fluente","fluoro","fobico","focaccia","focoso","foderato","foglio","folata","folclore","folgore","fondente","fonetico","fonia","fontana","forbito","forchetta","foresta","formica","fornaio","foro","fortezza","forzare","fosfato","fosso","fracasso","frana","frassino","fratello","freccetta","frenata","fresco","frigo","frollino","fronde","frugale","frutta","fucilata","fucsia","fuggente","fulmine","fulvo","fumante","fumetto","fumoso","fune","funzione","fuoco","furbo","furgone","furore","fuso","futile","gabbiano","gaffe","galateo","gallina","galoppo","gambero","gamma","garanzia","garbo","garofano","garzone","gasdotto","gasolio","gastrico","gatto","gaudio","gazebo","gazzella","geco","gelatina","gelso","gemello","gemmato","gene","genitore","gennaio","genotipo","gergo","ghepardo","ghiaccio","ghisa","giallo","gilda","ginepro","giocare","gioiello","giorno","giove","girato","girone","gittata","giudizio","giurato","giusto","globulo","glutine","gnomo","gobba","golf","gomito","gommone","gonfio","gonna","governo","gracile","grado","grafico","grammo","grande","grattare","gravoso","grazia","greca","gregge","grifone","grigio","grinza","grotta","gruppo","guadagno","guaio","guanto","guardare","gufo","guidare","ibernato","icona","identico","idillio","idolo","idra","idrico","idrogeno","igiene","ignaro","ignorato","ilare","illeso","illogico","illudere","imballo","imbevuto","imbocco","imbuto","immane","immerso","immolato","impacco","impeto","impiego","importo","impronta","inalare","inarcare","inattivo","incanto","incendio","inchino","incisivo","incluso","incontro","incrocio","incubo","indagine","india","indole","inedito","infatti","infilare","inflitto","ingaggio","ingegno","inglese","ingordo","ingrosso","innesco","inodore","inoltrare","inondato","insano","insetto","insieme","insonnia","insulina","intasato","intero","intonaco","intuito","inumidire","invalido","invece","invito","iperbole","ipnotico","ipotesi","ippica","iride","irlanda","ironico","irrigato","irrorare","isolato","isotopo","isterico","istituto","istrice","italia","iterare","labbro","labirinto","lacca","lacerato","lacrima","lacuna","laddove","lago","lampo","lancetta","lanterna","lardoso","larga","laringe","lastra","latenza","latino","lattuga","lavagna","lavoro","legale","leggero","lembo","lentezza","lenza","leone","lepre","lesivo","lessato","lesto","letterale","leva","levigato","libero","lido","lievito","lilla","limatura","limitare","limpido","lineare","lingua","liquido","lira","lirica","lisca","lite","litigio","livrea","locanda","lode","logica","lombare","londra","longevo","loquace","lorenzo","loto","lotteria","luce","lucidato","lumaca","luminoso","lungo","lupo","luppolo","lusinga","lusso","lutto","macabro","macchina","macero","macinato","madama","magico","maglia","magnete","magro","maiolica","malafede","malgrado","malinteso","malsano","malto","malumore","mana","mancia","mandorla","mangiare","manifesto","mannaro","manovra","mansarda","mantide","manubrio","mappa","maratona","marcire","maretta","marmo","marsupio","maschera","massaia","mastino","materasso","matricola","mattone","maturo","mazurca","meandro","meccanico","mecenate","medesimo","meditare","mega","melassa","melis","melodia","meninge","meno","mensola","mercurio","merenda","merlo","meschino","mese","messere","mestolo","metallo","metodo","mettere","miagolare","mica","micelio","michele","microbo","midollo","miele","migliore","milano","milite","mimosa","minerale","mini","minore","mirino","mirtillo","miscela","missiva","misto","misurare","mitezza","mitigare","mitra","mittente","mnemonico","modello","modifica","modulo","mogano","mogio","mole","molosso","monastero","monco","mondina","monetario","monile","monotono","monsone","montato","monviso","mora","mordere","morsicato","mostro","motivato","motosega","motto","movenza","movimento","mozzo","mucca","mucosa","muffa","mughetto","mugnaio","mulatto","mulinello","multiplo","mummia","munto","muovere","murale","musa","muscolo","musica","mutevole","muto","nababbo","nafta","nanometro","narciso","narice","narrato","nascere","nastrare","naturale","nautica","naviglio","nebulosa","necrosi","negativo","negozio","nemmeno","neofita","neretto","nervo","nessuno","nettuno","neutrale","neve","nevrotico","nicchia","ninfa","nitido","nobile","nocivo","nodo","nome","nomina","nordico","normale","norvegese","nostrano","notare","notizia","notturno","novella","nucleo","nulla","numero","nuovo","nutrire","nuvola","nuziale","oasi","obbedire","obbligo","obelisco","oblio","obolo","obsoleto","occasione","occhio","occidente","occorrere","occultare","ocra","oculato","odierno","odorare","offerta","offrire","offuscato","oggetto","oggi","ognuno","olandese","olfatto","oliato","oliva","ologramma","oltre","omaggio","ombelico","ombra","omega","omissione","ondoso","onere","onice","onnivoro","onorevole","onta","operato","opinione","opposto","oracolo","orafo","ordine","orecchino","orefice","orfano","organico","origine","orizzonte","orma","ormeggio","ornativo","orologio","orrendo","orribile","ortensia","ortica","orzata","orzo","osare","oscurare","osmosi","ospedale","ospite","ossa","ossidare","ostacolo","oste","otite","otre","ottagono","ottimo","ottobre","ovale","ovest","ovino","oviparo","ovocito","ovunque","ovviare","ozio","pacchetto","pace","pacifico","padella","padrone","paese","paga","pagina","palazzina","palesare","pallido","palo","palude","pandoro","pannello","paolo","paonazzo","paprica","parabola","parcella","parere","pargolo","pari","parlato","parola","partire","parvenza","parziale","passivo","pasticca","patacca","patologia","pattume","pavone","peccato","pedalare","pedonale","peggio","peloso","penare","pendice","penisola","pennuto","penombra","pensare","pentola","pepe","pepita","perbene","percorso","perdonato","perforare","pergamena","periodo","permesso","perno","perplesso","persuaso","pertugio","pervaso","pesatore","pesista","peso","pestifero","petalo","pettine","petulante","pezzo","piacere","pianta","piattino","piccino","picozza","piega","pietra","piffero","pigiama","pigolio","pigro","pila","pilifero","pillola","pilota","pimpante","pineta","pinna","pinolo","pioggia","piombo","piramide","piretico","pirite","pirolisi","pitone","pizzico","placebo","planare","plasma","platano","plenario","pochezza","poderoso","podismo","poesia","poggiare","polenta","poligono","pollice","polmonite","polpetta","polso","poltrona","polvere","pomice","pomodoro","ponte","popoloso","porfido","poroso","porpora","porre","portata","posa","positivo","possesso","postulato","potassio","potere","pranzo","prassi","pratica","precluso","predica","prefisso","pregiato","prelievo","premere","prenotare","preparato","presenza","pretesto","prevalso","prima","principe","privato","problema","procura","produrre","profumo","progetto","prolunga","promessa","pronome","proposta","proroga","proteso","prova","prudente","prugna","prurito","psiche","pubblico","pudica","pugilato","pugno","pulce","pulito","pulsante","puntare","pupazzo","pupilla","puro","quadro","qualcosa","quasi","querela","quota","raccolto","raddoppio","radicale","radunato","raffica","ragazzo","ragione","ragno","ramarro","ramingo","ramo","randagio","rantolare","rapato","rapina","rappreso","rasatura","raschiato","rasente","rassegna","rastrello","rata","ravveduto","reale","recepire","recinto","recluta","recondito","recupero","reddito","redimere","regalato","registro","regola","regresso","relazione","remare","remoto","renna","replica","reprimere","reputare","resa","residente","responso","restauro","rete","retina","retorica","rettifica","revocato","riassunto","ribadire","ribelle","ribrezzo","ricarica","ricco","ricevere","riciclato","ricordo","ricreduto","ridicolo","ridurre","rifasare","riflesso","riforma","rifugio","rigare","rigettato","righello","rilassato","rilevato","rimanere","rimbalzo","rimedio","rimorchio","rinascita","rincaro","rinforzo","rinnovo","rinomato","rinsavito","rintocco","rinuncia","rinvenire","riparato","ripetuto","ripieno","riportare","ripresa","ripulire","risata","rischio","riserva","risibile","riso","rispetto","ristoro","risultato","risvolto","ritardo","ritegno","ritmico","ritrovo","riunione","riva","riverso","rivincita","rivolto","rizoma","roba","robotico","robusto","roccia","roco","rodaggio","rodere","roditore","rogito","rollio","romantico","rompere","ronzio","rosolare","rospo","rotante","rotondo","rotula","rovescio","rubizzo","rubrica","ruga","rullino","rumine","rumoroso","ruolo","rupe","russare","rustico","sabato","sabbiare","sabotato","sagoma","salasso","saldatura","salgemma","salivare","salmone","salone","saltare","saluto","salvo","sapere","sapido","saporito","saraceno","sarcasmo","sarto","sassoso","satellite","satira","satollo","saturno","savana","savio","saziato","sbadiglio","sbalzo","sbancato","sbarra","sbattere","sbavare","sbendare","sbirciare","sbloccato","sbocciato","sbrinare","sbruffone","sbuffare","scabroso","scadenza","scala","scambiare","scandalo","scapola","scarso","scatenare","scavato","scelto","scenico","scettro","scheda","schiena","sciarpa","scienza","scindere","scippo","sciroppo","scivolo","sclerare","scodella","scolpito","scomparto","sconforto","scoprire","scorta","scossone","scozzese","scriba","scrollare","scrutinio","scuderia","scultore","scuola","scuro","scusare","sdebitare","sdoganare","seccatura","secondo","sedano","seggiola","segnalato","segregato","seguito","selciato","selettivo","sella","selvaggio","semaforo","sembrare","seme","seminato","sempre","senso","sentire","sepolto","sequenza","serata","serbato","sereno","serio","serpente","serraglio","servire","sestina","setola","settimana","sfacelo","sfaldare","sfamato","sfarzoso","sfaticato","sfera","sfida","sfilato","sfinge","sfocato","sfoderare","sfogo","sfoltire","sforzato","sfratto","sfruttato","sfuggito","sfumare","sfuso","sgabello","sgarbato","sgonfiare","sgorbio","sgrassato","sguardo","sibilo","siccome","sierra","sigla","signore","silenzio","sillaba","simbolo","simpatico","simulato","sinfonia","singolo","sinistro","sino","sintesi","sinusoide","sipario","sisma","sistole","situato","slitta","slogatura","sloveno","smarrito","smemorato","smentito","smeraldo","smilzo","smontare","smottato","smussato","snellire","snervato","snodo","sobbalzo","sobrio","soccorso","sociale","sodale","soffitto","sogno","soldato","solenne","solido","sollazzo","solo","solubile","solvente","somatico","somma","sonda","sonetto","sonnifero","sopire","soppeso","sopra","sorgere","sorpasso","sorriso","sorso","sorteggio","sorvolato","sospiro","sosta","sottile","spada","spalla","spargere","spatola","spavento","spazzola","specie","spedire","spegnere","spelatura","speranza","spessore","spettrale","spezzato","spia","spigoloso","spillato","spinoso","spirale","splendido","sportivo","sposo","spranga","sprecare","spronato","spruzzo","spuntino","squillo","sradicare","srotolato","stabile","stacco","staffa","stagnare","stampato","stantio","starnuto","stasera","statuto","stelo","steppa","sterzo","stiletto","stima","stirpe","stivale","stizzoso","stonato","storico","strappo","stregato","stridulo","strozzare","strutto","stuccare","stufo","stupendo","subentro","succoso","sudore","suggerito","sugo","sultano","suonare","superbo","supporto","surgelato","surrogato","sussurro","sutura","svagare","svedese","sveglio","svelare","svenuto","svezia","sviluppo","svista","svizzera","svolta","svuotare","tabacco","tabulato","tacciare","taciturno","tale","talismano","tampone","tannino","tara","tardivo","targato","tariffa","tarpare","tartaruga","tasto","tattico","taverna","tavolata","tazza","teca","tecnico","telefono","temerario","tempo","temuto","tendone","tenero","tensione","tentacolo","teorema","terme","terrazzo","terzetto","tesi","tesserato","testato","tetro","tettoia","tifare","tigella","timbro","tinto","tipico","tipografo","tiraggio","tiro","titanio","titolo","titubante","tizio","tizzone","toccare","tollerare","tolto","tombola","tomo","tonfo","tonsilla","topazio","topologia","toppa","torba","tornare","torrone","tortora","toscano","tossire","tostatura","totano","trabocco","trachea","trafila","tragedia","tralcio","tramonto","transito","trapano","trarre","trasloco","trattato","trave","treccia","tremolio","trespolo","tributo","tricheco","trifoglio","trillo","trincea","trio","tristezza","triturato","trivella","tromba","trono","troppo","trottola","trovare","truccato","tubatura","tuffato","tulipano","tumulto","tunisia","turbare","turchino","tuta","tutela","ubicato","uccello","uccisore","udire","uditivo","uffa","ufficio","uguale","ulisse","ultimato","umano","umile","umorismo","uncinetto","ungere","ungherese","unicorno","unificato","unisono","unitario","unte","uovo","upupa","uragano","urgenza","urlo","usanza","usato","uscito","usignolo","usuraio","utensile","utilizzo","utopia","vacante","vaccinato","vagabondo","vagliato","valanga","valgo","valico","valletta","valoroso","valutare","valvola","vampata","vangare","vanitoso","vano","vantaggio","vanvera","vapore","varano","varcato","variante","vasca","vedetta","vedova","veduto","vegetale","veicolo","velcro","velina","velluto","veloce","venato","vendemmia","vento","verace","verbale","vergogna","verifica","vero","verruca","verticale","vescica","vessillo","vestale","veterano","vetrina","vetusto","viandante","vibrante","vicenda","vichingo","vicinanza","vidimare","vigilia","vigneto","vigore","vile","villano","vimini","vincitore","viola","vipera","virgola","virologo","virulento","viscoso","visione","vispo","vissuto","visura","vita","vitello","vittima","vivanda","vivido","viziare","voce","voga","volatile","volere","volpe","voragine","vulcano","zampogna","zanna","zappato","zattera","zavorra","zefiro","zelante","zelo","zenzero","zerbino","zibetto","zinco","zircone","zitto","zolla","zotico","zucchero","zufolo","zulu","zuppa"]},function(t,e,i){"use strict";t.exports=["あいこくしん","あいさつ","あいだ","あおぞら","あかちゃん","あきる","あけがた","あける","あこがれる","あさい","あさひ","あしあと","あじわう","あずかる","あずき","あそぶ","あたえる","あたためる","あたりまえ","あたる","あつい","あつかう","あっしゅく","あつまり","あつめる","あてな","あてはまる","あひる","あぶら","あぶる","あふれる","あまい","あまど","あまやかす","あまり","あみもの","あめりか","あやまる","あゆむ","あらいぐま","あらし","あらすじ","あらためる","あらゆる","あらわす","ありがとう","あわせる","あわてる","あんい","あんがい","あんこ","あんぜん","あんてい","あんない","あんまり","いいだす","いおん","いがい","いがく","いきおい","いきなり","いきもの","いきる","いくじ","いくぶん","いけばな","いけん","いこう","いこく","いこつ","いさましい","いさん","いしき","いじゅう","いじょう","いじわる","いずみ","いずれ","いせい","いせえび","いせかい","いせき","いぜん","いそうろう","いそがしい","いだい","いだく","いたずら","いたみ","いたりあ","いちおう","いちじ","いちど","いちば","いちぶ","いちりゅう","いつか","いっしゅん","いっせい","いっそう","いったん","いっち","いってい","いっぽう","いてざ","いてん","いどう","いとこ","いない","いなか","いねむり","いのち","いのる","いはつ","いばる","いはん","いびき","いひん","いふく","いへん","いほう","いみん","いもうと","いもたれ","いもり","いやがる","いやす","いよかん","いよく","いらい","いらすと","いりぐち","いりょう","いれい","いれもの","いれる","いろえんぴつ","いわい","いわう","いわかん","いわば","いわゆる","いんげんまめ","いんさつ","いんしょう","いんよう","うえき","うえる","うおざ","うがい","うかぶ","うかべる","うきわ","うくらいな","うくれれ","うけたまわる","うけつけ","うけとる","うけもつ","うける","うごかす","うごく","うこん","うさぎ","うしなう","うしろがみ","うすい","うすぎ","うすぐらい","うすめる","うせつ","うちあわせ","うちがわ","うちき","うちゅう","うっかり","うつくしい","うったえる","うつる","うどん","うなぎ","うなじ","うなずく","うなる","うねる","うのう","うぶげ","うぶごえ","うまれる","うめる","うもう","うやまう","うよく","うらがえす","うらぐち","うらない","うりあげ","うりきれ","うるさい","うれしい","うれゆき","うれる","うろこ","うわき","うわさ","うんこう","うんちん","うんてん","うんどう","えいえん","えいが","えいきょう","えいご","えいせい","えいぶん","えいよう","えいわ","えおり","えがお","えがく","えきたい","えくせる","えしゃく","えすて","えつらん","えのぐ","えほうまき","えほん","えまき","えもじ","えもの","えらい","えらぶ","えりあ","えんえん","えんかい","えんぎ","えんげき","えんしゅう","えんぜつ","えんそく","えんちょう","えんとつ","おいかける","おいこす","おいしい","おいつく","おうえん","おうさま","おうじ","おうせつ","おうたい","おうふく","おうべい","おうよう","おえる","おおい","おおう","おおどおり","おおや","おおよそ","おかえり","おかず","おがむ","おかわり","おぎなう","おきる","おくさま","おくじょう","おくりがな","おくる","おくれる","おこす","おこなう","おこる","おさえる","おさない","おさめる","おしいれ","おしえる","おじぎ","おじさん","おしゃれ","おそらく","おそわる","おたがい","おたく","おだやか","おちつく","おっと","おつり","おでかけ","おとしもの","おとなしい","おどり","おどろかす","おばさん","おまいり","おめでとう","おもいで","おもう","おもたい","おもちゃ","おやつ","おやゆび","およぼす","おらんだ","おろす","おんがく","おんけい","おんしゃ","おんせん","おんだん","おんちゅう","おんどけい","かあつ","かいが","がいき","がいけん","がいこう","かいさつ","かいしゃ","かいすいよく","かいぜん","かいぞうど","かいつう","かいてん","かいとう","かいふく","がいへき","かいほう","かいよう","がいらい","かいわ","かえる","かおり","かかえる","かがく","かがし","かがみ","かくご","かくとく","かざる","がぞう","かたい","かたち","がちょう","がっきゅう","がっこう","がっさん","がっしょう","かなざわし","かのう","がはく","かぶか","かほう","かほご","かまう","かまぼこ","かめれおん","かゆい","かようび","からい","かるい","かろう","かわく","かわら","がんか","かんけい","かんこう","かんしゃ","かんそう","かんたん","かんち","がんばる","きあい","きあつ","きいろ","ぎいん","きうい","きうん","きえる","きおう","きおく","きおち","きおん","きかい","きかく","きかんしゃ","ききて","きくばり","きくらげ","きけんせい","きこう","きこえる","きこく","きさい","きさく","きさま","きさらぎ","ぎじかがく","ぎしき","ぎじたいけん","ぎじにってい","ぎじゅつしゃ","きすう","きせい","きせき","きせつ","きそう","きぞく","きぞん","きたえる","きちょう","きつえん","ぎっちり","きつつき","きつね","きてい","きどう","きどく","きない","きなが","きなこ","きぬごし","きねん","きのう","きのした","きはく","きびしい","きひん","きふく","きぶん","きぼう","きほん","きまる","きみつ","きむずかしい","きめる","きもだめし","きもち","きもの","きゃく","きやく","ぎゅうにく","きよう","きょうりゅう","きらい","きらく","きりん","きれい","きれつ","きろく","ぎろん","きわめる","ぎんいろ","きんかくじ","きんじょ","きんようび","ぐあい","くいず","くうかん","くうき","くうぐん","くうこう","ぐうせい","くうそう","ぐうたら","くうふく","くうぼ","くかん","くきょう","くげん","ぐこう","くさい","くさき","くさばな","くさる","くしゃみ","くしょう","くすのき","くすりゆび","くせげ","くせん","ぐたいてき","くださる","くたびれる","くちこみ","くちさき","くつした","ぐっすり","くつろぐ","くとうてん","くどく","くなん","くねくね","くのう","くふう","くみあわせ","くみたてる","くめる","くやくしょ","くらす","くらべる","くるま","くれる","くろう","くわしい","ぐんかん","ぐんしょく","ぐんたい","ぐんて","けあな","けいかく","けいけん","けいこ","けいさつ","げいじゅつ","けいたい","げいのうじん","けいれき","けいろ","けおとす","けおりもの","げきか","げきげん","げきだん","げきちん","げきとつ","げきは","げきやく","げこう","げこくじょう","げざい","けさき","げざん","けしき","けしごむ","けしょう","げすと","けたば","けちゃっぷ","けちらす","けつあつ","けつい","けつえき","けっこん","けつじょ","けっせき","けってい","けつまつ","げつようび","げつれい","けつろん","げどく","けとばす","けとる","けなげ","けなす","けなみ","けぬき","げねつ","けねん","けはい","げひん","けぶかい","げぼく","けまり","けみかる","けむし","けむり","けもの","けらい","けろけろ","けわしい","けんい","けんえつ","けんお","けんか","げんき","けんげん","けんこう","けんさく","けんしゅう","けんすう","げんそう","けんちく","けんてい","けんとう","けんない","けんにん","げんぶつ","けんま","けんみん","けんめい","けんらん","けんり","こあくま","こいぬ","こいびと","ごうい","こうえん","こうおん","こうかん","ごうきゅう","ごうけい","こうこう","こうさい","こうじ","こうすい","ごうせい","こうそく","こうたい","こうちゃ","こうつう","こうてい","こうどう","こうない","こうはい","ごうほう","ごうまん","こうもく","こうりつ","こえる","こおり","ごかい","ごがつ","ごかん","こくご","こくさい","こくとう","こくない","こくはく","こぐま","こけい","こける","ここのか","こころ","こさめ","こしつ","こすう","こせい","こせき","こぜん","こそだて","こたい","こたえる","こたつ","こちょう","こっか","こつこつ","こつばん","こつぶ","こてい","こてん","ことがら","ことし","ことば","ことり","こなごな","こねこね","このまま","このみ","このよ","ごはん","こひつじ","こふう","こふん","こぼれる","ごまあぶら","こまかい","ごますり","こまつな","こまる","こむぎこ","こもじ","こもち","こもの","こもん","こやく","こやま","こゆう","こゆび","こよい","こよう","こりる","これくしょん","ころっけ","こわもて","こわれる","こんいん","こんかい","こんき","こんしゅう","こんすい","こんだて","こんとん","こんなん","こんびに","こんぽん","こんまけ","こんや","こんれい","こんわく","ざいえき","さいかい","さいきん","ざいげん","ざいこ","さいしょ","さいせい","ざいたく","ざいちゅう","さいてき","ざいりょう","さうな","さかいし","さがす","さかな","さかみち","さがる","さぎょう","さくし","さくひん","さくら","さこく","さこつ","さずかる","ざせき","さたん","さつえい","ざつおん","ざっか","ざつがく","さっきょく","ざっし","さつじん","ざっそう","さつたば","さつまいも","さてい","さといも","さとう","さとおや","さとし","さとる","さのう","さばく","さびしい","さべつ","さほう","さほど","さます","さみしい","さみだれ","さむけ","さめる","さやえんどう","さゆう","さよう","さよく","さらだ","ざるそば","さわやか","さわる","さんいん","さんか","さんきゃく","さんこう","さんさい","ざんしょ","さんすう","さんせい","さんそ","さんち","さんま","さんみ","さんらん","しあい","しあげ","しあさって","しあわせ","しいく","しいん","しうち","しえい","しおけ","しかい","しかく","じかん","しごと","しすう","じだい","したうけ","したぎ","したて","したみ","しちょう","しちりん","しっかり","しつじ","しつもん","してい","してき","してつ","じてん","じどう","しなぎれ","しなもの","しなん","しねま","しねん","しのぐ","しのぶ","しはい","しばかり","しはつ","しはらい","しはん","しひょう","しふく","じぶん","しへい","しほう","しほん","しまう","しまる","しみん","しむける","じむしょ","しめい","しめる","しもん","しゃいん","しゃうん","しゃおん","じゃがいも","しやくしょ","しゃくほう","しゃけん","しゃこ","しゃざい","しゃしん","しゃせん","しゃそう","しゃたい","しゃちょう","しゃっきん","じゃま","しゃりん","しゃれい","じゆう","じゅうしょ","しゅくはく","じゅしん","しゅっせき","しゅみ","しゅらば","じゅんばん","しょうかい","しょくたく","しょっけん","しょどう","しょもつ","しらせる","しらべる","しんか","しんこう","じんじゃ","しんせいじ","しんちく","しんりん","すあげ","すあし","すあな","ずあん","すいえい","すいか","すいとう","ずいぶん","すいようび","すうがく","すうじつ","すうせん","すおどり","すきま","すくう","すくない","すける","すごい","すこし","ずさん","すずしい","すすむ","すすめる","すっかり","ずっしり","ずっと","すてき","すてる","すねる","すのこ","すはだ","すばらしい","ずひょう","ずぶぬれ","すぶり","すふれ","すべて","すべる","ずほう","すぼん","すまい","すめし","すもう","すやき","すらすら","するめ","すれちがう","すろっと","すわる","すんぜん","すんぽう","せあぶら","せいかつ","せいげん","せいじ","せいよう","せおう","せかいかん","せきにん","せきむ","せきゆ","せきらんうん","せけん","せこう","せすじ","せたい","せたけ","せっかく","せっきゃく","ぜっく","せっけん","せっこつ","せっさたくま","せつぞく","せつだん","せつでん","せっぱん","せつび","せつぶん","せつめい","せつりつ","せなか","せのび","せはば","せびろ","せぼね","せまい","せまる","せめる","せもたれ","せりふ","ぜんあく","せんい","せんえい","せんか","せんきょ","せんく","せんげん","ぜんご","せんさい","せんしゅ","せんすい","せんせい","せんぞ","せんたく","せんちょう","せんてい","せんとう","せんぬき","せんねん","せんぱい","ぜんぶ","ぜんぽう","せんむ","せんめんじょ","せんもん","せんやく","せんゆう","せんよう","ぜんら","ぜんりゃく","せんれい","せんろ","そあく","そいとげる","そいね","そうがんきょう","そうき","そうご","そうしん","そうだん","そうなん","そうび","そうめん","そうり","そえもの","そえん","そがい","そげき","そこう","そこそこ","そざい","そしな","そせい","そせん","そそぐ","そだてる","そつう","そつえん","そっかん","そつぎょう","そっけつ","そっこう","そっせん","そっと","そとがわ","そとづら","そなえる","そなた","そふぼ","そぼく","そぼろ","そまつ","そまる","そむく","そむりえ","そめる","そもそも","そよかぜ","そらまめ","そろう","そんかい","そんけい","そんざい","そんしつ","そんぞく","そんちょう","ぞんび","ぞんぶん","そんみん","たあい","たいいん","たいうん","たいえき","たいおう","だいがく","たいき","たいぐう","たいけん","たいこ","たいざい","だいじょうぶ","だいすき","たいせつ","たいそう","だいたい","たいちょう","たいてい","だいどころ","たいない","たいねつ","たいのう","たいはん","だいひょう","たいふう","たいへん","たいほ","たいまつばな","たいみんぐ","たいむ","たいめん","たいやき","たいよう","たいら","たいりょく","たいる","たいわん","たうえ","たえる","たおす","たおる","たおれる","たかい","たかね","たきび","たくさん","たこく","たこやき","たさい","たしざん","だじゃれ","たすける","たずさわる","たそがれ","たたかう","たたく","ただしい","たたみ","たちばな","だっかい","だっきゃく","だっこ","だっしゅつ","だったい","たてる","たとえる","たなばた","たにん","たぬき","たのしみ","たはつ","たぶん","たべる","たぼう","たまご","たまる","だむる","ためいき","ためす","ためる","たもつ","たやすい","たよる","たらす","たりきほんがん","たりょう","たりる","たると","たれる","たれんと","たろっと","たわむれる","だんあつ","たんい","たんおん","たんか","たんき","たんけん","たんご","たんさん","たんじょうび","だんせい","たんそく","たんたい","だんち","たんてい","たんとう","だんな","たんにん","だんねつ","たんのう","たんぴん","だんぼう","たんまつ","たんめい","だんれつ","だんろ","だんわ","ちあい","ちあん","ちいき","ちいさい","ちえん","ちかい","ちから","ちきゅう","ちきん","ちけいず","ちけん","ちこく","ちさい","ちしき","ちしりょう","ちせい","ちそう","ちたい","ちたん","ちちおや","ちつじょ","ちてき","ちてん","ちぬき","ちぬり","ちのう","ちひょう","ちへいせん","ちほう","ちまた","ちみつ","ちみどろ","ちめいど","ちゃんこなべ","ちゅうい","ちゆりょく","ちょうし","ちょさくけん","ちらし","ちらみ","ちりがみ","ちりょう","ちるど","ちわわ","ちんたい","ちんもく","ついか","ついたち","つうか","つうじょう","つうはん","つうわ","つかう","つかれる","つくね","つくる","つけね","つける","つごう","つたえる","つづく","つつじ","つつむ","つとめる","つながる","つなみ","つねづね","つのる","つぶす","つまらない","つまる","つみき","つめたい","つもり","つもる","つよい","つるぼ","つるみく","つわもの","つわり","てあし","てあて","てあみ","ていおん","ていか","ていき","ていけい","ていこく","ていさつ","ていし","ていせい","ていたい","ていど","ていねい","ていひょう","ていへん","ていぼう","てうち","ておくれ","てきとう","てくび","でこぼこ","てさぎょう","てさげ","てすり","てそう","てちがい","てちょう","てつがく","てつづき","でっぱ","てつぼう","てつや","でぬかえ","てぬき","てぬぐい","てのひら","てはい","てぶくろ","てふだ","てほどき","てほん","てまえ","てまきずし","てみじか","てみやげ","てらす","てれび","てわけ","てわたし","でんあつ","てんいん","てんかい","てんき","てんぐ","てんけん","てんごく","てんさい","てんし","てんすう","でんち","てんてき","てんとう","てんない","てんぷら","てんぼうだい","てんめつ","てんらんかい","でんりょく","でんわ","どあい","といれ","どうかん","とうきゅう","どうぐ","とうし","とうむぎ","とおい","とおか","とおく","とおす","とおる","とかい","とかす","ときおり","ときどき","とくい","とくしゅう","とくてん","とくに","とくべつ","とけい","とける","とこや","とさか","としょかん","とそう","とたん","とちゅう","とっきゅう","とっくん","とつぜん","とつにゅう","とどける","ととのえる","とない","となえる","となり","とのさま","とばす","どぶがわ","とほう","とまる","とめる","ともだち","ともる","どようび","とらえる","とんかつ","どんぶり","ないかく","ないこう","ないしょ","ないす","ないせん","ないそう","なおす","ながい","なくす","なげる","なこうど","なさけ","なたでここ","なっとう","なつやすみ","ななおし","なにごと","なにもの","なにわ","なのか","なふだ","なまいき","なまえ","なまみ","なみだ","なめらか","なめる","なやむ","ならう","ならび","ならぶ","なれる","なわとび","なわばり","にあう","にいがた","にうけ","におい","にかい","にがて","にきび","にくしみ","にくまん","にげる","にさんかたんそ","にしき","にせもの","にちじょう","にちようび","にっか","にっき","にっけい","にっこう","にっさん","にっしょく","にっすう","にっせき","にってい","になう","にほん","にまめ","にもつ","にやり","にゅういん","にりんしゃ","にわとり","にんい","にんか","にんき","にんげん","にんしき","にんずう","にんそう","にんたい","にんち","にんてい","にんにく","にんぷ","にんまり","にんむ","にんめい","にんよう","ぬいくぎ","ぬかす","ぬぐいとる","ぬぐう","ぬくもり","ぬすむ","ぬまえび","ぬめり","ぬらす","ぬんちゃく","ねあげ","ねいき","ねいる","ねいろ","ねぐせ","ねくたい","ねくら","ねこぜ","ねこむ","ねさげ","ねすごす","ねそべる","ねだん","ねつい","ねっしん","ねつぞう","ねったいぎょ","ねぶそく","ねふだ","ねぼう","ねほりはほり","ねまき","ねまわし","ねみみ","ねむい","ねむたい","ねもと","ねらう","ねわざ","ねんいり","ねんおし","ねんかん","ねんきん","ねんぐ","ねんざ","ねんし","ねんちゃく","ねんど","ねんぴ","ねんぶつ","ねんまつ","ねんりょう","ねんれい","のいず","のおづま","のがす","のきなみ","のこぎり","のこす","のこる","のせる","のぞく","のぞむ","のたまう","のちほど","のっく","のばす","のはら","のべる","のぼる","のみもの","のやま","のらいぬ","のらねこ","のりもの","のりゆき","のれん","のんき","ばあい","はあく","ばあさん","ばいか","ばいく","はいけん","はいご","はいしん","はいすい","はいせん","はいそう","はいち","ばいばい","はいれつ","はえる","はおる","はかい","ばかり","はかる","はくしゅ","はけん","はこぶ","はさみ","はさん","はしご","ばしょ","はしる","はせる","ぱそこん","はそん","はたん","はちみつ","はつおん","はっかく","はづき","はっきり","はっくつ","はっけん","はっこう","はっさん","はっしん","はったつ","はっちゅう","はってん","はっぴょう","はっぽう","はなす","はなび","はにかむ","はぶらし","はみがき","はむかう","はめつ","はやい","はやし","はらう","はろうぃん","はわい","はんい","はんえい","はんおん","はんかく","はんきょう","ばんぐみ","はんこ","はんしゃ","はんすう","はんだん","ぱんち","ぱんつ","はんてい","はんとし","はんのう","はんぱ","はんぶん","はんぺん","はんぼうき","はんめい","はんらん","はんろん","ひいき","ひうん","ひえる","ひかく","ひかり","ひかる","ひかん","ひくい","ひけつ","ひこうき","ひこく","ひさい","ひさしぶり","ひさん","びじゅつかん","ひしょ","ひそか","ひそむ","ひたむき","ひだり","ひたる","ひつぎ","ひっこし","ひっし","ひつじゅひん","ひっす","ひつぜん","ぴったり","ぴっちり","ひつよう","ひてい","ひとごみ","ひなまつり","ひなん","ひねる","ひはん","ひびく","ひひょう","ひほう","ひまわり","ひまん","ひみつ","ひめい","ひめじし","ひやけ","ひやす","ひよう","びょうき","ひらがな","ひらく","ひりつ","ひりょう","ひるま","ひるやすみ","ひれい","ひろい","ひろう","ひろき","ひろゆき","ひんかく","ひんけつ","ひんこん","ひんしゅ","ひんそう","ぴんち","ひんぱん","びんぼう","ふあん","ふいうち","ふうけい","ふうせん","ぷうたろう","ふうとう","ふうふ","ふえる","ふおん","ふかい","ふきん","ふくざつ","ふくぶくろ","ふこう","ふさい","ふしぎ","ふじみ","ふすま","ふせい","ふせぐ","ふそく","ぶたにく","ふたん","ふちょう","ふつう","ふつか","ふっかつ","ふっき","ふっこく","ぶどう","ふとる","ふとん","ふのう","ふはい","ふひょう","ふへん","ふまん","ふみん","ふめつ","ふめん","ふよう","ふりこ","ふりる","ふるい","ふんいき","ぶんがく","ぶんぐ","ふんしつ","ぶんせき","ふんそう","ぶんぽう","へいあん","へいおん","へいがい","へいき","へいげん","へいこう","へいさ","へいしゃ","へいせつ","へいそ","へいたく","へいてん","へいねつ","へいわ","へきが","へこむ","べにいろ","べにしょうが","へらす","へんかん","べんきょう","べんごし","へんさい","へんたい","べんり","ほあん","ほいく","ぼうぎょ","ほうこく","ほうそう","ほうほう","ほうもん","ほうりつ","ほえる","ほおん","ほかん","ほきょう","ぼきん","ほくろ","ほけつ","ほけん","ほこう","ほこる","ほしい","ほしつ","ほしゅ","ほしょう","ほせい","ほそい","ほそく","ほたて","ほたる","ぽちぶくろ","ほっきょく","ほっさ","ほったん","ほとんど","ほめる","ほんい","ほんき","ほんけ","ほんしつ","ほんやく","まいにち","まかい","まかせる","まがる","まける","まこと","まさつ","まじめ","ますく","まぜる","まつり","まとめ","まなぶ","まぬけ","まねく","まほう","まもる","まゆげ","まよう","まろやか","まわす","まわり","まわる","まんが","まんきつ","まんぞく","まんなか","みいら","みうち","みえる","みがく","みかた","みかん","みけん","みこん","みじかい","みすい","みすえる","みせる","みっか","みつかる","みつける","みてい","みとめる","みなと","みなみかさい","みねらる","みのう","みのがす","みほん","みもと","みやげ","みらい","みりょく","みわく","みんか","みんぞく","むいか","むえき","むえん","むかい","むかう","むかえ","むかし","むぎちゃ","むける","むげん","むさぼる","むしあつい","むしば","むじゅん","むしろ","むすう","むすこ","むすぶ","むすめ","むせる","むせん","むちゅう","むなしい","むのう","むやみ","むよう","むらさき","むりょう","むろん","めいあん","めいうん","めいえん","めいかく","めいきょく","めいさい","めいし","めいそう","めいぶつ","めいれい","めいわく","めぐまれる","めざす","めした","めずらしい","めだつ","めまい","めやす","めんきょ","めんせき","めんどう","もうしあげる","もうどうけん","もえる","もくし","もくてき","もくようび","もちろん","もどる","もらう","もんく","もんだい","やおや","やける","やさい","やさしい","やすい","やすたろう","やすみ","やせる","やそう","やたい","やちん","やっと","やっぱり","やぶる","やめる","ややこしい","やよい","やわらかい","ゆうき","ゆうびんきょく","ゆうべ","ゆうめい","ゆけつ","ゆしゅつ","ゆせん","ゆそう","ゆたか","ゆちゃく","ゆでる","ゆにゅう","ゆびわ","ゆらい","ゆれる","ようい","ようか","ようきゅう","ようじ","ようす","ようちえん","よかぜ","よかん","よきん","よくせい","よくぼう","よけい","よごれる","よさん","よしゅう","よそう","よそく","よっか","よてい","よどがわく","よねつ","よやく","よゆう","よろこぶ","よろしい","らいう","らくがき","らくご","らくさつ","らくだ","らしんばん","らせん","らぞく","らたい","らっか","られつ","りえき","りかい","りきさく","りきせつ","りくぐん","りくつ","りけん","りこう","りせい","りそう","りそく","りてん","りねん","りゆう","りゅうがく","りよう","りょうり","りょかん","りょくちゃ","りょこう","りりく","りれき","りろん","りんご","るいけい","るいさい","るいじ","るいせき","るすばん","るりがわら","れいかん","れいぎ","れいせい","れいぞうこ","れいとう","れいぼう","れきし","れきだい","れんあい","れんけい","れんこん","れんさい","れんしゅう","れんぞく","れんらく","ろうか","ろうご","ろうじん","ろうそく","ろくが","ろこつ","ろじうら","ろしゅつ","ろせん","ろてん","ろめん","ろれつ","ろんぎ","ろんぱ","ろんぶん","ろんり","わかす","わかめ","わかやま","わかれる","わしつ","わじまし","わすれもの","わらう","われる"]},function(t,e,i){"use strict";t.exports=["ábaco","abdomen","abeja","abierto","abogado","abono","aborto","abrazo","abrir","abuelo","abuso","acabar","academia","acceso","acción","aceite","acelga","acento","aceptar","ácido","aclarar","acné","acoger","acoso","activo","acto","actriz","actuar","acudir","acuerdo","acusar","adicto","admitir","adoptar","adorno","aduana","adulto","aéreo","afectar","afición","afinar","afirmar","ágil","agitar","agonía","agosto","agotar","agregar","agrio","agua","agudo","águila","aguja","ahogo","ahorro","aire","aislar","ajedrez","ajeno","ajuste","alacrán","alambre","alarma","alba","álbum","alcalde","aldea","alegre","alejar","alerta","aleta","alfiler","alga","algodón","aliado","aliento","alivio","alma","almeja","almíbar","altar","alteza","altivo","alto","altura","alumno","alzar","amable","amante","amapola","amargo","amasar","ámbar","ámbito","ameno","amigo","amistad","amor","amparo","amplio","ancho","anciano","ancla","andar","andén","anemia","ángulo","anillo","ánimo","anís","anotar","antena","antiguo","antojo","anual","anular","anuncio","añadir","añejo","año","apagar","aparato","apetito","apio","aplicar","apodo","aporte","apoyo","aprender","aprobar","apuesta","apuro","arado","araña","arar","árbitro","árbol","arbusto","archivo","arco","arder","ardilla","arduo","área","árido","aries","armonía","arnés","aroma","arpa","arpón","arreglo","arroz","arruga","arte","artista","asa","asado","asalto","ascenso","asegurar","aseo","asesor","asiento","asilo","asistir","asno","asombro","áspero","astilla","astro","astuto","asumir","asunto","atajo","ataque","atar","atento","ateo","ático","atleta","átomo","atraer","atroz","atún","audaz","audio","auge","aula","aumento","ausente","autor","aval","avance","avaro","ave","avellana","avena","avestruz","avión","aviso","ayer","ayuda","ayuno","azafrán","azar","azote","azúcar","azufre","azul","baba","babor","bache","bahía","baile","bajar","balanza","balcón","balde","bambú","banco","banda","baño","barba","barco","barniz","barro","báscula","bastón","basura","batalla","batería","batir","batuta","baúl","bazar","bebé","bebida","bello","besar","beso","bestia","bicho","bien","bingo","blanco","bloque","blusa","boa","bobina","bobo","boca","bocina","boda","bodega","boina","bola","bolero","bolsa","bomba","bondad","bonito","bono","bonsái","borde","borrar","bosque","bote","botín","bóveda","bozal","bravo","brazo","brecha","breve","brillo","brinco","brisa","broca","broma","bronce","brote","bruja","brusco","bruto","buceo","bucle","bueno","buey","bufanda","bufón","búho","buitre","bulto","burbuja","burla","burro","buscar","butaca","buzón","caballo","cabeza","cabina","cabra","cacao","cadáver","cadena","caer","café","caída","caimán","caja","cajón","cal","calamar","calcio","caldo","calidad","calle","calma","calor","calvo","cama","cambio","camello","camino","campo","cáncer","candil","canela","canguro","canica","canto","caña","cañón","caoba","caos","capaz","capitán","capote","captar","capucha","cara","carbón","cárcel","careta","carga","cariño","carne","carpeta","carro","carta","casa","casco","casero","caspa","castor","catorce","catre","caudal","causa","cazo","cebolla","ceder","cedro","celda","célebre","celoso","célula","cemento","ceniza","centro","cerca","cerdo","cereza","cero","cerrar","certeza","césped","cetro","chacal","chaleco","champú","chancla","chapa","charla","chico","chiste","chivo","choque","choza","chuleta","chupar","ciclón","ciego","cielo","cien","cierto","cifra","cigarro","cima","cinco","cine","cinta","ciprés","circo","ciruela","cisne","cita","ciudad","clamor","clan","claro","clase","clave","cliente","clima","clínica","cobre","cocción","cochino","cocina","coco","código","codo","cofre","coger","cohete","cojín","cojo","cola","colcha","colegio","colgar","colina","collar","colmo","columna","combate","comer","comida","cómodo","compra","conde","conejo","conga","conocer","consejo","contar","copa","copia","corazón","corbata","corcho","cordón","corona","correr","coser","cosmos","costa","cráneo","cráter","crear","crecer","creído","crema","cría","crimen","cripta","crisis","cromo","crónica","croqueta","crudo","cruz","cuadro","cuarto","cuatro","cubo","cubrir","cuchara","cuello","cuento","cuerda","cuesta","cueva","cuidar","culebra","culpa","culto","cumbre","cumplir","cuna","cuneta","cuota","cupón","cúpula","curar","curioso","curso","curva","cutis","dama","danza","dar","dardo","dátil","deber","débil","década","decir","dedo","defensa","definir","dejar","delfín","delgado","delito","demora","denso","dental","deporte","derecho","derrota","desayuno","deseo","desfile","desnudo","destino","desvío","detalle","detener","deuda","día","diablo","diadema","diamante","diana","diario","dibujo","dictar","diente","dieta","diez","difícil","digno","dilema","diluir","dinero","directo","dirigir","disco","diseño","disfraz","diva","divino","doble","doce","dolor","domingo","don","donar","dorado","dormir","dorso","dos","dosis","dragón","droga","ducha","duda","duelo","dueño","dulce","dúo","duque","durar","dureza","duro","ébano","ebrio","echar","eco","ecuador","edad","edición","edificio","editor","educar","efecto","eficaz","eje","ejemplo","elefante","elegir","elemento","elevar","elipse","élite","elixir","elogio","eludir","embudo","emitir","emoción","empate","empeño","empleo","empresa","enano","encargo","enchufe","encía","enemigo","enero","enfado","enfermo","engaño","enigma","enlace","enorme","enredo","ensayo","enseñar","entero","entrar","envase","envío","época","equipo","erizo","escala","escena","escolar","escribir","escudo","esencia","esfera","esfuerzo","espada","espejo","espía","esposa","espuma","esquí","estar","este","estilo","estufa","etapa","eterno","ética","etnia","evadir","evaluar","evento","evitar","exacto","examen","exceso","excusa","exento","exigir","exilio","existir","éxito","experto","explicar","exponer","extremo","fábrica","fábula","fachada","fácil","factor","faena","faja","falda","fallo","falso","faltar","fama","familia","famoso","faraón","farmacia","farol","farsa","fase","fatiga","fauna","favor","fax","febrero","fecha","feliz","feo","feria","feroz","fértil","fervor","festín","fiable","fianza","fiar","fibra","ficción","ficha","fideo","fiebre","fiel","fiera","fiesta","figura","fijar","fijo","fila","filete","filial","filtro","fin","finca","fingir","finito","firma","flaco","flauta","flecha","flor","flota","fluir","flujo","flúor","fobia","foca","fogata","fogón","folio","folleto","fondo","forma","forro","fortuna","forzar","fosa","foto","fracaso","frágil","franja","frase","fraude","freír","freno","fresa","frío","frito","fruta","fuego","fuente","fuerza","fuga","fumar","función","funda","furgón","furia","fusil","fútbol","futuro","gacela","gafas","gaita","gajo","gala","galería","gallo","gamba","ganar","gancho","ganga","ganso","garaje","garza","gasolina","gastar","gato","gavilán","gemelo","gemir","gen","género","genio","gente","geranio","gerente","germen","gesto","gigante","gimnasio","girar","giro","glaciar","globo","gloria","gol","golfo","goloso","golpe","goma","gordo","gorila","gorra","gota","goteo","gozar","grada","gráfico","grano","grasa","gratis","grave","grieta","grillo","gripe","gris","grito","grosor","grúa","grueso","grumo","grupo","guante","guapo","guardia","guerra","guía","guiño","guion","guiso","guitarra","gusano","gustar","haber","hábil","hablar","hacer","hacha","hada","hallar","hamaca","harina","haz","hazaña","hebilla","hebra","hecho","helado","helio","hembra","herir","hermano","héroe","hervir","hielo","hierro","hígado","higiene","hijo","himno","historia","hocico","hogar","hoguera","hoja","hombre","hongo","honor","honra","hora","hormiga","horno","hostil","hoyo","hueco","huelga","huerta","hueso","huevo","huida","huir","humano","húmedo","humilde","humo","hundir","huracán","hurto","icono","ideal","idioma","ídolo","iglesia","iglú","igual","ilegal","ilusión","imagen","imán","imitar","impar","imperio","imponer","impulso","incapaz","índice","inerte","infiel","informe","ingenio","inicio","inmenso","inmune","innato","insecto","instante","interés","íntimo","intuir","inútil","invierno","ira","iris","ironía","isla","islote","jabalí","jabón","jamón","jarabe","jardín","jarra","jaula","jazmín","jefe","jeringa","jinete","jornada","joroba","joven","joya","juerga","jueves","juez","jugador","jugo","juguete","juicio","junco","jungla","junio","juntar","júpiter","jurar","justo","juvenil","juzgar","kilo","koala","labio","lacio","lacra","lado","ladrón","lagarto","lágrima","laguna","laico","lamer","lámina","lámpara","lana","lancha","langosta","lanza","lápiz","largo","larva","lástima","lata","látex","latir","laurel","lavar","lazo","leal","lección","leche","lector","leer","legión","legumbre","lejano","lengua","lento","leña","león","leopardo","lesión","letal","letra","leve","leyenda","libertad","libro","licor","líder","lidiar","lienzo","liga","ligero","lima","límite","limón","limpio","lince","lindo","línea","lingote","lino","linterna","líquido","liso","lista","litera","litio","litro","llaga","llama","llanto","llave","llegar","llenar","llevar","llorar","llover","lluvia","lobo","loción","loco","locura","lógica","logro","lombriz","lomo","lonja","lote","lucha","lucir","lugar","lujo","luna","lunes","lupa","lustro","luto","luz","maceta","macho","madera","madre","maduro","maestro","mafia","magia","mago","maíz","maldad","maleta","malla","malo","mamá","mambo","mamut","manco","mando","manejar","manga","maniquí","manjar","mano","manso","manta","mañana","mapa","máquina","mar","marco","marea","marfil","margen","marido","mármol","marrón","martes","marzo","masa","máscara","masivo","matar","materia","matiz","matriz","máximo","mayor","mazorca","mecha","medalla","medio","médula","mejilla","mejor","melena","melón","memoria","menor","mensaje","mente","menú","mercado","merengue","mérito","mes","mesón","meta","meter","método","metro","mezcla","miedo","miel","miembro","miga","mil","milagro","militar","millón","mimo","mina","minero","mínimo","minuto","miope","mirar","misa","miseria","misil","mismo","mitad","mito","mochila","moción","moda","modelo","moho","mojar","molde","moler","molino","momento","momia","monarca","moneda","monja","monto","moño","morada","morder","moreno","morir","morro","morsa","mortal","mosca","mostrar","motivo","mover","móvil","mozo","mucho","mudar","mueble","muela","muerte","muestra","mugre","mujer","mula","muleta","multa","mundo","muñeca","mural","muro","músculo","museo","musgo","música","muslo","nácar","nación","nadar","naipe","naranja","nariz","narrar","nasal","natal","nativo","natural","náusea","naval","nave","navidad","necio","néctar","negar","negocio","negro","neón","nervio","neto","neutro","nevar","nevera","nicho","nido","niebla","nieto","niñez","niño","nítido","nivel","nobleza","noche","nómina","noria","norma","norte","nota","noticia","novato","novela","novio","nube","nuca","núcleo","nudillo","nudo","nuera","nueve","nuez","nulo","número","nutria","oasis","obeso","obispo","objeto","obra","obrero","observar","obtener","obvio","oca","ocaso","océano","ochenta","ocho","ocio","ocre","octavo","octubre","oculto","ocupar","ocurrir","odiar","odio","odisea","oeste","ofensa","oferta","oficio","ofrecer","ogro","oído","oír","ojo","ola","oleada","olfato","olivo","olla","olmo","olor","olvido","ombligo","onda","onza","opaco","opción","ópera","opinar","oponer","optar","óptica","opuesto","oración","orador","oral","órbita","orca","orden","oreja","órgano","orgía","orgullo","oriente","origen","orilla","oro","orquesta","oruga","osadía","oscuro","osezno","oso","ostra","otoño","otro","oveja","óvulo","óxido","oxígeno","oyente","ozono","pacto","padre","paella","página","pago","país","pájaro","palabra","palco","paleta","pálido","palma","paloma","palpar","pan","panal","pánico","pantera","pañuelo","papá","papel","papilla","paquete","parar","parcela","pared","parir","paro","párpado","parque","párrafo","parte","pasar","paseo","pasión","paso","pasta","pata","patio","patria","pausa","pauta","pavo","payaso","peatón","pecado","pecera","pecho","pedal","pedir","pegar","peine","pelar","peldaño","pelea","peligro","pellejo","pelo","peluca","pena","pensar","peñón","peón","peor","pepino","pequeño","pera","percha","perder","pereza","perfil","perico","perla","permiso","perro","persona","pesa","pesca","pésimo","pestaña","pétalo","petróleo","pez","pezuña","picar","pichón","pie","piedra","pierna","pieza","pijama","pilar","piloto","pimienta","pino","pintor","pinza","piña","piojo","pipa","pirata","pisar","piscina","piso","pista","pitón","pizca","placa","plan","plata","playa","plaza","pleito","pleno","plomo","pluma","plural","pobre","poco","poder","podio","poema","poesía","poeta","polen","policía","pollo","polvo","pomada","pomelo","pomo","pompa","poner","porción","portal","posada","poseer","posible","poste","potencia","potro","pozo","prado","precoz","pregunta","premio","prensa","preso","previo","primo","príncipe","prisión","privar","proa","probar","proceso","producto","proeza","profesor","programa","prole","promesa","pronto","propio","próximo","prueba","público","puchero","pudor","pueblo","puerta","puesto","pulga","pulir","pulmón","pulpo","pulso","puma","punto","puñal","puño","pupa","pupila","puré","quedar","queja","quemar","querer","queso","quieto","química","quince","quitar","rábano","rabia","rabo","ración","radical","raíz","rama","rampa","rancho","rango","rapaz","rápido","rapto","rasgo","raspa","rato","rayo","raza","razón","reacción","realidad","rebaño","rebote","recaer","receta","rechazo","recoger","recreo","recto","recurso","red","redondo","reducir","reflejo","reforma","refrán","refugio","regalo","regir","regla","regreso","rehén","reino","reír","reja","relato","relevo","relieve","relleno","reloj","remar","remedio","remo","rencor","rendir","renta","reparto","repetir","reposo","reptil","res","rescate","resina","respeto","resto","resumen","retiro","retorno","retrato","reunir","revés","revista","rey","rezar","rico","riego","rienda","riesgo","rifa","rígido","rigor","rincón","riñón","río","riqueza","risa","ritmo","rito","rizo","roble","roce","rociar","rodar","rodeo","rodilla","roer","rojizo","rojo","romero","romper","ron","ronco","ronda","ropa","ropero","rosa","rosca","rostro","rotar","rubí","rubor","rudo","rueda","rugir","ruido","ruina","ruleta","rulo","rumbo","rumor","ruptura","ruta","rutina","sábado","saber","sabio","sable","sacar","sagaz","sagrado","sala","saldo","salero","salir","salmón","salón","salsa","salto","salud","salvar","samba","sanción","sandía","sanear","sangre","sanidad","sano","santo","sapo","saque","sardina","sartén","sastre","satán","sauna","saxofón","sección","seco","secreto","secta","sed","seguir","seis","sello","selva","semana","semilla","senda","sensor","señal","señor","separar","sepia","sequía","ser","serie","sermón","servir","sesenta","sesión","seta","setenta","severo","sexo","sexto","sidra","siesta","siete","siglo","signo","sílaba","silbar","silencio","silla","símbolo","simio","sirena","sistema","sitio","situar","sobre","socio","sodio","sol","solapa","soldado","soledad","sólido","soltar","solución","sombra","sondeo","sonido","sonoro","sonrisa","sopa","soplar","soporte","sordo","sorpresa","sorteo","sostén","sótano","suave","subir","suceso","sudor","suegra","suelo","sueño","suerte","sufrir","sujeto","sultán","sumar","superar","suplir","suponer","supremo","sur","surco","sureño","surgir","susto","sutil","tabaco","tabique","tabla","tabú","taco","tacto","tajo","talar","talco","talento","talla","talón","tamaño","tambor","tango","tanque","tapa","tapete","tapia","tapón","taquilla","tarde","tarea","tarifa","tarjeta","tarot","tarro","tarta","tatuaje","tauro","taza","tazón","teatro","techo","tecla","técnica","tejado","tejer","tejido","tela","teléfono","tema","temor","templo","tenaz","tender","tener","tenis","tenso","teoría","terapia","terco","término","ternura","terror","tesis","tesoro","testigo","tetera","texto","tez","tibio","tiburón","tiempo","tienda","tierra","tieso","tigre","tijera","tilde","timbre","tímido","timo","tinta","tío","típico","tipo","tira","tirón","titán","títere","título","tiza","toalla","tobillo","tocar","tocino","todo","toga","toldo","tomar","tono","tonto","topar","tope","toque","tórax","torero","tormenta","torneo","toro","torpedo","torre","torso","tortuga","tos","tosco","toser","tóxico","trabajo","tractor","traer","tráfico","trago","traje","tramo","trance","trato","trauma","trazar","trébol","tregua","treinta","tren","trepar","tres","tribu","trigo","tripa","triste","triunfo","trofeo","trompa","tronco","tropa","trote","trozo","truco","trueno","trufa","tubería","tubo","tuerto","tumba","tumor","túnel","túnica","turbina","turismo","turno","tutor","ubicar","úlcera","umbral","unidad","unir","universo","uno","untar","uña","urbano","urbe","urgente","urna","usar","usuario","útil","utopía","uva","vaca","vacío","vacuna","vagar","vago","vaina","vajilla","vale","válido","valle","valor","válvula","vampiro","vara","variar","varón","vaso","vecino","vector","vehículo","veinte","vejez","vela","velero","veloz","vena","vencer","venda","veneno","vengar","venir","venta","venus","ver","verano","verbo","verde","vereda","verja","verso","verter","vía","viaje","vibrar","vicio","víctima","vida","vídeo","vidrio","viejo","viernes","vigor","vil","villa","vinagre","vino","viñedo","violín","viral","virgo","virtud","visor","víspera","vista","vitamina","viudo","vivaz","vivero","vivir","vivo","volcán","volumen","volver","voraz","votar","voto","voz","vuelo","vulgar","yacer","yate","yegua","yema","yerno","yeso","yodo","yoga","yogur","zafiro","zanja","zapato","zarza","zona","zorro","zumo","zurdo"]},function(t,e,i){"use strict";
/*!
 * nfkd-compat.js - unicode normalization for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */const r=i(249);t.exports=function(t){return t.normalize?t.normalize("NFKD"):r.nfkd(t)}},function(t,e,i){"use strict";
/*!
 * Unorm
 * https://github.com/walling/unorm
 *
 * The software dual licensed under the MIT and GPL licenses. MIT license:
 *
 * Copyright (c) 2008-2013
 * Matsuza <matsuza@gmail.com>,
 * Bjarke Walling <bwp@bwp.dk>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *
 * GPL notice (please read the [full GPL license] online):
 *
 * Copyright (C) 2008-2013
 * Matsuza <matsuza@gmail.com>,
 * Bjarke Walling <bwp@bwp.dk>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA  02110-1301, USA.
 *
 * [full GPL license]: http://www.gnu.org/licenses/gpl-2.0-standalone.html
*/const r=i(250),s=[null,0,{}],n=44032,o=4352,a={},h=[];for(let t=0;t<=255;t++)h[t]=0;let c=null;class l{constructor(t,e){this.codepoint=t,this.feature=e}static isHighSurrogate(t){return t>=55296&&t<=56319}static isLowSurrogate(t){return t>=56320&&t<=57343}prepFeature(){this.feature||(this.feature=c(this.codepoint,!0).feature)}toString(){if(this.codepoint<65536)return String.fromCharCode(this.codepoint);const t=this.codepoint-65536;return String.fromCharCode(Math.floor(t/1024)+55296,t%1024+56320)}getDecomp(){return this.prepFeature(),this.feature[0]||null}isCompatibility(){return this.prepFeature(),Boolean(this.feature[1])&&0!=(256&this.feature[1])}isExclude(){return this.prepFeature(),Boolean(this.feature[1])&&0!=(512&this.feature[1])}getCanonicalClass(){return this.prepFeature(),this.feature[1]?255&this.feature[1]:0}getComposite(t){if(this.prepFeature(),!this.feature[2])return null;const e=this.feature[2][t.codepoint];return e?c(e):null}}c=[function(t,e,i){return e<60||13311<e&&e<42607?new l(e,s):t(e,i)},function(t,e,i){let r=a[e];return r||(r=t(e,i)).feature&&++h[e>>8&255]>10&&(a[e]=r),r},function(t,e,i){return i?t(e,i):new l(e,null)},function(t,e,i){if(e<o||4371<=e&&e<n||55204<e)return t(e,i);if(o<=e&&e<4371){const t={},i=21*(e-o);for(let e=0;e<21;e++)t[4449+e]=n+28*(e+i);return new l(e,[null,null,t])}const r=e-n,s=r%28,a=[];if(0!==s)a[0]=[n+r-s,4519+s];else{a[0]=[o+Math.floor(r/588),4449+Math.floor(r%588/28)],a[2]={};for(let t=1;t<28;t++)a[2][4519+t]=e+t}return new l(e,a)},function(t,e,i){const n=(r[65280&e]||{})[e];return new l(e,n||s)}].reduceRight((t,e)=>(i,r)=>e(t,i,r),null);class u{constructor(t){this.str=t,this.cursor=0}next(){if(this.str&&this.cursor<this.str.length){let t=this.str.charCodeAt(this.cursor++);if(l.isHighSurrogate(t)&&this.cursor<this.str.length){const e=this.str.charCodeAt(this.cursor);l.isLowSurrogate(e)&&(t=1024*(t-55296)+(e-56320)+65536,this.cursor+=1)}return c(t)}return this.str=null,null}}class f{constructor(t,e){this.it=t,this.canonical=e,this.resBuf=[]}recursiveDecomp(t){const e=this.canonical,i=t.getDecomp();if(i&&(!e||!t.isCompatibility())){let t=[];for(let e=0;e<i.length;e++){const r=this.recursiveDecomp(c(i[e]));t=t.concat(r)}return t}return[t]}next(){if(0===this.resBuf.length){const t=this.it.next();if(!t)return null;this.resBuf=this.recursiveDecomp(t)}return this.resBuf.shift()}}class d{constructor(t){this.it=t,this.resBuf=[]}next(){if(0===this.resBuf.length)for(;;){const t=this.it.next();if(!t)break;const e=t.getCanonicalClass();let i=this.resBuf.length;if(0!==e)for(;i>0&&!(this.resBuf[i-1].getCanonicalClass()<=e);)i-=1;if(this.resBuf.splice(i,0,t),0===e)break}return this.resBuf.shift()}}class p{constructor(t){this.it=t,this.procBuf=[],this.resBuf=[],this.lastClass=null}next(){for(;0===this.resBuf.length;){const t=this.it.next();if(!t){this.resBuf=this.procBuf,this.procBuf=[];break}if(0===this.procBuf.length){this.lastClass=t.getCanonicalClass(),this.procBuf.push(t);continue}const e=this.procBuf[0].getComposite(t),i=t.getCanonicalClass();e&&(this.lastClass<i||0===this.lastClass)?this.procBuf[0]=e:(0===i&&(this.resBuf=this.procBuf,this.procBuf=[]),this.lastClass=i,this.procBuf.push(t))}return this.resBuf.shift()}}function g(t,e){const i=function(t,e){switch(t){case"NFD":{const t=new u(e),i=new f(t,!0);return new d(i)}case"NFKD":{const t=new u(e),i=new f(t,!1);return new d(i)}case"NFC":{const t=new u(e),i=new f(t,!0),r=new d(i);return new p(r)}case"NFKC":{const t=new u(e),i=new f(t,!1),r=new d(i);return new p(r)}}throw new Error(`${t} is invalid.`)}(t,e);let r,s="";for(;r=i.next();)s+=r.toString();return s}e.nfc=function(t){return g("NFC",t)},e.nfd=function(t){return g("NFD",t)},e.nfkc=function(t){return g("NFKC",t)},e.nfkd=function(t){return g("NFKD",t)}},function(t){t.exports={0:{60:[null,null,{824:8814}],61:[null,null,{824:8800}],62:[null,null,{824:8815}],65:[null,null,{768:192,769:193,770:194,771:195,772:256,774:258,775:550,776:196,777:7842,778:197,780:461,783:512,785:514,803:7840,805:7680,808:260}],66:[null,null,{775:7682,803:7684,817:7686}],67:[null,null,{769:262,770:264,775:266,780:268,807:199}],68:[null,null,{775:7690,780:270,803:7692,807:7696,813:7698,817:7694}],69:[null,null,{768:200,769:201,770:202,771:7868,772:274,774:276,775:278,776:203,777:7866,780:282,783:516,785:518,803:7864,807:552,808:280,813:7704,816:7706}],70:[null,null,{775:7710}],71:[null,null,{769:500,770:284,772:7712,774:286,775:288,780:486,807:290}],72:[null,null,{770:292,775:7714,776:7718,780:542,803:7716,807:7720,814:7722}],73:[null,null,{768:204,769:205,770:206,771:296,772:298,774:300,775:304,776:207,777:7880,780:463,783:520,785:522,803:7882,808:302,816:7724}],74:[null,null,{770:308}],75:[null,null,{769:7728,780:488,803:7730,807:310,817:7732}],76:[null,null,{769:313,780:317,803:7734,807:315,813:7740,817:7738}],77:[null,null,{769:7742,775:7744,803:7746}],78:[null,null,{768:504,769:323,771:209,775:7748,780:327,803:7750,807:325,813:7754,817:7752}],79:[null,null,{768:210,769:211,770:212,771:213,772:332,774:334,775:558,776:214,777:7886,779:336,780:465,783:524,785:526,795:416,803:7884,808:490}],80:[null,null,{769:7764,775:7766}],82:[null,null,{769:340,775:7768,780:344,783:528,785:530,803:7770,807:342,817:7774}],83:[null,null,{769:346,770:348,775:7776,780:352,803:7778,806:536,807:350}],84:[null,null,{775:7786,780:356,803:7788,806:538,807:354,813:7792,817:7790}],85:[null,null,{768:217,769:218,770:219,771:360,772:362,774:364,776:220,777:7910,778:366,779:368,780:467,783:532,785:534,795:431,803:7908,804:7794,808:370,813:7798,816:7796}],86:[null,null,{771:7804,803:7806}],87:[null,null,{768:7808,769:7810,770:372,775:7814,776:7812,803:7816}],88:[null,null,{775:7818,776:7820}],89:[null,null,{768:7922,769:221,770:374,771:7928,772:562,775:7822,776:376,777:7926,803:7924}],90:[null,null,{769:377,770:7824,775:379,780:381,803:7826,817:7828}],97:[null,null,{768:224,769:225,770:226,771:227,772:257,774:259,775:551,776:228,777:7843,778:229,780:462,783:513,785:515,803:7841,805:7681,808:261}],98:[null,null,{775:7683,803:7685,817:7687}],99:[null,null,{769:263,770:265,775:267,780:269,807:231}],100:[null,null,{775:7691,780:271,803:7693,807:7697,813:7699,817:7695}],101:[null,null,{768:232,769:233,770:234,771:7869,772:275,774:277,775:279,776:235,777:7867,780:283,783:517,785:519,803:7865,807:553,808:281,813:7705,816:7707}],102:[null,null,{775:7711}],103:[null,null,{769:501,770:285,772:7713,774:287,775:289,780:487,807:291}],104:[null,null,{770:293,775:7715,776:7719,780:543,803:7717,807:7721,814:7723,817:7830}],105:[null,null,{768:236,769:237,770:238,771:297,772:299,774:301,776:239,777:7881,780:464,783:521,785:523,803:7883,808:303,816:7725}],106:[null,null,{770:309,780:496}],107:[null,null,{769:7729,780:489,803:7731,807:311,817:7733}],108:[null,null,{769:314,780:318,803:7735,807:316,813:7741,817:7739}],109:[null,null,{769:7743,775:7745,803:7747}],110:[null,null,{768:505,769:324,771:241,775:7749,780:328,803:7751,807:326,813:7755,817:7753}],111:[null,null,{768:242,769:243,770:244,771:245,772:333,774:335,775:559,776:246,777:7887,779:337,780:466,783:525,785:527,795:417,803:7885,808:491}],112:[null,null,{769:7765,775:7767}],114:[null,null,{769:341,775:7769,780:345,783:529,785:531,803:7771,807:343,817:7775}],115:[null,null,{769:347,770:349,775:7777,780:353,803:7779,806:537,807:351}],116:[null,null,{775:7787,776:7831,780:357,803:7789,806:539,807:355,813:7793,817:7791}],117:[null,null,{768:249,769:250,770:251,771:361,772:363,774:365,776:252,777:7911,778:367,779:369,780:468,783:533,785:535,795:432,803:7909,804:7795,808:371,813:7799,816:7797}],118:[null,null,{771:7805,803:7807}],119:[null,null,{768:7809,769:7811,770:373,775:7815,776:7813,778:7832,803:7817}],120:[null,null,{775:7819,776:7821}],121:[null,null,{768:7923,769:253,770:375,771:7929,772:563,775:7823,776:255,777:7927,778:7833,803:7925}],122:[null,null,{769:378,770:7825,775:380,780:382,803:7827,817:7829}],160:[[32],256],168:[[32,776],256,{768:8173,769:901,834:8129}],170:[[97],256],175:[[32,772],256],178:[[50],256],179:[[51],256],180:[[32,769],256],181:[[956],256],184:[[32,807],256],185:[[49],256],186:[[111],256],188:[[49,8260,52],256],189:[[49,8260,50],256],190:[[51,8260,52],256],192:[[65,768]],193:[[65,769]],194:[[65,770],null,{768:7846,769:7844,771:7850,777:7848}],195:[[65,771]],196:[[65,776],null,{772:478}],197:[[65,778],null,{769:506}],198:[null,null,{769:508,772:482}],199:[[67,807],null,{769:7688}],200:[[69,768]],201:[[69,769]],202:[[69,770],null,{768:7872,769:7870,771:7876,777:7874}],203:[[69,776]],204:[[73,768]],205:[[73,769]],206:[[73,770]],207:[[73,776],null,{769:7726}],209:[[78,771]],210:[[79,768]],211:[[79,769]],212:[[79,770],null,{768:7890,769:7888,771:7894,777:7892}],213:[[79,771],null,{769:7756,772:556,776:7758}],214:[[79,776],null,{772:554}],216:[null,null,{769:510}],217:[[85,768]],218:[[85,769]],219:[[85,770]],220:[[85,776],null,{768:475,769:471,772:469,780:473}],221:[[89,769]],224:[[97,768]],225:[[97,769]],226:[[97,770],null,{768:7847,769:7845,771:7851,777:7849}],227:[[97,771]],228:[[97,776],null,{772:479}],229:[[97,778],null,{769:507}],230:[null,null,{769:509,772:483}],231:[[99,807],null,{769:7689}],232:[[101,768]],233:[[101,769]],234:[[101,770],null,{768:7873,769:7871,771:7877,777:7875}],235:[[101,776]],236:[[105,768]],237:[[105,769]],238:[[105,770]],239:[[105,776],null,{769:7727}],241:[[110,771]],242:[[111,768]],243:[[111,769]],244:[[111,770],null,{768:7891,769:7889,771:7895,777:7893}],245:[[111,771],null,{769:7757,772:557,776:7759}],246:[[111,776],null,{772:555}],248:[null,null,{769:511}],249:[[117,768]],250:[[117,769]],251:[[117,770]],252:[[117,776],null,{768:476,769:472,772:470,780:474}],253:[[121,769]],255:[[121,776]]},256:{256:[[65,772]],257:[[97,772]],258:[[65,774],null,{768:7856,769:7854,771:7860,777:7858}],259:[[97,774],null,{768:7857,769:7855,771:7861,777:7859}],260:[[65,808]],261:[[97,808]],262:[[67,769]],263:[[99,769]],264:[[67,770]],265:[[99,770]],266:[[67,775]],267:[[99,775]],268:[[67,780]],269:[[99,780]],270:[[68,780]],271:[[100,780]],274:[[69,772],null,{768:7700,769:7702}],275:[[101,772],null,{768:7701,769:7703}],276:[[69,774]],277:[[101,774]],278:[[69,775]],279:[[101,775]],280:[[69,808]],281:[[101,808]],282:[[69,780]],283:[[101,780]],284:[[71,770]],285:[[103,770]],286:[[71,774]],287:[[103,774]],288:[[71,775]],289:[[103,775]],290:[[71,807]],291:[[103,807]],292:[[72,770]],293:[[104,770]],296:[[73,771]],297:[[105,771]],298:[[73,772]],299:[[105,772]],300:[[73,774]],301:[[105,774]],302:[[73,808]],303:[[105,808]],304:[[73,775]],306:[[73,74],256],307:[[105,106],256],308:[[74,770]],309:[[106,770]],310:[[75,807]],311:[[107,807]],313:[[76,769]],314:[[108,769]],315:[[76,807]],316:[[108,807]],317:[[76,780]],318:[[108,780]],319:[[76,183],256],320:[[108,183],256],323:[[78,769]],324:[[110,769]],325:[[78,807]],326:[[110,807]],327:[[78,780]],328:[[110,780]],329:[[700,110],256],332:[[79,772],null,{768:7760,769:7762}],333:[[111,772],null,{768:7761,769:7763}],334:[[79,774]],335:[[111,774]],336:[[79,779]],337:[[111,779]],340:[[82,769]],341:[[114,769]],342:[[82,807]],343:[[114,807]],344:[[82,780]],345:[[114,780]],346:[[83,769],null,{775:7780}],347:[[115,769],null,{775:7781}],348:[[83,770]],349:[[115,770]],350:[[83,807]],351:[[115,807]],352:[[83,780],null,{775:7782}],353:[[115,780],null,{775:7783}],354:[[84,807]],355:[[116,807]],356:[[84,780]],357:[[116,780]],360:[[85,771],null,{769:7800}],361:[[117,771],null,{769:7801}],362:[[85,772],null,{776:7802}],363:[[117,772],null,{776:7803}],364:[[85,774]],365:[[117,774]],366:[[85,778]],367:[[117,778]],368:[[85,779]],369:[[117,779]],370:[[85,808]],371:[[117,808]],372:[[87,770]],373:[[119,770]],374:[[89,770]],375:[[121,770]],376:[[89,776]],377:[[90,769]],378:[[122,769]],379:[[90,775]],380:[[122,775]],381:[[90,780]],382:[[122,780]],383:[[115],256,{775:7835}],416:[[79,795],null,{768:7900,769:7898,771:7904,777:7902,803:7906}],417:[[111,795],null,{768:7901,769:7899,771:7905,777:7903,803:7907}],431:[[85,795],null,{768:7914,769:7912,771:7918,777:7916,803:7920}],432:[[117,795],null,{768:7915,769:7913,771:7919,777:7917,803:7921}],439:[null,null,{780:494}],452:[[68,381],256],453:[[68,382],256],454:[[100,382],256],455:[[76,74],256],456:[[76,106],256],457:[[108,106],256],458:[[78,74],256],459:[[78,106],256],460:[[110,106],256],461:[[65,780]],462:[[97,780]],463:[[73,780]],464:[[105,780]],465:[[79,780]],466:[[111,780]],467:[[85,780]],468:[[117,780]],469:[[220,772]],470:[[252,772]],471:[[220,769]],472:[[252,769]],473:[[220,780]],474:[[252,780]],475:[[220,768]],476:[[252,768]],478:[[196,772]],479:[[228,772]],480:[[550,772]],481:[[551,772]],482:[[198,772]],483:[[230,772]],486:[[71,780]],487:[[103,780]],488:[[75,780]],489:[[107,780]],490:[[79,808],null,{772:492}],491:[[111,808],null,{772:493}],492:[[490,772]],493:[[491,772]],494:[[439,780]],495:[[658,780]],496:[[106,780]],497:[[68,90],256],498:[[68,122],256],499:[[100,122],256],500:[[71,769]],501:[[103,769]],504:[[78,768]],505:[[110,768]],506:[[197,769]],507:[[229,769]],508:[[198,769]],509:[[230,769]],510:[[216,769]],511:[[248,769]],66045:[null,220]},512:{512:[[65,783]],513:[[97,783]],514:[[65,785]],515:[[97,785]],516:[[69,783]],517:[[101,783]],518:[[69,785]],519:[[101,785]],520:[[73,783]],521:[[105,783]],522:[[73,785]],523:[[105,785]],524:[[79,783]],525:[[111,783]],526:[[79,785]],527:[[111,785]],528:[[82,783]],529:[[114,783]],530:[[82,785]],531:[[114,785]],532:[[85,783]],533:[[117,783]],534:[[85,785]],535:[[117,785]],536:[[83,806]],537:[[115,806]],538:[[84,806]],539:[[116,806]],542:[[72,780]],543:[[104,780]],550:[[65,775],null,{772:480}],551:[[97,775],null,{772:481}],552:[[69,807],null,{774:7708}],553:[[101,807],null,{774:7709}],554:[[214,772]],555:[[246,772]],556:[[213,772]],557:[[245,772]],558:[[79,775],null,{772:560}],559:[[111,775],null,{772:561}],560:[[558,772]],561:[[559,772]],562:[[89,772]],563:[[121,772]],658:[null,null,{780:495}],688:[[104],256],689:[[614],256],690:[[106],256],691:[[114],256],692:[[633],256],693:[[635],256],694:[[641],256],695:[[119],256],696:[[121],256],728:[[32,774],256],729:[[32,775],256],730:[[32,778],256],731:[[32,808],256],732:[[32,771],256],733:[[32,779],256],736:[[611],256],737:[[108],256],738:[[115],256],739:[[120],256],740:[[661],256],66272:[null,220]},768:{768:[null,230],769:[null,230],770:[null,230],771:[null,230],772:[null,230],773:[null,230],774:[null,230],775:[null,230],776:[null,230,{769:836}],777:[null,230],778:[null,230],779:[null,230],780:[null,230],781:[null,230],782:[null,230],783:[null,230],784:[null,230],785:[null,230],786:[null,230],787:[null,230],788:[null,230],789:[null,232],790:[null,220],791:[null,220],792:[null,220],793:[null,220],794:[null,232],795:[null,216],796:[null,220],797:[null,220],798:[null,220],799:[null,220],800:[null,220],801:[null,202],802:[null,202],803:[null,220],804:[null,220],805:[null,220],806:[null,220],807:[null,202],808:[null,202],809:[null,220],810:[null,220],811:[null,220],812:[null,220],813:[null,220],814:[null,220],815:[null,220],816:[null,220],817:[null,220],818:[null,220],819:[null,220],820:[null,1],821:[null,1],822:[null,1],823:[null,1],824:[null,1],825:[null,220],826:[null,220],827:[null,220],828:[null,220],829:[null,230],830:[null,230],831:[null,230],832:[[768],230],833:[[769],230],834:[null,230],835:[[787],230],836:[[776,769],230],837:[null,240],838:[null,230],839:[null,220],840:[null,220],841:[null,220],842:[null,230],843:[null,230],844:[null,230],845:[null,220],846:[null,220],848:[null,230],849:[null,230],850:[null,230],851:[null,220],852:[null,220],853:[null,220],854:[null,220],855:[null,230],856:[null,232],857:[null,220],858:[null,220],859:[null,230],860:[null,233],861:[null,234],862:[null,234],863:[null,233],864:[null,234],865:[null,234],866:[null,233],867:[null,230],868:[null,230],869:[null,230],870:[null,230],871:[null,230],872:[null,230],873:[null,230],874:[null,230],875:[null,230],876:[null,230],877:[null,230],878:[null,230],879:[null,230],884:[[697]],890:[[32,837],256],894:[[59]],900:[[32,769],256],901:[[168,769]],902:[[913,769]],903:[[183]],904:[[917,769]],905:[[919,769]],906:[[921,769]],908:[[927,769]],910:[[933,769]],911:[[937,769]],912:[[970,769]],913:[null,null,{768:8122,769:902,772:8121,774:8120,787:7944,788:7945,837:8124}],917:[null,null,{768:8136,769:904,787:7960,788:7961}],919:[null,null,{768:8138,769:905,787:7976,788:7977,837:8140}],921:[null,null,{768:8154,769:906,772:8153,774:8152,776:938,787:7992,788:7993}],927:[null,null,{768:8184,769:908,787:8008,788:8009}],929:[null,null,{788:8172}],933:[null,null,{768:8170,769:910,772:8169,774:8168,776:939,788:8025}],937:[null,null,{768:8186,769:911,787:8040,788:8041,837:8188}],938:[[921,776]],939:[[933,776]],940:[[945,769],null,{837:8116}],941:[[949,769]],942:[[951,769],null,{837:8132}],943:[[953,769]],944:[[971,769]],945:[null,null,{768:8048,769:940,772:8113,774:8112,787:7936,788:7937,834:8118,837:8115}],949:[null,null,{768:8050,769:941,787:7952,788:7953}],951:[null,null,{768:8052,769:942,787:7968,788:7969,834:8134,837:8131}],953:[null,null,{768:8054,769:943,772:8145,774:8144,776:970,787:7984,788:7985,834:8150}],959:[null,null,{768:8056,769:972,787:8e3,788:8001}],961:[null,null,{787:8164,788:8165}],965:[null,null,{768:8058,769:973,772:8161,774:8160,776:971,787:8016,788:8017,834:8166}],969:[null,null,{768:8060,769:974,787:8032,788:8033,834:8182,837:8179}],970:[[953,776],null,{768:8146,769:912,834:8151}],971:[[965,776],null,{768:8162,769:944,834:8167}],972:[[959,769]],973:[[965,769]],974:[[969,769],null,{837:8180}],976:[[946],256],977:[[952],256],978:[[933],256,{769:979,776:980}],979:[[978,769]],980:[[978,776]],981:[[966],256],982:[[960],256],1008:[[954],256],1009:[[961],256],1010:[[962],256],1012:[[920],256],1013:[[949],256],1017:[[931],256],66422:[null,230],66423:[null,230],66424:[null,230],66425:[null,230],66426:[null,230]},1024:{1024:[[1045,768]],1025:[[1045,776]],1027:[[1043,769]],1030:[null,null,{776:1031}],1031:[[1030,776]],1036:[[1050,769]],1037:[[1048,768]],1038:[[1059,774]],1040:[null,null,{774:1232,776:1234}],1043:[null,null,{769:1027}],1045:[null,null,{768:1024,774:1238,776:1025}],1046:[null,null,{774:1217,776:1244}],1047:[null,null,{776:1246}],1048:[null,null,{768:1037,772:1250,774:1049,776:1252}],1049:[[1048,774]],1050:[null,null,{769:1036}],1054:[null,null,{776:1254}],1059:[null,null,{772:1262,774:1038,776:1264,779:1266}],1063:[null,null,{776:1268}],1067:[null,null,{776:1272}],1069:[null,null,{776:1260}],1072:[null,null,{774:1233,776:1235}],1075:[null,null,{769:1107}],1077:[null,null,{768:1104,774:1239,776:1105}],1078:[null,null,{774:1218,776:1245}],1079:[null,null,{776:1247}],1080:[null,null,{768:1117,772:1251,774:1081,776:1253}],1081:[[1080,774]],1082:[null,null,{769:1116}],1086:[null,null,{776:1255}],1091:[null,null,{772:1263,774:1118,776:1265,779:1267}],1095:[null,null,{776:1269}],1099:[null,null,{776:1273}],1101:[null,null,{776:1261}],1104:[[1077,768]],1105:[[1077,776]],1107:[[1075,769]],1110:[null,null,{776:1111}],1111:[[1110,776]],1116:[[1082,769]],1117:[[1080,768]],1118:[[1091,774]],1140:[null,null,{783:1142}],1141:[null,null,{783:1143}],1142:[[1140,783]],1143:[[1141,783]],1155:[null,230],1156:[null,230],1157:[null,230],1158:[null,230],1159:[null,230],1217:[[1046,774]],1218:[[1078,774]],1232:[[1040,774]],1233:[[1072,774]],1234:[[1040,776]],1235:[[1072,776]],1238:[[1045,774]],1239:[[1077,774]],1240:[null,null,{776:1242}],1241:[null,null,{776:1243}],1242:[[1240,776]],1243:[[1241,776]],1244:[[1046,776]],1245:[[1078,776]],1246:[[1047,776]],1247:[[1079,776]],1250:[[1048,772]],1251:[[1080,772]],1252:[[1048,776]],1253:[[1080,776]],1254:[[1054,776]],1255:[[1086,776]],1256:[null,null,{776:1258}],1257:[null,null,{776:1259}],1258:[[1256,776]],1259:[[1257,776]],1260:[[1069,776]],1261:[[1101,776]],1262:[[1059,772]],1263:[[1091,772]],1264:[[1059,776]],1265:[[1091,776]],1266:[[1059,779]],1267:[[1091,779]],1268:[[1063,776]],1269:[[1095,776]],1272:[[1067,776]],1273:[[1099,776]]},1280:{1415:[[1381,1410],256],1425:[null,220],1426:[null,230],1427:[null,230],1428:[null,230],1429:[null,230],1430:[null,220],1431:[null,230],1432:[null,230],1433:[null,230],1434:[null,222],1435:[null,220],1436:[null,230],1437:[null,230],1438:[null,230],1439:[null,230],1440:[null,230],1441:[null,230],1442:[null,220],1443:[null,220],1444:[null,220],1445:[null,220],1446:[null,220],1447:[null,220],1448:[null,230],1449:[null,230],1450:[null,220],1451:[null,230],1452:[null,230],1453:[null,222],1454:[null,228],1455:[null,230],1456:[null,10],1457:[null,11],1458:[null,12],1459:[null,13],1460:[null,14],1461:[null,15],1462:[null,16],1463:[null,17],1464:[null,18],1465:[null,19],1466:[null,19],1467:[null,20],1468:[null,21],1469:[null,22],1471:[null,23],1473:[null,24],1474:[null,25],1476:[null,230],1477:[null,220],1479:[null,18]},1536:{1552:[null,230],1553:[null,230],1554:[null,230],1555:[null,230],1556:[null,230],1557:[null,230],1558:[null,230],1559:[null,230],1560:[null,30],1561:[null,31],1562:[null,32],1570:[[1575,1619]],1571:[[1575,1620]],1572:[[1608,1620]],1573:[[1575,1621]],1574:[[1610,1620]],1575:[null,null,{1619:1570,1620:1571,1621:1573}],1608:[null,null,{1620:1572}],1610:[null,null,{1620:1574}],1611:[null,27],1612:[null,28],1613:[null,29],1614:[null,30],1615:[null,31],1616:[null,32],1617:[null,33],1618:[null,34],1619:[null,230],1620:[null,230],1621:[null,220],1622:[null,220],1623:[null,230],1624:[null,230],1625:[null,230],1626:[null,230],1627:[null,230],1628:[null,220],1629:[null,230],1630:[null,230],1631:[null,220],1648:[null,35],1653:[[1575,1652],256],1654:[[1608,1652],256],1655:[[1735,1652],256],1656:[[1610,1652],256],1728:[[1749,1620]],1729:[null,null,{1620:1730}],1730:[[1729,1620]],1746:[null,null,{1620:1747}],1747:[[1746,1620]],1749:[null,null,{1620:1728}],1750:[null,230],1751:[null,230],1752:[null,230],1753:[null,230],1754:[null,230],1755:[null,230],1756:[null,230],1759:[null,230],1760:[null,230],1761:[null,230],1762:[null,230],1763:[null,220],1764:[null,230],1767:[null,230],1768:[null,230],1770:[null,220],1771:[null,230],1772:[null,230],1773:[null,220]},1792:{1809:[null,36],1840:[null,230],1841:[null,220],1842:[null,230],1843:[null,230],1844:[null,220],1845:[null,230],1846:[null,230],1847:[null,220],1848:[null,220],1849:[null,220],1850:[null,230],1851:[null,220],1852:[null,220],1853:[null,230],1854:[null,220],1855:[null,230],1856:[null,230],1857:[null,230],1858:[null,220],1859:[null,230],1860:[null,220],1861:[null,230],1862:[null,220],1863:[null,230],1864:[null,220],1865:[null,230],1866:[null,230],2027:[null,230],2028:[null,230],2029:[null,230],2030:[null,230],2031:[null,230],2032:[null,230],2033:[null,230],2034:[null,220],2035:[null,230]},2048:{2070:[null,230],2071:[null,230],2072:[null,230],2073:[null,230],2075:[null,230],2076:[null,230],2077:[null,230],2078:[null,230],2079:[null,230],2080:[null,230],2081:[null,230],2082:[null,230],2083:[null,230],2085:[null,230],2086:[null,230],2087:[null,230],2089:[null,230],2090:[null,230],2091:[null,230],2092:[null,230],2093:[null,230],2137:[null,220],2138:[null,220],2139:[null,220],2276:[null,230],2277:[null,230],2278:[null,220],2279:[null,230],2280:[null,230],2281:[null,220],2282:[null,230],2283:[null,230],2284:[null,230],2285:[null,220],2286:[null,220],2287:[null,220],2288:[null,27],2289:[null,28],2290:[null,29],2291:[null,230],2292:[null,230],2293:[null,230],2294:[null,220],2295:[null,230],2296:[null,230],2297:[null,220],2298:[null,220],2299:[null,230],2300:[null,230],2301:[null,230],2302:[null,230],2303:[null,230]},2304:{2344:[null,null,{2364:2345}],2345:[[2344,2364]],2352:[null,null,{2364:2353}],2353:[[2352,2364]],2355:[null,null,{2364:2356}],2356:[[2355,2364]],2364:[null,7],2381:[null,9],2385:[null,230],2386:[null,220],2387:[null,230],2388:[null,230],2392:[[2325,2364],512],2393:[[2326,2364],512],2394:[[2327,2364],512],2395:[[2332,2364],512],2396:[[2337,2364],512],2397:[[2338,2364],512],2398:[[2347,2364],512],2399:[[2351,2364],512],2492:[null,7],2503:[null,null,{2494:2507,2519:2508}],2507:[[2503,2494]],2508:[[2503,2519]],2509:[null,9],2524:[[2465,2492],512],2525:[[2466,2492],512],2527:[[2479,2492],512]},2560:{2611:[[2610,2620],512],2614:[[2616,2620],512],2620:[null,7],2637:[null,9],2649:[[2582,2620],512],2650:[[2583,2620],512],2651:[[2588,2620],512],2654:[[2603,2620],512],2748:[null,7],2765:[null,9],68109:[null,220],68111:[null,230],68152:[null,230],68153:[null,1],68154:[null,220],68159:[null,9],68325:[null,230],68326:[null,220]},2816:{2876:[null,7],2887:[null,null,{2878:2891,2902:2888,2903:2892}],2888:[[2887,2902]],2891:[[2887,2878]],2892:[[2887,2903]],2893:[null,9],2908:[[2849,2876],512],2909:[[2850,2876],512],2962:[null,null,{3031:2964}],2964:[[2962,3031]],3014:[null,null,{3006:3018,3031:3020}],3015:[null,null,{3006:3019}],3018:[[3014,3006]],3019:[[3015,3006]],3020:[[3014,3031]],3021:[null,9]},3072:{3142:[null,null,{3158:3144}],3144:[[3142,3158]],3149:[null,9],3157:[null,84],3158:[null,91],3260:[null,7],3263:[null,null,{3285:3264}],3264:[[3263,3285]],3270:[null,null,{3266:3274,3285:3271,3286:3272}],3271:[[3270,3285]],3272:[[3270,3286]],3274:[[3270,3266],null,{3285:3275}],3275:[[3274,3285]],3277:[null,9]},3328:{3398:[null,null,{3390:3402,3415:3404}],3399:[null,null,{3390:3403}],3402:[[3398,3390]],3403:[[3399,3390]],3404:[[3398,3415]],3405:[null,9],3530:[null,9],3545:[null,null,{3530:3546,3535:3548,3551:3550}],3546:[[3545,3530]],3548:[[3545,3535],null,{3530:3549}],3549:[[3548,3530]],3550:[[3545,3551]]},3584:{3635:[[3661,3634],256],3640:[null,103],3641:[null,103],3642:[null,9],3656:[null,107],3657:[null,107],3658:[null,107],3659:[null,107],3763:[[3789,3762],256],3768:[null,118],3769:[null,118],3784:[null,122],3785:[null,122],3786:[null,122],3787:[null,122],3804:[[3755,3737],256],3805:[[3755,3745],256]},3840:{3852:[[3851],256],3864:[null,220],3865:[null,220],3893:[null,220],3895:[null,220],3897:[null,216],3907:[[3906,4023],512],3917:[[3916,4023],512],3922:[[3921,4023],512],3927:[[3926,4023],512],3932:[[3931,4023],512],3945:[[3904,4021],512],3953:[null,129],3954:[null,130],3955:[[3953,3954],512],3956:[null,132],3957:[[3953,3956],512],3958:[[4018,3968],512],3959:[[4018,3969],256],3960:[[4019,3968],512],3961:[[4019,3969],256],3962:[null,130],3963:[null,130],3964:[null,130],3965:[null,130],3968:[null,130],3969:[[3953,3968],512],3970:[null,230],3971:[null,230],3972:[null,9],3974:[null,230],3975:[null,230],3987:[[3986,4023],512],3997:[[3996,4023],512],4002:[[4001,4023],512],4007:[[4006,4023],512],4012:[[4011,4023],512],4025:[[3984,4021],512],4038:[null,220]},4096:{4133:[null,null,{4142:4134}],4134:[[4133,4142]],4151:[null,7],4153:[null,9],4154:[null,9],4237:[null,220],4348:[[4316],256],69702:[null,9],69759:[null,9],69785:[null,null,{69818:69786}],69786:[[69785,69818]],69787:[null,null,{69818:69788}],69788:[[69787,69818]],69797:[null,null,{69818:69803}],69803:[[69797,69818]],69817:[null,9],69818:[null,7]},4352:{69888:[null,230],69889:[null,230],69890:[null,230],69934:[[69937,69927]],69935:[[69938,69927]],69937:[null,null,{69927:69934}],69938:[null,null,{69927:69935}],69939:[null,9],69940:[null,9],70003:[null,7],70080:[null,9]},4608:{70197:[null,9],70198:[null,7],70377:[null,7],70378:[null,9]},4864:{4957:[null,230],4958:[null,230],4959:[null,230],70460:[null,7],70471:[null,null,{70462:70475,70487:70476}],70475:[[70471,70462]],70476:[[70471,70487]],70477:[null,9],70502:[null,230],70503:[null,230],70504:[null,230],70505:[null,230],70506:[null,230],70507:[null,230],70508:[null,230],70512:[null,230],70513:[null,230],70514:[null,230],70515:[null,230],70516:[null,230]},5120:{70841:[null,null,{70832:70844,70842:70843,70845:70846}],70843:[[70841,70842]],70844:[[70841,70832]],70846:[[70841,70845]],70850:[null,9],70851:[null,7]},5376:{71096:[null,null,{71087:71098}],71097:[null,null,{71087:71099}],71098:[[71096,71087]],71099:[[71097,71087]],71103:[null,9],71104:[null,7]},5632:{71231:[null,9],71350:[null,9],71351:[null,7]},5888:{5908:[null,9],5940:[null,9],6098:[null,9],6109:[null,230]},6144:{6313:[null,228]},6400:{6457:[null,222],6458:[null,230],6459:[null,220]},6656:{6679:[null,230],6680:[null,220],6752:[null,9],6773:[null,230],6774:[null,230],6775:[null,230],6776:[null,230],6777:[null,230],6778:[null,230],6779:[null,230],6780:[null,230],6783:[null,220],6832:[null,230],6833:[null,230],6834:[null,230],6835:[null,230],6836:[null,230],6837:[null,220],6838:[null,220],6839:[null,220],6840:[null,220],6841:[null,220],6842:[null,220],6843:[null,230],6844:[null,230],6845:[null,220]},6912:{6917:[null,null,{6965:6918}],6918:[[6917,6965]],6919:[null,null,{6965:6920}],6920:[[6919,6965]],6921:[null,null,{6965:6922}],6922:[[6921,6965]],6923:[null,null,{6965:6924}],6924:[[6923,6965]],6925:[null,null,{6965:6926}],6926:[[6925,6965]],6929:[null,null,{6965:6930}],6930:[[6929,6965]],6964:[null,7],6970:[null,null,{6965:6971}],6971:[[6970,6965]],6972:[null,null,{6965:6973}],6973:[[6972,6965]],6974:[null,null,{6965:6976}],6975:[null,null,{6965:6977}],6976:[[6974,6965]],6977:[[6975,6965]],6978:[null,null,{6965:6979}],6979:[[6978,6965]],6980:[null,9],7019:[null,230],7020:[null,220],7021:[null,230],7022:[null,230],7023:[null,230],7024:[null,230],7025:[null,230],7026:[null,230],7027:[null,230],7082:[null,9],7083:[null,9],7142:[null,7],7154:[null,9],7155:[null,9]},7168:{7223:[null,7],7376:[null,230],7377:[null,230],7378:[null,230],7380:[null,1],7381:[null,220],7382:[null,220],7383:[null,220],7384:[null,220],7385:[null,220],7386:[null,230],7387:[null,230],7388:[null,220],7389:[null,220],7390:[null,220],7391:[null,220],7392:[null,230],7394:[null,1],7395:[null,1],7396:[null,1],7397:[null,1],7398:[null,1],7399:[null,1],7400:[null,1],7405:[null,220],7412:[null,230],7416:[null,230],7417:[null,230]},7424:{7468:[[65],256],7469:[[198],256],7470:[[66],256],7472:[[68],256],7473:[[69],256],7474:[[398],256],7475:[[71],256],7476:[[72],256],7477:[[73],256],7478:[[74],256],7479:[[75],256],7480:[[76],256],7481:[[77],256],7482:[[78],256],7484:[[79],256],7485:[[546],256],7486:[[80],256],7487:[[82],256],7488:[[84],256],7489:[[85],256],7490:[[87],256],7491:[[97],256],7492:[[592],256],7493:[[593],256],7494:[[7426],256],7495:[[98],256],7496:[[100],256],7497:[[101],256],7498:[[601],256],7499:[[603],256],7500:[[604],256],7501:[[103],256],7503:[[107],256],7504:[[109],256],7505:[[331],256],7506:[[111],256],7507:[[596],256],7508:[[7446],256],7509:[[7447],256],7510:[[112],256],7511:[[116],256],7512:[[117],256],7513:[[7453],256],7514:[[623],256],7515:[[118],256],7516:[[7461],256],7517:[[946],256],7518:[[947],256],7519:[[948],256],7520:[[966],256],7521:[[967],256],7522:[[105],256],7523:[[114],256],7524:[[117],256],7525:[[118],256],7526:[[946],256],7527:[[947],256],7528:[[961],256],7529:[[966],256],7530:[[967],256],7544:[[1085],256],7579:[[594],256],7580:[[99],256],7581:[[597],256],7582:[[240],256],7583:[[604],256],7584:[[102],256],7585:[[607],256],7586:[[609],256],7587:[[613],256],7588:[[616],256],7589:[[617],256],7590:[[618],256],7591:[[7547],256],7592:[[669],256],7593:[[621],256],7594:[[7557],256],7595:[[671],256],7596:[[625],256],7597:[[624],256],7598:[[626],256],7599:[[627],256],7600:[[628],256],7601:[[629],256],7602:[[632],256],7603:[[642],256],7604:[[643],256],7605:[[427],256],7606:[[649],256],7607:[[650],256],7608:[[7452],256],7609:[[651],256],7610:[[652],256],7611:[[122],256],7612:[[656],256],7613:[[657],256],7614:[[658],256],7615:[[952],256],7616:[null,230],7617:[null,230],7618:[null,220],7619:[null,230],7620:[null,230],7621:[null,230],7622:[null,230],7623:[null,230],7624:[null,230],7625:[null,230],7626:[null,220],7627:[null,230],7628:[null,230],7629:[null,234],7630:[null,214],7631:[null,220],7632:[null,202],7633:[null,230],7634:[null,230],7635:[null,230],7636:[null,230],7637:[null,230],7638:[null,230],7639:[null,230],7640:[null,230],7641:[null,230],7642:[null,230],7643:[null,230],7644:[null,230],7645:[null,230],7646:[null,230],7647:[null,230],7648:[null,230],7649:[null,230],7650:[null,230],7651:[null,230],7652:[null,230],7653:[null,230],7654:[null,230],7655:[null,230],7656:[null,230],7657:[null,230],7658:[null,230],7659:[null,230],7660:[null,230],7661:[null,230],7662:[null,230],7663:[null,230],7664:[null,230],7665:[null,230],7666:[null,230],7667:[null,230],7668:[null,230],7669:[null,230],7676:[null,233],7677:[null,220],7678:[null,230],7679:[null,220]},7680:{7680:[[65,805]],7681:[[97,805]],7682:[[66,775]],7683:[[98,775]],7684:[[66,803]],7685:[[98,803]],7686:[[66,817]],7687:[[98,817]],7688:[[199,769]],7689:[[231,769]],7690:[[68,775]],7691:[[100,775]],7692:[[68,803]],7693:[[100,803]],7694:[[68,817]],7695:[[100,817]],7696:[[68,807]],7697:[[100,807]],7698:[[68,813]],7699:[[100,813]],7700:[[274,768]],7701:[[275,768]],7702:[[274,769]],7703:[[275,769]],7704:[[69,813]],7705:[[101,813]],7706:[[69,816]],7707:[[101,816]],7708:[[552,774]],7709:[[553,774]],7710:[[70,775]],7711:[[102,775]],7712:[[71,772]],7713:[[103,772]],7714:[[72,775]],7715:[[104,775]],7716:[[72,803]],7717:[[104,803]],7718:[[72,776]],7719:[[104,776]],7720:[[72,807]],7721:[[104,807]],7722:[[72,814]],7723:[[104,814]],7724:[[73,816]],7725:[[105,816]],7726:[[207,769]],7727:[[239,769]],7728:[[75,769]],7729:[[107,769]],7730:[[75,803]],7731:[[107,803]],7732:[[75,817]],7733:[[107,817]],7734:[[76,803],null,{772:7736}],7735:[[108,803],null,{772:7737}],7736:[[7734,772]],7737:[[7735,772]],7738:[[76,817]],7739:[[108,817]],7740:[[76,813]],7741:[[108,813]],7742:[[77,769]],7743:[[109,769]],7744:[[77,775]],7745:[[109,775]],7746:[[77,803]],7747:[[109,803]],7748:[[78,775]],7749:[[110,775]],7750:[[78,803]],7751:[[110,803]],7752:[[78,817]],7753:[[110,817]],7754:[[78,813]],7755:[[110,813]],7756:[[213,769]],7757:[[245,769]],7758:[[213,776]],7759:[[245,776]],7760:[[332,768]],7761:[[333,768]],7762:[[332,769]],7763:[[333,769]],7764:[[80,769]],7765:[[112,769]],7766:[[80,775]],7767:[[112,775]],7768:[[82,775]],7769:[[114,775]],7770:[[82,803],null,{772:7772}],7771:[[114,803],null,{772:7773}],7772:[[7770,772]],7773:[[7771,772]],7774:[[82,817]],7775:[[114,817]],7776:[[83,775]],7777:[[115,775]],7778:[[83,803],null,{775:7784}],7779:[[115,803],null,{775:7785}],7780:[[346,775]],7781:[[347,775]],7782:[[352,775]],7783:[[353,775]],7784:[[7778,775]],7785:[[7779,775]],7786:[[84,775]],7787:[[116,775]],7788:[[84,803]],7789:[[116,803]],7790:[[84,817]],7791:[[116,817]],7792:[[84,813]],7793:[[116,813]],7794:[[85,804]],7795:[[117,804]],7796:[[85,816]],7797:[[117,816]],7798:[[85,813]],7799:[[117,813]],7800:[[360,769]],7801:[[361,769]],7802:[[362,776]],7803:[[363,776]],7804:[[86,771]],7805:[[118,771]],7806:[[86,803]],7807:[[118,803]],7808:[[87,768]],7809:[[119,768]],7810:[[87,769]],7811:[[119,769]],7812:[[87,776]],7813:[[119,776]],7814:[[87,775]],7815:[[119,775]],7816:[[87,803]],7817:[[119,803]],7818:[[88,775]],7819:[[120,775]],7820:[[88,776]],7821:[[120,776]],7822:[[89,775]],7823:[[121,775]],7824:[[90,770]],7825:[[122,770]],7826:[[90,803]],7827:[[122,803]],7828:[[90,817]],7829:[[122,817]],7830:[[104,817]],7831:[[116,776]],7832:[[119,778]],7833:[[121,778]],7834:[[97,702],256],7835:[[383,775]],7840:[[65,803],null,{770:7852,774:7862}],7841:[[97,803],null,{770:7853,774:7863}],7842:[[65,777]],7843:[[97,777]],7844:[[194,769]],7845:[[226,769]],7846:[[194,768]],7847:[[226,768]],7848:[[194,777]],7849:[[226,777]],7850:[[194,771]],7851:[[226,771]],7852:[[7840,770]],7853:[[7841,770]],7854:[[258,769]],7855:[[259,769]],7856:[[258,768]],7857:[[259,768]],7858:[[258,777]],7859:[[259,777]],7860:[[258,771]],7861:[[259,771]],7862:[[7840,774]],7863:[[7841,774]],7864:[[69,803],null,{770:7878}],7865:[[101,803],null,{770:7879}],7866:[[69,777]],7867:[[101,777]],7868:[[69,771]],7869:[[101,771]],7870:[[202,769]],7871:[[234,769]],7872:[[202,768]],7873:[[234,768]],7874:[[202,777]],7875:[[234,777]],7876:[[202,771]],7877:[[234,771]],7878:[[7864,770]],7879:[[7865,770]],7880:[[73,777]],7881:[[105,777]],7882:[[73,803]],7883:[[105,803]],7884:[[79,803],null,{770:7896}],7885:[[111,803],null,{770:7897}],7886:[[79,777]],7887:[[111,777]],7888:[[212,769]],7889:[[244,769]],7890:[[212,768]],7891:[[244,768]],7892:[[212,777]],7893:[[244,777]],7894:[[212,771]],7895:[[244,771]],7896:[[7884,770]],7897:[[7885,770]],7898:[[416,769]],7899:[[417,769]],7900:[[416,768]],7901:[[417,768]],7902:[[416,777]],7903:[[417,777]],7904:[[416,771]],7905:[[417,771]],7906:[[416,803]],7907:[[417,803]],7908:[[85,803]],7909:[[117,803]],7910:[[85,777]],7911:[[117,777]],7912:[[431,769]],7913:[[432,769]],7914:[[431,768]],7915:[[432,768]],7916:[[431,777]],7917:[[432,777]],7918:[[431,771]],7919:[[432,771]],7920:[[431,803]],7921:[[432,803]],7922:[[89,768]],7923:[[121,768]],7924:[[89,803]],7925:[[121,803]],7926:[[89,777]],7927:[[121,777]],7928:[[89,771]],7929:[[121,771]]},7936:{7936:[[945,787],null,{768:7938,769:7940,834:7942,837:8064}],7937:[[945,788],null,{768:7939,769:7941,834:7943,837:8065}],7938:[[7936,768],null,{837:8066}],7939:[[7937,768],null,{837:8067}],7940:[[7936,769],null,{837:8068}],7941:[[7937,769],null,{837:8069}],7942:[[7936,834],null,{837:8070}],7943:[[7937,834],null,{837:8071}],7944:[[913,787],null,{768:7946,769:7948,834:7950,837:8072}],7945:[[913,788],null,{768:7947,769:7949,834:7951,837:8073}],7946:[[7944,768],null,{837:8074}],7947:[[7945,768],null,{837:8075}],7948:[[7944,769],null,{837:8076}],7949:[[7945,769],null,{837:8077}],7950:[[7944,834],null,{837:8078}],7951:[[7945,834],null,{837:8079}],7952:[[949,787],null,{768:7954,769:7956}],7953:[[949,788],null,{768:7955,769:7957}],7954:[[7952,768]],7955:[[7953,768]],7956:[[7952,769]],7957:[[7953,769]],7960:[[917,787],null,{768:7962,769:7964}],7961:[[917,788],null,{768:7963,769:7965}],7962:[[7960,768]],7963:[[7961,768]],7964:[[7960,769]],7965:[[7961,769]],7968:[[951,787],null,{768:7970,769:7972,834:7974,837:8080}],7969:[[951,788],null,{768:7971,769:7973,834:7975,837:8081}],7970:[[7968,768],null,{837:8082}],7971:[[7969,768],null,{837:8083}],7972:[[7968,769],null,{837:8084}],7973:[[7969,769],null,{837:8085}],7974:[[7968,834],null,{837:8086}],7975:[[7969,834],null,{837:8087}],7976:[[919,787],null,{768:7978,769:7980,834:7982,837:8088}],7977:[[919,788],null,{768:7979,769:7981,834:7983,837:8089}],7978:[[7976,768],null,{837:8090}],7979:[[7977,768],null,{837:8091}],7980:[[7976,769],null,{837:8092}],7981:[[7977,769],null,{837:8093}],7982:[[7976,834],null,{837:8094}],7983:[[7977,834],null,{837:8095}],7984:[[953,787],null,{768:7986,769:7988,834:7990}],7985:[[953,788],null,{768:7987,769:7989,834:7991}],7986:[[7984,768]],7987:[[7985,768]],7988:[[7984,769]],7989:[[7985,769]],7990:[[7984,834]],7991:[[7985,834]],7992:[[921,787],null,{768:7994,769:7996,834:7998}],7993:[[921,788],null,{768:7995,769:7997,834:7999}],7994:[[7992,768]],7995:[[7993,768]],7996:[[7992,769]],7997:[[7993,769]],7998:[[7992,834]],7999:[[7993,834]],8000:[[959,787],null,{768:8002,769:8004}],8001:[[959,788],null,{768:8003,769:8005}],8002:[[8e3,768]],8003:[[8001,768]],8004:[[8e3,769]],8005:[[8001,769]],8008:[[927,787],null,{768:8010,769:8012}],8009:[[927,788],null,{768:8011,769:8013}],8010:[[8008,768]],8011:[[8009,768]],8012:[[8008,769]],8013:[[8009,769]],8016:[[965,787],null,{768:8018,769:8020,834:8022}],8017:[[965,788],null,{768:8019,769:8021,834:8023}],8018:[[8016,768]],8019:[[8017,768]],8020:[[8016,769]],8021:[[8017,769]],8022:[[8016,834]],8023:[[8017,834]],8025:[[933,788],null,{768:8027,769:8029,834:8031}],8027:[[8025,768]],8029:[[8025,769]],8031:[[8025,834]],8032:[[969,787],null,{768:8034,769:8036,834:8038,837:8096}],8033:[[969,788],null,{768:8035,769:8037,834:8039,837:8097}],8034:[[8032,768],null,{837:8098}],8035:[[8033,768],null,{837:8099}],8036:[[8032,769],null,{837:8100}],8037:[[8033,769],null,{837:8101}],8038:[[8032,834],null,{837:8102}],8039:[[8033,834],null,{837:8103}],8040:[[937,787],null,{768:8042,769:8044,834:8046,837:8104}],8041:[[937,788],null,{768:8043,769:8045,834:8047,837:8105}],8042:[[8040,768],null,{837:8106}],8043:[[8041,768],null,{837:8107}],8044:[[8040,769],null,{837:8108}],8045:[[8041,769],null,{837:8109}],8046:[[8040,834],null,{837:8110}],8047:[[8041,834],null,{837:8111}],8048:[[945,768],null,{837:8114}],8049:[[940]],8050:[[949,768]],8051:[[941]],8052:[[951,768],null,{837:8130}],8053:[[942]],8054:[[953,768]],8055:[[943]],8056:[[959,768]],8057:[[972]],8058:[[965,768]],8059:[[973]],8060:[[969,768],null,{837:8178}],8061:[[974]],8064:[[7936,837]],8065:[[7937,837]],8066:[[7938,837]],8067:[[7939,837]],8068:[[7940,837]],8069:[[7941,837]],8070:[[7942,837]],8071:[[7943,837]],8072:[[7944,837]],8073:[[7945,837]],8074:[[7946,837]],8075:[[7947,837]],8076:[[7948,837]],8077:[[7949,837]],8078:[[7950,837]],8079:[[7951,837]],8080:[[7968,837]],8081:[[7969,837]],8082:[[7970,837]],8083:[[7971,837]],8084:[[7972,837]],8085:[[7973,837]],8086:[[7974,837]],8087:[[7975,837]],8088:[[7976,837]],8089:[[7977,837]],8090:[[7978,837]],8091:[[7979,837]],8092:[[7980,837]],8093:[[7981,837]],8094:[[7982,837]],8095:[[7983,837]],8096:[[8032,837]],8097:[[8033,837]],8098:[[8034,837]],8099:[[8035,837]],8100:[[8036,837]],8101:[[8037,837]],8102:[[8038,837]],8103:[[8039,837]],8104:[[8040,837]],8105:[[8041,837]],8106:[[8042,837]],8107:[[8043,837]],8108:[[8044,837]],8109:[[8045,837]],8110:[[8046,837]],8111:[[8047,837]],8112:[[945,774]],8113:[[945,772]],8114:[[8048,837]],8115:[[945,837]],8116:[[940,837]],8118:[[945,834],null,{837:8119}],8119:[[8118,837]],8120:[[913,774]],8121:[[913,772]],8122:[[913,768]],8123:[[902]],8124:[[913,837]],8125:[[32,787],256],8126:[[953]],8127:[[32,787],256,{768:8141,769:8142,834:8143}],8128:[[32,834],256],8129:[[168,834]],8130:[[8052,837]],8131:[[951,837]],8132:[[942,837]],8134:[[951,834],null,{837:8135}],8135:[[8134,837]],8136:[[917,768]],8137:[[904]],8138:[[919,768]],8139:[[905]],8140:[[919,837]],8141:[[8127,768]],8142:[[8127,769]],8143:[[8127,834]],8144:[[953,774]],8145:[[953,772]],8146:[[970,768]],8147:[[912]],8150:[[953,834]],8151:[[970,834]],8152:[[921,774]],8153:[[921,772]],8154:[[921,768]],8155:[[906]],8157:[[8190,768]],8158:[[8190,769]],8159:[[8190,834]],8160:[[965,774]],8161:[[965,772]],8162:[[971,768]],8163:[[944]],8164:[[961,787]],8165:[[961,788]],8166:[[965,834]],8167:[[971,834]],8168:[[933,774]],8169:[[933,772]],8170:[[933,768]],8171:[[910]],8172:[[929,788]],8173:[[168,768]],8174:[[901]],8175:[[96]],8178:[[8060,837]],8179:[[969,837]],8180:[[974,837]],8182:[[969,834],null,{837:8183}],8183:[[8182,837]],8184:[[927,768]],8185:[[908]],8186:[[937,768]],8187:[[911]],8188:[[937,837]],8189:[[180]],8190:[[32,788],256,{768:8157,769:8158,834:8159}]},8192:{8192:[[8194]],8193:[[8195]],8194:[[32],256],8195:[[32],256],8196:[[32],256],8197:[[32],256],8198:[[32],256],8199:[[32],256],8200:[[32],256],8201:[[32],256],8202:[[32],256],8209:[[8208],256],8215:[[32,819],256],8228:[[46],256],8229:[[46,46],256],8230:[[46,46,46],256],8239:[[32],256],8243:[[8242,8242],256],8244:[[8242,8242,8242],256],8246:[[8245,8245],256],8247:[[8245,8245,8245],256],8252:[[33,33],256],8254:[[32,773],256],8263:[[63,63],256],8264:[[63,33],256],8265:[[33,63],256],8279:[[8242,8242,8242,8242],256],8287:[[32],256],8304:[[48],256],8305:[[105],256],8308:[[52],256],8309:[[53],256],8310:[[54],256],8311:[[55],256],8312:[[56],256],8313:[[57],256],8314:[[43],256],8315:[[8722],256],8316:[[61],256],8317:[[40],256],8318:[[41],256],8319:[[110],256],8320:[[48],256],8321:[[49],256],8322:[[50],256],8323:[[51],256],8324:[[52],256],8325:[[53],256],8326:[[54],256],8327:[[55],256],8328:[[56],256],8329:[[57],256],8330:[[43],256],8331:[[8722],256],8332:[[61],256],8333:[[40],256],8334:[[41],256],8336:[[97],256],8337:[[101],256],8338:[[111],256],8339:[[120],256],8340:[[601],256],8341:[[104],256],8342:[[107],256],8343:[[108],256],8344:[[109],256],8345:[[110],256],8346:[[112],256],8347:[[115],256],8348:[[116],256],8360:[[82,115],256],8400:[null,230],8401:[null,230],8402:[null,1],8403:[null,1],8404:[null,230],8405:[null,230],8406:[null,230],8407:[null,230],8408:[null,1],8409:[null,1],8410:[null,1],8411:[null,230],8412:[null,230],8417:[null,230],8421:[null,1],8422:[null,1],8423:[null,230],8424:[null,220],8425:[null,230],8426:[null,1],8427:[null,1],8428:[null,220],8429:[null,220],8430:[null,220],8431:[null,220],8432:[null,230]},8448:{8448:[[97,47,99],256],8449:[[97,47,115],256],8450:[[67],256],8451:[[176,67],256],8453:[[99,47,111],256],8454:[[99,47,117],256],8455:[[400],256],8457:[[176,70],256],8458:[[103],256],8459:[[72],256],8460:[[72],256],8461:[[72],256],8462:[[104],256],8463:[[295],256],8464:[[73],256],8465:[[73],256],8466:[[76],256],8467:[[108],256],8469:[[78],256],8470:[[78,111],256],8473:[[80],256],8474:[[81],256],8475:[[82],256],8476:[[82],256],8477:[[82],256],8480:[[83,77],256],8481:[[84,69,76],256],8482:[[84,77],256],8484:[[90],256],8486:[[937]],8488:[[90],256],8490:[[75]],8491:[[197]],8492:[[66],256],8493:[[67],256],8495:[[101],256],8496:[[69],256],8497:[[70],256],8499:[[77],256],8500:[[111],256],8501:[[1488],256],8502:[[1489],256],8503:[[1490],256],8504:[[1491],256],8505:[[105],256],8507:[[70,65,88],256],8508:[[960],256],8509:[[947],256],8510:[[915],256],8511:[[928],256],8512:[[8721],256],8517:[[68],256],8518:[[100],256],8519:[[101],256],8520:[[105],256],8521:[[106],256],8528:[[49,8260,55],256],8529:[[49,8260,57],256],8530:[[49,8260,49,48],256],8531:[[49,8260,51],256],8532:[[50,8260,51],256],8533:[[49,8260,53],256],8534:[[50,8260,53],256],8535:[[51,8260,53],256],8536:[[52,8260,53],256],8537:[[49,8260,54],256],8538:[[53,8260,54],256],8539:[[49,8260,56],256],8540:[[51,8260,56],256],8541:[[53,8260,56],256],8542:[[55,8260,56],256],8543:[[49,8260],256],8544:[[73],256],8545:[[73,73],256],8546:[[73,73,73],256],8547:[[73,86],256],8548:[[86],256],8549:[[86,73],256],8550:[[86,73,73],256],8551:[[86,73,73,73],256],8552:[[73,88],256],8553:[[88],256],8554:[[88,73],256],8555:[[88,73,73],256],8556:[[76],256],8557:[[67],256],8558:[[68],256],8559:[[77],256],8560:[[105],256],8561:[[105,105],256],8562:[[105,105,105],256],8563:[[105,118],256],8564:[[118],256],8565:[[118,105],256],8566:[[118,105,105],256],8567:[[118,105,105,105],256],8568:[[105,120],256],8569:[[120],256],8570:[[120,105],256],8571:[[120,105,105],256],8572:[[108],256],8573:[[99],256],8574:[[100],256],8575:[[109],256],8585:[[48,8260,51],256],8592:[null,null,{824:8602}],8594:[null,null,{824:8603}],8596:[null,null,{824:8622}],8602:[[8592,824]],8603:[[8594,824]],8622:[[8596,824]],8653:[[8656,824]],8654:[[8660,824]],8655:[[8658,824]],8656:[null,null,{824:8653}],8658:[null,null,{824:8655}],8660:[null,null,{824:8654}]},8704:{8707:[null,null,{824:8708}],8708:[[8707,824]],8712:[null,null,{824:8713}],8713:[[8712,824]],8715:[null,null,{824:8716}],8716:[[8715,824]],8739:[null,null,{824:8740}],8740:[[8739,824]],8741:[null,null,{824:8742}],8742:[[8741,824]],8748:[[8747,8747],256],8749:[[8747,8747,8747],256],8751:[[8750,8750],256],8752:[[8750,8750,8750],256],8764:[null,null,{824:8769}],8769:[[8764,824]],8771:[null,null,{824:8772}],8772:[[8771,824]],8773:[null,null,{824:8775}],8775:[[8773,824]],8776:[null,null,{824:8777}],8777:[[8776,824]],8781:[null,null,{824:8813}],8800:[[61,824]],8801:[null,null,{824:8802}],8802:[[8801,824]],8804:[null,null,{824:8816}],8805:[null,null,{824:8817}],8813:[[8781,824]],8814:[[60,824]],8815:[[62,824]],8816:[[8804,824]],8817:[[8805,824]],8818:[null,null,{824:8820}],8819:[null,null,{824:8821}],8820:[[8818,824]],8821:[[8819,824]],8822:[null,null,{824:8824}],8823:[null,null,{824:8825}],8824:[[8822,824]],8825:[[8823,824]],8826:[null,null,{824:8832}],8827:[null,null,{824:8833}],8828:[null,null,{824:8928}],8829:[null,null,{824:8929}],8832:[[8826,824]],8833:[[8827,824]],8834:[null,null,{824:8836}],8835:[null,null,{824:8837}],8836:[[8834,824]],8837:[[8835,824]],8838:[null,null,{824:8840}],8839:[null,null,{824:8841}],8840:[[8838,824]],8841:[[8839,824]],8849:[null,null,{824:8930}],8850:[null,null,{824:8931}],8866:[null,null,{824:8876}],8872:[null,null,{824:8877}],8873:[null,null,{824:8878}],8875:[null,null,{824:8879}],8876:[[8866,824]],8877:[[8872,824]],8878:[[8873,824]],8879:[[8875,824]],8882:[null,null,{824:8938}],8883:[null,null,{824:8939}],8884:[null,null,{824:8940}],8885:[null,null,{824:8941}],8928:[[8828,824]],8929:[[8829,824]],8930:[[8849,824]],8931:[[8850,824]],8938:[[8882,824]],8939:[[8883,824]],8940:[[8884,824]],8941:[[8885,824]]},8960:{9001:[[12296]],9002:[[12297]]},9216:{9312:[[49],256],9313:[[50],256],9314:[[51],256],9315:[[52],256],9316:[[53],256],9317:[[54],256],9318:[[55],256],9319:[[56],256],9320:[[57],256],9321:[[49,48],256],9322:[[49,49],256],9323:[[49,50],256],9324:[[49,51],256],9325:[[49,52],256],9326:[[49,53],256],9327:[[49,54],256],9328:[[49,55],256],9329:[[49,56],256],9330:[[49,57],256],9331:[[50,48],256],9332:[[40,49,41],256],9333:[[40,50,41],256],9334:[[40,51,41],256],9335:[[40,52,41],256],9336:[[40,53,41],256],9337:[[40,54,41],256],9338:[[40,55,41],256],9339:[[40,56,41],256],9340:[[40,57,41],256],9341:[[40,49,48,41],256],9342:[[40,49,49,41],256],9343:[[40,49,50,41],256],9344:[[40,49,51,41],256],9345:[[40,49,52,41],256],9346:[[40,49,53,41],256],9347:[[40,49,54,41],256],9348:[[40,49,55,41],256],9349:[[40,49,56,41],256],9350:[[40,49,57,41],256],9351:[[40,50,48,41],256],9352:[[49,46],256],9353:[[50,46],256],9354:[[51,46],256],9355:[[52,46],256],9356:[[53,46],256],9357:[[54,46],256],9358:[[55,46],256],9359:[[56,46],256],9360:[[57,46],256],9361:[[49,48,46],256],9362:[[49,49,46],256],9363:[[49,50,46],256],9364:[[49,51,46],256],9365:[[49,52,46],256],9366:[[49,53,46],256],9367:[[49,54,46],256],9368:[[49,55,46],256],9369:[[49,56,46],256],9370:[[49,57,46],256],9371:[[50,48,46],256],9372:[[40,97,41],256],9373:[[40,98,41],256],9374:[[40,99,41],256],9375:[[40,100,41],256],9376:[[40,101,41],256],9377:[[40,102,41],256],9378:[[40,103,41],256],9379:[[40,104,41],256],9380:[[40,105,41],256],9381:[[40,106,41],256],9382:[[40,107,41],256],9383:[[40,108,41],256],9384:[[40,109,41],256],9385:[[40,110,41],256],9386:[[40,111,41],256],9387:[[40,112,41],256],9388:[[40,113,41],256],9389:[[40,114,41],256],9390:[[40,115,41],256],9391:[[40,116,41],256],9392:[[40,117,41],256],9393:[[40,118,41],256],9394:[[40,119,41],256],9395:[[40,120,41],256],9396:[[40,121,41],256],9397:[[40,122,41],256],9398:[[65],256],9399:[[66],256],9400:[[67],256],9401:[[68],256],9402:[[69],256],9403:[[70],256],9404:[[71],256],9405:[[72],256],9406:[[73],256],9407:[[74],256],9408:[[75],256],9409:[[76],256],9410:[[77],256],9411:[[78],256],9412:[[79],256],9413:[[80],256],9414:[[81],256],9415:[[82],256],9416:[[83],256],9417:[[84],256],9418:[[85],256],9419:[[86],256],9420:[[87],256],9421:[[88],256],9422:[[89],256],9423:[[90],256],9424:[[97],256],9425:[[98],256],9426:[[99],256],9427:[[100],256],9428:[[101],256],9429:[[102],256],9430:[[103],256],9431:[[104],256],9432:[[105],256],9433:[[106],256],9434:[[107],256],9435:[[108],256],9436:[[109],256],9437:[[110],256],9438:[[111],256],9439:[[112],256],9440:[[113],256],9441:[[114],256],9442:[[115],256],9443:[[116],256],9444:[[117],256],9445:[[118],256],9446:[[119],256],9447:[[120],256],9448:[[121],256],9449:[[122],256],9450:[[48],256]},10752:{10764:[[8747,8747,8747,8747],256],10868:[[58,58,61],256],10869:[[61,61],256],10870:[[61,61,61],256],10972:[[10973,824],512]},11264:{11388:[[106],256],11389:[[86],256],11503:[null,230],11504:[null,230],11505:[null,230]},11520:{11631:[[11617],256],11647:[null,9],11744:[null,230],11745:[null,230],11746:[null,230],11747:[null,230],11748:[null,230],11749:[null,230],11750:[null,230],11751:[null,230],11752:[null,230],11753:[null,230],11754:[null,230],11755:[null,230],11756:[null,230],11757:[null,230],11758:[null,230],11759:[null,230],11760:[null,230],11761:[null,230],11762:[null,230],11763:[null,230],11764:[null,230],11765:[null,230],11766:[null,230],11767:[null,230],11768:[null,230],11769:[null,230],11770:[null,230],11771:[null,230],11772:[null,230],11773:[null,230],11774:[null,230],11775:[null,230]},11776:{11935:[[27597],256],12019:[[40863],256]},12032:{12032:[[19968],256],12033:[[20008],256],12034:[[20022],256],12035:[[20031],256],12036:[[20057],256],12037:[[20101],256],12038:[[20108],256],12039:[[20128],256],12040:[[20154],256],12041:[[20799],256],12042:[[20837],256],12043:[[20843],256],12044:[[20866],256],12045:[[20886],256],12046:[[20907],256],12047:[[20960],256],12048:[[20981],256],12049:[[20992],256],12050:[[21147],256],12051:[[21241],256],12052:[[21269],256],12053:[[21274],256],12054:[[21304],256],12055:[[21313],256],12056:[[21340],256],12057:[[21353],256],12058:[[21378],256],12059:[[21430],256],12060:[[21448],256],12061:[[21475],256],12062:[[22231],256],12063:[[22303],256],12064:[[22763],256],12065:[[22786],256],12066:[[22794],256],12067:[[22805],256],12068:[[22823],256],12069:[[22899],256],12070:[[23376],256],12071:[[23424],256],12072:[[23544],256],12073:[[23567],256],12074:[[23586],256],12075:[[23608],256],12076:[[23662],256],12077:[[23665],256],12078:[[24027],256],12079:[[24037],256],12080:[[24049],256],12081:[[24062],256],12082:[[24178],256],12083:[[24186],256],12084:[[24191],256],12085:[[24308],256],12086:[[24318],256],12087:[[24331],256],12088:[[24339],256],12089:[[24400],256],12090:[[24417],256],12091:[[24435],256],12092:[[24515],256],12093:[[25096],256],12094:[[25142],256],12095:[[25163],256],12096:[[25903],256],12097:[[25908],256],12098:[[25991],256],12099:[[26007],256],12100:[[26020],256],12101:[[26041],256],12102:[[26080],256],12103:[[26085],256],12104:[[26352],256],12105:[[26376],256],12106:[[26408],256],12107:[[27424],256],12108:[[27490],256],12109:[[27513],256],12110:[[27571],256],12111:[[27595],256],12112:[[27604],256],12113:[[27611],256],12114:[[27663],256],12115:[[27668],256],12116:[[27700],256],12117:[[28779],256],12118:[[29226],256],12119:[[29238],256],12120:[[29243],256],12121:[[29247],256],12122:[[29255],256],12123:[[29273],256],12124:[[29275],256],12125:[[29356],256],12126:[[29572],256],12127:[[29577],256],12128:[[29916],256],12129:[[29926],256],12130:[[29976],256],12131:[[29983],256],12132:[[29992],256],12133:[[3e4],256],12134:[[30091],256],12135:[[30098],256],12136:[[30326],256],12137:[[30333],256],12138:[[30382],256],12139:[[30399],256],12140:[[30446],256],12141:[[30683],256],12142:[[30690],256],12143:[[30707],256],12144:[[31034],256],12145:[[31160],256],12146:[[31166],256],12147:[[31348],256],12148:[[31435],256],12149:[[31481],256],12150:[[31859],256],12151:[[31992],256],12152:[[32566],256],12153:[[32593],256],12154:[[32650],256],12155:[[32701],256],12156:[[32769],256],12157:[[32780],256],12158:[[32786],256],12159:[[32819],256],12160:[[32895],256],12161:[[32905],256],12162:[[33251],256],12163:[[33258],256],12164:[[33267],256],12165:[[33276],256],12166:[[33292],256],12167:[[33307],256],12168:[[33311],256],12169:[[33390],256],12170:[[33394],256],12171:[[33400],256],12172:[[34381],256],12173:[[34411],256],12174:[[34880],256],12175:[[34892],256],12176:[[34915],256],12177:[[35198],256],12178:[[35211],256],12179:[[35282],256],12180:[[35328],256],12181:[[35895],256],12182:[[35910],256],12183:[[35925],256],12184:[[35960],256],12185:[[35997],256],12186:[[36196],256],12187:[[36208],256],12188:[[36275],256],12189:[[36523],256],12190:[[36554],256],12191:[[36763],256],12192:[[36784],256],12193:[[36789],256],12194:[[37009],256],12195:[[37193],256],12196:[[37318],256],12197:[[37324],256],12198:[[37329],256],12199:[[38263],256],12200:[[38272],256],12201:[[38428],256],12202:[[38582],256],12203:[[38585],256],12204:[[38632],256],12205:[[38737],256],12206:[[38750],256],12207:[[38754],256],12208:[[38761],256],12209:[[38859],256],12210:[[38893],256],12211:[[38899],256],12212:[[38913],256],12213:[[39080],256],12214:[[39131],256],12215:[[39135],256],12216:[[39318],256],12217:[[39321],256],12218:[[39340],256],12219:[[39592],256],12220:[[39640],256],12221:[[39647],256],12222:[[39717],256],12223:[[39727],256],12224:[[39730],256],12225:[[39740],256],12226:[[39770],256],12227:[[40165],256],12228:[[40565],256],12229:[[40575],256],12230:[[40613],256],12231:[[40635],256],12232:[[40643],256],12233:[[40653],256],12234:[[40657],256],12235:[[40697],256],12236:[[40701],256],12237:[[40718],256],12238:[[40723],256],12239:[[40736],256],12240:[[40763],256],12241:[[40778],256],12242:[[40786],256],12243:[[40845],256],12244:[[40860],256],12245:[[40864],256]},12288:{12288:[[32],256],12330:[null,218],12331:[null,228],12332:[null,232],12333:[null,222],12334:[null,224],12335:[null,224],12342:[[12306],256],12344:[[21313],256],12345:[[21316],256],12346:[[21317],256],12358:[null,null,{12441:12436}],12363:[null,null,{12441:12364}],12364:[[12363,12441]],12365:[null,null,{12441:12366}],12366:[[12365,12441]],12367:[null,null,{12441:12368}],12368:[[12367,12441]],12369:[null,null,{12441:12370}],12370:[[12369,12441]],12371:[null,null,{12441:12372}],12372:[[12371,12441]],12373:[null,null,{12441:12374}],12374:[[12373,12441]],12375:[null,null,{12441:12376}],12376:[[12375,12441]],12377:[null,null,{12441:12378}],12378:[[12377,12441]],12379:[null,null,{12441:12380}],12380:[[12379,12441]],12381:[null,null,{12441:12382}],12382:[[12381,12441]],12383:[null,null,{12441:12384}],12384:[[12383,12441]],12385:[null,null,{12441:12386}],12386:[[12385,12441]],12388:[null,null,{12441:12389}],12389:[[12388,12441]],12390:[null,null,{12441:12391}],12391:[[12390,12441]],12392:[null,null,{12441:12393}],12393:[[12392,12441]],12399:[null,null,{12441:12400,12442:12401}],12400:[[12399,12441]],12401:[[12399,12442]],12402:[null,null,{12441:12403,12442:12404}],12403:[[12402,12441]],12404:[[12402,12442]],12405:[null,null,{12441:12406,12442:12407}],12406:[[12405,12441]],12407:[[12405,12442]],12408:[null,null,{12441:12409,12442:12410}],12409:[[12408,12441]],12410:[[12408,12442]],12411:[null,null,{12441:12412,12442:12413}],12412:[[12411,12441]],12413:[[12411,12442]],12436:[[12358,12441]],12441:[null,8],12442:[null,8],12443:[[32,12441],256],12444:[[32,12442],256],12445:[null,null,{12441:12446}],12446:[[12445,12441]],12447:[[12424,12426],256],12454:[null,null,{12441:12532}],12459:[null,null,{12441:12460}],12460:[[12459,12441]],12461:[null,null,{12441:12462}],12462:[[12461,12441]],12463:[null,null,{12441:12464}],12464:[[12463,12441]],12465:[null,null,{12441:12466}],12466:[[12465,12441]],12467:[null,null,{12441:12468}],12468:[[12467,12441]],12469:[null,null,{12441:12470}],12470:[[12469,12441]],12471:[null,null,{12441:12472}],12472:[[12471,12441]],12473:[null,null,{12441:12474}],12474:[[12473,12441]],12475:[null,null,{12441:12476}],12476:[[12475,12441]],12477:[null,null,{12441:12478}],12478:[[12477,12441]],12479:[null,null,{12441:12480}],12480:[[12479,12441]],12481:[null,null,{12441:12482}],12482:[[12481,12441]],12484:[null,null,{12441:12485}],12485:[[12484,12441]],12486:[null,null,{12441:12487}],12487:[[12486,12441]],12488:[null,null,{12441:12489}],12489:[[12488,12441]],12495:[null,null,{12441:12496,12442:12497}],12496:[[12495,12441]],12497:[[12495,12442]],12498:[null,null,{12441:12499,12442:12500}],12499:[[12498,12441]],12500:[[12498,12442]],12501:[null,null,{12441:12502,12442:12503}],12502:[[12501,12441]],12503:[[12501,12442]],12504:[null,null,{12441:12505,12442:12506}],12505:[[12504,12441]],12506:[[12504,12442]],12507:[null,null,{12441:12508,12442:12509}],12508:[[12507,12441]],12509:[[12507,12442]],12527:[null,null,{12441:12535}],12528:[null,null,{12441:12536}],12529:[null,null,{12441:12537}],12530:[null,null,{12441:12538}],12532:[[12454,12441]],12535:[[12527,12441]],12536:[[12528,12441]],12537:[[12529,12441]],12538:[[12530,12441]],12541:[null,null,{12441:12542}],12542:[[12541,12441]],12543:[[12467,12488],256]},12544:{12593:[[4352],256],12594:[[4353],256],12595:[[4522],256],12596:[[4354],256],12597:[[4524],256],12598:[[4525],256],12599:[[4355],256],12600:[[4356],256],12601:[[4357],256],12602:[[4528],256],12603:[[4529],256],12604:[[4530],256],12605:[[4531],256],12606:[[4532],256],12607:[[4533],256],12608:[[4378],256],12609:[[4358],256],12610:[[4359],256],12611:[[4360],256],12612:[[4385],256],12613:[[4361],256],12614:[[4362],256],12615:[[4363],256],12616:[[4364],256],12617:[[4365],256],12618:[[4366],256],12619:[[4367],256],12620:[[4368],256],12621:[[4369],256],12622:[[4370],256],12623:[[4449],256],12624:[[4450],256],12625:[[4451],256],12626:[[4452],256],12627:[[4453],256],12628:[[4454],256],12629:[[4455],256],12630:[[4456],256],12631:[[4457],256],12632:[[4458],256],12633:[[4459],256],12634:[[4460],256],12635:[[4461],256],12636:[[4462],256],12637:[[4463],256],12638:[[4464],256],12639:[[4465],256],12640:[[4466],256],12641:[[4467],256],12642:[[4468],256],12643:[[4469],256],12644:[[4448],256],12645:[[4372],256],12646:[[4373],256],12647:[[4551],256],12648:[[4552],256],12649:[[4556],256],12650:[[4558],256],12651:[[4563],256],12652:[[4567],256],12653:[[4569],256],12654:[[4380],256],12655:[[4573],256],12656:[[4575],256],12657:[[4381],256],12658:[[4382],256],12659:[[4384],256],12660:[[4386],256],12661:[[4387],256],12662:[[4391],256],12663:[[4393],256],12664:[[4395],256],12665:[[4396],256],12666:[[4397],256],12667:[[4398],256],12668:[[4399],256],12669:[[4402],256],12670:[[4406],256],12671:[[4416],256],12672:[[4423],256],12673:[[4428],256],12674:[[4593],256],12675:[[4594],256],12676:[[4439],256],12677:[[4440],256],12678:[[4441],256],12679:[[4484],256],12680:[[4485],256],12681:[[4488],256],12682:[[4497],256],12683:[[4498],256],12684:[[4500],256],12685:[[4510],256],12686:[[4513],256],12690:[[19968],256],12691:[[20108],256],12692:[[19977],256],12693:[[22235],256],12694:[[19978],256],12695:[[20013],256],12696:[[19979],256],12697:[[30002],256],12698:[[20057],256],12699:[[19993],256],12700:[[19969],256],12701:[[22825],256],12702:[[22320],256],12703:[[20154],256]},12800:{12800:[[40,4352,41],256],12801:[[40,4354,41],256],12802:[[40,4355,41],256],12803:[[40,4357,41],256],12804:[[40,4358,41],256],12805:[[40,4359,41],256],12806:[[40,4361,41],256],12807:[[40,4363,41],256],12808:[[40,4364,41],256],12809:[[40,4366,41],256],12810:[[40,4367,41],256],12811:[[40,4368,41],256],12812:[[40,4369,41],256],12813:[[40,4370,41],256],12814:[[40,4352,4449,41],256],12815:[[40,4354,4449,41],256],12816:[[40,4355,4449,41],256],12817:[[40,4357,4449,41],256],12818:[[40,4358,4449,41],256],12819:[[40,4359,4449,41],256],12820:[[40,4361,4449,41],256],12821:[[40,4363,4449,41],256],12822:[[40,4364,4449,41],256],12823:[[40,4366,4449,41],256],12824:[[40,4367,4449,41],256],12825:[[40,4368,4449,41],256],12826:[[40,4369,4449,41],256],12827:[[40,4370,4449,41],256],12828:[[40,4364,4462,41],256],12829:[[40,4363,4457,4364,4453,4523,41],256],12830:[[40,4363,4457,4370,4462,41],256],12832:[[40,19968,41],256],12833:[[40,20108,41],256],12834:[[40,19977,41],256],12835:[[40,22235,41],256],12836:[[40,20116,41],256],12837:[[40,20845,41],256],12838:[[40,19971,41],256],12839:[[40,20843,41],256],12840:[[40,20061,41],256],12841:[[40,21313,41],256],12842:[[40,26376,41],256],12843:[[40,28779,41],256],12844:[[40,27700,41],256],12845:[[40,26408,41],256],12846:[[40,37329,41],256],12847:[[40,22303,41],256],12848:[[40,26085,41],256],12849:[[40,26666,41],256],12850:[[40,26377,41],256],12851:[[40,31038,41],256],12852:[[40,21517,41],256],12853:[[40,29305,41],256],12854:[[40,36001,41],256],12855:[[40,31069,41],256],12856:[[40,21172,41],256],12857:[[40,20195,41],256],12858:[[40,21628,41],256],12859:[[40,23398,41],256],12860:[[40,30435,41],256],12861:[[40,20225,41],256],12862:[[40,36039,41],256],12863:[[40,21332,41],256],12864:[[40,31085,41],256],12865:[[40,20241,41],256],12866:[[40,33258,41],256],12867:[[40,33267,41],256],12868:[[21839],256],12869:[[24188],256],12870:[[25991],256],12871:[[31631],256],12880:[[80,84,69],256],12881:[[50,49],256],12882:[[50,50],256],12883:[[50,51],256],12884:[[50,52],256],12885:[[50,53],256],12886:[[50,54],256],12887:[[50,55],256],12888:[[50,56],256],12889:[[50,57],256],12890:[[51,48],256],12891:[[51,49],256],12892:[[51,50],256],12893:[[51,51],256],12894:[[51,52],256],12895:[[51,53],256],12896:[[4352],256],12897:[[4354],256],12898:[[4355],256],12899:[[4357],256],12900:[[4358],256],12901:[[4359],256],12902:[[4361],256],12903:[[4363],256],12904:[[4364],256],12905:[[4366],256],12906:[[4367],256],12907:[[4368],256],12908:[[4369],256],12909:[[4370],256],12910:[[4352,4449],256],12911:[[4354,4449],256],12912:[[4355,4449],256],12913:[[4357,4449],256],12914:[[4358,4449],256],12915:[[4359,4449],256],12916:[[4361,4449],256],12917:[[4363,4449],256],12918:[[4364,4449],256],12919:[[4366,4449],256],12920:[[4367,4449],256],12921:[[4368,4449],256],12922:[[4369,4449],256],12923:[[4370,4449],256],12924:[[4366,4449,4535,4352,4457],256],12925:[[4364,4462,4363,4468],256],12926:[[4363,4462],256],12928:[[19968],256],12929:[[20108],256],12930:[[19977],256],12931:[[22235],256],12932:[[20116],256],12933:[[20845],256],12934:[[19971],256],12935:[[20843],256],12936:[[20061],256],12937:[[21313],256],12938:[[26376],256],12939:[[28779],256],12940:[[27700],256],12941:[[26408],256],12942:[[37329],256],12943:[[22303],256],12944:[[26085],256],12945:[[26666],256],12946:[[26377],256],12947:[[31038],256],12948:[[21517],256],12949:[[29305],256],12950:[[36001],256],12951:[[31069],256],12952:[[21172],256],12953:[[31192],256],12954:[[30007],256],12955:[[22899],256],12956:[[36969],256],12957:[[20778],256],12958:[[21360],256],12959:[[27880],256],12960:[[38917],256],12961:[[20241],256],12962:[[20889],256],12963:[[27491],256],12964:[[19978],256],12965:[[20013],256],12966:[[19979],256],12967:[[24038],256],12968:[[21491],256],12969:[[21307],256],12970:[[23447],256],12971:[[23398],256],12972:[[30435],256],12973:[[20225],256],12974:[[36039],256],12975:[[21332],256],12976:[[22812],256],12977:[[51,54],256],12978:[[51,55],256],12979:[[51,56],256],12980:[[51,57],256],12981:[[52,48],256],12982:[[52,49],256],12983:[[52,50],256],12984:[[52,51],256],12985:[[52,52],256],12986:[[52,53],256],12987:[[52,54],256],12988:[[52,55],256],12989:[[52,56],256],12990:[[52,57],256],12991:[[53,48],256],12992:[[49,26376],256],12993:[[50,26376],256],12994:[[51,26376],256],12995:[[52,26376],256],12996:[[53,26376],256],12997:[[54,26376],256],12998:[[55,26376],256],12999:[[56,26376],256],13000:[[57,26376],256],13001:[[49,48,26376],256],13002:[[49,49,26376],256],13003:[[49,50,26376],256],13004:[[72,103],256],13005:[[101,114,103],256],13006:[[101,86],256],13007:[[76,84,68],256],13008:[[12450],256],13009:[[12452],256],13010:[[12454],256],13011:[[12456],256],13012:[[12458],256],13013:[[12459],256],13014:[[12461],256],13015:[[12463],256],13016:[[12465],256],13017:[[12467],256],13018:[[12469],256],13019:[[12471],256],13020:[[12473],256],13021:[[12475],256],13022:[[12477],256],13023:[[12479],256],13024:[[12481],256],13025:[[12484],256],13026:[[12486],256],13027:[[12488],256],13028:[[12490],256],13029:[[12491],256],13030:[[12492],256],13031:[[12493],256],13032:[[12494],256],13033:[[12495],256],13034:[[12498],256],13035:[[12501],256],13036:[[12504],256],13037:[[12507],256],13038:[[12510],256],13039:[[12511],256],13040:[[12512],256],13041:[[12513],256],13042:[[12514],256],13043:[[12516],256],13044:[[12518],256],13045:[[12520],256],13046:[[12521],256],13047:[[12522],256],13048:[[12523],256],13049:[[12524],256],13050:[[12525],256],13051:[[12527],256],13052:[[12528],256],13053:[[12529],256],13054:[[12530],256]},13056:{13056:[[12450,12497,12540,12488],256],13057:[[12450,12523,12501,12449],256],13058:[[12450,12531,12506,12450],256],13059:[[12450,12540,12523],256],13060:[[12452,12491,12531,12464],256],13061:[[12452,12531,12481],256],13062:[[12454,12457,12531],256],13063:[[12456,12473,12463,12540,12489],256],13064:[[12456,12540,12459,12540],256],13065:[[12458,12531,12473],256],13066:[[12458,12540,12512],256],13067:[[12459,12452,12522],256],13068:[[12459,12521,12483,12488],256],13069:[[12459,12525,12522,12540],256],13070:[[12460,12525,12531],256],13071:[[12460,12531,12510],256],13072:[[12462,12460],256],13073:[[12462,12491,12540],256],13074:[[12461,12517,12522,12540],256],13075:[[12462,12523,12480,12540],256],13076:[[12461,12525],256],13077:[[12461,12525,12464,12521,12512],256],13078:[[12461,12525,12513,12540,12488,12523],256],13079:[[12461,12525,12527,12483,12488],256],13080:[[12464,12521,12512],256],13081:[[12464,12521,12512,12488,12531],256],13082:[[12463,12523,12476,12452,12525],256],13083:[[12463,12525,12540,12493],256],13084:[[12465,12540,12473],256],13085:[[12467,12523,12490],256],13086:[[12467,12540,12509],256],13087:[[12469,12452,12463,12523],256],13088:[[12469,12531,12481,12540,12512],256],13089:[[12471,12522,12531,12464],256],13090:[[12475,12531,12481],256],13091:[[12475,12531,12488],256],13092:[[12480,12540,12473],256],13093:[[12487,12471],256],13094:[[12489,12523],256],13095:[[12488,12531],256],13096:[[12490,12494],256],13097:[[12494,12483,12488],256],13098:[[12495,12452,12484],256],13099:[[12497,12540,12475,12531,12488],256],13100:[[12497,12540,12484],256],13101:[[12496,12540,12524,12523],256],13102:[[12500,12450,12473,12488,12523],256],13103:[[12500,12463,12523],256],13104:[[12500,12467],256],13105:[[12499,12523],256],13106:[[12501,12449,12521,12483,12489],256],13107:[[12501,12451,12540,12488],256],13108:[[12502,12483,12471,12455,12523],256],13109:[[12501,12521,12531],256],13110:[[12504,12463,12479,12540,12523],256],13111:[[12506,12477],256],13112:[[12506,12491,12498],256],13113:[[12504,12523,12484],256],13114:[[12506,12531,12473],256],13115:[[12506,12540,12472],256],13116:[[12505,12540,12479],256],13117:[[12509,12452,12531,12488],256],13118:[[12508,12523,12488],256],13119:[[12507,12531],256],13120:[[12509,12531,12489],256],13121:[[12507,12540,12523],256],13122:[[12507,12540,12531],256],13123:[[12510,12452,12463,12525],256],13124:[[12510,12452,12523],256],13125:[[12510,12483,12495],256],13126:[[12510,12523,12463],256],13127:[[12510,12531,12471,12519,12531],256],13128:[[12511,12463,12525,12531],256],13129:[[12511,12522],256],13130:[[12511,12522,12496,12540,12523],256],13131:[[12513,12460],256],13132:[[12513,12460,12488,12531],256],13133:[[12513,12540,12488,12523],256],13134:[[12516,12540,12489],256],13135:[[12516,12540,12523],256],13136:[[12518,12450,12531],256],13137:[[12522,12483,12488,12523],256],13138:[[12522,12521],256],13139:[[12523,12500,12540],256],13140:[[12523,12540,12502,12523],256],13141:[[12524,12512],256],13142:[[12524,12531,12488,12466,12531],256],13143:[[12527,12483,12488],256],13144:[[48,28857],256],13145:[[49,28857],256],13146:[[50,28857],256],13147:[[51,28857],256],13148:[[52,28857],256],13149:[[53,28857],256],13150:[[54,28857],256],13151:[[55,28857],256],13152:[[56,28857],256],13153:[[57,28857],256],13154:[[49,48,28857],256],13155:[[49,49,28857],256],13156:[[49,50,28857],256],13157:[[49,51,28857],256],13158:[[49,52,28857],256],13159:[[49,53,28857],256],13160:[[49,54,28857],256],13161:[[49,55,28857],256],13162:[[49,56,28857],256],13163:[[49,57,28857],256],13164:[[50,48,28857],256],13165:[[50,49,28857],256],13166:[[50,50,28857],256],13167:[[50,51,28857],256],13168:[[50,52,28857],256],13169:[[104,80,97],256],13170:[[100,97],256],13171:[[65,85],256],13172:[[98,97,114],256],13173:[[111,86],256],13174:[[112,99],256],13175:[[100,109],256],13176:[[100,109,178],256],13177:[[100,109,179],256],13178:[[73,85],256],13179:[[24179,25104],256],13180:[[26157,21644],256],13181:[[22823,27491],256],13182:[[26126,27835],256],13183:[[26666,24335,20250,31038],256],13184:[[112,65],256],13185:[[110,65],256],13186:[[956,65],256],13187:[[109,65],256],13188:[[107,65],256],13189:[[75,66],256],13190:[[77,66],256],13191:[[71,66],256],13192:[[99,97,108],256],13193:[[107,99,97,108],256],13194:[[112,70],256],13195:[[110,70],256],13196:[[956,70],256],13197:[[956,103],256],13198:[[109,103],256],13199:[[107,103],256],13200:[[72,122],256],13201:[[107,72,122],256],13202:[[77,72,122],256],13203:[[71,72,122],256],13204:[[84,72,122],256],13205:[[956,8467],256],13206:[[109,8467],256],13207:[[100,8467],256],13208:[[107,8467],256],13209:[[102,109],256],13210:[[110,109],256],13211:[[956,109],256],13212:[[109,109],256],13213:[[99,109],256],13214:[[107,109],256],13215:[[109,109,178],256],13216:[[99,109,178],256],13217:[[109,178],256],13218:[[107,109,178],256],13219:[[109,109,179],256],13220:[[99,109,179],256],13221:[[109,179],256],13222:[[107,109,179],256],13223:[[109,8725,115],256],13224:[[109,8725,115,178],256],13225:[[80,97],256],13226:[[107,80,97],256],13227:[[77,80,97],256],13228:[[71,80,97],256],13229:[[114,97,100],256],13230:[[114,97,100,8725,115],256],13231:[[114,97,100,8725,115,178],256],13232:[[112,115],256],13233:[[110,115],256],13234:[[956,115],256],13235:[[109,115],256],13236:[[112,86],256],13237:[[110,86],256],13238:[[956,86],256],13239:[[109,86],256],13240:[[107,86],256],13241:[[77,86],256],13242:[[112,87],256],13243:[[110,87],256],13244:[[956,87],256],13245:[[109,87],256],13246:[[107,87],256],13247:[[77,87],256],13248:[[107,937],256],13249:[[77,937],256],13250:[[97,46,109,46],256],13251:[[66,113],256],13252:[[99,99],256],13253:[[99,100],256],13254:[[67,8725,107,103],256],13255:[[67,111,46],256],13256:[[100,66],256],13257:[[71,121],256],13258:[[104,97],256],13259:[[72,80],256],13260:[[105,110],256],13261:[[75,75],256],13262:[[75,77],256],13263:[[107,116],256],13264:[[108,109],256],13265:[[108,110],256],13266:[[108,111,103],256],13267:[[108,120],256],13268:[[109,98],256],13269:[[109,105,108],256],13270:[[109,111,108],256],13271:[[80,72],256],13272:[[112,46,109,46],256],13273:[[80,80,77],256],13274:[[80,82],256],13275:[[115,114],256],13276:[[83,118],256],13277:[[87,98],256],13278:[[86,8725,109],256],13279:[[65,8725,109],256],13280:[[49,26085],256],13281:[[50,26085],256],13282:[[51,26085],256],13283:[[52,26085],256],13284:[[53,26085],256],13285:[[54,26085],256],13286:[[55,26085],256],13287:[[56,26085],256],13288:[[57,26085],256],13289:[[49,48,26085],256],13290:[[49,49,26085],256],13291:[[49,50,26085],256],13292:[[49,51,26085],256],13293:[[49,52,26085],256],13294:[[49,53,26085],256],13295:[[49,54,26085],256],13296:[[49,55,26085],256],13297:[[49,56,26085],256],13298:[[49,57,26085],256],13299:[[50,48,26085],256],13300:[[50,49,26085],256],13301:[[50,50,26085],256],13302:[[50,51,26085],256],13303:[[50,52,26085],256],13304:[[50,53,26085],256],13305:[[50,54,26085],256],13306:[[50,55,26085],256],13307:[[50,56,26085],256],13308:[[50,57,26085],256],13309:[[51,48,26085],256],13310:[[51,49,26085],256],13311:[[103,97,108],256]},27136:{92912:[null,1],92913:[null,1],92914:[null,1],92915:[null,1],92916:[null,1]},27392:{92976:[null,230],92977:[null,230],92978:[null,230],92979:[null,230],92980:[null,230],92981:[null,230],92982:[null,230]},42496:{42607:[null,230],42612:[null,230],42613:[null,230],42614:[null,230],42615:[null,230],42616:[null,230],42617:[null,230],42618:[null,230],42619:[null,230],42620:[null,230],42621:[null,230],42652:[[1098],256],42653:[[1100],256],42655:[null,230],42736:[null,230],42737:[null,230]},42752:{42864:[[42863],256],43000:[[294],256],43001:[[339],256]},43008:{43014:[null,9],43204:[null,9],43232:[null,230],43233:[null,230],43234:[null,230],43235:[null,230],43236:[null,230],43237:[null,230],43238:[null,230],43239:[null,230],43240:[null,230],43241:[null,230],43242:[null,230],43243:[null,230],43244:[null,230],43245:[null,230],43246:[null,230],43247:[null,230],43248:[null,230],43249:[null,230]},43264:{43307:[null,220],43308:[null,220],43309:[null,220],43347:[null,9],43443:[null,7],43456:[null,9]},43520:{43696:[null,230],43698:[null,230],43699:[null,230],43700:[null,220],43703:[null,230],43704:[null,230],43710:[null,230],43711:[null,230],43713:[null,230],43766:[null,9]},43776:{43868:[[42791],256],43869:[[43831],256],43870:[[619],256],43871:[[43858],256],44013:[null,9]},48128:{113822:[null,1]},53504:{119134:[[119127,119141],512],119135:[[119128,119141],512],119136:[[119135,119150],512],119137:[[119135,119151],512],119138:[[119135,119152],512],119139:[[119135,119153],512],119140:[[119135,119154],512],119141:[null,216],119142:[null,216],119143:[null,1],119144:[null,1],119145:[null,1],119149:[null,226],119150:[null,216],119151:[null,216],119152:[null,216],119153:[null,216],119154:[null,216],119163:[null,220],119164:[null,220],119165:[null,220],119166:[null,220],119167:[null,220],119168:[null,220],119169:[null,220],119170:[null,220],119173:[null,230],119174:[null,230],119175:[null,230],119176:[null,230],119177:[null,230],119178:[null,220],119179:[null,220],119210:[null,230],119211:[null,230],119212:[null,230],119213:[null,230],119227:[[119225,119141],512],119228:[[119226,119141],512],119229:[[119227,119150],512],119230:[[119228,119150],512],119231:[[119227,119151],512],119232:[[119228,119151],512]},53760:{119362:[null,230],119363:[null,230],119364:[null,230]},54272:{119808:[[65],256],119809:[[66],256],119810:[[67],256],119811:[[68],256],119812:[[69],256],119813:[[70],256],119814:[[71],256],119815:[[72],256],119816:[[73],256],119817:[[74],256],119818:[[75],256],119819:[[76],256],119820:[[77],256],119821:[[78],256],119822:[[79],256],119823:[[80],256],119824:[[81],256],119825:[[82],256],119826:[[83],256],119827:[[84],256],119828:[[85],256],119829:[[86],256],119830:[[87],256],119831:[[88],256],119832:[[89],256],119833:[[90],256],119834:[[97],256],119835:[[98],256],119836:[[99],256],119837:[[100],256],119838:[[101],256],119839:[[102],256],119840:[[103],256],119841:[[104],256],119842:[[105],256],119843:[[106],256],119844:[[107],256],119845:[[108],256],119846:[[109],256],119847:[[110],256],119848:[[111],256],119849:[[112],256],119850:[[113],256],119851:[[114],256],119852:[[115],256],119853:[[116],256],119854:[[117],256],119855:[[118],256],119856:[[119],256],119857:[[120],256],119858:[[121],256],119859:[[122],256],119860:[[65],256],119861:[[66],256],119862:[[67],256],119863:[[68],256],119864:[[69],256],119865:[[70],256],119866:[[71],256],119867:[[72],256],119868:[[73],256],119869:[[74],256],119870:[[75],256],119871:[[76],256],119872:[[77],256],119873:[[78],256],119874:[[79],256],119875:[[80],256],119876:[[81],256],119877:[[82],256],119878:[[83],256],119879:[[84],256],119880:[[85],256],119881:[[86],256],119882:[[87],256],119883:[[88],256],119884:[[89],256],119885:[[90],256],119886:[[97],256],119887:[[98],256],119888:[[99],256],119889:[[100],256],119890:[[101],256],119891:[[102],256],119892:[[103],256],119894:[[105],256],119895:[[106],256],119896:[[107],256],119897:[[108],256],119898:[[109],256],119899:[[110],256],119900:[[111],256],119901:[[112],256],119902:[[113],256],119903:[[114],256],119904:[[115],256],119905:[[116],256],119906:[[117],256],119907:[[118],256],119908:[[119],256],119909:[[120],256],119910:[[121],256],119911:[[122],256],119912:[[65],256],119913:[[66],256],119914:[[67],256],119915:[[68],256],119916:[[69],256],119917:[[70],256],119918:[[71],256],119919:[[72],256],119920:[[73],256],119921:[[74],256],119922:[[75],256],119923:[[76],256],119924:[[77],256],119925:[[78],256],119926:[[79],256],119927:[[80],256],119928:[[81],256],119929:[[82],256],119930:[[83],256],119931:[[84],256],119932:[[85],256],119933:[[86],256],119934:[[87],256],119935:[[88],256],119936:[[89],256],119937:[[90],256],119938:[[97],256],119939:[[98],256],119940:[[99],256],119941:[[100],256],119942:[[101],256],119943:[[102],256],119944:[[103],256],119945:[[104],256],119946:[[105],256],119947:[[106],256],119948:[[107],256],119949:[[108],256],119950:[[109],256],119951:[[110],256],119952:[[111],256],119953:[[112],256],119954:[[113],256],119955:[[114],256],119956:[[115],256],119957:[[116],256],119958:[[117],256],119959:[[118],256],119960:[[119],256],119961:[[120],256],119962:[[121],256],119963:[[122],256],119964:[[65],256],119966:[[67],256],119967:[[68],256],119970:[[71],256],119973:[[74],256],119974:[[75],256],119977:[[78],256],119978:[[79],256],119979:[[80],256],119980:[[81],256],119982:[[83],256],119983:[[84],256],119984:[[85],256],119985:[[86],256],119986:[[87],256],119987:[[88],256],119988:[[89],256],119989:[[90],256],119990:[[97],256],119991:[[98],256],119992:[[99],256],119993:[[100],256],119995:[[102],256],119997:[[104],256],119998:[[105],256],119999:[[106],256],120000:[[107],256],120001:[[108],256],120002:[[109],256],120003:[[110],256],120005:[[112],256],120006:[[113],256],120007:[[114],256],120008:[[115],256],120009:[[116],256],120010:[[117],256],120011:[[118],256],120012:[[119],256],120013:[[120],256],120014:[[121],256],120015:[[122],256],120016:[[65],256],120017:[[66],256],120018:[[67],256],120019:[[68],256],120020:[[69],256],120021:[[70],256],120022:[[71],256],120023:[[72],256],120024:[[73],256],120025:[[74],256],120026:[[75],256],120027:[[76],256],120028:[[77],256],120029:[[78],256],120030:[[79],256],120031:[[80],256],120032:[[81],256],120033:[[82],256],120034:[[83],256],120035:[[84],256],120036:[[85],256],120037:[[86],256],120038:[[87],256],120039:[[88],256],120040:[[89],256],120041:[[90],256],120042:[[97],256],120043:[[98],256],120044:[[99],256],120045:[[100],256],120046:[[101],256],120047:[[102],256],120048:[[103],256],120049:[[104],256],120050:[[105],256],120051:[[106],256],120052:[[107],256],120053:[[108],256],120054:[[109],256],120055:[[110],256],120056:[[111],256],120057:[[112],256],120058:[[113],256],120059:[[114],256],120060:[[115],256],120061:[[116],256],120062:[[117],256],120063:[[118],256]},54528:{120064:[[119],256],120065:[[120],256],120066:[[121],256],120067:[[122],256],120068:[[65],256],120069:[[66],256],120071:[[68],256],120072:[[69],256],120073:[[70],256],120074:[[71],256],120077:[[74],256],120078:[[75],256],120079:[[76],256],120080:[[77],256],120081:[[78],256],120082:[[79],256],120083:[[80],256],120084:[[81],256],120086:[[83],256],120087:[[84],256],120088:[[85],256],120089:[[86],256],120090:[[87],256],120091:[[88],256],120092:[[89],256],120094:[[97],256],120095:[[98],256],120096:[[99],256],120097:[[100],256],120098:[[101],256],120099:[[102],256],120100:[[103],256],120101:[[104],256],120102:[[105],256],120103:[[106],256],120104:[[107],256],120105:[[108],256],120106:[[109],256],120107:[[110],256],120108:[[111],256],120109:[[112],256],120110:[[113],256],120111:[[114],256],120112:[[115],256],120113:[[116],256],120114:[[117],256],120115:[[118],256],120116:[[119],256],120117:[[120],256],120118:[[121],256],120119:[[122],256],120120:[[65],256],120121:[[66],256],120123:[[68],256],120124:[[69],256],120125:[[70],256],120126:[[71],256],120128:[[73],256],120129:[[74],256],120130:[[75],256],120131:[[76],256],120132:[[77],256],120134:[[79],256],120138:[[83],256],120139:[[84],256],120140:[[85],256],120141:[[86],256],120142:[[87],256],120143:[[88],256],120144:[[89],256],120146:[[97],256],120147:[[98],256],120148:[[99],256],120149:[[100],256],120150:[[101],256],120151:[[102],256],120152:[[103],256],120153:[[104],256],120154:[[105],256],120155:[[106],256],120156:[[107],256],120157:[[108],256],120158:[[109],256],120159:[[110],256],120160:[[111],256],120161:[[112],256],120162:[[113],256],120163:[[114],256],120164:[[115],256],120165:[[116],256],120166:[[117],256],120167:[[118],256],120168:[[119],256],120169:[[120],256],120170:[[121],256],120171:[[122],256],120172:[[65],256],120173:[[66],256],120174:[[67],256],120175:[[68],256],120176:[[69],256],120177:[[70],256],120178:[[71],256],120179:[[72],256],120180:[[73],256],120181:[[74],256],120182:[[75],256],120183:[[76],256],120184:[[77],256],120185:[[78],256],120186:[[79],256],120187:[[80],256],120188:[[81],256],120189:[[82],256],120190:[[83],256],120191:[[84],256],120192:[[85],256],120193:[[86],256],120194:[[87],256],120195:[[88],256],120196:[[89],256],120197:[[90],256],120198:[[97],256],120199:[[98],256],120200:[[99],256],120201:[[100],256],120202:[[101],256],120203:[[102],256],120204:[[103],256],120205:[[104],256],120206:[[105],256],120207:[[106],256],120208:[[107],256],120209:[[108],256],120210:[[109],256],120211:[[110],256],120212:[[111],256],120213:[[112],256],120214:[[113],256],120215:[[114],256],120216:[[115],256],120217:[[116],256],120218:[[117],256],120219:[[118],256],120220:[[119],256],120221:[[120],256],120222:[[121],256],120223:[[122],256],120224:[[65],256],120225:[[66],256],120226:[[67],256],120227:[[68],256],120228:[[69],256],120229:[[70],256],120230:[[71],256],120231:[[72],256],120232:[[73],256],120233:[[74],256],120234:[[75],256],120235:[[76],256],120236:[[77],256],120237:[[78],256],120238:[[79],256],120239:[[80],256],120240:[[81],256],120241:[[82],256],120242:[[83],256],120243:[[84],256],120244:[[85],256],120245:[[86],256],120246:[[87],256],120247:[[88],256],120248:[[89],256],120249:[[90],256],120250:[[97],256],120251:[[98],256],120252:[[99],256],120253:[[100],256],120254:[[101],256],120255:[[102],256],120256:[[103],256],120257:[[104],256],120258:[[105],256],120259:[[106],256],120260:[[107],256],120261:[[108],256],120262:[[109],256],120263:[[110],256],120264:[[111],256],120265:[[112],256],120266:[[113],256],120267:[[114],256],120268:[[115],256],120269:[[116],256],120270:[[117],256],120271:[[118],256],120272:[[119],256],120273:[[120],256],120274:[[121],256],120275:[[122],256],120276:[[65],256],120277:[[66],256],120278:[[67],256],120279:[[68],256],120280:[[69],256],120281:[[70],256],120282:[[71],256],120283:[[72],256],120284:[[73],256],120285:[[74],256],120286:[[75],256],120287:[[76],256],120288:[[77],256],120289:[[78],256],120290:[[79],256],120291:[[80],256],120292:[[81],256],120293:[[82],256],120294:[[83],256],120295:[[84],256],120296:[[85],256],120297:[[86],256],120298:[[87],256],120299:[[88],256],120300:[[89],256],120301:[[90],256],120302:[[97],256],120303:[[98],256],120304:[[99],256],120305:[[100],256],120306:[[101],256],120307:[[102],256],120308:[[103],256],120309:[[104],256],120310:[[105],256],120311:[[106],256],120312:[[107],256],120313:[[108],256],120314:[[109],256],120315:[[110],256],120316:[[111],256],120317:[[112],256],120318:[[113],256],120319:[[114],256]},54784:{120320:[[115],256],120321:[[116],256],120322:[[117],256],120323:[[118],256],120324:[[119],256],120325:[[120],256],120326:[[121],256],120327:[[122],256],120328:[[65],256],120329:[[66],256],120330:[[67],256],120331:[[68],256],120332:[[69],256],120333:[[70],256],120334:[[71],256],120335:[[72],256],120336:[[73],256],120337:[[74],256],120338:[[75],256],120339:[[76],256],120340:[[77],256],120341:[[78],256],120342:[[79],256],120343:[[80],256],120344:[[81],256],120345:[[82],256],120346:[[83],256],120347:[[84],256],120348:[[85],256],120349:[[86],256],120350:[[87],256],120351:[[88],256],120352:[[89],256],120353:[[90],256],120354:[[97],256],120355:[[98],256],120356:[[99],256],120357:[[100],256],120358:[[101],256],120359:[[102],256],120360:[[103],256],120361:[[104],256],120362:[[105],256],120363:[[106],256],120364:[[107],256],120365:[[108],256],120366:[[109],256],120367:[[110],256],120368:[[111],256],120369:[[112],256],120370:[[113],256],120371:[[114],256],120372:[[115],256],120373:[[116],256],120374:[[117],256],120375:[[118],256],120376:[[119],256],120377:[[120],256],120378:[[121],256],120379:[[122],256],120380:[[65],256],120381:[[66],256],120382:[[67],256],120383:[[68],256],120384:[[69],256],120385:[[70],256],120386:[[71],256],120387:[[72],256],120388:[[73],256],120389:[[74],256],120390:[[75],256],120391:[[76],256],120392:[[77],256],120393:[[78],256],120394:[[79],256],120395:[[80],256],120396:[[81],256],120397:[[82],256],120398:[[83],256],120399:[[84],256],120400:[[85],256],120401:[[86],256],120402:[[87],256],120403:[[88],256],120404:[[89],256],120405:[[90],256],120406:[[97],256],120407:[[98],256],120408:[[99],256],120409:[[100],256],120410:[[101],256],120411:[[102],256],120412:[[103],256],120413:[[104],256],120414:[[105],256],120415:[[106],256],120416:[[107],256],120417:[[108],256],120418:[[109],256],120419:[[110],256],120420:[[111],256],120421:[[112],256],120422:[[113],256],120423:[[114],256],120424:[[115],256],120425:[[116],256],120426:[[117],256],120427:[[118],256],120428:[[119],256],120429:[[120],256],120430:[[121],256],120431:[[122],256],120432:[[65],256],120433:[[66],256],120434:[[67],256],120435:[[68],256],120436:[[69],256],120437:[[70],256],120438:[[71],256],120439:[[72],256],120440:[[73],256],120441:[[74],256],120442:[[75],256],120443:[[76],256],120444:[[77],256],120445:[[78],256],120446:[[79],256],120447:[[80],256],120448:[[81],256],120449:[[82],256],120450:[[83],256],120451:[[84],256],120452:[[85],256],120453:[[86],256],120454:[[87],256],120455:[[88],256],120456:[[89],256],120457:[[90],256],120458:[[97],256],120459:[[98],256],120460:[[99],256],120461:[[100],256],120462:[[101],256],120463:[[102],256],120464:[[103],256],120465:[[104],256],120466:[[105],256],120467:[[106],256],120468:[[107],256],120469:[[108],256],120470:[[109],256],120471:[[110],256],120472:[[111],256],120473:[[112],256],120474:[[113],256],120475:[[114],256],120476:[[115],256],120477:[[116],256],120478:[[117],256],120479:[[118],256],120480:[[119],256],120481:[[120],256],120482:[[121],256],120483:[[122],256],120484:[[305],256],120485:[[567],256],120488:[[913],256],120489:[[914],256],120490:[[915],256],120491:[[916],256],120492:[[917],256],120493:[[918],256],120494:[[919],256],120495:[[920],256],120496:[[921],256],120497:[[922],256],120498:[[923],256],120499:[[924],256],120500:[[925],256],120501:[[926],256],120502:[[927],256],120503:[[928],256],120504:[[929],256],120505:[[1012],256],120506:[[931],256],120507:[[932],256],120508:[[933],256],120509:[[934],256],120510:[[935],256],120511:[[936],256],120512:[[937],256],120513:[[8711],256],120514:[[945],256],120515:[[946],256],120516:[[947],256],120517:[[948],256],120518:[[949],256],120519:[[950],256],120520:[[951],256],120521:[[952],256],120522:[[953],256],120523:[[954],256],120524:[[955],256],120525:[[956],256],120526:[[957],256],120527:[[958],256],120528:[[959],256],120529:[[960],256],120530:[[961],256],120531:[[962],256],120532:[[963],256],120533:[[964],256],120534:[[965],256],120535:[[966],256],120536:[[967],256],120537:[[968],256],120538:[[969],256],120539:[[8706],256],120540:[[1013],256],120541:[[977],256],120542:[[1008],256],120543:[[981],256],120544:[[1009],256],120545:[[982],256],120546:[[913],256],120547:[[914],256],120548:[[915],256],120549:[[916],256],120550:[[917],256],120551:[[918],256],120552:[[919],256],120553:[[920],256],120554:[[921],256],120555:[[922],256],120556:[[923],256],120557:[[924],256],120558:[[925],256],120559:[[926],256],120560:[[927],256],120561:[[928],256],120562:[[929],256],120563:[[1012],256],120564:[[931],256],120565:[[932],256],120566:[[933],256],120567:[[934],256],120568:[[935],256],120569:[[936],256],120570:[[937],256],120571:[[8711],256],120572:[[945],256],120573:[[946],256],120574:[[947],256],120575:[[948],256]},55040:{120576:[[949],256],120577:[[950],256],120578:[[951],256],120579:[[952],256],120580:[[953],256],120581:[[954],256],120582:[[955],256],120583:[[956],256],120584:[[957],256],120585:[[958],256],120586:[[959],256],120587:[[960],256],120588:[[961],256],120589:[[962],256],120590:[[963],256],120591:[[964],256],120592:[[965],256],120593:[[966],256],120594:[[967],256],120595:[[968],256],120596:[[969],256],120597:[[8706],256],120598:[[1013],256],120599:[[977],256],120600:[[1008],256],120601:[[981],256],120602:[[1009],256],120603:[[982],256],120604:[[913],256],120605:[[914],256],120606:[[915],256],120607:[[916],256],120608:[[917],256],120609:[[918],256],120610:[[919],256],120611:[[920],256],120612:[[921],256],120613:[[922],256],120614:[[923],256],120615:[[924],256],120616:[[925],256],120617:[[926],256],120618:[[927],256],120619:[[928],256],120620:[[929],256],120621:[[1012],256],120622:[[931],256],120623:[[932],256],120624:[[933],256],120625:[[934],256],120626:[[935],256],120627:[[936],256],120628:[[937],256],120629:[[8711],256],120630:[[945],256],120631:[[946],256],120632:[[947],256],120633:[[948],256],120634:[[949],256],120635:[[950],256],120636:[[951],256],120637:[[952],256],120638:[[953],256],120639:[[954],256],120640:[[955],256],120641:[[956],256],120642:[[957],256],120643:[[958],256],120644:[[959],256],120645:[[960],256],120646:[[961],256],120647:[[962],256],120648:[[963],256],120649:[[964],256],120650:[[965],256],120651:[[966],256],120652:[[967],256],120653:[[968],256],120654:[[969],256],120655:[[8706],256],120656:[[1013],256],120657:[[977],256],120658:[[1008],256],120659:[[981],256],120660:[[1009],256],120661:[[982],256],120662:[[913],256],120663:[[914],256],120664:[[915],256],120665:[[916],256],120666:[[917],256],120667:[[918],256],120668:[[919],256],120669:[[920],256],120670:[[921],256],120671:[[922],256],120672:[[923],256],120673:[[924],256],120674:[[925],256],120675:[[926],256],120676:[[927],256],120677:[[928],256],120678:[[929],256],120679:[[1012],256],120680:[[931],256],120681:[[932],256],120682:[[933],256],120683:[[934],256],120684:[[935],256],120685:[[936],256],120686:[[937],256],120687:[[8711],256],120688:[[945],256],120689:[[946],256],120690:[[947],256],120691:[[948],256],120692:[[949],256],120693:[[950],256],120694:[[951],256],120695:[[952],256],120696:[[953],256],120697:[[954],256],120698:[[955],256],120699:[[956],256],120700:[[957],256],120701:[[958],256],120702:[[959],256],120703:[[960],256],120704:[[961],256],120705:[[962],256],120706:[[963],256],120707:[[964],256],120708:[[965],256],120709:[[966],256],120710:[[967],256],120711:[[968],256],120712:[[969],256],120713:[[8706],256],120714:[[1013],256],120715:[[977],256],120716:[[1008],256],120717:[[981],256],120718:[[1009],256],120719:[[982],256],120720:[[913],256],120721:[[914],256],120722:[[915],256],120723:[[916],256],120724:[[917],256],120725:[[918],256],120726:[[919],256],120727:[[920],256],120728:[[921],256],120729:[[922],256],120730:[[923],256],120731:[[924],256],120732:[[925],256],120733:[[926],256],120734:[[927],256],120735:[[928],256],120736:[[929],256],120737:[[1012],256],120738:[[931],256],120739:[[932],256],120740:[[933],256],120741:[[934],256],120742:[[935],256],120743:[[936],256],120744:[[937],256],120745:[[8711],256],120746:[[945],256],120747:[[946],256],120748:[[947],256],120749:[[948],256],120750:[[949],256],120751:[[950],256],120752:[[951],256],120753:[[952],256],120754:[[953],256],120755:[[954],256],120756:[[955],256],120757:[[956],256],120758:[[957],256],120759:[[958],256],120760:[[959],256],120761:[[960],256],120762:[[961],256],120763:[[962],256],120764:[[963],256],120765:[[964],256],120766:[[965],256],120767:[[966],256],120768:[[967],256],120769:[[968],256],120770:[[969],256],120771:[[8706],256],120772:[[1013],256],120773:[[977],256],120774:[[1008],256],120775:[[981],256],120776:[[1009],256],120777:[[982],256],120778:[[988],256],120779:[[989],256],120782:[[48],256],120783:[[49],256],120784:[[50],256],120785:[[51],256],120786:[[52],256],120787:[[53],256],120788:[[54],256],120789:[[55],256],120790:[[56],256],120791:[[57],256],120792:[[48],256],120793:[[49],256],120794:[[50],256],120795:[[51],256],120796:[[52],256],120797:[[53],256],120798:[[54],256],120799:[[55],256],120800:[[56],256],120801:[[57],256],120802:[[48],256],120803:[[49],256],120804:[[50],256],120805:[[51],256],120806:[[52],256],120807:[[53],256],120808:[[54],256],120809:[[55],256],120810:[[56],256],120811:[[57],256],120812:[[48],256],120813:[[49],256],120814:[[50],256],120815:[[51],256],120816:[[52],256],120817:[[53],256],120818:[[54],256],120819:[[55],256],120820:[[56],256],120821:[[57],256],120822:[[48],256],120823:[[49],256],120824:[[50],256],120825:[[51],256],120826:[[52],256],120827:[[53],256],120828:[[54],256],120829:[[55],256],120830:[[56],256],120831:[[57],256]},59392:{125136:[null,220],125137:[null,220],125138:[null,220],125139:[null,220],125140:[null,220],125141:[null,220],125142:[null,220]},60928:{126464:[[1575],256],126465:[[1576],256],126466:[[1580],256],126467:[[1583],256],126469:[[1608],256],126470:[[1586],256],126471:[[1581],256],126472:[[1591],256],126473:[[1610],256],126474:[[1603],256],126475:[[1604],256],126476:[[1605],256],126477:[[1606],256],126478:[[1587],256],126479:[[1593],256],126480:[[1601],256],126481:[[1589],256],126482:[[1602],256],126483:[[1585],256],126484:[[1588],256],126485:[[1578],256],126486:[[1579],256],126487:[[1582],256],126488:[[1584],256],126489:[[1590],256],126490:[[1592],256],126491:[[1594],256],126492:[[1646],256],126493:[[1722],256],126494:[[1697],256],126495:[[1647],256],126497:[[1576],256],126498:[[1580],256],126500:[[1607],256],126503:[[1581],256],126505:[[1610],256],126506:[[1603],256],126507:[[1604],256],126508:[[1605],256],126509:[[1606],256],126510:[[1587],256],126511:[[1593],256],126512:[[1601],256],126513:[[1589],256],126514:[[1602],256],126516:[[1588],256],126517:[[1578],256],126518:[[1579],256],126519:[[1582],256],126521:[[1590],256],126523:[[1594],256],126530:[[1580],256],126535:[[1581],256],126537:[[1610],256],126539:[[1604],256],126541:[[1606],256],126542:[[1587],256],126543:[[1593],256],126545:[[1589],256],126546:[[1602],256],126548:[[1588],256],126551:[[1582],256],126553:[[1590],256],126555:[[1594],256],126557:[[1722],256],126559:[[1647],256],126561:[[1576],256],126562:[[1580],256],126564:[[1607],256],126567:[[1581],256],126568:[[1591],256],126569:[[1610],256],126570:[[1603],256],126572:[[1605],256],126573:[[1606],256],126574:[[1587],256],126575:[[1593],256],126576:[[1601],256],126577:[[1589],256],126578:[[1602],256],126580:[[1588],256],126581:[[1578],256],126582:[[1579],256],126583:[[1582],256],126585:[[1590],256],126586:[[1592],256],126587:[[1594],256],126588:[[1646],256],126590:[[1697],256],126592:[[1575],256],126593:[[1576],256],126594:[[1580],256],126595:[[1583],256],126596:[[1607],256],126597:[[1608],256],126598:[[1586],256],126599:[[1581],256],126600:[[1591],256],126601:[[1610],256],126603:[[1604],256],126604:[[1605],256],126605:[[1606],256],126606:[[1587],256],126607:[[1593],256],126608:[[1601],256],126609:[[1589],256],126610:[[1602],256],126611:[[1585],256],126612:[[1588],256],126613:[[1578],256],126614:[[1579],256],126615:[[1582],256],126616:[[1584],256],126617:[[1590],256],126618:[[1592],256],126619:[[1594],256],126625:[[1576],256],126626:[[1580],256],126627:[[1583],256],126629:[[1608],256],126630:[[1586],256],126631:[[1581],256],126632:[[1591],256],126633:[[1610],256],126635:[[1604],256],126636:[[1605],256],126637:[[1606],256],126638:[[1587],256],126639:[[1593],256],126640:[[1601],256],126641:[[1589],256],126642:[[1602],256],126643:[[1585],256],126644:[[1588],256],126645:[[1578],256],126646:[[1579],256],126647:[[1582],256],126648:[[1584],256],126649:[[1590],256],126650:[[1592],256],126651:[[1594],256]},61696:{127232:[[48,46],256],127233:[[48,44],256],127234:[[49,44],256],127235:[[50,44],256],127236:[[51,44],256],127237:[[52,44],256],127238:[[53,44],256],127239:[[54,44],256],127240:[[55,44],256],127241:[[56,44],256],127242:[[57,44],256],127248:[[40,65,41],256],127249:[[40,66,41],256],127250:[[40,67,41],256],127251:[[40,68,41],256],127252:[[40,69,41],256],127253:[[40,70,41],256],127254:[[40,71,41],256],127255:[[40,72,41],256],127256:[[40,73,41],256],127257:[[40,74,41],256],127258:[[40,75,41],256],127259:[[40,76,41],256],127260:[[40,77,41],256],127261:[[40,78,41],256],127262:[[40,79,41],256],127263:[[40,80,41],256],127264:[[40,81,41],256],127265:[[40,82,41],256],127266:[[40,83,41],256],127267:[[40,84,41],256],127268:[[40,85,41],256],127269:[[40,86,41],256],127270:[[40,87,41],256],127271:[[40,88,41],256],127272:[[40,89,41],256],127273:[[40,90,41],256],127274:[[12308,83,12309],256],127275:[[67],256],127276:[[82],256],127277:[[67,68],256],127278:[[87,90],256],127280:[[65],256],127281:[[66],256],127282:[[67],256],127283:[[68],256],127284:[[69],256],127285:[[70],256],127286:[[71],256],127287:[[72],256],127288:[[73],256],127289:[[74],256],127290:[[75],256],127291:[[76],256],127292:[[77],256],127293:[[78],256],127294:[[79],256],127295:[[80],256],127296:[[81],256],127297:[[82],256],127298:[[83],256],127299:[[84],256],127300:[[85],256],127301:[[86],256],127302:[[87],256],127303:[[88],256],127304:[[89],256],127305:[[90],256],127306:[[72,86],256],127307:[[77,86],256],127308:[[83,68],256],127309:[[83,83],256],127310:[[80,80,86],256],127311:[[87,67],256],127338:[[77,67],256],127339:[[77,68],256],127376:[[68,74],256]},61952:{},63488:{194560:[[20029]],194561:[[20024]],194562:[[20033]],194563:[[131362]],194564:[[20320]],194565:[[20398]],194566:[[20411]],194567:[[20482]],194568:[[20602]],194569:[[20633]],194570:[[20711]],194571:[[20687]],194572:[[13470]],194573:[[132666]],194574:[[20813]],194575:[[20820]],194576:[[20836]],194577:[[20855]],194578:[[132380]],194579:[[13497]],194580:[[20839]],194581:[[20877]],194582:[[132427]],194583:[[20887]],194584:[[20900]],194585:[[20172]],194586:[[20908]],194587:[[20917]],194588:[[168415]],194589:[[20981]],194590:[[20995]],194591:[[13535]],194592:[[21051]],194593:[[21062]],194594:[[21106]],194595:[[21111]],194596:[[13589]],194597:[[21191]],194598:[[21193]],194599:[[21220]],194600:[[21242]],194601:[[21253]],194602:[[21254]],194603:[[21271]],194604:[[21321]],194605:[[21329]],194606:[[21338]],194607:[[21363]],194608:[[21373]],194609:[[21375]],194610:[[21375]],194611:[[21375]],194612:[[133676]],194613:[[28784]],194614:[[21450]],194615:[[21471]],194616:[[133987]],194617:[[21483]],194618:[[21489]],194619:[[21510]],194620:[[21662]],194621:[[21560]],194622:[[21576]],194623:[[21608]],194624:[[21666]],194625:[[21750]],194626:[[21776]],194627:[[21843]],194628:[[21859]],194629:[[21892]],194630:[[21892]],194631:[[21913]],194632:[[21931]],194633:[[21939]],194634:[[21954]],194635:[[22294]],194636:[[22022]],194637:[[22295]],194638:[[22097]],194639:[[22132]],194640:[[20999]],194641:[[22766]],194642:[[22478]],194643:[[22516]],194644:[[22541]],194645:[[22411]],194646:[[22578]],194647:[[22577]],194648:[[22700]],194649:[[136420]],194650:[[22770]],194651:[[22775]],194652:[[22790]],194653:[[22810]],194654:[[22818]],194655:[[22882]],194656:[[136872]],194657:[[136938]],194658:[[23020]],194659:[[23067]],194660:[[23079]],194661:[[23e3]],194662:[[23142]],194663:[[14062]],194664:[[14076]],194665:[[23304]],194666:[[23358]],194667:[[23358]],194668:[[137672]],194669:[[23491]],194670:[[23512]],194671:[[23527]],194672:[[23539]],194673:[[138008]],194674:[[23551]],194675:[[23558]],194676:[[24403]],194677:[[23586]],194678:[[14209]],194679:[[23648]],194680:[[23662]],194681:[[23744]],194682:[[23693]],194683:[[138724]],194684:[[23875]],194685:[[138726]],194686:[[23918]],194687:[[23915]],194688:[[23932]],194689:[[24033]],194690:[[24034]],194691:[[14383]],194692:[[24061]],194693:[[24104]],194694:[[24125]],194695:[[24169]],194696:[[14434]],194697:[[139651]],194698:[[14460]],194699:[[24240]],194700:[[24243]],194701:[[24246]],194702:[[24266]],194703:[[172946]],194704:[[24318]],194705:[[140081]],194706:[[140081]],194707:[[33281]],194708:[[24354]],194709:[[24354]],194710:[[14535]],194711:[[144056]],194712:[[156122]],194713:[[24418]],194714:[[24427]],194715:[[14563]],194716:[[24474]],194717:[[24525]],194718:[[24535]],194719:[[24569]],194720:[[24705]],194721:[[14650]],194722:[[14620]],194723:[[24724]],194724:[[141012]],194725:[[24775]],194726:[[24904]],194727:[[24908]],194728:[[24910]],194729:[[24908]],194730:[[24954]],194731:[[24974]],194732:[[25010]],194733:[[24996]],194734:[[25007]],194735:[[25054]],194736:[[25074]],194737:[[25078]],194738:[[25104]],194739:[[25115]],194740:[[25181]],194741:[[25265]],194742:[[25300]],194743:[[25424]],194744:[[142092]],194745:[[25405]],194746:[[25340]],194747:[[25448]],194748:[[25475]],194749:[[25572]],194750:[[142321]],194751:[[25634]],194752:[[25541]],194753:[[25513]],194754:[[14894]],194755:[[25705]],194756:[[25726]],194757:[[25757]],194758:[[25719]],194759:[[14956]],194760:[[25935]],194761:[[25964]],194762:[[143370]],194763:[[26083]],194764:[[26360]],194765:[[26185]],194766:[[15129]],194767:[[26257]],194768:[[15112]],194769:[[15076]],194770:[[20882]],194771:[[20885]],194772:[[26368]],194773:[[26268]],194774:[[32941]],194775:[[17369]],194776:[[26391]],194777:[[26395]],194778:[[26401]],194779:[[26462]],194780:[[26451]],194781:[[144323]],194782:[[15177]],194783:[[26618]],194784:[[26501]],194785:[[26706]],194786:[[26757]],194787:[[144493]],194788:[[26766]],194789:[[26655]],194790:[[26900]],194791:[[15261]],194792:[[26946]],194793:[[27043]],194794:[[27114]],194795:[[27304]],194796:[[145059]],194797:[[27355]],194798:[[15384]],194799:[[27425]],194800:[[145575]],194801:[[27476]],194802:[[15438]],194803:[[27506]],194804:[[27551]],194805:[[27578]],194806:[[27579]],194807:[[146061]],194808:[[138507]],194809:[[146170]],194810:[[27726]],194811:[[146620]],194812:[[27839]],194813:[[27853]],194814:[[27751]],194815:[[27926]]},63744:{63744:[[35912]],63745:[[26356]],63746:[[36554]],63747:[[36040]],63748:[[28369]],63749:[[20018]],63750:[[21477]],63751:[[40860]],63752:[[40860]],63753:[[22865]],63754:[[37329]],63755:[[21895]],63756:[[22856]],63757:[[25078]],63758:[[30313]],63759:[[32645]],63760:[[34367]],63761:[[34746]],63762:[[35064]],63763:[[37007]],63764:[[27138]],63765:[[27931]],63766:[[28889]],63767:[[29662]],63768:[[33853]],63769:[[37226]],63770:[[39409]],63771:[[20098]],63772:[[21365]],63773:[[27396]],63774:[[29211]],63775:[[34349]],63776:[[40478]],63777:[[23888]],63778:[[28651]],63779:[[34253]],63780:[[35172]],63781:[[25289]],63782:[[33240]],63783:[[34847]],63784:[[24266]],63785:[[26391]],63786:[[28010]],63787:[[29436]],63788:[[37070]],63789:[[20358]],63790:[[20919]],63791:[[21214]],63792:[[25796]],63793:[[27347]],63794:[[29200]],63795:[[30439]],63796:[[32769]],63797:[[34310]],63798:[[34396]],63799:[[36335]],63800:[[38706]],63801:[[39791]],63802:[[40442]],63803:[[30860]],63804:[[31103]],63805:[[32160]],63806:[[33737]],63807:[[37636]],63808:[[40575]],63809:[[35542]],63810:[[22751]],63811:[[24324]],63812:[[31840]],63813:[[32894]],63814:[[29282]],63815:[[30922]],63816:[[36034]],63817:[[38647]],63818:[[22744]],63819:[[23650]],63820:[[27155]],63821:[[28122]],63822:[[28431]],63823:[[32047]],63824:[[32311]],63825:[[38475]],63826:[[21202]],63827:[[32907]],63828:[[20956]],63829:[[20940]],63830:[[31260]],63831:[[32190]],63832:[[33777]],63833:[[38517]],63834:[[35712]],63835:[[25295]],63836:[[27138]],63837:[[35582]],63838:[[20025]],63839:[[23527]],63840:[[24594]],63841:[[29575]],63842:[[30064]],63843:[[21271]],63844:[[30971]],63845:[[20415]],63846:[[24489]],63847:[[19981]],63848:[[27852]],63849:[[25976]],63850:[[32034]],63851:[[21443]],63852:[[22622]],63853:[[30465]],63854:[[33865]],63855:[[35498]],63856:[[27578]],63857:[[36784]],63858:[[27784]],63859:[[25342]],63860:[[33509]],63861:[[25504]],63862:[[30053]],63863:[[20142]],63864:[[20841]],63865:[[20937]],63866:[[26753]],63867:[[31975]],63868:[[33391]],63869:[[35538]],63870:[[37327]],63871:[[21237]],63872:[[21570]],63873:[[22899]],63874:[[24300]],63875:[[26053]],63876:[[28670]],63877:[[31018]],63878:[[38317]],63879:[[39530]],63880:[[40599]],63881:[[40654]],63882:[[21147]],63883:[[26310]],63884:[[27511]],63885:[[36706]],63886:[[24180]],63887:[[24976]],63888:[[25088]],63889:[[25754]],63890:[[28451]],63891:[[29001]],63892:[[29833]],63893:[[31178]],63894:[[32244]],63895:[[32879]],63896:[[36646]],63897:[[34030]],63898:[[36899]],63899:[[37706]],63900:[[21015]],63901:[[21155]],63902:[[21693]],63903:[[28872]],63904:[[35010]],63905:[[35498]],63906:[[24265]],63907:[[24565]],63908:[[25467]],63909:[[27566]],63910:[[31806]],63911:[[29557]],63912:[[20196]],63913:[[22265]],63914:[[23527]],63915:[[23994]],63916:[[24604]],63917:[[29618]],63918:[[29801]],63919:[[32666]],63920:[[32838]],63921:[[37428]],63922:[[38646]],63923:[[38728]],63924:[[38936]],63925:[[20363]],63926:[[31150]],63927:[[37300]],63928:[[38584]],63929:[[24801]],63930:[[20102]],63931:[[20698]],63932:[[23534]],63933:[[23615]],63934:[[26009]],63935:[[27138]],63936:[[29134]],63937:[[30274]],63938:[[34044]],63939:[[36988]],63940:[[40845]],63941:[[26248]],63942:[[38446]],63943:[[21129]],63944:[[26491]],63945:[[26611]],63946:[[27969]],63947:[[28316]],63948:[[29705]],63949:[[30041]],63950:[[30827]],63951:[[32016]],63952:[[39006]],63953:[[20845]],63954:[[25134]],63955:[[38520]],63956:[[20523]],63957:[[23833]],63958:[[28138]],63959:[[36650]],63960:[[24459]],63961:[[24900]],63962:[[26647]],63963:[[29575]],63964:[[38534]],63965:[[21033]],63966:[[21519]],63967:[[23653]],63968:[[26131]],63969:[[26446]],63970:[[26792]],63971:[[27877]],63972:[[29702]],63973:[[30178]],63974:[[32633]],63975:[[35023]],63976:[[35041]],63977:[[37324]],63978:[[38626]],63979:[[21311]],63980:[[28346]],63981:[[21533]],63982:[[29136]],63983:[[29848]],63984:[[34298]],63985:[[38563]],63986:[[40023]],63987:[[40607]],63988:[[26519]],63989:[[28107]],63990:[[33256]],63991:[[31435]],63992:[[31520]],63993:[[31890]],63994:[[29376]],63995:[[28825]],63996:[[35672]],63997:[[20160]],63998:[[33590]],63999:[[21050]],194816:[[27966]],194817:[[28023]],194818:[[27969]],194819:[[28009]],194820:[[28024]],194821:[[28037]],194822:[[146718]],194823:[[27956]],194824:[[28207]],194825:[[28270]],194826:[[15667]],194827:[[28363]],194828:[[28359]],194829:[[147153]],194830:[[28153]],194831:[[28526]],194832:[[147294]],194833:[[147342]],194834:[[28614]],194835:[[28729]],194836:[[28702]],194837:[[28699]],194838:[[15766]],194839:[[28746]],194840:[[28797]],194841:[[28791]],194842:[[28845]],194843:[[132389]],194844:[[28997]],194845:[[148067]],194846:[[29084]],194847:[[148395]],194848:[[29224]],194849:[[29237]],194850:[[29264]],194851:[[149e3]],194852:[[29312]],194853:[[29333]],194854:[[149301]],194855:[[149524]],194856:[[29562]],194857:[[29579]],194858:[[16044]],194859:[[29605]],194860:[[16056]],194861:[[16056]],194862:[[29767]],194863:[[29788]],194864:[[29809]],194865:[[29829]],194866:[[29898]],194867:[[16155]],194868:[[29988]],194869:[[150582]],194870:[[30014]],194871:[[150674]],194872:[[30064]],194873:[[139679]],194874:[[30224]],194875:[[151457]],194876:[[151480]],194877:[[151620]],194878:[[16380]],194879:[[16392]],194880:[[30452]],194881:[[151795]],194882:[[151794]],194883:[[151833]],194884:[[151859]],194885:[[30494]],194886:[[30495]],194887:[[30495]],194888:[[30538]],194889:[[16441]],194890:[[30603]],194891:[[16454]],194892:[[16534]],194893:[[152605]],194894:[[30798]],194895:[[30860]],194896:[[30924]],194897:[[16611]],194898:[[153126]],194899:[[31062]],194900:[[153242]],194901:[[153285]],194902:[[31119]],194903:[[31211]],194904:[[16687]],194905:[[31296]],194906:[[31306]],194907:[[31311]],194908:[[153980]],194909:[[154279]],194910:[[154279]],194911:[[31470]],194912:[[16898]],194913:[[154539]],194914:[[31686]],194915:[[31689]],194916:[[16935]],194917:[[154752]],194918:[[31954]],194919:[[17056]],194920:[[31976]],194921:[[31971]],194922:[[32e3]],194923:[[155526]],194924:[[32099]],194925:[[17153]],194926:[[32199]],194927:[[32258]],194928:[[32325]],194929:[[17204]],194930:[[156200]],194931:[[156231]],194932:[[17241]],194933:[[156377]],194934:[[32634]],194935:[[156478]],194936:[[32661]],194937:[[32762]],194938:[[32773]],194939:[[156890]],194940:[[156963]],194941:[[32864]],194942:[[157096]],194943:[[32880]],194944:[[144223]],194945:[[17365]],194946:[[32946]],194947:[[33027]],194948:[[17419]],194949:[[33086]],194950:[[23221]],194951:[[157607]],194952:[[157621]],194953:[[144275]],194954:[[144284]],194955:[[33281]],194956:[[33284]],194957:[[36766]],194958:[[17515]],194959:[[33425]],194960:[[33419]],194961:[[33437]],194962:[[21171]],194963:[[33457]],194964:[[33459]],194965:[[33469]],194966:[[33510]],194967:[[158524]],194968:[[33509]],194969:[[33565]],194970:[[33635]],194971:[[33709]],194972:[[33571]],194973:[[33725]],194974:[[33767]],194975:[[33879]],194976:[[33619]],194977:[[33738]],194978:[[33740]],194979:[[33756]],194980:[[158774]],194981:[[159083]],194982:[[158933]],194983:[[17707]],194984:[[34033]],194985:[[34035]],194986:[[34070]],194987:[[160714]],194988:[[34148]],194989:[[159532]],194990:[[17757]],194991:[[17761]],194992:[[159665]],194993:[[159954]],194994:[[17771]],194995:[[34384]],194996:[[34396]],194997:[[34407]],194998:[[34409]],194999:[[34473]],195000:[[34440]],195001:[[34574]],195002:[[34530]],195003:[[34681]],195004:[[34600]],195005:[[34667]],195006:[[34694]],195007:[[17879]],195008:[[34785]],195009:[[34817]],195010:[[17913]],195011:[[34912]],195012:[[34915]],195013:[[161383]],195014:[[35031]],195015:[[35038]],195016:[[17973]],195017:[[35066]],195018:[[13499]],195019:[[161966]],195020:[[162150]],195021:[[18110]],195022:[[18119]],195023:[[35488]],195024:[[35565]],195025:[[35722]],195026:[[35925]],195027:[[162984]],195028:[[36011]],195029:[[36033]],195030:[[36123]],195031:[[36215]],195032:[[163631]],195033:[[133124]],195034:[[36299]],195035:[[36284]],195036:[[36336]],195037:[[133342]],195038:[[36564]],195039:[[36664]],195040:[[165330]],195041:[[165357]],195042:[[37012]],195043:[[37105]],195044:[[37137]],195045:[[165678]],195046:[[37147]],195047:[[37432]],195048:[[37591]],195049:[[37592]],195050:[[37500]],195051:[[37881]],195052:[[37909]],195053:[[166906]],195054:[[38283]],195055:[[18837]],195056:[[38327]],195057:[[167287]],195058:[[18918]],195059:[[38595]],195060:[[23986]],195061:[[38691]],195062:[[168261]],195063:[[168474]],195064:[[19054]],195065:[[19062]],195066:[[38880]],195067:[[168970]],195068:[[19122]],195069:[[169110]],195070:[[38923]],195071:[[38923]]},64000:{64000:[[20999]],64001:[[24230]],64002:[[25299]],64003:[[31958]],64004:[[23429]],64005:[[27934]],64006:[[26292]],64007:[[36667]],64008:[[34892]],64009:[[38477]],64010:[[35211]],64011:[[24275]],64012:[[20800]],64013:[[21952]],64016:[[22618]],64018:[[26228]],64021:[[20958]],64022:[[29482]],64023:[[30410]],64024:[[31036]],64025:[[31070]],64026:[[31077]],64027:[[31119]],64028:[[38742]],64029:[[31934]],64030:[[32701]],64032:[[34322]],64034:[[35576]],64037:[[36920]],64038:[[37117]],64042:[[39151]],64043:[[39164]],64044:[[39208]],64045:[[40372]],64046:[[37086]],64047:[[38583]],64048:[[20398]],64049:[[20711]],64050:[[20813]],64051:[[21193]],64052:[[21220]],64053:[[21329]],64054:[[21917]],64055:[[22022]],64056:[[22120]],64057:[[22592]],64058:[[22696]],64059:[[23652]],64060:[[23662]],64061:[[24724]],64062:[[24936]],64063:[[24974]],64064:[[25074]],64065:[[25935]],64066:[[26082]],64067:[[26257]],64068:[[26757]],64069:[[28023]],64070:[[28186]],64071:[[28450]],64072:[[29038]],64073:[[29227]],64074:[[29730]],64075:[[30865]],64076:[[31038]],64077:[[31049]],64078:[[31048]],64079:[[31056]],64080:[[31062]],64081:[[31069]],64082:[[31117]],64083:[[31118]],64084:[[31296]],64085:[[31361]],64086:[[31680]],64087:[[32244]],64088:[[32265]],64089:[[32321]],64090:[[32626]],64091:[[32773]],64092:[[33261]],64093:[[33401]],64094:[[33401]],64095:[[33879]],64096:[[35088]],64097:[[35222]],64098:[[35585]],64099:[[35641]],64100:[[36051]],64101:[[36104]],64102:[[36790]],64103:[[36920]],64104:[[38627]],64105:[[38911]],64106:[[38971]],64107:[[24693]],64108:[[148206]],64109:[[33304]],64112:[[20006]],64113:[[20917]],64114:[[20840]],64115:[[20352]],64116:[[20805]],64117:[[20864]],64118:[[21191]],64119:[[21242]],64120:[[21917]],64121:[[21845]],64122:[[21913]],64123:[[21986]],64124:[[22618]],64125:[[22707]],64126:[[22852]],64127:[[22868]],64128:[[23138]],64129:[[23336]],64130:[[24274]],64131:[[24281]],64132:[[24425]],64133:[[24493]],64134:[[24792]],64135:[[24910]],64136:[[24840]],64137:[[24974]],64138:[[24928]],64139:[[25074]],64140:[[25140]],64141:[[25540]],64142:[[25628]],64143:[[25682]],64144:[[25942]],64145:[[26228]],64146:[[26391]],64147:[[26395]],64148:[[26454]],64149:[[27513]],64150:[[27578]],64151:[[27969]],64152:[[28379]],64153:[[28363]],64154:[[28450]],64155:[[28702]],64156:[[29038]],64157:[[30631]],64158:[[29237]],64159:[[29359]],64160:[[29482]],64161:[[29809]],64162:[[29958]],64163:[[30011]],64164:[[30237]],64165:[[30239]],64166:[[30410]],64167:[[30427]],64168:[[30452]],64169:[[30538]],64170:[[30528]],64171:[[30924]],64172:[[31409]],64173:[[31680]],64174:[[31867]],64175:[[32091]],64176:[[32244]],64177:[[32574]],64178:[[32773]],64179:[[33618]],64180:[[33775]],64181:[[34681]],64182:[[35137]],64183:[[35206]],64184:[[35222]],64185:[[35519]],64186:[[35576]],64187:[[35531]],64188:[[35585]],64189:[[35582]],64190:[[35565]],64191:[[35641]],64192:[[35722]],64193:[[36104]],64194:[[36664]],64195:[[36978]],64196:[[37273]],64197:[[37494]],64198:[[38524]],64199:[[38627]],64200:[[38742]],64201:[[38875]],64202:[[38911]],64203:[[38923]],64204:[[38971]],64205:[[39698]],64206:[[40860]],64207:[[141386]],64208:[[141380]],64209:[[144341]],64210:[[15261]],64211:[[16408]],64212:[[16441]],64213:[[152137]],64214:[[154832]],64215:[[163539]],64216:[[40771]],64217:[[40846]],195072:[[38953]],195073:[[169398]],195074:[[39138]],195075:[[19251]],195076:[[39209]],195077:[[39335]],195078:[[39362]],195079:[[39422]],195080:[[19406]],195081:[[170800]],195082:[[39698]],195083:[[4e4]],195084:[[40189]],195085:[[19662]],195086:[[19693]],195087:[[40295]],195088:[[172238]],195089:[[19704]],195090:[[172293]],195091:[[172558]],195092:[[172689]],195093:[[40635]],195094:[[19798]],195095:[[40697]],195096:[[40702]],195097:[[40709]],195098:[[40719]],195099:[[40726]],195100:[[40763]],195101:[[173568]]},64256:{64256:[[102,102],256],64257:[[102,105],256],64258:[[102,108],256],64259:[[102,102,105],256],64260:[[102,102,108],256],64261:[[383,116],256],64262:[[115,116],256],64275:[[1396,1398],256],64276:[[1396,1381],256],64277:[[1396,1387],256],64278:[[1406,1398],256],64279:[[1396,1389],256],64285:[[1497,1460],512],64286:[null,26],64287:[[1522,1463],512],64288:[[1506],256],64289:[[1488],256],64290:[[1491],256],64291:[[1492],256],64292:[[1499],256],64293:[[1500],256],64294:[[1501],256],64295:[[1512],256],64296:[[1514],256],64297:[[43],256],64298:[[1513,1473],512],64299:[[1513,1474],512],64300:[[64329,1473],512],64301:[[64329,1474],512],64302:[[1488,1463],512],64303:[[1488,1464],512],64304:[[1488,1468],512],64305:[[1489,1468],512],64306:[[1490,1468],512],64307:[[1491,1468],512],64308:[[1492,1468],512],64309:[[1493,1468],512],64310:[[1494,1468],512],64312:[[1496,1468],512],64313:[[1497,1468],512],64314:[[1498,1468],512],64315:[[1499,1468],512],64316:[[1500,1468],512],64318:[[1502,1468],512],64320:[[1504,1468],512],64321:[[1505,1468],512],64323:[[1507,1468],512],64324:[[1508,1468],512],64326:[[1510,1468],512],64327:[[1511,1468],512],64328:[[1512,1468],512],64329:[[1513,1468],512],64330:[[1514,1468],512],64331:[[1493,1465],512],64332:[[1489,1471],512],64333:[[1499,1471],512],64334:[[1508,1471],512],64335:[[1488,1500],256],64336:[[1649],256],64337:[[1649],256],64338:[[1659],256],64339:[[1659],256],64340:[[1659],256],64341:[[1659],256],64342:[[1662],256],64343:[[1662],256],64344:[[1662],256],64345:[[1662],256],64346:[[1664],256],64347:[[1664],256],64348:[[1664],256],64349:[[1664],256],64350:[[1658],256],64351:[[1658],256],64352:[[1658],256],64353:[[1658],256],64354:[[1663],256],64355:[[1663],256],64356:[[1663],256],64357:[[1663],256],64358:[[1657],256],64359:[[1657],256],64360:[[1657],256],64361:[[1657],256],64362:[[1700],256],64363:[[1700],256],64364:[[1700],256],64365:[[1700],256],64366:[[1702],256],64367:[[1702],256],64368:[[1702],256],64369:[[1702],256],64370:[[1668],256],64371:[[1668],256],64372:[[1668],256],64373:[[1668],256],64374:[[1667],256],64375:[[1667],256],64376:[[1667],256],64377:[[1667],256],64378:[[1670],256],64379:[[1670],256],64380:[[1670],256],64381:[[1670],256],64382:[[1671],256],64383:[[1671],256],64384:[[1671],256],64385:[[1671],256],64386:[[1677],256],64387:[[1677],256],64388:[[1676],256],64389:[[1676],256],64390:[[1678],256],64391:[[1678],256],64392:[[1672],256],64393:[[1672],256],64394:[[1688],256],64395:[[1688],256],64396:[[1681],256],64397:[[1681],256],64398:[[1705],256],64399:[[1705],256],64400:[[1705],256],64401:[[1705],256],64402:[[1711],256],64403:[[1711],256],64404:[[1711],256],64405:[[1711],256],64406:[[1715],256],64407:[[1715],256],64408:[[1715],256],64409:[[1715],256],64410:[[1713],256],64411:[[1713],256],64412:[[1713],256],64413:[[1713],256],64414:[[1722],256],64415:[[1722],256],64416:[[1723],256],64417:[[1723],256],64418:[[1723],256],64419:[[1723],256],64420:[[1728],256],64421:[[1728],256],64422:[[1729],256],64423:[[1729],256],64424:[[1729],256],64425:[[1729],256],64426:[[1726],256],64427:[[1726],256],64428:[[1726],256],64429:[[1726],256],64430:[[1746],256],64431:[[1746],256],64432:[[1747],256],64433:[[1747],256],64467:[[1709],256],64468:[[1709],256],64469:[[1709],256],64470:[[1709],256],64471:[[1735],256],64472:[[1735],256],64473:[[1734],256],64474:[[1734],256],64475:[[1736],256],64476:[[1736],256],64477:[[1655],256],64478:[[1739],256],64479:[[1739],256],64480:[[1733],256],64481:[[1733],256],64482:[[1737],256],64483:[[1737],256],64484:[[1744],256],64485:[[1744],256],64486:[[1744],256],64487:[[1744],256],64488:[[1609],256],64489:[[1609],256],64490:[[1574,1575],256],64491:[[1574,1575],256],64492:[[1574,1749],256],64493:[[1574,1749],256],64494:[[1574,1608],256],64495:[[1574,1608],256],64496:[[1574,1735],256],64497:[[1574,1735],256],64498:[[1574,1734],256],64499:[[1574,1734],256],64500:[[1574,1736],256],64501:[[1574,1736],256],64502:[[1574,1744],256],64503:[[1574,1744],256],64504:[[1574,1744],256],64505:[[1574,1609],256],64506:[[1574,1609],256],64507:[[1574,1609],256],64508:[[1740],256],64509:[[1740],256],64510:[[1740],256],64511:[[1740],256]},64512:{64512:[[1574,1580],256],64513:[[1574,1581],256],64514:[[1574,1605],256],64515:[[1574,1609],256],64516:[[1574,1610],256],64517:[[1576,1580],256],64518:[[1576,1581],256],64519:[[1576,1582],256],64520:[[1576,1605],256],64521:[[1576,1609],256],64522:[[1576,1610],256],64523:[[1578,1580],256],64524:[[1578,1581],256],64525:[[1578,1582],256],64526:[[1578,1605],256],64527:[[1578,1609],256],64528:[[1578,1610],256],64529:[[1579,1580],256],64530:[[1579,1605],256],64531:[[1579,1609],256],64532:[[1579,1610],256],64533:[[1580,1581],256],64534:[[1580,1605],256],64535:[[1581,1580],256],64536:[[1581,1605],256],64537:[[1582,1580],256],64538:[[1582,1581],256],64539:[[1582,1605],256],64540:[[1587,1580],256],64541:[[1587,1581],256],64542:[[1587,1582],256],64543:[[1587,1605],256],64544:[[1589,1581],256],64545:[[1589,1605],256],64546:[[1590,1580],256],64547:[[1590,1581],256],64548:[[1590,1582],256],64549:[[1590,1605],256],64550:[[1591,1581],256],64551:[[1591,1605],256],64552:[[1592,1605],256],64553:[[1593,1580],256],64554:[[1593,1605],256],64555:[[1594,1580],256],64556:[[1594,1605],256],64557:[[1601,1580],256],64558:[[1601,1581],256],64559:[[1601,1582],256],64560:[[1601,1605],256],64561:[[1601,1609],256],64562:[[1601,1610],256],64563:[[1602,1581],256],64564:[[1602,1605],256],64565:[[1602,1609],256],64566:[[1602,1610],256],64567:[[1603,1575],256],64568:[[1603,1580],256],64569:[[1603,1581],256],64570:[[1603,1582],256],64571:[[1603,1604],256],64572:[[1603,1605],256],64573:[[1603,1609],256],64574:[[1603,1610],256],64575:[[1604,1580],256],64576:[[1604,1581],256],64577:[[1604,1582],256],64578:[[1604,1605],256],64579:[[1604,1609],256],64580:[[1604,1610],256],64581:[[1605,1580],256],64582:[[1605,1581],256],64583:[[1605,1582],256],64584:[[1605,1605],256],64585:[[1605,1609],256],64586:[[1605,1610],256],64587:[[1606,1580],256],64588:[[1606,1581],256],64589:[[1606,1582],256],64590:[[1606,1605],256],64591:[[1606,1609],256],64592:[[1606,1610],256],64593:[[1607,1580],256],64594:[[1607,1605],256],64595:[[1607,1609],256],64596:[[1607,1610],256],64597:[[1610,1580],256],64598:[[1610,1581],256],64599:[[1610,1582],256],64600:[[1610,1605],256],64601:[[1610,1609],256],64602:[[1610,1610],256],64603:[[1584,1648],256],64604:[[1585,1648],256],64605:[[1609,1648],256],64606:[[32,1612,1617],256],64607:[[32,1613,1617],256],64608:[[32,1614,1617],256],64609:[[32,1615,1617],256],64610:[[32,1616,1617],256],64611:[[32,1617,1648],256],64612:[[1574,1585],256],64613:[[1574,1586],256],64614:[[1574,1605],256],64615:[[1574,1606],256],64616:[[1574,1609],256],64617:[[1574,1610],256],64618:[[1576,1585],256],64619:[[1576,1586],256],64620:[[1576,1605],256],64621:[[1576,1606],256],64622:[[1576,1609],256],64623:[[1576,1610],256],64624:[[1578,1585],256],64625:[[1578,1586],256],64626:[[1578,1605],256],64627:[[1578,1606],256],64628:[[1578,1609],256],64629:[[1578,1610],256],64630:[[1579,1585],256],64631:[[1579,1586],256],64632:[[1579,1605],256],64633:[[1579,1606],256],64634:[[1579,1609],256],64635:[[1579,1610],256],64636:[[1601,1609],256],64637:[[1601,1610],256],64638:[[1602,1609],256],64639:[[1602,1610],256],64640:[[1603,1575],256],64641:[[1603,1604],256],64642:[[1603,1605],256],64643:[[1603,1609],256],64644:[[1603,1610],256],64645:[[1604,1605],256],64646:[[1604,1609],256],64647:[[1604,1610],256],64648:[[1605,1575],256],64649:[[1605,1605],256],64650:[[1606,1585],256],64651:[[1606,1586],256],64652:[[1606,1605],256],64653:[[1606,1606],256],64654:[[1606,1609],256],64655:[[1606,1610],256],64656:[[1609,1648],256],64657:[[1610,1585],256],64658:[[1610,1586],256],64659:[[1610,1605],256],64660:[[1610,1606],256],64661:[[1610,1609],256],64662:[[1610,1610],256],64663:[[1574,1580],256],64664:[[1574,1581],256],64665:[[1574,1582],256],64666:[[1574,1605],256],64667:[[1574,1607],256],64668:[[1576,1580],256],64669:[[1576,1581],256],64670:[[1576,1582],256],64671:[[1576,1605],256],64672:[[1576,1607],256],64673:[[1578,1580],256],64674:[[1578,1581],256],64675:[[1578,1582],256],64676:[[1578,1605],256],64677:[[1578,1607],256],64678:[[1579,1605],256],64679:[[1580,1581],256],64680:[[1580,1605],256],64681:[[1581,1580],256],64682:[[1581,1605],256],64683:[[1582,1580],256],64684:[[1582,1605],256],64685:[[1587,1580],256],64686:[[1587,1581],256],64687:[[1587,1582],256],64688:[[1587,1605],256],64689:[[1589,1581],256],64690:[[1589,1582],256],64691:[[1589,1605],256],64692:[[1590,1580],256],64693:[[1590,1581],256],64694:[[1590,1582],256],64695:[[1590,1605],256],64696:[[1591,1581],256],64697:[[1592,1605],256],64698:[[1593,1580],256],64699:[[1593,1605],256],64700:[[1594,1580],256],64701:[[1594,1605],256],64702:[[1601,1580],256],64703:[[1601,1581],256],64704:[[1601,1582],256],64705:[[1601,1605],256],64706:[[1602,1581],256],64707:[[1602,1605],256],64708:[[1603,1580],256],64709:[[1603,1581],256],64710:[[1603,1582],256],64711:[[1603,1604],256],64712:[[1603,1605],256],64713:[[1604,1580],256],64714:[[1604,1581],256],64715:[[1604,1582],256],64716:[[1604,1605],256],64717:[[1604,1607],256],64718:[[1605,1580],256],64719:[[1605,1581],256],64720:[[1605,1582],256],64721:[[1605,1605],256],64722:[[1606,1580],256],64723:[[1606,1581],256],64724:[[1606,1582],256],64725:[[1606,1605],256],64726:[[1606,1607],256],64727:[[1607,1580],256],64728:[[1607,1605],256],64729:[[1607,1648],256],64730:[[1610,1580],256],64731:[[1610,1581],256],64732:[[1610,1582],256],64733:[[1610,1605],256],64734:[[1610,1607],256],64735:[[1574,1605],256],64736:[[1574,1607],256],64737:[[1576,1605],256],64738:[[1576,1607],256],64739:[[1578,1605],256],64740:[[1578,1607],256],64741:[[1579,1605],256],64742:[[1579,1607],256],64743:[[1587,1605],256],64744:[[1587,1607],256],64745:[[1588,1605],256],64746:[[1588,1607],256],64747:[[1603,1604],256],64748:[[1603,1605],256],64749:[[1604,1605],256],64750:[[1606,1605],256],64751:[[1606,1607],256],64752:[[1610,1605],256],64753:[[1610,1607],256],64754:[[1600,1614,1617],256],64755:[[1600,1615,1617],256],64756:[[1600,1616,1617],256],64757:[[1591,1609],256],64758:[[1591,1610],256],64759:[[1593,1609],256],64760:[[1593,1610],256],64761:[[1594,1609],256],64762:[[1594,1610],256],64763:[[1587,1609],256],64764:[[1587,1610],256],64765:[[1588,1609],256],64766:[[1588,1610],256],64767:[[1581,1609],256]},64768:{64768:[[1581,1610],256],64769:[[1580,1609],256],64770:[[1580,1610],256],64771:[[1582,1609],256],64772:[[1582,1610],256],64773:[[1589,1609],256],64774:[[1589,1610],256],64775:[[1590,1609],256],64776:[[1590,1610],256],64777:[[1588,1580],256],64778:[[1588,1581],256],64779:[[1588,1582],256],64780:[[1588,1605],256],64781:[[1588,1585],256],64782:[[1587,1585],256],64783:[[1589,1585],256],64784:[[1590,1585],256],64785:[[1591,1609],256],64786:[[1591,1610],256],64787:[[1593,1609],256],64788:[[1593,1610],256],64789:[[1594,1609],256],64790:[[1594,1610],256],64791:[[1587,1609],256],64792:[[1587,1610],256],64793:[[1588,1609],256],64794:[[1588,1610],256],64795:[[1581,1609],256],64796:[[1581,1610],256],64797:[[1580,1609],256],64798:[[1580,1610],256],64799:[[1582,1609],256],64800:[[1582,1610],256],64801:[[1589,1609],256],64802:[[1589,1610],256],64803:[[1590,1609],256],64804:[[1590,1610],256],64805:[[1588,1580],256],64806:[[1588,1581],256],64807:[[1588,1582],256],64808:[[1588,1605],256],64809:[[1588,1585],256],64810:[[1587,1585],256],64811:[[1589,1585],256],64812:[[1590,1585],256],64813:[[1588,1580],256],64814:[[1588,1581],256],64815:[[1588,1582],256],64816:[[1588,1605],256],64817:[[1587,1607],256],64818:[[1588,1607],256],64819:[[1591,1605],256],64820:[[1587,1580],256],64821:[[1587,1581],256],64822:[[1587,1582],256],64823:[[1588,1580],256],64824:[[1588,1581],256],64825:[[1588,1582],256],64826:[[1591,1605],256],64827:[[1592,1605],256],64828:[[1575,1611],256],64829:[[1575,1611],256],64848:[[1578,1580,1605],256],64849:[[1578,1581,1580],256],64850:[[1578,1581,1580],256],64851:[[1578,1581,1605],256],64852:[[1578,1582,1605],256],64853:[[1578,1605,1580],256],64854:[[1578,1605,1581],256],64855:[[1578,1605,1582],256],64856:[[1580,1605,1581],256],64857:[[1580,1605,1581],256],64858:[[1581,1605,1610],256],64859:[[1581,1605,1609],256],64860:[[1587,1581,1580],256],64861:[[1587,1580,1581],256],64862:[[1587,1580,1609],256],64863:[[1587,1605,1581],256],64864:[[1587,1605,1581],256],64865:[[1587,1605,1580],256],64866:[[1587,1605,1605],256],64867:[[1587,1605,1605],256],64868:[[1589,1581,1581],256],64869:[[1589,1581,1581],256],64870:[[1589,1605,1605],256],64871:[[1588,1581,1605],256],64872:[[1588,1581,1605],256],64873:[[1588,1580,1610],256],64874:[[1588,1605,1582],256],64875:[[1588,1605,1582],256],64876:[[1588,1605,1605],256],64877:[[1588,1605,1605],256],64878:[[1590,1581,1609],256],64879:[[1590,1582,1605],256],64880:[[1590,1582,1605],256],64881:[[1591,1605,1581],256],64882:[[1591,1605,1581],256],64883:[[1591,1605,1605],256],64884:[[1591,1605,1610],256],64885:[[1593,1580,1605],256],64886:[[1593,1605,1605],256],64887:[[1593,1605,1605],256],64888:[[1593,1605,1609],256],64889:[[1594,1605,1605],256],64890:[[1594,1605,1610],256],64891:[[1594,1605,1609],256],64892:[[1601,1582,1605],256],64893:[[1601,1582,1605],256],64894:[[1602,1605,1581],256],64895:[[1602,1605,1605],256],64896:[[1604,1581,1605],256],64897:[[1604,1581,1610],256],64898:[[1604,1581,1609],256],64899:[[1604,1580,1580],256],64900:[[1604,1580,1580],256],64901:[[1604,1582,1605],256],64902:[[1604,1582,1605],256],64903:[[1604,1605,1581],256],64904:[[1604,1605,1581],256],64905:[[1605,1581,1580],256],64906:[[1605,1581,1605],256],64907:[[1605,1581,1610],256],64908:[[1605,1580,1581],256],64909:[[1605,1580,1605],256],64910:[[1605,1582,1580],256],64911:[[1605,1582,1605],256],64914:[[1605,1580,1582],256],64915:[[1607,1605,1580],256],64916:[[1607,1605,1605],256],64917:[[1606,1581,1605],256],64918:[[1606,1581,1609],256],64919:[[1606,1580,1605],256],64920:[[1606,1580,1605],256],64921:[[1606,1580,1609],256],64922:[[1606,1605,1610],256],64923:[[1606,1605,1609],256],64924:[[1610,1605,1605],256],64925:[[1610,1605,1605],256],64926:[[1576,1582,1610],256],64927:[[1578,1580,1610],256],64928:[[1578,1580,1609],256],64929:[[1578,1582,1610],256],64930:[[1578,1582,1609],256],64931:[[1578,1605,1610],256],64932:[[1578,1605,1609],256],64933:[[1580,1605,1610],256],64934:[[1580,1581,1609],256],64935:[[1580,1605,1609],256],64936:[[1587,1582,1609],256],64937:[[1589,1581,1610],256],64938:[[1588,1581,1610],256],64939:[[1590,1581,1610],256],64940:[[1604,1580,1610],256],64941:[[1604,1605,1610],256],64942:[[1610,1581,1610],256],64943:[[1610,1580,1610],256],64944:[[1610,1605,1610],256],64945:[[1605,1605,1610],256],64946:[[1602,1605,1610],256],64947:[[1606,1581,1610],256],64948:[[1602,1605,1581],256],64949:[[1604,1581,1605],256],64950:[[1593,1605,1610],256],64951:[[1603,1605,1610],256],64952:[[1606,1580,1581],256],64953:[[1605,1582,1610],256],64954:[[1604,1580,1605],256],64955:[[1603,1605,1605],256],64956:[[1604,1580,1605],256],64957:[[1606,1580,1581],256],64958:[[1580,1581,1610],256],64959:[[1581,1580,1610],256],64960:[[1605,1580,1610],256],64961:[[1601,1605,1610],256],64962:[[1576,1581,1610],256],64963:[[1603,1605,1605],256],64964:[[1593,1580,1605],256],64965:[[1589,1605,1605],256],64966:[[1587,1582,1610],256],64967:[[1606,1580,1610],256],65008:[[1589,1604,1746],256],65009:[[1602,1604,1746],256],65010:[[1575,1604,1604,1607],256],65011:[[1575,1603,1576,1585],256],65012:[[1605,1581,1605,1583],256],65013:[[1589,1604,1593,1605],256],65014:[[1585,1587,1608,1604],256],65015:[[1593,1604,1610,1607],256],65016:[[1608,1587,1604,1605],256],65017:[[1589,1604,1609],256],65018:[[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605],256],65019:[[1580,1604,32,1580,1604,1575,1604,1607],256],65020:[[1585,1740,1575,1604],256]},65024:{65040:[[44],256],65041:[[12289],256],65042:[[12290],256],65043:[[58],256],65044:[[59],256],65045:[[33],256],65046:[[63],256],65047:[[12310],256],65048:[[12311],256],65049:[[8230],256],65056:[null,230],65057:[null,230],65058:[null,230],65059:[null,230],65060:[null,230],65061:[null,230],65062:[null,230],65063:[null,220],65064:[null,220],65065:[null,220],65066:[null,220],65067:[null,220],65068:[null,220],65069:[null,220],65072:[[8229],256],65073:[[8212],256],65074:[[8211],256],65075:[[95],256],65076:[[95],256],65077:[[40],256],65078:[[41],256],65079:[[123],256],65080:[[125],256],65081:[[12308],256],65082:[[12309],256],65083:[[12304],256],65084:[[12305],256],65085:[[12298],256],65086:[[12299],256],65087:[[12296],256],65088:[[12297],256],65089:[[12300],256],65090:[[12301],256],65091:[[12302],256],65092:[[12303],256],65095:[[91],256],65096:[[93],256],65097:[[8254],256],65098:[[8254],256],65099:[[8254],256],65100:[[8254],256],65101:[[95],256],65102:[[95],256],65103:[[95],256],65104:[[44],256],65105:[[12289],256],65106:[[46],256],65108:[[59],256],65109:[[58],256],65110:[[63],256],65111:[[33],256],65112:[[8212],256],65113:[[40],256],65114:[[41],256],65115:[[123],256],65116:[[125],256],65117:[[12308],256],65118:[[12309],256],65119:[[35],256],65120:[[38],256],65121:[[42],256],65122:[[43],256],65123:[[45],256],65124:[[60],256],65125:[[62],256],65126:[[61],256],65128:[[92],256],65129:[[36],256],65130:[[37],256],65131:[[64],256],65136:[[32,1611],256],65137:[[1600,1611],256],65138:[[32,1612],256],65140:[[32,1613],256],65142:[[32,1614],256],65143:[[1600,1614],256],65144:[[32,1615],256],65145:[[1600,1615],256],65146:[[32,1616],256],65147:[[1600,1616],256],65148:[[32,1617],256],65149:[[1600,1617],256],65150:[[32,1618],256],65151:[[1600,1618],256],65152:[[1569],256],65153:[[1570],256],65154:[[1570],256],65155:[[1571],256],65156:[[1571],256],65157:[[1572],256],65158:[[1572],256],65159:[[1573],256],65160:[[1573],256],65161:[[1574],256],65162:[[1574],256],65163:[[1574],256],65164:[[1574],256],65165:[[1575],256],65166:[[1575],256],65167:[[1576],256],65168:[[1576],256],65169:[[1576],256],65170:[[1576],256],65171:[[1577],256],65172:[[1577],256],65173:[[1578],256],65174:[[1578],256],65175:[[1578],256],65176:[[1578],256],65177:[[1579],256],65178:[[1579],256],65179:[[1579],256],65180:[[1579],256],65181:[[1580],256],65182:[[1580],256],65183:[[1580],256],65184:[[1580],256],65185:[[1581],256],65186:[[1581],256],65187:[[1581],256],65188:[[1581],256],65189:[[1582],256],65190:[[1582],256],65191:[[1582],256],65192:[[1582],256],65193:[[1583],256],65194:[[1583],256],65195:[[1584],256],65196:[[1584],256],65197:[[1585],256],65198:[[1585],256],65199:[[1586],256],65200:[[1586],256],65201:[[1587],256],65202:[[1587],256],65203:[[1587],256],65204:[[1587],256],65205:[[1588],256],65206:[[1588],256],65207:[[1588],256],65208:[[1588],256],65209:[[1589],256],65210:[[1589],256],65211:[[1589],256],65212:[[1589],256],65213:[[1590],256],65214:[[1590],256],65215:[[1590],256],65216:[[1590],256],65217:[[1591],256],65218:[[1591],256],65219:[[1591],256],65220:[[1591],256],65221:[[1592],256],65222:[[1592],256],65223:[[1592],256],65224:[[1592],256],65225:[[1593],256],65226:[[1593],256],65227:[[1593],256],65228:[[1593],256],65229:[[1594],256],65230:[[1594],256],65231:[[1594],256],65232:[[1594],256],65233:[[1601],256],65234:[[1601],256],65235:[[1601],256],65236:[[1601],256],65237:[[1602],256],65238:[[1602],256],65239:[[1602],256],65240:[[1602],256],65241:[[1603],256],65242:[[1603],256],65243:[[1603],256],65244:[[1603],256],65245:[[1604],256],65246:[[1604],256],65247:[[1604],256],65248:[[1604],256],65249:[[1605],256],65250:[[1605],256],65251:[[1605],256],65252:[[1605],256],65253:[[1606],256],65254:[[1606],256],65255:[[1606],256],65256:[[1606],256],65257:[[1607],256],65258:[[1607],256],65259:[[1607],256],65260:[[1607],256],65261:[[1608],256],65262:[[1608],256],65263:[[1609],256],65264:[[1609],256],65265:[[1610],256],65266:[[1610],256],65267:[[1610],256],65268:[[1610],256],65269:[[1604,1570],256],65270:[[1604,1570],256],65271:[[1604,1571],256],65272:[[1604,1571],256],65273:[[1604,1573],256],65274:[[1604,1573],256],65275:[[1604,1575],256],65276:[[1604,1575],256]},65280:{65281:[[33],256],65282:[[34],256],65283:[[35],256],65284:[[36],256],65285:[[37],256],65286:[[38],256],65287:[[39],256],65288:[[40],256],65289:[[41],256],65290:[[42],256],65291:[[43],256],65292:[[44],256],65293:[[45],256],65294:[[46],256],65295:[[47],256],65296:[[48],256],65297:[[49],256],65298:[[50],256],65299:[[51],256],65300:[[52],256],65301:[[53],256],65302:[[54],256],65303:[[55],256],65304:[[56],256],65305:[[57],256],65306:[[58],256],65307:[[59],256],65308:[[60],256],65309:[[61],256],65310:[[62],256],65311:[[63],256],65312:[[64],256],65313:[[65],256],65314:[[66],256],65315:[[67],256],65316:[[68],256],65317:[[69],256],65318:[[70],256],65319:[[71],256],65320:[[72],256],65321:[[73],256],65322:[[74],256],65323:[[75],256],65324:[[76],256],65325:[[77],256],65326:[[78],256],65327:[[79],256],65328:[[80],256],65329:[[81],256],65330:[[82],256],65331:[[83],256],65332:[[84],256],65333:[[85],256],65334:[[86],256],65335:[[87],256],65336:[[88],256],65337:[[89],256],65338:[[90],256],65339:[[91],256],65340:[[92],256],65341:[[93],256],65342:[[94],256],65343:[[95],256],65344:[[96],256],65345:[[97],256],65346:[[98],256],65347:[[99],256],65348:[[100],256],65349:[[101],256],65350:[[102],256],65351:[[103],256],65352:[[104],256],65353:[[105],256],65354:[[106],256],65355:[[107],256],65356:[[108],256],65357:[[109],256],65358:[[110],256],65359:[[111],256],65360:[[112],256],65361:[[113],256],65362:[[114],256],65363:[[115],256],65364:[[116],256],65365:[[117],256],65366:[[118],256],65367:[[119],256],65368:[[120],256],65369:[[121],256],65370:[[122],256],65371:[[123],256],65372:[[124],256],65373:[[125],256],65374:[[126],256],65375:[[10629],256],65376:[[10630],256],65377:[[12290],256],65378:[[12300],256],65379:[[12301],256],65380:[[12289],256],65381:[[12539],256],65382:[[12530],256],65383:[[12449],256],65384:[[12451],256],65385:[[12453],256],65386:[[12455],256],65387:[[12457],256],65388:[[12515],256],65389:[[12517],256],65390:[[12519],256],65391:[[12483],256],65392:[[12540],256],65393:[[12450],256],65394:[[12452],256],65395:[[12454],256],65396:[[12456],256],65397:[[12458],256],65398:[[12459],256],65399:[[12461],256],65400:[[12463],256],65401:[[12465],256],65402:[[12467],256],65403:[[12469],256],65404:[[12471],256],65405:[[12473],256],65406:[[12475],256],65407:[[12477],256],65408:[[12479],256],65409:[[12481],256],65410:[[12484],256],65411:[[12486],256],65412:[[12488],256],65413:[[12490],256],65414:[[12491],256],65415:[[12492],256],65416:[[12493],256],65417:[[12494],256],65418:[[12495],256],65419:[[12498],256],65420:[[12501],256],65421:[[12504],256],65422:[[12507],256],65423:[[12510],256],65424:[[12511],256],65425:[[12512],256],65426:[[12513],256],65427:[[12514],256],65428:[[12516],256],65429:[[12518],256],65430:[[12520],256],65431:[[12521],256],65432:[[12522],256],65433:[[12523],256],65434:[[12524],256],65435:[[12525],256],65436:[[12527],256],65437:[[12531],256],65438:[[12441],256],65439:[[12442],256],65440:[[12644],256],65441:[[12593],256],65442:[[12594],256],65443:[[12595],256],65444:[[12596],256],65445:[[12597],256],65446:[[12598],256],65447:[[12599],256],65448:[[12600],256],65449:[[12601],256],65450:[[12602],256],65451:[[12603],256],65452:[[12604],256],65453:[[12605],256],65454:[[12606],256],65455:[[12607],256],65456:[[12608],256],65457:[[12609],256],65458:[[12610],256],65459:[[12611],256],65460:[[12612],256],65461:[[12613],256],65462:[[12614],256],65463:[[12615],256],65464:[[12616],256],65465:[[12617],256],65466:[[12618],256],65467:[[12619],256],65468:[[12620],256],65469:[[12621],256],65470:[[12622],256],65474:[[12623],256],65475:[[12624],256],65476:[[12625],256],65477:[[12626],256],65478:[[12627],256],65479:[[12628],256],65482:[[12629],256],65483:[[12630],256],65484:[[12631],256],65485:[[12632],256],65486:[[12633],256],65487:[[12634],256],65490:[[12635],256],65491:[[12636],256],65492:[[12637],256],65493:[[12638],256],65494:[[12639],256],65495:[[12640],256],65498:[[12641],256],65499:[[12642],256],65500:[[12643],256],65504:[[162],256],65505:[[163],256],65506:[[172],256],65507:[[175],256],65508:[[166],256],65509:[[165],256],65510:[[8361],256],65512:[[9474],256],65513:[[8592],256],65514:[[8593],256],65515:[[8594],256],65516:[[8595],256],65517:[[9632],256],65518:[[9675],256]}}},function(t,e,i){"use strict";(function(e){
/*!
 * masterkey.js - master bip32 key object for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(2),{Lock:n}=i(28),o=i(37),a=i(69),h=i(162),c=i(19),l=i(9),u=i(15),f=i(67),d=i(77),p=i(5),g=i(153),m=i(83),{encoding:b}=s;class w{constructor(t){this.encrypted=!1,this.iv=null,this.ciphertext=null,this.key=null,this.mnemonic=null,this.alg=w.alg.PBKDF2,this.n=5e4,this.r=0,this.p=0,this.aesKey=null,this.timer=null,this.until=0,this.locker=new n,t&&this.fromOptions(t)}fromOptions(t){return r(t),null!=t.encrypted&&(r("boolean"==typeof t.encrypted),this.encrypted=t.encrypted),t.iv&&(r(e.isBuffer(t.iv)),this.iv=t.iv),t.ciphertext&&(r(e.isBuffer(t.ciphertext)),this.ciphertext=t.ciphertext),t.key&&(r(g.isHDPrivateKey(t.key)),this.key=t.key),t.mnemonic&&(r(t.mnemonic instanceof m),this.mnemonic=t.mnemonic),null!=t.alg&&("string"==typeof t.alg?(this.alg=w.alg[t.alg.toUpperCase()],r(null!=this.alg,"Unknown algorithm.")):(r("number"==typeof t.alg),r(w.algByVal[t.alg]),this.alg=t.alg)),null!=t.rounds&&(r(t.rounds>>>0===t.rounds),this.rounds=t.rounds),null!=t.n&&(r(t.n>>>0===t.n),this.n=t.n),null!=t.r&&(r(t.r>>>0===t.r),this.r=t.r),null!=t.p&&(r(t.p>>>0===t.p),this.p=t.p),r(this.encrypted?!this.key:this.key),this}static fromOptions(t){return(new this).fromOptions(t)}async unlock(t,e){const i=await this.locker.lock();try{return await this._unlock(t,e)}finally{i()}}async _unlock(t,e){if(this.key)return this.encrypted&&(r(null!=this.timer),this.start(e)),this.key;if(!t)throw new Error("No passphrase.");r(this.encrypted);const i=await this.derive(t),s=h.decipher(this.ciphertext,i,this.iv);return this.readKey(s),this.start(e),this.aesKey=i,this.key}start(t){t||(t=60),this.stop(),-1!==t&&(r(t>>>0===t),this.until=p.now()+t,this.timer=setTimeout(()=>this.lock(),1e3*t))}stop(){null!=this.timer&&(clearTimeout(this.timer),this.timer=null,this.until=0)}async derive(t){const i=w.SALT,r=this.n,s=this.r,n=this.p;switch("string"==typeof t&&(t=e.from(t,"utf8")),this.alg){case w.alg.PBKDF2:return f.deriveAsync(c,t,i,r,32);case w.alg.SCRYPT:return d.deriveAsync(t,i,r,s,n,32);default:throw new Error(`Unknown algorithm: ${this.alg}.`)}}encipher(t,e){return this.aesKey?h.encipher(t,this.aesKey,e.slice(0,16)):null}decipher(t,e){return this.aesKey?h.decipher(t,this.aesKey,e.slice(0,16)):null}async lock(){const t=await this.locker.lock();try{return await this._lock()}finally{t()}}_lock(){if(!this.encrypted)return r(null==this.timer),void r(this.key);this.stop(),this.key&&(this.key.destroy(!0),this.key=null),this.aesKey&&(a(this.aesKey),this.aesKey=null)}async destroy(){await this.lock(),this.locker.destroy()}async decrypt(t,e){const i=await this.locker.lock();try{return await this._decrypt(t,e)}finally{i()}}async _decrypt(t,e){if(!this.encrypted)throw new Error("Master key is not encrypted.");if(!t)throw new Error("No passphrase provided.");this._lock();const i=await this.derive(t),r=h.decipher(this.ciphertext,i,this.iv);return this.readKey(r),this.encrypted=!1,this.iv=null,this.ciphertext=null,e?i:(a(i),null)}async encrypt(t,e){const i=await this.locker.lock();try{return await this._encrypt(t,e)}finally{i()}}async _encrypt(t,e){if(this.encrypted)throw new Error("Master key is already encrypted.");if(!t)throw new Error("No passphrase provided.");const i=this.writeKey(),r=o.randomBytes(16);this.stop();const s=await this.derive(t),n=h.encipher(i,s,r);return this.key=null,this.mnemonic=null,this.encrypted=!0,this.iv=r,this.ciphertext=n,e?s:(a(s),null)}keySize(){let t=0;return t+=64,t+=1,this.mnemonic&&(t+=this.mnemonic.getSize()),t}writeKey(){const t=s.write(this.keySize());return t.writeBytes(this.key.chainCode),t.writeBytes(this.key.privateKey),this.mnemonic?(t.writeU8(1),this.mnemonic.toWriter(t)):t.writeU8(0),t.render()}readKey(t){const e=s.read(t);return this.key=new g,function(t){if(t.length<82)return!1;const e=t.slice(0,78),i=t.readUInt32LE(78,!0);return l.digest(e).readUInt32LE(0,!0)===i}(t)?(e.seek(13),this.key.chainCode=e.readBytes(32),r(0===e.readU8()),this.key.privateKey=e.readBytes(32)):(this.key.chainCode=e.readBytes(32),this.key.privateKey=e.readBytes(32)),this.key.publicKey=u.publicKeyCreate(this.key.privateKey,!0),1===e.readU8()&&(this.mnemonic=m.fromReader(e)),this}getSize(){let t=0;return this.encrypted?(t+=1,t+=b.sizeVarBytes(this.iv),t+=b.sizeVarBytes(this.ciphertext),t+=13):(t+=1,t+=this.keySize())}toWriter(t){return this.encrypted?(t.writeU8(1),t.writeVarBytes(this.iv),t.writeVarBytes(this.ciphertext),t.writeU8(this.alg),t.writeU32(this.n),t.writeU32(this.r),t.writeU32(this.p),t):(t.writeU8(0),t.writeBytes(this.key.chainCode),t.writeBytes(this.key.privateKey),this.mnemonic?(t.writeU8(1),this.mnemonic.toWriter(t)):t.writeU8(0),t)}toRaw(){const t=this.getSize();return this.toWriter(s.write(t)).render()}fromReader(t){return this.encrypted=1===t.readU8(),this.encrypted?(this.iv=t.readVarBytes(),this.ciphertext=t.readVarBytes(),this.alg=t.readU8(),r(this.alg<w.algByVal.length),this.n=t.readU32(),this.r=t.readU32(),this.p=t.readU32(),this):(this.key=new g,this.key.chainCode=t.readBytes(32),this.key.privateKey=t.readBytes(32),this.key.publicKey=u.publicKeyCreate(this.key.privateKey,!0),1===t.readU8()&&(this.mnemonic=m.fromReader(t)),this)}static fromReader(t){return(new this).fromReader(t)}fromRaw(t){return this.fromReader(s.read(t))}static fromRaw(t){return(new this).fromRaw(t)}fromKey(t,e){return this.encrypted=!1,this.iv=null,this.ciphertext=null,this.key=t,this.mnemonic=e||null,this}static fromKey(t,e){return(new this).fromKey(t,e)}toJSON(t,e){return this.encrypted?{encrypted:!0,until:this.until,iv:this.iv.toString("hex"),ciphertext:e?this.ciphertext.toString("hex"):void 0,algorithm:w.algByVal[this.alg].toLowerCase(),n:this.n,r:this.r,p:this.p}:{encrypted:!1,key:e?this.key.toJSON(t):void 0,mnemonic:e&&this.mnemonic?this.mnemonic.toJSON():void 0}}inspect(){const t=this.toJSON(null,!0);return this.key&&(t.key=this.key.toJSON()),this.mnemonic&&(t.mnemonic=this.mnemonic.toJSON()),t}static isMasterKey(t){return t instanceof w}}w.SALT=e.from("bcoin","ascii"),w.alg={PBKDF2:0,SCRYPT:1},w.algByVal=["PBKDF2","SCRYPT"],t.exports=w}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * nullclient.js - node client for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(7);t.exports=class extends s{constructor(t){super(),this.wdb=t,this.network=t.network,this.opened=!1}async open(t){r(!this.opened,"NullClient is already open."),this.opened=!0,e(()=>this.emit("connect"))}async close(){r(this.opened,"NullClient is not open."),this.opened=!1,e(()=>this.emit("disconnect"))}bind(t,e){return this.on(t,e)}hook(t,e){return this.on(t,e)}async getTip(){const{hash:t,height:e,time:i}=this.network.genesis;return{hash:t,height:e,time:i}}async getEntry(t){return{hash:t,height:0,time:0}}async send(t){this.wdb.emit("send",t)}async setFilter(t){this.wdb.emit("set filter",t)}async addFilter(t){this.wdb.emit("add filter",t)}async resetFilter(){this.wdb.emit("reset filter")}async estimateFee(t){return this.network.feeRate}async getHashes(t=-1,e=-1){return[this.network.genesis.hash]}async rescan(t){}}}).call(this,i(34).setImmediate)},function(t,e,i){"use strict";(function(e){
/*!
 * nodeclient.js - node client for bcoin
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(155);t.exports=class extends s{constructor(t){super(),this.node=t,this.network=t.network,this.filter=null,this.opened=!1,this.init()}init(){this.node.on("connect",(t,e)=>{this.opened&&this.emit("block connect",t,e.txs)}),this.node.on("disconnect",(t,e)=>{this.opened&&this.emit("block disconnect",t)}),this.node.on("tx",t=>{this.opened&&this.emit("tx",t)}),this.node.on("reset",t=>{this.opened&&this.emit("chain reset",t)})}async open(t){r(!this.opened,"NodeClient is already open."),this.opened=!0,e(()=>this.emit("connect"))}async close(){r(this.opened,"NodeClient is not open."),this.opened=!1,e(()=>this.emit("disconnect"))}bind(t,e){return this.on(t,e)}hook(t,e){return this.on(t,e)}async getTip(){return this.node.chain.tip}async getEntry(t){const e=await this.node.chain.getEntry(t);return e&&await this.node.chain.isMainChain(e)?e:null}async send(t){this.node.relay(t)}async setFilter(t){this.filter=t,this.node.pool.setFilter(t)}async addFilter(t){this.node.pool.queueFilterLoad()}async resetFilter(){this.node.pool.queueFilterLoad()}async estimateFee(t){return this.node.fees?this.node.fees.estimateFee(t):this.network.feeRate}async getHashes(t=-1,e=-1){return this.node.chain.getHashes(t,e)}async rescan(t){return this.node.chain.scan(t,this.filter,(t,e)=>this.emitAsync("block rescan",t,e))}}}).call(this,i(34).setImmediate)},function(t,e,i){"use strict";(function(e){
/*!
 * server.js - http server for bcoin
 * Copyright (c) 2014-2015, Fedor Indutny (MIT License)
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),s=i(47),{Server:n}=i(78),o=i(79),{base58:a}=i(27),h=i(44),c=i(17),l=i(10),u=i(19),f=i(37),{safeEqual:d}=i(80),p=i(4),g=i(12),m=i(45),b=i(83),w=i(153),y=i(154),v=i(68);class k{constructor(t){this.network=p.primary,this.logger=null,this.node=null,this.apiKey=a.encode(f.randomBytes(20)),this.apiHash=u.digest(e.from(this.apiKey,"ascii")),this.adminToken=f.randomBytes(32),this.serviceHash=this.apiHash,this.noAuth=!1,this.cors=!1,this.walletAuth=!1,this.prefix=null,this.host="127.0.0.1",this.port=8080,this.ssl=!1,this.keyFile=null,this.certFile=null,this.fromOptions(t)}fromOptions(t){if(r(t),r(t.node&&"object"==typeof t.node,"HTTP Server requires a WalletDB."),this.node=t.node,this.network=t.node.network,this.logger=t.node.logger,this.port=this.network.walletPort,null!=t.logger&&(r("object"==typeof t.logger),this.logger=t.logger),null!=t.apiKey&&(r("string"==typeof t.apiKey,"API key must be a string."),r(t.apiKey.length<=255,"API key must be under 255 bytes."),this.apiKey=t.apiKey,this.apiHash=u.digest(e.from(this.apiKey,"ascii"))),null!=t.adminToken)if("string"==typeof t.adminToken){r(64===t.adminToken.length,"Admin token must be a 32 byte hex string.");const i=e.from(t.adminToken,"hex");r(32===i.length,"Admin token must be a 32 byte hex string."),this.adminToken=i}else r(e.isBuffer(t.adminToken),"Admin token must be a hex string or buffer."),r(32===t.adminToken.length,"Admin token must be 32 bytes."),this.adminToken=t.adminToken;return null!=t.noAuth&&(r("boolean"==typeof t.noAuth),this.noAuth=t.noAuth),null!=t.cors&&(r("boolean"==typeof t.cors),this.cors=t.cors),null!=t.walletAuth&&(r("boolean"==typeof t.walletAuth),this.walletAuth=t.walletAuth),null!=t.prefix&&(r("string"==typeof t.prefix),this.prefix=t.prefix,this.keyFile=s.join(this.prefix,"key.pem"),this.certFile=s.join(this.prefix,"cert.pem")),null!=t.host&&(r("string"==typeof t.host),this.host=t.host),null!=t.port&&(r((65535&t.port)===t.port,"Port must be a number."),this.port=t.port),null!=t.ssl&&(r("boolean"==typeof t.ssl),this.ssl=t.ssl),null!=t.keyFile&&(r("string"==typeof t.keyFile),this.keyFile=t.keyFile),null!=t.certFile&&(r("string"==typeof t.certFile),this.certFile=t.certFile),t.apiKey||"127.0.0.1"!==this.host&&"::1"!==this.host||(this.noAuth=!0),this}static fromOptions(t){return(new k).fromOptions(t)}}function E(t,e){if(!t){const t=new Error(e);throw t.statusCode=400,t}}t.exports=class extends n{constructor(t){super(new k(t)),this.network=this.options.network,this.logger=this.options.logger.context("http"),this.wdb=this.options.node.wdb,this.rpc=this.options.node.rpc,this.init()}init(){this.on("request",(t,e)=>{"POST"===t.method&&"/"===t.pathname||this.logger.debug("Request for method=%s path=%s (%s).",t.method,t.pathname,t.socket.remoteAddress)}),this.on("listening",t=>{this.logger.info("Wallet HTTP server listening on %s (port=%d).",t.address,t.port)}),this.initRouter(),this.initSockets()}initRouter(){this.options.cors&&this.use(this.cors()),this.options.noAuth||this.use(this.basicAuth({hash:u.digest,password:this.options.apiKey,realm:"wallet"})),this.use(this.bodyParser({type:"json"})),this.use(async(t,e)=>{if(!this.options.walletAuth)return void(t.admin=!0);const i=o.fromRequest(t).buf("token");i&&d(i,this.options.adminToken)?t.admin=!0:"POST"!==t.method||0!==t.path.length||e.json(403)}),this.use(this.jsonRPC()),this.use(this.router()),this.error((t,e,i)=>{const r=t.statusCode||500;i.json(r,{error:{type:t.type,code:t.code,message:t.message}})}),this.hook(async(t,e)=>{if(t.path.length<2)return;if("wallet"!==t.path[0])return;if("PUT"===t.method&&2===t.path.length)return;const i=o.fromRequest(t),r=i.str("id"),s=i.buf("token");if(!r)return void e.json(403);if(t.admin||!this.options.walletAuth){const i=await this.wdb.get(r);return i?void(t.wallet=i):void e.json(404)}if(!s)return void e.json(403);let n;try{n=await this.wdb.auth(r,s)}catch(t){return this.logger.info("Auth failure for %s: %s.",r,t.message),void e.json(403)}n?(t.wallet=n,this.logger.info("Successful auth for %s.",r)):e.json(404)}),this.post("/rescan",async(t,e)=>{if(!t.admin)return void e.json(403);const i=o.fromRequest(t).u32("height");e.json(200,{success:!0}),await this.wdb.rescan(i)}),this.post("/resend",async(t,e)=>{t.admin?(await this.wdb.resend(),e.json(200,{success:!0})):e.json(403)}),this.post("/backup",async(t,e)=>{if(!t.admin)return void e.json(403);const i=o.fromRequest(t).str("path");E(i,"Path is required."),await this.wdb.backup(i),e.json(200,{success:!0})}),this.get("/wallet",async(t,e)=>{if(!t.admin)return void e.json(403);const i=await this.wdb.getWallets();e.json(200,i)}),this.get("/wallet/:id",async(t,e)=>{const i=await t.wallet.getBalance();e.json(200,t.wallet.toJSON(!1,i))}),this.get("/wallet/:id/master",(t,e)=>{t.admin?e.json(200,t.wallet.master.toJSON(this.network,!0)):e.json(403)}),this.put("/wallet/:id",async(t,e)=>{const i=o.fromRequest(t);let r=i.str("master"),s=i.str("mnemonic"),n=i.str("accountKey");r&&(r=w.fromBase58(r,this.network)),s&&(s=b.fromPhrase(s)),n&&(n=y.fromBase58(n,this.network));const a=await this.wdb.create({id:i.str("id"),type:i.str("type"),m:i.u32("m"),n:i.u32("n"),passphrase:i.str("passphrase"),master:r,mnemonic:s,witness:i.bool("witness"),accountKey:n,watchOnly:i.bool("watchOnly")}),h=await a.getBalance();e.json(200,a.toJSON(!1,h))}),this.get("/wallet/:id/account",async(t,e)=>{const i=await t.wallet.getAccounts();e.json(200,i)}),this.get("/wallet/:id/account/:account",async(t,e)=>{const i=o.fromRequest(t).str("account"),r=await t.wallet.getAccount(i);if(!r)return void e.json(404);const s=await t.wallet.getBalance(r.accountIndex);e.json(200,r.toJSON(s))}),this.put("/wallet/:id/account/:account",async(t,e)=>{const i=o.fromRequest(t),r=i.str("passphrase");let s=i.get("accountKey");s&&(s=y.fromBase58(s,this.network));const n={name:i.str("account"),witness:i.bool("witness"),watchOnly:i.bool("watchOnly"),type:i.str("type"),m:i.u32("m"),n:i.u32("n"),accountKey:s,lookahead:i.u32("lookahead")},a=await t.wallet.createAccount(n,r),h=await t.wallet.getBalance(a.accountIndex);e.json(200,a.toJSON(h))}),this.post("/wallet/:id/passphrase",async(t,e)=>{const i=o.fromRequest(t),r=i.str("passphrase"),s=i.str("old");E(r,"Passphrase is required."),await t.wallet.setPassphrase(r,s),e.json(200,{success:!0})}),this.post("/wallet/:id/unlock",async(t,e)=>{const i=o.fromRequest(t),r=i.str("passphrase"),s=i.u32("timeout");E(r,"Passphrase is required."),await t.wallet.unlock(r,s),e.json(200,{success:!0})}),this.post("/wallet/:id/lock",async(t,e)=>{await t.wallet.lock(),e.json(200,{success:!0})}),this.post("/wallet/:id/import",async(t,e)=>{const i=o.fromRequest(t),r=i.str("account"),s=i.str("passphrase"),n=i.buf("publicKey"),a=i.str("privateKey"),h=i.str("address");if(n){const i=m.fromPublic(n);return await t.wallet.importKey(r,i),void e.json(200,{success:!0})}if(a){const i=m.fromSecret(a,this.network);return await t.wallet.importKey(r,i,s),void e.json(200,{success:!0})}if(h){const i=g.fromString(h,this.network);return await t.wallet.importAddress(r,i),void e.json(200,{success:!0})}E(!1,"Key or address is required.")}),this.post("/wallet/:id/retoken",async(t,e)=>{const i=o.fromRequest(t).str("passphrase"),r=await t.wallet.retoken(i);e.json(200,{token:r.toString("hex")})}),this.post("/wallet/:id/send",async(t,e)=>{const i=o.fromRequest(t),r=i.str("passphrase"),s=i.array("outputs",[]),n={rate:i.u64("rate"),blocks:i.u32("blocks"),maxFee:i.u64("maxFee"),selection:i.str("selection"),smart:i.bool("smart"),account:i.str("account"),sort:i.bool("sort"),subtractFee:i.bool("subtractFee"),subtractIndex:i.i32("subtractIndex"),depth:i.u32(["confirmations","depth"]),outputs:[]};for(const t of s){const e=new o(t);let i=e.str("address"),r=e.buf("script");i&&(i=g.fromString(i,this.network)),r&&(r=l.fromRaw(r)),n.outputs.push({address:i,script:r,value:e.u64("value")})}const a=await t.wallet.send(n,r),h=await t.wallet.getDetails(a.hash());e.json(200,h.toJSON(this.network,this.wdb.height))}),this.post("/wallet/:id/create",async(t,e)=>{const i=o.fromRequest(t),r=i.str("passphrase"),s=i.array("outputs",[]),n=i.bool("sign",!0),a={rate:i.u64("rate"),maxFee:i.u64("maxFee"),selection:i.str("selection"),smart:i.bool("smart"),account:i.str("account"),subtractFee:i.bool("subtractFee"),subtractIndex:i.i32("subtractIndex"),depth:i.u32(["confirmations","depth"]),outputs:[]};for(const t of s){const e=new o(t);let i=e.str("address"),r=e.buf("script");i&&(i=g.fromString(i,this.network)),r&&(r=l.fromRaw(r)),a.outputs.push({address:i,script:r,value:e.u64("value")})}const h=await t.wallet.createTX(a);n&&await t.wallet.sign(h,r),e.json(200,h.getJSON(this.network))}),this.post("/wallet/:id/sign",async(t,e)=>{const i=o.fromRequest(t),r=i.str("passphrase"),s=i.buf("tx");E(s,"TX is required.");const n=h.fromRaw(s);n.view=await t.wallet.getCoinView(n),await t.wallet.sign(n,r),e.json(200,n.getJSON(this.network))}),this.post("/wallet/:id/zap",async(t,e)=>{const i=o.fromRequest(t),r=i.str("account"),s=i.u32("age");E(s,"Age is required."),await t.wallet.zap(r,s),e.json(200,{success:!0})}),this.del("/wallet/:id/tx/:hash",async(t,e)=>{const i=o.fromRequest(t).brhash("hash");E(i,"Hash is required."),await t.wallet.abandon(i),e.json(200,{success:!0})}),this.get("/wallet/:id/block",async(t,e)=>{const i=await t.wallet.getBlocks();e.json(200,i)}),this.get("/wallet/:id/block/:height",async(t,e)=>{const i=o.fromRequest(t).u32("height");E(null!=i,"Height is required.");const r=await t.wallet.getBlock(i);r?e.json(200,r.toJSON()):e.json(404)}),this.put("/wallet/:id/shared-key",async(t,e)=>{const i=o.fromRequest(t),r=i.str("account"),s=i.str("accountKey");E(s,"Key is required.");const n=y.fromBase58(s,this.network),a=await t.wallet.addSharedKey(r,n);e.json(200,{success:!0,addedKey:a})}),this.del("/wallet/:id/shared-key",async(t,e)=>{const i=o.fromRequest(t),r=i.str("account"),s=i.str("accountKey");E(s,"Key is required.");const n=y.fromBase58(s,this.network),a=await t.wallet.removeSharedKey(r,n);e.json(200,{success:!0,removedKey:a})}),this.get("/wallet/:id/key/:address",async(t,e)=>{const i=o.fromRequest(t).str("address");E(i,"Address is required.");const r=g.fromString(i,this.network),s=await t.wallet.getKey(r);s?e.json(200,s.toJSON(this.network)):e.json(404)}),this.get("/wallet/:id/wif/:address",async(t,e)=>{const i=o.fromRequest(t),r=i.str("address"),s=i.str("passphrase");E(r,"Address is required.");const n=g.fromString(r,this.network),a=await t.wallet.getPrivateKey(n,s);a?e.json(200,{privateKey:a.toSecret(this.network)}):e.json(404)}),this.post("/wallet/:id/address",async(t,e)=>{const i=o.fromRequest(t).str("account"),r=await t.wallet.createReceive(i);e.json(200,r.toJSON(this.network))}),this.post("/wallet/:id/change",async(t,e)=>{const i=o.fromRequest(t).str("account"),r=await t.wallet.createChange(i);e.json(200,r.toJSON(this.network))}),this.post("/wallet/:id/nested",async(t,e)=>{const i=o.fromRequest(t).str("account"),r=await t.wallet.createNested(i);e.json(200,r.toJSON(this.network))}),this.get("/wallet/:id/balance",async(t,e)=>{const i=o.fromRequest(t).str("account"),r=await t.wallet.getBalance(i);r?e.json(200,r.toJSON()):e.json(404)}),this.get("/wallet/:id/coin",async(t,e)=>{const i=o.fromRequest(t).str("account"),r=await t.wallet.getCoins(i),s=[];v.sortCoins(r);for(const t of r)s.push(t.getJSON(this.network));e.json(200,s)}),this.get("/wallet/:id/locked",async(t,e)=>{const i=t.wallet.getLocked(),r=[];for(const t of i)r.push(t.toJSON());e.json(200,r)}),this.put("/wallet/:id/locked/:hash/:index",async(t,e)=>{const i=o.fromRequest(t),r=i.brhash("hash"),s=i.u32("index");E(r,"Hash is required."),E(null!=s,"Index is required.");const n=new c(r,s);t.wallet.lockCoin(n),e.json(200,{success:!0})}),this.del("/wallet/:id/locked/:hash/:index",async(t,e)=>{const i=o.fromRequest(t),r=i.brhash("hash"),s=i.u32("index");E(r,"Hash is required."),E(null!=s,"Index is required.");const n=new c(r,s);t.wallet.unlockCoin(n),e.json(200,{success:!0})}),this.get("/wallet/:id/coin/:hash/:index",async(t,e)=>{const i=o.fromRequest(t),r=i.brhash("hash"),s=i.u32("index");E(r,"Hash is required."),E(null!=s,"Index is required.");const n=await t.wallet.getCoin(r,s);n?e.json(200,n.getJSON(this.network)):e.json(404)}),this.get("/wallet/:id/tx/history",async(t,e)=>{const i=o.fromRequest(t).str("account"),r=await t.wallet.getHistory(i);v.sortTX(r);const s=await t.wallet.toDetails(r),n=[];for(const t of s)n.push(t.toJSON(this.network,this.wdb.height));e.json(200,n)}),this.get("/wallet/:id/tx/unconfirmed",async(t,e)=>{const i=o.fromRequest(t).str("account"),r=await t.wallet.getPending(i);v.sortTX(r);const s=await t.wallet.toDetails(r),n=[];for(const t of s)n.push(t.toJSON(this.network,this.wdb.height));e.json(200,n)}),this.get("/wallet/:id/tx/range",async(t,e)=>{const i=o.fromRequest(t),r=i.str("account"),s={start:i.u32("start"),end:i.u32("end"),limit:i.u32("limit"),reverse:i.bool("reverse")},n=await t.wallet.getRange(r,s),a=await t.wallet.toDetails(n),h=[];for(const t of a)h.push(t.toJSON(this.network,this.wdb.height));e.json(200,h)}),this.get("/wallet/:id/tx/last",async(t,e)=>{const i=o.fromRequest(t),r=i.str("account"),s=i.u32("limit"),n=await t.wallet.getLast(r,s),a=await t.wallet.toDetails(n),h=[];for(const t of a)h.push(t.toJSON(this.network,this.wdb.height));e.json(200,h)}),this.get("/wallet/:id/tx/:hash",async(t,e)=>{const i=o.fromRequest(t).brhash("hash");E(i,"Hash is required.");const r=await t.wallet.getTX(i);if(!r)return void e.json(404);const s=await t.wallet.toDetails(r);e.json(200,s.toJSON(this.network,this.wdb.height))}),this.post("/wallet/:id/resend",async(t,e)=>{await t.wallet.resend(),e.json(200,{success:!0})})}initSockets(){const t=(t,e,i,r)=>{const s=`w:${e.id}`;if(!this.channel(s)&&!this.channel("w:*"))return;const n=r.toJSON(this.network,this.wdb.height);this.channel(s)&&this.to(s,t,e.id,n),this.channel("w:*")&&this.to("w:*",t,e.id,n)};this.wdb.on("tx",(e,i,r)=>{t("tx",e,0,r)}),this.wdb.on("confirmed",(e,i,r)=>{t("confirmed",e,0,r)}),this.wdb.on("unconfirmed",(e,i,r)=>{t("unconfirmed",e,0,r)}),this.wdb.on("conflict",(e,i,r)=>{t("conflict",e,0,r)}),this.wdb.on("balance",(t,e)=>{const i=`w:${t.id}`;if(!this.channel(i)&&!this.channel("w:*"))return;const r=e.toJSON();this.channel(i)&&this.to(i,"balance",t.id,r),this.channel("w:*")&&this.to("w:*","balance",t.id,r)}),this.wdb.on("address",(t,e)=>{const i=`w:${t.id}`;if(!this.channel(i)&&!this.channel("w:*"))return;const r=[];for(const t of e)r.push(t.toJSON(this.network));this.channel(i)&&this.to(i,"address",t.id,r),this.channel("w:*")&&this.to("w:*","address",t.id,r)})}handleSocket(t){t.hook("auth",(...i)=>{if(t.channel("auth"))throw new Error("Already authed.");if(!this.options.noAuth){const t=new o(i).str(0,"");if(t.length>255)throw new Error("Invalid API key.");const r=e.from(t,"utf8"),s=u.digest(r);if(!d(s,this.options.apiHash))throw new Error("Invalid API key.")}return t.join("auth"),this.logger.info("Successful auth from %s.",t.host),this.handleAuth(t),null})}handleAuth(t){t.hook("join",async(...e)=>{const i=new o(e),r=i.str(0,""),s=i.buf(1);if(!r)throw new Error("Invalid parameter.");if(this.options.walletAuth?s&&d(s,this.options.adminToken)&&t.join("admin"):t.join("admin"),t.channel("admin")||!this.options.walletAuth)return t.join(`w:${r}`),null;if("*"===r)throw new Error("Bad token.");if(!s)throw new Error("Invalid parameter.");let n;try{n=await this.wdb.auth(r,s)}catch(t){throw this.logger.info("Wallet auth failure for %s: %s.",r,t.message),new Error("Bad token.")}if(!n)throw new Error("Wallet does not exist.");return this.logger.info("Successful wallet auth for %s.",r),t.join(`w:${r}`),null}),t.hook("leave",(...e)=>{const i=new o(e).str(0,"");if(!i)throw new Error("Invalid parameter.");return t.leave(`w:${i}`),null})}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * rpc.js - bitcoind-compatible json rpc for bcoin.
 * Copyright (c) 2014-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
const r=i(0),{format:s}=i(53),n=i(78),{Lock:o}=i(28),a=i(146),h=i(79),c=i(9),{BufferMap:l,BufferSet:u}=i(13),f=i(5),d=i(18),p=i(10),g=i(12),m=i(45),b=i(73),w=i(44),y=i(17),v=i(16),k=i(20),E=i(3),S=i(75),R=i(68),I=n.RPC,A=n.RPCError,x={INVALID_REQUEST:n.errors.INVALID_REQUEST,METHOD_NOT_FOUND:n.errors.METHOD_NOT_FOUND,INVALID_PARAMS:n.errors.INVALID_PARAMS,INTERNAL_ERROR:n.errors.INTERNAL_ERROR,PARSE_ERROR:n.errors.PARSE_ERROR,MISC_ERROR:-1,FORBIDDEN_BY_SAFE_MODE:-2,TYPE_ERROR:-3,INVALID_ADDRESS_OR_KEY:-5,OUT_OF_MEMORY:-7,INVALID_PARAMETER:-8,DATABASE_ERROR:-20,DESERIALIZATION_ERROR:-22,VERIFY_ERROR:-25,VERIFY_REJECTED:-26,VERIFY_ALREADY_IN_CHAIN:-27,IN_WARMUP:-28,WALLET_ERROR:-4,WALLET_INSUFFICIENT_FUNDS:-6,WALLET_INVALID_ACCOUNT_NAME:-11,WALLET_KEYPOOL_RAN_OUT:-12,WALLET_UNLOCK_NEEDED:-13,WALLET_PASSPHRASE_INCORRECT:-14,WALLET_WRONG_ENC_STATE:-15,WALLET_ENCRYPTION_FAILED:-16,WALLET_ALREADY_UNLOCKED:-17};function O(t,e){return _(t,e).getHash()}function _(t,e){try{return g.fromString(t,e)}catch(t){throw new A(x.INVALID_ADDRESS_OR_KEY,"Invalid address.")}}function B(t,e){try{return m.fromSecret(t,e)}catch(t){throw new A(x.INVALID_ADDRESS_OR_KEY,"Invalid key.")}}t.exports=class extends I{constructor(t){super(),r(t,"RPC requires a WalletDB."),this.wdb=t.wdb,this.network=t.network,this.logger=t.logger.context("rpc"),this.client=t.client,this.locker=new o,this.wallet=null,this.init()}getCode(t){switch(t.type){case"RPCError":return t.code;case"ValidationError":return x.TYPE_ERROR;case"EncodingError":return x.DESERIALIZATION_ERROR;case"FundingError":return x.WALLET_INSUFFICIENT_FUNDS;default:return x.INTERNAL_ERROR}}init(){this.add("help",this.help),this.add("stop",this.stop),this.add("fundrawtransaction",this.fundRawTransaction),this.add("resendwallettransactions",this.resendWalletTransactions),this.add("abandontransaction",this.abandonTransaction),this.add("addmultisigaddress",this.addMultisigAddress),this.add("addwitnessaddress",this.addWitnessAddress),this.add("backupwallet",this.backupWallet),this.add("dumpprivkey",this.dumpPrivKey),this.add("dumpwallet",this.dumpWallet),this.add("encryptwallet",this.encryptWallet),this.add("getaccountaddress",this.getAccountAddress),this.add("getaccount",this.getAccount),this.add("getaddressesbyaccount",this.getAddressesByAccount),this.add("getbalance",this.getBalance),this.add("getnewaddress",this.getNewAddress),this.add("getrawchangeaddress",this.getRawChangeAddress),this.add("getreceivedbyaccount",this.getReceivedByAccount),this.add("getreceivedbyaddress",this.getReceivedByAddress),this.add("gettransaction",this.getTransaction),this.add("getunconfirmedbalance",this.getUnconfirmedBalance),this.add("getwalletinfo",this.getWalletInfo),this.add("importprivkey",this.importPrivKey),this.add("importwallet",this.importWallet),this.add("importaddress",this.importAddress),this.add("importprunedfunds",this.importPrunedFunds),this.add("importpubkey",this.importPubkey),this.add("keypoolrefill",this.keyPoolRefill),this.add("listaccounts",this.listAccounts),this.add("listaddressgroupings",this.listAddressGroupings),this.add("listlockunspent",this.listLockUnspent),this.add("listreceivedbyaccount",this.listReceivedByAccount),this.add("listreceivedbyaddress",this.listReceivedByAddress),this.add("listsinceblock",this.listSinceBlock),this.add("listtransactions",this.listTransactions),this.add("listunspent",this.listUnspent),this.add("lockunspent",this.lockUnspent),this.add("move",this.move),this.add("sendfrom",this.sendFrom),this.add("sendmany",this.sendMany),this.add("sendtoaddress",this.sendToAddress),this.add("setaccount",this.setAccount),this.add("settxfee",this.setTXFee),this.add("signmessage",this.signMessage),this.add("walletlock",this.walletLock),this.add("walletpassphrasechange",this.walletPassphraseChange),this.add("walletpassphrase",this.walletPassphrase),this.add("removeprunedfunds",this.removePrunedFunds),this.add("selectwallet",this.selectWallet),this.add("getmemoryinfo",this.getMemoryInfo),this.add("setloglevel",this.setLogLevel)}async help(t,e){if(0===t.length)return"Select a command.";const i={method:t[0],params:[]};return await this.execute(i,!0)}async stop(t,e){if(e||0!==t.length)throw new A(x.MISC_ERROR,"stop");return this.wdb.close(),"Stopping."}async fundRawTransaction(t,e){if(e||t.length<1||t.length>2)throw new A(x.MISC_ERROR,'fundrawtransaction "hexstring" ( options )');const i=this.wallet,r=new h(t),s=r.buf(0),n=r.obj(1);if(!s)throw new A(x.TYPE_ERROR,"Invalid hex string.");const o=w.fromRaw(s);if(0===o.outputs.length)throw new A(x.INVALID_PARAMETER,"TX must have at least one output.");let a=null,c=null;if(n){const t=new h(n);a=t.ufixed("feeRate",8),(c=t.str("changeAddress"))&&(c=_(c,this.network))}return await i.fund(o,{rate:a,changeAddress:c}),{hex:o.toRaw().toString("hex"),changepos:o.changeIndex,fee:d.btc(o.getFee(),!0)}}async resendWalletTransactions(t,e){if(e||0!==t.length)throw new A(x.MISC_ERROR,"resendwallettransactions");const i=this.wallet,r=await i.resend(),s=[];for(const t of r)s.push(t.txid());return s}async addMultisigAddress(t,e){if(e||t.length<2||t.length>3)throw new A(x.MISC_ERROR,'addmultisigaddress nrequired ["key",...] ( "account" )');throw new Error("Not implemented.")}async addWitnessAddress(t,e){if(e||t.length<1||t.length>1)throw new A(x.MISC_ERROR,'addwitnessaddress "address"');throw new Error("Not implemented.")}async backupWallet(t,e){const i=new h(t).str(0);if(e||1!==t.length||!i)throw new A(x.MISC_ERROR,'backupwallet "destination"');return await this.wdb.backup(i),null}async dumpPrivKey(t,e){if(e||1!==t.length)throw new A(x.MISC_ERROR,'dumpprivkey "bitcoinaddress"');const i=this.wallet,r=O(new h(t).str(0,""),this.network),s=await i.getPrivateKey(r);if(!s)throw new A(x.MISC_ERROR,"Key not found.");return s.toSecret(this.network)}async dumpWallet(t,e){if(e||1!==t.length)throw new A(x.MISC_ERROR,'dumpwallet "filename"');const i=this.wallet,r=new h(t).str(0);if(!r)throw new A(x.TYPE_ERROR,"Invalid parameter.");const n=await this.wdb.getTip(),o=f.date(),c=[s("# Wallet Dump created by Bcoin %s",S.version),s("# * Created on %s",o),s("# * Best block at time of backup was %d (%s).",n.height,f.revHex(n.hash)),s("# * File: %s",r),""],l=await i.getAddressHashes();for(const t of l){const e=await i.getPrivateKey(t);if(!e)continue;const r=e.getAddress("string");let n="%s %s label= addr=%s";1===e.branch&&(n="%s %s change=1 addr=%s");const a=s(n,e.toSecret(this.network),o,r);c.push(a)}c.push(""),c.push("# End of dump"),c.push("");const u=c.join("\n");return a.unsupported?u:(await a.writeFile(r,u,"utf8"),null)}async encryptWallet(t,e){const i=this.wallet;if(!i.master.encrypted&&(e||1!==t.length))throw new A(x.MISC_ERROR,'encryptwallet "passphrase"');const r=new h(t).str(0,"");if(i.master.encrypted)throw new A(x.WALLET_WRONG_ENC_STATE,"Already running with an encrypted wallet.");if(r.length<1)throw new A(x.MISC_ERROR,'encryptwallet "passphrase"');try{await i.encrypt(r)}catch(t){throw new A(x.WALLET_ENCRYPTION_FAILED,"Encryption failed.")}return"wallet encrypted; we do not need to stop!"}async getAccountAddress(t,e){if(e||1!==t.length)throw new A(x.MISC_ERROR,'getaccountaddress "account"');const i=this.wallet;let r=new h(t).str(0,"");r||(r="default");const s=await i.receiveAddress(r);return s?s.toString(this.network):""}async getAccount(t,e){if(e||1!==t.length)throw new A(x.MISC_ERROR,'getaccount "bitcoinaddress"');const i=this.wallet,r=O(new h(t).str(0,""),this.network),s=await i.getPath(r);return s?s.name:""}async getAddressesByAccount(t,e){if(e||1!==t.length)throw new A(x.MISC_ERROR,'getaddressesbyaccount "account"');const i=this.wallet;let r=new h(t).str(0,"");const s=[];let n;""===r&&(r="default");try{n=await i.getPaths(r)}catch(t){if("Account not found."===t.message)return[];throw t}for(const t of n){const e=t.toAddress();s.push(e.toString(this.network))}return s}async getBalance(t,e){if(e||t.length>3)throw new A(x.MISC_ERROR,'getbalance ( "account" minconf includeWatchonly )');const i=this.wallet,r=new h(t);let s=r.str(0);const n=r.u32(1,1),o=r.bool(2,!1);if(""===s&&(s="default"),"*"===s&&(s=null),i.watchOnly!==o)return 0;const a=await i.getBalance(s);let c;return c=n>0?a.confirmed:a.unconfirmed,d.btc(c,!0)}async getNewAddress(t,e){if(e||t.length>1)throw new A(x.MISC_ERROR,'getnewaddress ( "account" )');const i=this.wallet;let r=new h(t).str(0);return""===r&&(r="default"),(await i.createReceive(r)).getAddress("string",this.network)}async getRawChangeAddress(t,e){if(e||t.length>1)throw new A(x.MISC_ERROR,"getrawchangeaddress");const i=this.wallet;return(await i.createChange()).getAddress("string",this.network)}async getReceivedByAccount(t,e){if(e||t.length<1||t.length>2)throw new A(x.MISC_ERROR,'getreceivedbyaccount "account" ( minconf )');const i=this.wallet,r=new h(t);let s=r.str(0);const n=r.u32(1,0),o=this.wdb.state.height;""===s&&(s="default");const a=await i.getPaths(s),c=new u;for(const t of a)c.add(t.hash);const l=await i.getHistory(s);let f=0,p=-1;for(const t of l){const e=t.getDepth(o);if(!(e<n)){(-1===p||e<p)&&(p=e);for(const e of t.tx.outputs){const t=e.getHash();t&&c.has(t)&&(f+=e.value)}}}return d.btc(f,!0)}async getReceivedByAddress(t,e){if(e||t.length<1||t.length>2)throw new A(x.MISC_ERROR,'getreceivedbyaddress "bitcoinaddress" ( minconf )');const i=this.wallet,r=new h(t),s=r.str(0,""),n=r.u32(1,0),o=this.wdb.state.height,a=O(s,this.network),c=await i.getHistory();let l=0;for(const t of c)if(!(t.getDepth(o)<n))for(const e of t.tx.outputs)e.getHash().equals(a)&&(l+=e.value);return d.btc(l,!0)}async _toWalletTX(t){const e=this.wallet,i=await e.toDetails(t);if(!i)throw new A(x.WALLET_ERROR,"TX not found.");let r=!0;for(const t of i.inputs)if(t.path){r=!1;break}const s=[];let n=0,o=0;for(let t=0;t<i.outputs.length;t++){const e=i.outputs[t];if(e.path){if(1===e.path.branch)continue;s.push({account:e.path.name,address:e.address.toString(this.network),category:"receive",amount:d.btc(e.value,!0),label:e.path.name,vout:t}),o+=e.value}else r||(s.push({account:"",address:e.address?e.address.toString(this.network):null,category:"send",amount:-d.btc(e.value,!0),fee:-d.btc(i.fee,!0),vout:t}),n+=e.value)}return{amount:d.btc(r?o:-n,!0),confirmations:i.confirmations,blockhash:i.block?f.revHex(i.block):null,blockindex:i.index,blocktime:i.time,txid:f.revHex(i.hash),walletconflicts:[],time:i.mtime,timereceived:i.mtime,"bip125-replaceable":"no",details:s,hex:i.tx.toRaw().toString("hex")}}async getTransaction(t,e){if(e||t.length<1||t.length>2)throw new A(x.MISC_ERROR,'gettransaction "txid" ( includeWatchonly )');const i=this.wallet,r=new h(t),s=r.brhash(0),n=r.bool(1,!1);if(!s)throw new A(x.TYPE_ERROR,"Invalid parameter");const o=await i.getTX(s);if(!o)throw new A(x.WALLET_ERROR,"TX not found.");return await this._toWalletTX(o,n)}async abandonTransaction(t,e){if(e||1!==t.length)throw new A(x.MISC_ERROR,'abandontransaction "txid"');const i=this.wallet,r=new h(t).brhash(0);if(!r)throw new A(x.TYPE_ERROR,"Invalid parameter.");if(!await i.abandon(r))throw new A(x.WALLET_ERROR,"Transaction not in wallet.");return null}async getUnconfirmedBalance(t,e){if(e||t.length>0)throw new A(x.MISC_ERROR,"getunconfirmedbalance");const i=this.wallet,r=await i.getBalance();return d.btc(r.unconfirmed,!0)}async getWalletInfo(t,e){if(e||0!==t.length)throw new A(x.MISC_ERROR,"getwalletinfo");const i=this.wallet,r=await i.getBalance();return{walletid:i.id,walletversion:6,balance:d.btc(r.unconfirmed,!0),unconfirmed_balance:d.btc(r.unconfirmed,!0),txcount:r.tx,keypoololdest:0,keypoolsize:0,unlocked_until:i.master.until,paytxfee:d.btc(this.wdb.feeRate,!0)}}async importPrivKey(t,e){if(e||t.length<1||t.length>3)throw new A(x.MISC_ERROR,'importprivkey "bitcoinprivkey" ( "label" rescan )');const i=this.wallet,r=new h(t),s=r.str(0),n=r.bool(2,!1),o=B(s,this.network);return await i.importKey(0,o),n&&await this.wdb.rescan(0),null}async importWallet(t,e){if(e||1!==t.length)throw new A(x.MISC_ERROR,'importwallet "filename" ( rescan )');const i=this.wallet,r=new h(t),s=r.str(0),n=r.bool(1,!1);if(a.unsupported)throw new A(x.INTERNAL_ERROR,"FS not available.");let o;try{o=await a.readFile(s,"utf8")}catch(t){throw new A(x.INTERNAL_ERROR,t.code||"")}const c=o.split(/\n+/),l=[];for(let t of c){if(0===(t=t.trim()).length)continue;if(/^\s*#/.test(t))continue;const e=t.split(/\s+/);if(e.length<4)throw new A(x.DESERIALIZATION_ERROR,"Malformed wallet.");const i=B(e[0],this.network);l.push(i)}for(const t of l)await i.importKey(0,t);return n&&await this.wdb.rescan(0),null}async importAddress(t,e){if(e||t.length<1||t.length>4)throw new A(x.MISC_ERROR,'importaddress "address" ( "label" rescan p2sh )');const i=this.wallet,r=new h(t);let s=r.str(0,"");const n=r.bool(2,!1);if(r.bool(3,!1)){let t=r.buf(0);if(!t)throw new A(x.TYPE_ERROR,"Invalid parameters.");t=p.fromRaw(t),s=(t=p.fromScripthash(t.hash160())).getAddress()}else s=_(s,this.network);try{await i.importAddress(0,s)}catch(t){if("Address already exists."!==t.message)throw t}return n&&await this.wdb.rescan(0),null}async importPubkey(t,e){if(e||t.length<1||t.length>4)throw new A(x.MISC_ERROR,'importpubkey "pubkey" ( "label" rescan )');const i=this.wallet,r=new h(t),s=r.buf(0),n=r.bool(2,!1);if(!s)throw new A(x.TYPE_ERROR,"Invalid parameter.");const o=m.fromPublic(s,this.network);return await i.importKey(0,o),n&&await this.wdb.rescan(0),null}async keyPoolRefill(t,e){if(e||t.length>1)throw new A(x.MISC_ERROR,"keypoolrefill ( newsize )");return null}async listAccounts(t,e){if(e||t.length>2)throw new A(x.MISC_ERROR,"listaccounts ( minconf includeWatchonly)");const i=this.wallet,r=new h(t),s=r.u32(0,0),n=r.bool(1,!1),o=await i.getAccounts(),a={};for(const t of o){const e=await i.getBalance(t);let r=e.unconfirmed;s>0&&(r=e.confirmed),i.watchOnly!==n&&(r=0),a[t]=d.btc(r,!0)}return a}async listAddressGroupings(t,e){if(e)throw new A(x.MISC_ERROR,"listaddressgroupings");throw new Error("Not implemented.")}async listLockUnspent(t,e){if(e||t.length>0)throw new A(x.MISC_ERROR,"listlockunspent");const i=this.wallet.getLocked(),r=[];for(const t of i)r.push({txid:t.txid(),vout:t.index});return r}async listReceivedByAccount(t,e){if(e||t.length>3)throw new A(x.MISC_ERROR,"listreceivedbyaccount ( minconf includeempty includeWatchonly )");const i=new h(t),r=i.u32(0,0),s=i.bool(1,!1),n=i.bool(2,!1);return await this._listReceived(r,s,n,!0)}async listReceivedByAddress(t,e){if(e||t.length>3)throw new A(x.MISC_ERROR,"listreceivedbyaddress ( minconf includeempty includeWatchonly )");const i=new h(t),r=i.u32(0,0),s=i.bool(1,!1),n=i.bool(2,!1);return await this._listReceived(r,s,n,!1)}async _listReceived(t,e,i,r){const s=this.wallet,n=await s.getPaths(),o=this.wdb.state.height,a=new l;for(const t of n){const e=t.toAddress();a.set(t.hash,{involvesWatchonly:s.watchOnly,address:e.toString(this.network),account:t.name,amount:0,confirmations:-1,label:""})}const h=await s.getHistory();for(const e of h){const i=e.getDepth(o);if(!(i<t))for(const t of e.tx.outputs){const e=t.getAddress();if(!e)continue;const r=e.getHash(),s=a.get(r);s&&((-1===s.confirmations||i<s.confirmations)&&(s.confirmations=i),s.address=e.toString(this.network),s.amount+=t.value)}}let c=[];for(const t of a.values())c.push(t);if(r){const t=new Map;for(const e of c){const i=t.get(e.account);i?i.amount+=e.amount:(t.set(e.account,e),e.address=void 0)}c=[];for(const e of t.values())c.push(e)}const u=[];for(const t of c)(e||0!==t.amount)&&(-1===t.confirmations&&(t.confirmations=0),t.amount=d.btc(t.amount,!0),u.push(t));return u}async listSinceBlock(t,e){const i=this.wallet,r=this.wdb.state.height,s=new h(t),n=s.brhash(0),o=s.u32(1,0),a=s.bool(2,!1);if(e)throw new A(x.MISC_ERROR,'listsinceblock ( "blockhash" target-confirmations includeWatchonly)');if(i.watchOnly!==a)return[];let c=-1;if(n){const t=await this.client.getEntry(n);t&&(c=t.height)}-1===c&&(c=this.chain.height);const l=await i.getHistory(),u=[];let d=null;for(const t of l){if(t.height<c)continue;if(t.getDepth(r)<o)continue;(!d||t.height>d)&&(d=t);const e=await this._toListTX(t);u.push(e)}return{transactions:u,lastblock:d&&d.block?f.revHex(d.block):f.revHex(E.ZERO_HASH)}}async _toListTX(t){const e=this.wallet,i=await e.toDetails(t);if(!i)throw new A(x.WALLET_ERROR,"TX not found.");let s=!0;for(const t of i.inputs)if(t.path){s=!1;break}let n=0,o=0,a=null,h=null,c=-1,l=-1;for(let t=0;t<i.outputs.length;t++){const e=i.outputs[t];if(e.path){if(1===e.path.branch)continue;o+=e.value,h=e,l=t}else n+=e.value,a=e,c=t}let u=null,p=-1;s?(r(h),u=h,p=l):a?(u=a,p=c):(s=!0,o=0,u=h,p=l);let g=!1;return-1===t.height&&t.tx.isRBF()&&(g=!0),{account:u.path?u.path.name:"",address:u.address?u.address.toString(this.network):null,category:s?"receive":"send",amount:d.btc(s?o:-n,!0),label:u.path?u.path.name:void 0,vout:p,confirmations:i.getDepth(this.wdb.height),blockhash:i.block?f.revHex(i.block):null,blockindex:-1,blocktime:i.time,blockheight:i.height,txid:f.revHex(i.hash),walletconflicts:[],time:i.mtime,timereceived:i.mtime,"bip125-replaceable":g?"yes":"no"}}async listTransactions(t,e){if(e||t.length>4)throw new A(x.MISC_ERROR,'listtransactions ( "account" count from includeWatchonly)');const i=this.wallet,r=new h(t);let s=r.str(0);const n=r.u32(1,10),o=r.u32(2,0),a=r.bool(3,!1);if(i.watchOnly!==a)return[];""===s&&(s="default");const c=await i.getHistory();R.sortTX(c);const l=o+n,u=Math.min(l,c.length),f=[];for(let t=o;t<u;t++){const e=c[t],i=await this._toListTX(e);f.push(i)}return f}async listUnspent(t,e){if(e||t.length>3)throw new A(x.MISC_ERROR,'listunspent ( minconf maxconf  ["address",...] )');const i=this.wallet,r=new h(t),s=r.u32(0,1),n=r.u32(1,9999999),o=r.array(2),a=this.wdb.state.height,c=new u;if(o){const t=new h(o);for(let e=0;e<o.length;e++){const i=O(t.str(e,""),this.network);if(c.has(i))throw new A(x.INVALID_PARAMETER,"Duplicate address.");c.add(i)}}const l=await i.getCoins();R.sortCoins(l);const f=[];for(const t of l){const e=t.getDepth(a);if(e<s||e>n)continue;const r=t.getAddress();if(!r)continue;const h=t.getHash();if(o&&(!h||!c.has(h)))continue;const l=await i.getKey(h);f.push({txid:t.txid(),vout:t.index,address:r?r.toString(this.network):null,account:l?l.name:void 0,redeemScript:l&&l.script?l.script.toJSON():void 0,scriptPubKey:t.script.toJSON(),amount:d.btc(t.value,!0),confirmations:e,spendable:!i.isLocked(t),solvable:!0})}return f}async lockUnspent(t,e){if(e||t.length<1||t.length>2)throw new A(x.MISC_ERROR,'lockunspent unlock ([{"txid":"txid","vout":n},...])');const i=this.wallet,r=new h(t),s=r.bool(0,!1),n=r.array(1);if(1===t.length)return s&&i.unlockCoins(),!0;if(!n)throw new A(x.TYPE_ERROR,"Invalid parameter.");for(const t of n){const e=new h(t),r=e.brhash("txid"),n=e.u32("vout");if(null==r||null==n)throw new A(x.INVALID_PARAMETER,"Invalid parameter.");const o=new y(r,n);s?i.unlockCoin(o):i.lockCoin(o)}return!0}async move(t,e){throw new Error("Not implemented.")}async sendFrom(t,e){if(e||t.length<3||t.length>6)throw new A(x.MISC_ERROR,'sendfrom "fromaccount" "tobitcoinaddress" amount ( minconf "comment" "comment-to" )');const i=this.wallet,r=new h(t);let s=r.str(0);const n=r.str(1),o=r.ufixed(2,8),a=r.u32(3,0),c=_(n,this.network);if(!c||null==o)throw new A(x.TYPE_ERROR,"Invalid parameter.");""===s&&(s="default");const l={account:s,depth:a,outputs:[{address:c,value:o}]};return(await i.send(l)).txid()}async sendMany(t,e){if(e||t.length<2||t.length>5)throw new A(x.MISC_ERROR,'sendmany "fromaccount" {"address":amount,...} ( minconf "comment" ["address",...] )');const i=this.wallet,r=new h(t);let s=r.str(0);const n=r.obj(1),o=r.u32(2,1),a=r.bool(4,!1);if(""===s&&(s="default"),!n)throw new A(x.TYPE_ERROR,"Invalid parameter.");const c=new h(n),l=new u,f=[];for(const t of Object.keys(n)){const e=c.ufixed(t,8),i=_(t,this.network),r=i.getHash();if(null==e)throw new A(x.INVALID_PARAMETER,"Invalid parameter.");if(l.has(r))throw new A(x.INVALID_PARAMETER,"Invalid parameter.");l.add(r);const s=new v;s.value=e,s.script.fromAddress(i),f.push(s)}const d={outputs:f,subtractFee:a,account:s,depth:o};return(await i.send(d)).txid()}async sendToAddress(t,e){if(e||t.length<2||t.length>5)throw new A(x.MISC_ERROR,'sendtoaddress "bitcoinaddress" amount ( "comment" "comment-to" subtractfeefromamount )');const i=this.wallet,r=new h(t),s=r.str(0),n=r.ufixed(1,8),o=r.bool(4,!1),a=_(s,this.network);if(!a||null==n)throw new A(x.TYPE_ERROR,"Invalid parameter.");const c={subtractFee:o,outputs:[{address:a,value:n}]};return(await i.send(c)).txid()}async setAccount(t,e){if(e||t.length<1||t.length>2)throw new A(x.MISC_ERROR,'setaccount "bitcoinaddress" "account"');throw new Error("Not implemented.")}async setTXFee(t,e){const i=new h(t).ufixed(0,8);if(e||t.length<1||t.length>1)throw new A(x.MISC_ERROR,"settxfee amount");if(null==i)throw new A(x.TYPE_ERROR,"Invalid parameter.");return this.wdb.feeRate=i,!0}async signMessage(t,i){if(i||2!==t.length)throw new A(x.MISC_ERROR,'signmessage "bitcoinaddress" "message"');const r=this.wallet,s=new h(t),n=s.str(0,""),o=s.str(1,""),a=O(n,this.network),l=await r.getKey(a);if(!l)throw new A(x.WALLET_ERROR,"Address not found.");if(!r.master.key)throw new A(x.WALLET_UNLOCK_NEEDED,"Wallet is locked.");const u=e.from("Bitcoin Signed Message:\n"+o,"utf8"),f=c.digest(u);return l.sign(f).toString("base64")}async walletLock(t,e){const i=this.wallet;if(e||i.master.encrypted&&0!==t.length)throw new A(x.MISC_ERROR,"walletlock");if(!i.master.encrypted)throw new A(x.WALLET_WRONG_ENC_STATE,"Wallet is not encrypted.");return await i.lock(),null}async walletPassphraseChange(t,e){const i=this.wallet;if(e||i.master.encrypted&&2!==t.length)throw new A(x.MISC_ERROR,'walletpassphrasechange "oldpassphrase" "newpassphrase"');const r=new h(t),s=r.str(0,""),n=r.str(1,"");if(!i.master.encrypted)throw new A(x.WALLET_WRONG_ENC_STATE,"Wallet is not encrypted.");if(s.length<1||n.length<1)throw new A(x.INVALID_PARAMETER,"Invalid parameter");return await i.setPassphrase(n,s),null}async walletPassphrase(t,e){const i=this.wallet,r=new h(t),s=r.str(0,""),n=r.u32(1);if(e||i.master.encrypted&&2!==t.length)throw new A(x.MISC_ERROR,'walletpassphrase "passphrase" timeout');if(!i.master.encrypted)throw new A(x.WALLET_WRONG_ENC_STATE,"Wallet is not encrypted.");if(s.length<1)throw new A(x.INVALID_PARAMETER,"Invalid parameter");if(null==n)throw new A(x.TYPE_ERROR,"Invalid parameter");return await i.unlock(s,n),null}async importPrunedFunds(t,e){if(e||t.length<2||t.length>3)throw new A(x.MISC_ERROR,'importprunedfunds "rawtransaction" "txoutproof" ( "label" )');const i=new h(t),r=i.buf(0),s=i.buf(1);if(!r||!s)throw new A(x.TYPE_ERROR,"Invalid parameter.");const n=k.fromRaw(r),o=b.fromRaw(s),a=o.hash();if(!o.verify())throw new A(x.VERIFY_ERROR,"Invalid proof.");if(!o.hasTX(n.hash()))throw new A(x.VERIFY_ERROR,"Invalid proof.");const c=await this.client.getEntry(a);if(-1===c)throw new A(x.VERIFY_ERROR,"Invalid proof.");const l={hash:a,time:o.time,height:c};if(!await this.wdb.addTX(n,l))throw new A(x.WALLET_ERROR,"No tracked address for TX.");return null}async removePrunedFunds(t,e){if(e||1!==t.length)throw new A(x.MISC_ERROR,'removeprunedfunds "txid"');const i=this.wallet,r=new h(t).brhash(0);if(!r)throw new A(x.TYPE_ERROR,"Invalid parameter.");if(!await i.remove(r))throw new A(x.WALLET_ERROR,"Transaction not in wallet.");return null}async selectWallet(t,e){const i=new h(t).str(0);if(e||1!==t.length)throw new A(x.MISC_ERROR,'selectwallet "id"');const r=await this.wdb.get(i);if(!r)throw new A(x.WALLET_ERROR,"Wallet not found.");return this.wallet=r,null}async getMemoryInfo(t,e){if(e||0!==t.length)throw new A(x.MISC_ERROR,"getmemoryinfo");return this.logger.memoryUsage()}async setLogLevel(t,e){if(e||1!==t.length)throw new A(x.MISC_ERROR,'setloglevel "level"');const i=new h(t).str(0,"");return this.logger.setLevel(i),null}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * proxysocket.js - wsproxy socket for bcoin
 * Copyright (c) 2016-2017, Christopher Jeffrey (MIT License).
 * https://github.com/bcoin-org/bcoin
 */
i(257);const r=i(7),s=i(258);t.exports=class extends r{constructor(t){super(),this.socket=s.socket(),this.socket.reconnection=!1,this.socket.connect(t),this.sendBuffer=[],this.recvBuffer=[],this.paused=!1,this.bytesWritten=0,this.bytesRead=0,this.remoteAddress=null,this.remotePort=0,this.closed=!1,this.init()}init(){this.socket.on("error",t=>{console.error(t)}),this.socket.bind("tcp connect",(t,e)=>{this.closed||(this.remoteAddress=t,this.remotePort=e,this.emit("connect"))}),this.socket.bind("tcp data",t=>{t=e.from(t,"hex"),this.paused?this.recvBuffer.push(t):(this.bytesRead+=t.length,this.emit("data",t))}),this.socket.bind("tcp close",t=>{this.closed||(this.closed=!0,this.emit("close"))}),this.socket.bind("tcp error",t=>{const e=new Error(t.message);e.code=t.code,this.emit("error",e)}),this.socket.bind("tcp timeout",()=>{this.emit("timeout")}),this.socket.on("disconnect",()=>{this.closed||(this.closed=!0,this.emit("close"))})}connect(t,e){if(this.remoteAddress=e,this.remotePort=t,this.closed)this.sendBuffer.length=0;else{this.socket.fire("tcp connect",t,e);for(const t of this.sendBuffer)this.write(t);this.sendBuffer.length=0}}setKeepAlive(t,e){this.socket.fire("tcp keep alive",t,e)}setNoDelay(t){this.socket.fire("tcp no delay",t)}setTimeout(t,e){this.socket.fire("tcp set timeout",t),e&&this.on("timeout",e)}write(t,e){return this.bytesWritten+=t.length,this.socket.fire("tcp data",t.toString("hex")),e&&e(),!0}pause(){this.paused=!0}resume(){const t=this.recvBuffer;this.paused=!1,this.recvBuffer=[];for(const e of t)this.bytesRead+=e.length,this.emit("data",e)}destroy(){this.closed||(this.closed=!0,this.socket.destroy())}static connect(t,e,i){const r=new this(t);return r.connect(e,i),r}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
function r(t,e){if(t===e)return 0;for(var i=t.length,r=e.length,s=0,n=Math.min(i,r);s<n;++s)if(t[s]!==e[s]){i=t[s],r=e[s];break}return i<r?-1:r<i?1:0}function s(t){return e.Buffer&&"function"==typeof e.Buffer.isBuffer?e.Buffer.isBuffer(t):!(null==t||!t._isBuffer)}var n=i(53),o=Object.prototype.hasOwnProperty,a=Array.prototype.slice,h="foo"===function(){}.name;function c(t){return Object.prototype.toString.call(t)}function l(t){return!s(t)&&"function"==typeof e.ArrayBuffer&&("function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(t):!!t&&(t instanceof DataView||!!(t.buffer&&t.buffer instanceof ArrayBuffer)))}var u=t.exports=b,f=/\s*function\s+([^\(\s]*)\s*/;function d(t){if(n.isFunction(t)){if(h)return t.name;var e=t.toString().match(f);return e&&e[1]}}function p(t,e){return"string"==typeof t?t.length<e?t:t.slice(0,e):t}function g(t){if(h||!n.isFunction(t))return n.inspect(t);var e=d(t);return"[Function"+(e?": "+e:"")+"]"}function m(t,e,i,r,s){throw new u.AssertionError({message:i,actual:t,expected:e,operator:r,stackStartFunction:s})}function b(t,e){t||m(t,!0,e,"==",u.ok)}function w(t,e,i,o){if(t===e)return!0;if(s(t)&&s(e))return 0===r(t,e);if(n.isDate(t)&&n.isDate(e))return t.getTime()===e.getTime();if(n.isRegExp(t)&&n.isRegExp(e))return t.source===e.source&&t.global===e.global&&t.multiline===e.multiline&&t.lastIndex===e.lastIndex&&t.ignoreCase===e.ignoreCase;if(null!==t&&"object"==typeof t||null!==e&&"object"==typeof e){if(l(t)&&l(e)&&c(t)===c(e)&&!(t instanceof Float32Array||t instanceof Float64Array))return 0===r(new Uint8Array(t.buffer),new Uint8Array(e.buffer));if(s(t)!==s(e))return!1;var h=(o=o||{actual:[],expected:[]}).actual.indexOf(t);return-1!==h&&h===o.expected.indexOf(e)||(o.actual.push(t),o.expected.push(e),function(t,e,i,r){if(null===t||void 0===t||null===e||void 0===e)return!1;if(n.isPrimitive(t)||n.isPrimitive(e))return t===e;if(i&&Object.getPrototypeOf(t)!==Object.getPrototypeOf(e))return!1;var s=y(t),o=y(e);if(s&&!o||!s&&o)return!1;if(s)return w(t=a.call(t),e=a.call(e),i);var h,c,l=E(t),u=E(e);if(l.length!==u.length)return!1;for(l.sort(),u.sort(),c=l.length-1;c>=0;c--)if(l[c]!==u[c])return!1;for(c=l.length-1;c>=0;c--)if(!w(t[h=l[c]],e[h],i,r))return!1;return!0}(t,e,i,o))}return i?t===e:t==e}function y(t){return"[object Arguments]"==Object.prototype.toString.call(t)}function v(t,e){if(!t||!e)return!1;if("[object RegExp]"==Object.prototype.toString.call(e))return e.test(t);try{if(t instanceof e)return!0}catch(t){}return!Error.isPrototypeOf(e)&&!0===e.call({},t)}function k(t,e,i,r){var s;if("function"!=typeof e)throw new TypeError('"block" argument must be a function');"string"==typeof i&&(r=i,i=null),s=function(t){var e;try{t()}catch(t){e=t}return e}(e),r=(i&&i.name?" ("+i.name+").":".")+(r?" "+r:"."),t&&!s&&m(s,i,"Missing expected exception"+r);var o="string"==typeof r,a=!t&&n.isError(s),h=!t&&s&&!i;if((a&&o&&v(s,i)||h)&&m(s,i,"Got unwanted exception"+r),t&&s&&i&&!v(s,i)||!t&&s)throw s}u.AssertionError=function(t){this.name="AssertionError",this.actual=t.actual,this.expected=t.expected,this.operator=t.operator,t.message?(this.message=t.message,this.generatedMessage=!1):(this.message=function(t){return p(g(t.actual),128)+" "+t.operator+" "+p(g(t.expected),128)}(this),this.generatedMessage=!0);var e=t.stackStartFunction||m;if(Error.captureStackTrace)Error.captureStackTrace(this,e);else{var i=new Error;if(i.stack){var r=i.stack,s=d(e),n=r.indexOf("\n"+s);if(n>=0){var o=r.indexOf("\n",n+1);r=r.substring(o+1)}this.stack=r}}},n.inherits(u.AssertionError,Error),u.fail=m,u.ok=b,u.equal=function(t,e,i){t!=e&&m(t,e,i,"==",u.equal)},u.notEqual=function(t,e,i){t==e&&m(t,e,i,"!=",u.notEqual)},u.deepEqual=function(t,e,i){w(t,e,!1)||m(t,e,i,"deepEqual",u.deepEqual)},u.deepStrictEqual=function(t,e,i){w(t,e,!0)||m(t,e,i,"deepStrictEqual",u.deepStrictEqual)},u.notDeepEqual=function(t,e,i){w(t,e,!1)&&m(t,e,i,"notDeepEqual",u.notDeepEqual)},u.notDeepStrictEqual=function t(e,i,r){w(e,i,!0)&&m(e,i,r,"notDeepStrictEqual",t)},u.strictEqual=function(t,e,i){t!==e&&m(t,e,i,"===",u.strictEqual)},u.notStrictEqual=function(t,e,i){t===e&&m(t,e,i,"!==",u.notStrictEqual)},u.throws=function(t,e,i){k(!0,t,e,i)},u.doesNotThrow=function(t,e,i){k(!1,t,e,i)},u.ifError=function(t){if(t)throw t};var E=Object.keys||function(t){var e=[];for(var i in t)o.call(t,i)&&e.push(i);return e}}).call(this,i(11))},function(t,e,i){"use strict";const r=i(169),s=i(259),n=i(260);e.WebSocket=r,e.Server=s,e.server=(()=>new s),e.createServer=s.createServer.bind(s),e.attach=s.attach.bind(s),e.Socket=n,e.socket=(()=>new n),e.connect=n.connect.bind(n)},function(t,e,i){"use strict";const r=i(7);t.exports=class extends r{constructor(t){super(),this.sockets=new Set,this.channels=new Map,this.mounts=[]}attach(){return this}mount(){}async open(){}async close(){}join(){return!0}leave(){return!0}channel(){return null}to(){}all(){}static attach(t,e){return new this(e).attach(t)}static createServer(t){return new this(t)}}},function(t,e,i){"use strict";(function(e){const r=i(0),s=i(7),n=i(169).Client,o=i(261),a=i(170),h=i(262),c=i(269),l=i(270),u=i(271);function f(t){return null!==t&&"number"!=typeof t&&"string"!=typeof t?null:t}function d(t){return"string"!=typeof t?"No message.":t}function p(t){return"string"!=typeof t?null:t}function g(t,e,i){if(!t){const t=new TypeError(`'${e}' must be a(n) ${i}.`);throw Error.captureStackTrace&&Error.captureStackTrace(t,g),t}}t.exports=class extends s{constructor(){super(),this.server=null,this.ws=null,this.protocol="",this.url="ws://127.0.0.1:80/socket.io/?transport=websocket",this.ssl=!1,this.host="127.0.0.1",this.port=80,this.inbound=!1,this.handshake=!1,this.opened=!1,this.connected=!1,this.challenge=!1,this.destroyed=!1,this.reconnection=!0,this.time=0,this.sequence=0,this.pingInterval=25e3,this.pingTimeout=6e4,this.lastPing=0,this.parser=new c,this.binary=!1,this.packet=null,this.timer=null,this.jobs=new Map,this.hooks=new Map,this.channels=new Set,this.events=new s,this.buffer=[],this.admin=!1,this.auth=!1}accept(t,e,i,s){r(!this.ws,"Cannot accept twice."),r(t),r(e),r(i),r(i.remoteAddress),r(null!=i.remotePort),r(s);let n="ws",o=i.remoteAddress,a=i.remotePort;return i.encrypted&&(n="wss"),-1!==o.indexOf(":")&&(o=`[${o}]`),a||(a=0),this.server=t,this.binary=-1===e.url.indexOf("b64=1"),this.url=`${n}://${o}:${a}/socket.io/?transport=websocket`,this.ssl="wss"===n,this.host=i.remoteAddress,this.port=i.remotePort,this.inbound=!0,this.ws=s,this.init(),this}connect(t,e,i,s){r(!this.ws,"Cannot connect twice."),"string"==typeof t&&(s=e,[t,e,i]=h.parseURL(t));let o="ws";i&&(o="wss"),e||(e="127.0.0.1"),r("string"==typeof e),r((65535&t)===t,"Must pass a port."),r(!i||"boolean"==typeof i),r(!s||Array.isArray(s));let a=e;-1!==e.indexOf(":")&&"["!==e[0]&&(a=`[${e}]`);const c=`${o}://${a}:${t}/socket.io/?transport=websocket`;return this.binary=!0,this.url=c,this.ssl=i,this.host=e,this.port=t,this.inbound=!1,this.ws=new n(c,s),this.init(),this}init(){this.protocol=this.ws.protocol,this.time=Date.now(),this.observe(),this.parser.on("error",t=>{this.emit("error",t)}),this.parser.on("frame",async t=>{try{await this.handleFrame(t)}catch(t){this.emit("error",t)}}),this.start()}observe(){const t=this.ws;r(t),t.binaryType="arraybuffer",t.onopen=(async()=>{await this.onOpen()}),t.onmessage=(async t=>{await this.onMessage(t)}),t.onerror=(async t=>{await this.onError(t)}),t.onclose=(async t=>{await this.onClose(t)})}async onOpen(){this.destroyed||this.inbound&&(r(!this.opened),r(!this.connected),r(!this.handshake),this.opened=!0,this.handshake=!0,await this.emitAsync("open"),this.sendHandshake(),this.connected=!0,await this.emitAsync("connect"),this.sendConnect())}async emitAsync(t,...e){const i=this.listeners(t);for(const r of i)try{await r(...e)}catch(t){this.emit("error",t)}}async onMessage(t){if(this.destroyed)return;let i;try{i=await function(t){return new Promise((i,r)=>{if("string"!=typeof t)if(t&&"object"==typeof t)if(e.isBuffer(t))i(t);else if(t instanceof ArrayBuffer){const r=e.from(t);i(r)}else if(t.buffer instanceof ArrayBuffer){const r=e.from(t.buffer);i(r)}else{if("undefined"!=typeof Blob&&Blob&&t instanceof Blob){const r=new FileReader;return r.onloadend=(()=>{const t=e.from(r.result);i(t)}),void r.readAsArrayBuffer(t)}r(new Error("Bad data object."))}else r(new Error("Bad data object."));else i(t)})}(t.data)}catch(t){return void this.emit("error",t)}"string"!=typeof i?this.parser.feedBinary(i):this.parser.feedString(i)}async onError(t){this.destroyed||(this.emit("error",new Error(t.message)),this.inbound?this.destroy():this.close())}async onClose(t){if(this.destroyed)return;if(1e3===t.code||1001===t.code)return this.connected||this.emit("error",new Error("Could not connect.")),this.inbound?void this.destroy():void this.close();const e=l[t.code]||"UNKNOWN_CODE",i=`Websocket Closed: ${t.reason||"Unknown reason"} (code=${e}).`,r=new Error(i);r.reason=t.reason||"",r.code=t.code||0,this.emit("error",r),this.inbound?this.destroy():this.reconnection?this.close():this.destroy()}close(){if(!this.destroyed){this.time=Date.now(),this.packet=null,this.handshake=!1,this.connected=!1,this.challenge=!1,this.sequence=0,this.lastPing=0;for(const[t,e]of this.jobs)this.jobs.delete(t),e.reject(new Error("Job timed out."));r(this.ws),this.ws.onopen=(()=>{}),this.ws.onmessage=(()=>{}),this.ws.onerror=(()=>{}),this.ws.onclose=(()=>{}),this.ws.close(),this.emitAsync("disconnect")}}error(t){this.destroyed||this.emit("error",new Error(t))}destroy(){this.destroyed||(this.close(),this.stop(),this.opened=!1,this.destroyed=!0,this.buffer.length=0,this.emitAsync("close"),this.removeAllListeners(),this.on("error",()=>{}))}send(t){this.destroyed||(r(this.ws),t.binary&&this.binary?this.ws.send(t.toRaw()):this.ws.send(t.toString()))}reconnect(){r(!this.inbound),this.close(),this.ws=new n(this.url),this.time=Date.now(),this.observe()}start(){r(this.ws),r(null==this.timer),this.timer=setInterval(()=>this.stall(),5e3)}stop(){null!=this.timer&&(clearInterval(this.timer),this.timer=null)}stall(){const t=Date.now();if(r(this.ws),!this.connected)return t-this.time>1e4?this.inbound||!this.reconnection?(this.error("Timed out waiting for connection."),void this.destroy()):(this.error("Timed out waiting for connection. Reconnecting..."),void this.reconnect()):void 0;for(const[e,i]of this.jobs)t-i.time>6e5&&(this.jobs.delete(e),i.reject(new Error("Job timed out.")));return this.inbound||this.challenge?!this.inbound&&t-this.lastPing>this.pingTimeout?(this.error("Connection is stalling (ping)."),this.inbound?void this.destroy():void this.close()):void 0:(this.challenge=!0,this.lastPing=t,void this.sendPing())}async handleFrame(t){if(!this.destroyed)switch(t.type){case a.types.OPEN:return this.handleOpen(t);case a.types.CLOSE:return this.handleClose(t);case a.types.PING:return this.handlePing(t);case a.types.PONG:return this.handlePong(t);case a.types.MESSAGE:return this.handleMessage(t);case a.types.UPGRADE:return this.handleUpgrade(t);case a.types.NOOP:return this.handleNoop(t);default:throw new Error("Unknown frame.")}}async handleOpen(t){if(this.inbound)throw new Error("Inbound socket sent an open frame.");if(t.binary)throw new Error("Received a binary open frame.");if(this.handshake)throw new Error("Duplicate open frame.");const e=JSON.parse(t.data);g(e&&"object"==typeof e,"open","object");const{pingInterval:i,pingTimeout:r}=e;g(i>>>0===i,"interval","uint32"),g(r>>>0===r,"timeout","uint32"),this.pingInterval=i,this.pingTimeout=r,this.handshake=!0,this.opened||(this.opened=!0,await this.emitAsync("open"))}async handleClose(t){if(this.inbound)throw new Error("Inbound socket sent a close frame.");this.close()}async handlePing(){if(!this.inbound)throw new Error("Outbound socket sent a ping frame.");this.sendPong()}async handlePong(){if(this.inbound)throw new Error("Inbound socket sent a pong frame.");if(!this.challenge)return this.error("Remote node sent bad pong."),void this.destroy();this.challenge=!1}async handleMessage(t){if(this.packet){const e=this.packet;if(!t.binary)throw new Error("Received non-binary frame as attachment.");return e.buffers.push(t.data),e.buffers.length===e.attachments?(this.packet=null,this.handlePacket(e)):void 0}if(t.binary)throw new Error("Received binary frame as a message.");const e=o.fromString(t.data);if(!(e.attachments>0))return this.handlePacket(e);this.packet=e}async handleUpgrade(t){if(!this.inbound)throw new Error("Outbound socket sent an upgrade frame.");throw new Error("Cannot upgrade from websocket.")}async handleNoop(t){}sendFrame(t,e,i){this.send(new a(t,e,i))}sendOpen(t){this.sendFrame(a.types.OPEN,t,!1)}sendClose(t){this.sendFrame(a.types.CLOSE,t,!1)}sendPing(t){this.sendFrame(a.types.PING,t,!1)}sendPong(t){this.sendFrame(a.types.PONG,t,!1)}sendMessage(t){this.sendFrame(a.types.MESSAGE,t,!1)}sendBinary(t){this.sendFrame(a.types.MESSAGE,t,!0)}sendHandshake(){const t=JSON.stringify({sid:"00000000000000000000",upgrades:[],pingInterval:this.pingInterval,pingTimeout:this.pingTimeout});this.sendOpen(t)}async handlePacket(t){if(!this.destroyed)switch(t.type){case o.types.CONNECT:return this.handleConnect();case o.types.DISCONNECT:return this.handleDisconnect();case o.types.EVENT:case o.types.BINARY_EVENT:{const e=t.getData();return g(Array.isArray(e),"args","array"),g(e.length>0,"args","array"),g("string"==typeof e[0],"event","string"),-1!==t.id?this.handleCall(t.id,e):this.handleEvent(e)}case o.types.ACK:case o.types.BINARY_ACK:{g(-1!==t.id,"id","uint32");const e=t.getData();g(null==e||Array.isArray(e),"args","array");let i=null,r=null;return e&&e.length>0&&(i=e[0]),e&&e.length>1&&(r=e[1]),null==r&&(r=null),i?(g("object"==typeof i,"error","object"),this.handleError(t.id,i)):this.handleAck(t.id,r)}case o.types.ERROR:{const e=t.getData();return g(e&&"object"==typeof e,"error","object"),this.handleError(-1,e)}default:throw new Error("Unknown packet.")}}async handleConnect(){if(this.inbound)throw new Error("Inbound socket sent connect packet.");this.connected=!0,await this.emitAsync("connect");for(const t of this.buffer)this.sendPacket(t);this.buffer.length=0}async handleDisconnect(){this.close()}async handleEvent(t){try{const e=t[0];if(u.hasOwnProperty(e))throw new Error(`Cannot emit blacklisted event: ${e}.`);this.events.emit(...t)}catch(t){this.emit("error",t),this.sendError(-1,t)}}async handleCall(t,e){let i;try{const r=e.shift();if(u.hasOwnProperty(r))throw new Error(`Cannot emit blacklisted event: ${r}.`);const s=this.hooks.get(r);if(!s)throw new Error(`Call not found: ${r}.`);i=await s(...e)}catch(e){return this.emit("error",e),void this.sendError(t,e)}null==i&&(i=null),this.sendAck(t,i)}async handleAck(t,e){const i=this.jobs.get(t);if(!i)throw new Error(`Job not found for ${t}.`);this.jobs.delete(t),i.resolve(e)}async handleError(t,e){const i=d(e.message),r=f(e.code),s=p(e.type);if(-1===t){const t=new Error(i);return t.code=r,t.type=s,void this.emit("error",t)}const n=this.jobs.get(t);if(!n)throw new Error(`Job not found for ${t}.`);this.jobs.delete(t);const o=new Error(i);o.code=r,o.type=s,n.reject(o)}sendPacket(t){this.sendMessage(t.toString());for(const e of t.buffers)this.sendBinary(e)}sendConnect(){this.sendPacket(new o(o.types.CONNECT))}sendDisconnect(){this.sendPacket(new o(o.types.DISCONNECT))}sendEvent(t){const e=new o;e.type=o.types.EVENT,e.setData(t),this.connected?this.sendPacket(e):this.buffer.push(e)}sendCall(t,e){const i=new o;i.type=o.types.EVENT,i.id=t,i.setData(e),this.connected?this.sendPacket(i):this.buffer.push(i)}sendAck(t,e){const i=new o;i.type=o.types.ACK,i.id=t,i.setData([null,e]),this.sendPacket(i)}sendError(t,e){const i=d(e.message),r=f(e.code),s=p(e.type);if(-1===t){const t=new o;return t.type=o.types.ERROR,t.setData({message:i,code:r,type:s}),void this.sendPacket(t)}const n=new o;n.type=o.types.ACK,n.id=t,n.setData([{message:i,code:r,type:s}]),this.sendPacket(n)}bind(t,e){g("string"==typeof t,"event","string"),g("function"==typeof e,"handler","function"),r(!u.hasOwnProperty(t),"Blacklisted event."),this.events.on(t,e)}unbind(t,e){g("string"==typeof t,"event","string"),g("function"==typeof e,"handler","function"),r(!u.hasOwnProperty(t),"Blacklisted event."),this.events.removeListener(t,e)}fire(...t){g(t.length>0,"event","string"),g("string"==typeof t[0],"event","string"),this.sendEvent(t)}hook(t,e){g("string"==typeof t,"event","string"),g("function"==typeof e,"handler","function"),r(!this.hooks.has(t),"Hook already bound."),r(!u.hasOwnProperty(t),"Blacklisted event."),this.hooks.set(t,e)}unhook(t){g("string"==typeof t,"event","string"),g("function"==typeof handler,"handler","function"),r(!u.hasOwnProperty(t),"Blacklisted event."),this.hooks.delete(t)}call(...t){g(t.length>0,"event","string"),g("string"==typeof t[0],"event","string");const e=this.sequence;return this.sequence+=1,this.sequence>>>=0,r(!this.jobs.has(e),"ID collision."),this.sendCall(e,t),new Promise((t,i)=>{this.jobs.set(e,new class{constructor(t,e,i){this.resolve=t,this.reject=e,this.time=i}}(t,i,Date.now()))})}channel(t){return this.channels.has(t)}join(t){return!!this.server&&this.server.join(this,t)}leave(t){return!!this.server&&this.server.leave(this,t)}static accept(t,e,i,r){return(new this).accept(t,e,i,r)}static connect(t,e,i,r){return(new this).connect(t,e,i,r)}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";(function(e){const r=i(0),s={CONNECT:0,DISCONNECT:1,EVENT:2,ACK:3,ERROR:4,BINARY_EVENT:5,BINARY_ACK:6};class n{constructor(t){this.type=t||0,this.attachments=0,this.nsp="/",this.id=-1,this.data="",this.buffers=[]}setData(t){r(void 0!==t),r("number"!=typeof t),r("function"!=typeof t);const[i,n]=function(t){const i=[],r=function t(i,r){if(e.isBuffer(i)){const t={_placeholder:!0,num:r.length};return r.push(i),t}if(Array.isArray(i)){const e=[];for(let s=0;s<i.length;s++)e.push(t(i[s],r));return e}if(i&&"object"==typeof i){const e=Object.create(null);for(const s of Object.keys(i))e[s]=t(i[s],r);return e}return i}(t,i);return[JSON.stringify(r),i]}(t);if(this.data=i,this.buffers=n,this.attachments=n.length,this.attachments>0)switch(this.type){case s.EVENT:this.type=s.BINARY_EVENT;break;case s.ACK:this.type=s.BINARY_ACK}return this}getData(){return 0===this.data.length?null:function(t,e){return JSON.parse(t,(t,i)=>!function(t){return null!==t&&"object"==typeof t&&!0===t._placeholder&&t.num>>>0===t.num}(i)?i:(r(i.num<e.length),e[i.num]))}(this.data,this.buffers)}toString(){let t=this.type.toString(10);switch(this.type){case s.BINARY_EVENT:case s.BINARY_ACK:t+=this.attachments.toString(10)+"-"}return"/"!==this.nsp&&(t+=this.nsp+","),-1!==this.id&&(t+=this.id.toString(10)),t+this.data}static fromString(t){r("string"==typeof t),r(t.length>0);let e=0,i=0,n=0,a="/",h=-1,c="";switch([e,i]=function(t,e){const i=t.charCodeAt(e)-48;return i<0||i>9?-1:[e+1,i]}(t,e),r(-1!==i),r(i<=s.BINARY_ACK),i){case s.BINARY_EVENT:case s.BINARY_ACK:[e,n]=o(t,e),r(-1!==n),r(e<t.length),r("-"===t[e]),e+=1}e<t.length&&"/"===t[e]&&([e,a]=function(t,e,i){let s=e;for(;s<t.length&&","!==t[s];s++);return r(s<t.length),[s+1,t.substring(e,s)]}(t,e)),[e,h]=o(t,e),e<t.length&&(c=t.substring(e));const l=new this;return l.type=i,l.attachments=n,l.nsp=a,l.id=h,l.data=c,l}}function o(t,e){let i=0,s=0;for(;e<t.length;e++){const n=t.charCodeAt(e)-48;if(n<0||n>9)break;s*=10,s+=n,r((i+=1)<=10)}return r(s<=4294967295),0===i&&(s=-1),[e,s]}n.types=s,t.exports=n}).call(this,i(1).Buffer)},function(t,e,i){"use strict";const r=i(0),s=i(263);e.parseURL=function(t){-1===t.indexOf("://")&&(t=`ws://${t}`);const e=s.parse(t);if("http:"!==e.protocol&&"https:"!==e.protocol&&"ws:"!==e.protocol&&"wss:"!==e.protocol)throw new Error("Invalid protocol for websocket URL.");if(!e.hostname)throw new Error("Malformed URL.");const i=e.hostname;let n=80,o=!1;return"https:"!==e.protocol&&"wss:"!==e.protocol||(n=443,o=!0),e.port&&(n=parseInt(e.port,10),r((65535&n)===n),r(0!==n)),[n,i,o]}},function(t,e,i){"use strict";var r=i(264),s=i(265);function n(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}e.parse=y,e.resolve=function(t,e){return y(t,!1,!0).resolve(e)},e.resolveObject=function(t,e){return t?y(t,!1,!0).resolveObject(e):e},e.format=function(t){return s.isString(t)&&(t=y(t)),t instanceof n?t.format():n.prototype.format.call(t)},e.Url=n;var o=/^([a-z0-9.+-]+:)/i,a=/:[0-9]*$/,h=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,c=["{","}","|","\\","^","`"].concat(["<",">",'"',"`"," ","\r","\n","\t"]),l=["'"].concat(c),u=["%","/","?",";","#"].concat(l),f=["/","?","#"],d=/^[+a-z0-9A-Z_-]{0,63}$/,p=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,g={javascript:!0,"javascript:":!0},m={javascript:!0,"javascript:":!0},b={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0},w=i(266);function y(t,e,i){if(t&&s.isObject(t)&&t instanceof n)return t;var r=new n;return r.parse(t,e,i),r}n.prototype.parse=function(t,e,i){if(!s.isString(t))throw new TypeError("Parameter 'url' must be a string, not "+typeof t);var n=t.indexOf("?"),a=-1!==n&&n<t.indexOf("#")?"?":"#",c=t.split(a);c[0]=c[0].replace(/\\/g,"/");var y=t=c.join(a);if(y=y.trim(),!i&&1===t.split("#").length){var v=h.exec(y);if(v)return this.path=y,this.href=y,this.pathname=v[1],v[2]?(this.search=v[2],this.query=e?w.parse(this.search.substr(1)):this.search.substr(1)):e&&(this.search="",this.query={}),this}var k=o.exec(y);if(k){var E=(k=k[0]).toLowerCase();this.protocol=E,y=y.substr(k.length)}if(i||k||y.match(/^\/\/[^@\/]+@[^@\/]+/)){var S="//"===y.substr(0,2);!S||k&&m[k]||(y=y.substr(2),this.slashes=!0)}if(!m[k]&&(S||k&&!b[k])){for(var R,I,A=-1,x=0;x<f.length;x++)-1!==(O=y.indexOf(f[x]))&&(-1===A||O<A)&&(A=O);for(-1!==(I=-1===A?y.lastIndexOf("@"):y.lastIndexOf("@",A))&&(R=y.slice(0,I),y=y.slice(I+1),this.auth=decodeURIComponent(R)),A=-1,x=0;x<u.length;x++){var O;-1!==(O=y.indexOf(u[x]))&&(-1===A||O<A)&&(A=O)}-1===A&&(A=y.length),this.host=y.slice(0,A),y=y.slice(A),this.parseHost(),this.hostname=this.hostname||"";var _="["===this.hostname[0]&&"]"===this.hostname[this.hostname.length-1];if(!_)for(var B=this.hostname.split(/\./),P=(x=0,B.length);x<P;x++){var N=B[x];if(N&&!N.match(d)){for(var T="",C=0,M=N.length;C<M;C++)N.charCodeAt(C)>127?T+="x":T+=N[C];if(!T.match(d)){var U=B.slice(0,x),L=B.slice(x+1),z=N.match(p);z&&(U.push(z[1]),L.unshift(z[2])),L.length&&(y="/"+L.join(".")+y),this.hostname=U.join(".");break}}}this.hostname.length>255?this.hostname="":this.hostname=this.hostname.toLowerCase(),_||(this.hostname=r.toASCII(this.hostname));var D=this.port?":"+this.port:"",H=this.hostname||"";this.host=H+D,this.href+=this.host,_&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),"/"!==y[0]&&(y="/"+y))}if(!g[E])for(x=0,P=l.length;x<P;x++){var F=l[x];if(-1!==y.indexOf(F)){var V=encodeURIComponent(F);V===F&&(V=escape(F)),y=y.split(F).join(V)}}var K=y.indexOf("#");-1!==K&&(this.hash=y.substr(K),y=y.slice(0,K));var j=y.indexOf("?");if(-1!==j?(this.search=y.substr(j),this.query=y.substr(j+1),e&&(this.query=w.parse(this.query)),y=y.slice(0,j)):e&&(this.search="",this.query={}),y&&(this.pathname=y),b[E]&&this.hostname&&!this.pathname&&(this.pathname="/"),this.pathname||this.search){D=this.pathname||"";var q=this.search||"";this.path=D+q}return this.href=this.format(),this},n.prototype.format=function(){var t=this.auth||"";t&&(t=(t=encodeURIComponent(t)).replace(/%3A/i,":"),t+="@");var e=this.protocol||"",i=this.pathname||"",r=this.hash||"",n=!1,o="";this.host?n=t+this.host:this.hostname&&(n=t+(-1===this.hostname.indexOf(":")?this.hostname:"["+this.hostname+"]"),this.port&&(n+=":"+this.port)),this.query&&s.isObject(this.query)&&Object.keys(this.query).length&&(o=w.stringify(this.query));var a=this.search||o&&"?"+o||"";return e&&":"!==e.substr(-1)&&(e+=":"),this.slashes||(!e||b[e])&&!1!==n?(n="//"+(n||""),i&&"/"!==i.charAt(0)&&(i="/"+i)):n||(n=""),r&&"#"!==r.charAt(0)&&(r="#"+r),a&&"?"!==a.charAt(0)&&(a="?"+a),e+n+(i=i.replace(/[?#]/g,function(t){return encodeURIComponent(t)}))+(a=a.replace("#","%23"))+r},n.prototype.resolve=function(t){return this.resolveObject(y(t,!1,!0)).format()},n.prototype.resolveObject=function(t){if(s.isString(t)){var e=new n;e.parse(t,!1,!0),t=e}for(var i=new n,r=Object.keys(this),o=0;o<r.length;o++){var a=r[o];i[a]=this[a]}if(i.hash=t.hash,""===t.href)return i.href=i.format(),i;if(t.slashes&&!t.protocol){for(var h=Object.keys(t),c=0;c<h.length;c++){var l=h[c];"protocol"!==l&&(i[l]=t[l])}return b[i.protocol]&&i.hostname&&!i.pathname&&(i.path=i.pathname="/"),i.href=i.format(),i}if(t.protocol&&t.protocol!==i.protocol){if(!b[t.protocol]){for(var u=Object.keys(t),f=0;f<u.length;f++){var d=u[f];i[d]=t[d]}return i.href=i.format(),i}if(i.protocol=t.protocol,t.host||m[t.protocol])i.pathname=t.pathname;else{for(var p=(t.pathname||"").split("/");p.length&&!(t.host=p.shift()););t.host||(t.host=""),t.hostname||(t.hostname=""),""!==p[0]&&p.unshift(""),p.length<2&&p.unshift(""),i.pathname=p.join("/")}if(i.search=t.search,i.query=t.query,i.host=t.host||"",i.auth=t.auth,i.hostname=t.hostname||t.host,i.port=t.port,i.pathname||i.search){var g=i.pathname||"",w=i.search||"";i.path=g+w}return i.slashes=i.slashes||t.slashes,i.href=i.format(),i}var y=i.pathname&&"/"===i.pathname.charAt(0),v=t.host||t.pathname&&"/"===t.pathname.charAt(0),k=v||y||i.host&&t.pathname,E=k,S=i.pathname&&i.pathname.split("/")||[],R=(p=t.pathname&&t.pathname.split("/")||[],i.protocol&&!b[i.protocol]);if(R&&(i.hostname="",i.port=null,i.host&&(""===S[0]?S[0]=i.host:S.unshift(i.host)),i.host="",t.protocol&&(t.hostname=null,t.port=null,t.host&&(""===p[0]?p[0]=t.host:p.unshift(t.host)),t.host=null),k=k&&(""===p[0]||""===S[0])),v)i.host=t.host||""===t.host?t.host:i.host,i.hostname=t.hostname||""===t.hostname?t.hostname:i.hostname,i.search=t.search,i.query=t.query,S=p;else if(p.length)S||(S=[]),S.pop(),S=S.concat(p),i.search=t.search,i.query=t.query;else if(!s.isNullOrUndefined(t.search))return R&&(i.hostname=i.host=S.shift(),(_=!!(i.host&&i.host.indexOf("@")>0)&&i.host.split("@"))&&(i.auth=_.shift(),i.host=i.hostname=_.shift())),i.search=t.search,i.query=t.query,s.isNull(i.pathname)&&s.isNull(i.search)||(i.path=(i.pathname?i.pathname:"")+(i.search?i.search:"")),i.href=i.format(),i;if(!S.length)return i.pathname=null,i.search?i.path="/"+i.search:i.path=null,i.href=i.format(),i;for(var I=S.slice(-1)[0],A=(i.host||t.host||S.length>1)&&("."===I||".."===I)||""===I,x=0,O=S.length;O>=0;O--)"."===(I=S[O])?S.splice(O,1):".."===I?(S.splice(O,1),x++):x&&(S.splice(O,1),x--);if(!k&&!E)for(;x--;x)S.unshift("..");!k||""===S[0]||S[0]&&"/"===S[0].charAt(0)||S.unshift(""),A&&"/"!==S.join("/").substr(-1)&&S.push("");var _,B=""===S[0]||S[0]&&"/"===S[0].charAt(0);return R&&(i.hostname=i.host=B?"":S.length?S.shift():"",(_=!!(i.host&&i.host.indexOf("@")>0)&&i.host.split("@"))&&(i.auth=_.shift(),i.host=i.hostname=_.shift())),(k=k||i.host&&S.length)&&!B&&S.unshift(""),S.length?i.pathname=S.join("/"):(i.pathname=null,i.path=null),s.isNull(i.pathname)&&s.isNull(i.search)||(i.path=(i.pathname?i.pathname:"")+(i.search?i.search:"")),i.auth=t.auth||i.auth,i.slashes=i.slashes||t.slashes,i.href=i.format(),i},n.prototype.parseHost=function(){var t=this.host,e=a.exec(t);e&&(":"!==(e=e[0])&&(this.port=e.substr(1)),t=t.substr(0,t.length-e.length)),t&&(this.hostname=t)}},function(t,e,i){(function(t,r){var s;/*! https://mths.be/punycode v1.4.1 by @mathias */!function(n){e&&e.nodeType,t&&t.nodeType;var o="object"==typeof r&&r;o.global!==o&&o.window!==o&&o.self;var a,h=2147483647,c=36,l=1,u=26,f=38,d=700,p=72,g=128,m="-",b=/^xn--/,w=/[^\x20-\x7E]/,y=/[\x2E\u3002\uFF0E\uFF61]/g,v={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},k=c-l,E=Math.floor,S=String.fromCharCode;function R(t){throw new RangeError(v[t])}function I(t,e){for(var i=t.length,r=[];i--;)r[i]=e(t[i]);return r}function A(t,e){var i=t.split("@"),r="";return i.length>1&&(r=i[0]+"@",t=i[1]),r+I((t=t.replace(y,".")).split("."),e).join(".")}function x(t){for(var e,i,r=[],s=0,n=t.length;s<n;)(e=t.charCodeAt(s++))>=55296&&e<=56319&&s<n?56320==(64512&(i=t.charCodeAt(s++)))?r.push(((1023&e)<<10)+(1023&i)+65536):(r.push(e),s--):r.push(e);return r}function O(t){return I(t,function(t){var e="";return t>65535&&(e+=S((t-=65536)>>>10&1023|55296),t=56320|1023&t),e+S(t)}).join("")}function _(t){return t-48<10?t-22:t-65<26?t-65:t-97<26?t-97:c}function B(t,e){return t+22+75*(t<26)-((0!=e)<<5)}function P(t,e,i){var r=0;for(t=i?E(t/d):t>>1,t+=E(t/e);t>k*u>>1;r+=c)t=E(t/k);return E(r+(k+1)*t/(t+f))}function N(t){var e,i,r,s,n,o,a,f,d,b,w=[],y=t.length,v=0,k=g,S=p;for((i=t.lastIndexOf(m))<0&&(i=0),r=0;r<i;++r)t.charCodeAt(r)>=128&&R("not-basic"),w.push(t.charCodeAt(r));for(s=i>0?i+1:0;s<y;){for(n=v,o=1,a=c;s>=y&&R("invalid-input"),((f=_(t.charCodeAt(s++)))>=c||f>E((h-v)/o))&&R("overflow"),v+=f*o,!(f<(d=a<=S?l:a>=S+u?u:a-S));a+=c)o>E(h/(b=c-d))&&R("overflow"),o*=b;S=P(v-n,e=w.length+1,0==n),E(v/e)>h-k&&R("overflow"),k+=E(v/e),v%=e,w.splice(v++,0,k)}return O(w)}function T(t){var e,i,r,s,n,o,a,f,d,b,w,y,v,k,I,A=[];for(y=(t=x(t)).length,e=g,i=0,n=p,o=0;o<y;++o)(w=t[o])<128&&A.push(S(w));for(r=s=A.length,s&&A.push(m);r<y;){for(a=h,o=0;o<y;++o)(w=t[o])>=e&&w<a&&(a=w);for(a-e>E((h-i)/(v=r+1))&&R("overflow"),i+=(a-e)*v,e=a,o=0;o<y;++o)if((w=t[o])<e&&++i>h&&R("overflow"),w==e){for(f=i,d=c;!(f<(b=d<=n?l:d>=n+u?u:d-n));d+=c)I=f-b,k=c-b,A.push(S(B(b+I%k,0))),f=E(I/k);A.push(S(B(f,0))),n=P(i,v,r==s),i=0,++r}++i,++e}return A.join("")}a={version:"1.4.1",ucs2:{decode:x,encode:O},decode:N,encode:T,toASCII:function(t){return A(t,function(t){return w.test(t)?"xn--"+T(t):t})},toUnicode:function(t){return A(t,function(t){return b.test(t)?N(t.slice(4).toLowerCase()):t})}},void 0===(s=function(){return a}.call(e,i,e,t))||(t.exports=s)}()}).call(this,i(70)(t),i(11))},function(t,e,i){"use strict";t.exports={isString:function(t){return"string"==typeof t},isObject:function(t){return"object"==typeof t&&null!==t},isNull:function(t){return null===t},isNullOrUndefined:function(t){return null==t}}},function(t,e,i){"use strict";e.decode=e.parse=i(267),e.encode=e.stringify=i(268)},function(t,e,i){"use strict";function r(t,e){return Object.prototype.hasOwnProperty.call(t,e)}t.exports=function(t,e,i,n){e=e||"&",i=i||"=";var o={};if("string"!=typeof t||0===t.length)return o;var a=/\+/g;t=t.split(e);var h=1e3;n&&"number"==typeof n.maxKeys&&(h=n.maxKeys);var c=t.length;h>0&&c>h&&(c=h);for(var l=0;l<c;++l){var u,f,d,p,g=t[l].replace(a,"%20"),m=g.indexOf(i);m>=0?(u=g.substr(0,m),f=g.substr(m+1)):(u=g,f=""),d=decodeURIComponent(u),p=decodeURIComponent(f),r(o,d)?s(o[d])?o[d].push(p):o[d]=[o[d],p]:o[d]=p}return o};var s=Array.isArray||function(t){return"[object Array]"===Object.prototype.toString.call(t)}},function(t,e,i){"use strict";var r=function(t){switch(typeof t){case"string":return t;case"boolean":return t?"true":"false";case"number":return isFinite(t)?t:"";default:return""}};t.exports=function(t,e,i,a){return e=e||"&",i=i||"=",null===t&&(t=void 0),"object"==typeof t?n(o(t),function(o){var a=encodeURIComponent(r(o))+i;return s(t[o])?n(t[o],function(t){return a+encodeURIComponent(r(t))}).join(e):a+encodeURIComponent(r(t[o]))}).join(e):a?encodeURIComponent(r(a))+i+encodeURIComponent(r(t)):""};var s=Array.isArray||function(t){return"[object Array]"===Object.prototype.toString.call(t)};function n(t,e){if(t.map)return t.map(e);for(var i=[],r=0;r<t.length;r++)i.push(e(t[r],r));return i}var o=Object.keys||function(t){var e=[];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&e.push(i);return e}},function(t,e,i){"use strict";(function(e){
/*!
 * parser.js - packet parser
 * Copyright (c) 2017, Christopher Jeffrey (MIT License).
 * https://github.com/chjj
 */
const r=i(0),s=i(7),n=i(170);t.exports=class extends s{constructor(){super()}error(t){this.emit("error",new Error(t))}feedBinary(t){if(r(e.isBuffer(t)),t.length>1e8)return void this.error("Frame too large.");let i;try{i=n.fromRaw(t)}catch(t){return void this.emit("error",t)}this.emit("frame",i)}feedString(t){if(r("string"==typeof t),e.byteLength(t,"utf8")>1e8)return void this.error("Frame too large.");let i;try{i=n.fromString(t)}catch(t){return void this.emit("error",t)}this.emit("frame",i)}}}).call(this,i(1).Buffer)},function(t,e,i){"use strict";t.exports={1000:"NORMAL_CLOSURE",1001:"GOING_AWAY",1002:"PROTOCOL_ERROR",1003:"UNSUPPORTED_DATA",1004:"RESERVED",1005:"NO_STATUS_RECVD",1006:"ABNORMAL_CLOSURE",1007:"INVALID_FRAME_PAYLOAD_DATA",1008:"POLICY_VIOLATION",1009:"MESSAGE_TOO_BIG",1010:"MISSING_EXTENSION",1011:"INTERNAL_ERROR",1012:"SERVICE_RESTART",1013:"TRY_AGAIN_LATER",1014:"BAD_GATEWAY",1015:"TLS_HANDSHAKE"}},function(t,e,i){"use strict";t.exports={connect:!0,connect_error:!0,connect_timeout:!0,connecting:!0,disconnect:!0,error:!0,reconnect:!0,reconnect_attempt:!0,reconnect_failed:!0,reconnect_error:!0,reconnecting:!0,ping:!0,pong:!0}},function(t,e,i){"use strict";(function(e){const i={showHidden:!1,depth:20,colors:!1,customInspect:!0,showProxy:!1,maxArrayLength:1e4,breakLength:60,compact:!0};function r(t){try{return JSON.stringify(t)}catch(t){return"[error]"}}function s(t,i){if(null==t)return"null";if(!e.isBuffer(t))return"[error]";const r=t.toString("hex");return i?function(t){let e="";for(let i=t.length-2;i>=0;i-=2)e+=t[i]+t[i+1];return e}(r):r}function n(t){if(void 0===t)return"undefined";if(t!=t)return"NaN";try{return JSON.stringify(t,null,2)}catch(t){return"{}"}}t.exports=function(t,e){if(0===t.length)return"";const o=t[0];if(i.colors=e,"string"!=typeof o)return n(o);if(1===t.length)return o;let a,h="",c=1,l=0;for(let e=0;e<o.length-1;e++){if(37!==o.charCodeAt(e))continue;const i=o.charCodeAt(++e);if(c!==t.length){switch(i){case 115:a=String(t[c++]);break;case 106:a=r(t[c++]);break;case 100:a=`${Number(t[c++])}`;break;case 79:case 111:a=n(t[c++]);break;case 105:a=`${parseInt(t[c++])}`;break;case 102:a=`${parseFloat(t[c++])}`;break;case 120:a=s(t[c++],!1);break;case 104:a=s(t[c++],!0);break;case 37:h+=o.slice(l,e),l=e+1;continue;default:continue}l!==e-1&&(h+=o.slice(l,e-1)),h+=a,l=e+1}else 37===i&&(h+=o.slice(l,e),l=e+1)}for(0===l?h=o:l<o.length&&(h+=o.slice(l));c<t.length;){const e=t[c++];h+="object"!=typeof e&&"symbol"!=typeof e||null===e?` ${e}`:` ${n(e)}`}return h}}).call(this,i(1).Buffer)}]);